Gadgets information
============================================================
0x00000000001868f4 : adc ah, bh ; cli ; push rax ; std ; cli ; call rax
0x0000000000178e58 : adc ah, bl ; int1 ; call qword ptr [rax]
0x0000000000002e3f : adc ah, ch ; clc ; ret
0x000000000014c32f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c399 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000001924c : adc al, 0 ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; ret 0x5f
0x000000000019a1b0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000000ed27d : adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018ea79 : adc al, 0 ; add byte ptr [rbp + rdi*8 - 0x17], ah ; call qword ptr [rdi]
0x00000000000902a8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000002f59f : adc al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000002db54 : adc al, 0 ; ret
0x0000000000132025 : adc al, 0x13 ; jmp rdx
0x000000000008fcf5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000014fbdc : adc al, 0x16 ; sub eax, edx ; vzeroupper ; ret
0x0000000000038401 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000000244c : adc al, 0x2d ; retf
0x000000000019f16c : adc al, 0x2f ; hlt ; call rsi
0x000000000019f20c : adc al, 0x30 ; hlt ; jmp qword ptr [rax]
0x00000000000a0963 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a3a28 : adc al, 0x31 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a31bc : adc al, 0x37 ; cmc ; jmp qword ptr [rcx]
0x000000000011caa1 : adc al, 0x39 ; sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000001501fd : adc al, 0x3a ; sub eax, edx ; vzeroupper ; ret
0x00000000001a14dc : adc al, 0x3f ; add dword ptr [rax], eax ; ror cl, 0xf4 ; jmp qword ptr [rcx]
0x000000000009ded0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x000000000009ed33 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x0000000000091fbb : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x0000000000110781 : adc al, 0x48 ; mov eax, edx ; movsxd rdx, esi ; ret
0x0000000000021dc2 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001a30dc : adc al, 0x5b ; add dword ptr [rax], eax ; loopne 0x1a311e ; cmc ; jmp qword ptr [rcx]
0x00000000000de2ac : adc al, 0x5b ; pop rbp ; ret
0x000000000002e7d0 : adc al, 0x66 ; cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x000000000019fc2c : adc al, 0x73 ; hlt ; jmp qword ptr [rsi]
0x0000000000003676 : adc al, 0x75 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x00000000001ac52c : adc al, 0x78 ; sti ; jmp qword ptr [rdx]
0x00000000000c920b : adc al, 0x84 ; sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x00000000001199d0 : adc al, 0x88 ; add rdx, r8 ; jmp rdx
0x00000000000cee41 : adc al, 0x88 ; je 0xcee65 ; ret
0x0000000000119cc6 : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000008e424 : adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x000000000008e353 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0x00000000000732e8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000014d7c0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014beee : adc al, 0x91 ; sub eax, edx ; ret
0x00000000000d6396 : adc al, 0x93 ; add rdx, rbx ; jmp rdx
0x0000000000132021 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000198f9c : adc al, 0x95 ; out dx, eax ; call qword ptr [rax]
0x0000000000045cd9 : adc al, 0x96 ; add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x00000000000529fe : adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x000000000003366d : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000008e8f7 : adc al, 0xa ; jmp r10
0x000000000008fe63 : adc al, 0xa ; sub eax, edx ; ret
0x000000000014fd5d : adc al, 0xa ; sub eax, edx ; vzeroupper ; ret
0x00000000000f9484 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000ed27b : adc al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000ed1db : adc al, 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e7a7b : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e817b : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bce3a : adc al, 0xb8 ; add rdx, r8 ; jmp rdx
0x00000000000c4ddb : adc al, 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f0c0b : adc al, 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f6b8b : adc al, 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f6abb : adc al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f611b : adc al, 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000019b73c : adc al, 0xc0 ; int1 ; call qword ptr [rdx]
0x00000000000da4c1 : adc al, 0xc2 ; jmp 0xda4de
0x000000000018b51c : adc al, 0xc3 ; add dword ptr [rax], eax ; in al, dx ; add esi, edi ; ljmp [rax] ; ret
0x000000000012d094 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x000000000012d0b4 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000001aa1dc : adc al, 0xcc ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; call rdi
0x00000000000a1314 : adc al, 0xe ; cmp rdi, rdx ; jb 0xa1327 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014a001 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000150d8a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000019bcdc : adc al, 0xe7 ; add byte ptr [rax], al ; adc byte ptr [rdx - 0xe], cl ; call qword ptr [rbx]
0x0000000000002c73 : adc al, 0xe7 ; ret
0x00000000001153bc : adc al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff0
0x0000000000119b46 : adc al, 0xf ; retf 0xd789
0x00000000000313e8 : adc al, 0xf ; retf 0xfa83
0x000000000009e8a9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000189509 : adc al, 0xf0 ; call qword ptr [rax]
0x00000000001a577c : adc al, 0xf0 ; cmc ; call qword ptr [rdi]
0x0000000000178e44 : adc al, 0xf1 ; call rax
0x0000000000179d09 : adc al, 0xf4 ; call rax
0x0000000000179d05 : adc al, 0xf4 ; push qword ptr [rsi + 0x14] ; hlt ; call rax
0x00000000001a6009 : adc al, 0xf6 ; call rdx
0x00000000000710fb : adc al, 0xf6 ; ret 0x7420
0x00000000000a2000 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000015ea08 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f5f00 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001ad7dc : adc al, 2 ; add al, byte ptr [rax] ; rcl byte ptr [rbx], 1 ; sti ; call rax
0x000000000019d5ac : adc al, 5 ; call rsi
0x000000000008e125 : adc al, 7 ; je 0x8e125 ; ret
0x000000000008e052 : adc al, 7 ; test dl, dl ; jne 0x8e04f ; ret
0x0000000000042b51 : adc al, 9 ; ret 0x9d74
0x0000000000186820 : adc al, bl ; cli ; jmp rax
0x000000000014c4d7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c541 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000005b48 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x00000000000e5e90 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000095a8e : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000358ec : adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003577c : adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000000000052131 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000080e95 : adc al, byte ptr [rbx + 0x29480fe0] ; ret 0x14c
0x000000000007b5ad : adc al, byte ptr [rbx + 0x33c20b2d] ; add byte ptr [rcx], al ; ret
0x0000000000089c02 : adc al, byte ptr [rcx + 0xf] ; mov dh, 0x47 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000000ed88 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000099204 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000015646a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000152e0f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000eb90a : adc al, ch ; nop ; retf 0xffff
0x00000000000451af : adc al, ch ; ret
0x0000000000127c88 : adc al, ch ; ret 0x16
0x000000000003ce08 : adc al, ch ; ret 0xde
0x00000000000ab148 : adc al, ch ; ret 0xf9b5
0x000000000002bbb0 : adc al, ch ; ret 0xff5a
0x00000000000ceaa7 : adc al, ch ; retf
0x0000000000026b19 : adc al, ch ; xor dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret 0x5841
0x00000000001778c8 : adc al, dl ; in eax, dx ; call qword ptr [rdx]
0x00000000000bd3c3 : adc bh, bh ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000f78ad : adc bh, byte ptr [rax + 0x42] ; syscall
0x0000000000003cb7 : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000052aab : adc bh, byte ptr [rcx] ; ret 0x850f
0x000000000018b591 : adc bh, dh ; call qword ptr [rax]
0x000000000010abf8 : adc bh, dh ; ret 0x8080
0x0000000000186994 : adc bl, bh ; cli ; push rax ; cld ; cli ; call rax
0x0000000000034a28 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000fb3ed : adc bl, byte ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000009c375 : adc bl, ch ; call 0xffffffffc3da4cca
0x000000000009c295 : adc bl, ch ; call 0xffffffffc4024bea
0x000000000009f365 : adc bl, ch ; call 0xffffffffc4027cba
0x0000000000046762 : adc bl, ch ; jno 0x467b8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000010e8cd : adc bl, ch ; ret 0x894c
0x000000000019ed40 : adc bl, dh ; jmp qword ptr [rcx]
0x000000000009d4b6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009c826 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009c897 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009c7f7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002e83a : adc bl, dh ; ret
0x000000000009d4b5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009c825 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000007f245 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000007a476 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000002527e : adc byte ptr [r11 + rcx*4 + 0x65], r9b ; add cl, ch ; retf 0xfffe
0x0000000000114422 : adc byte ptr [r13 + 0x5b0875c0], r8b ; ret
0x000000000011477e : adc byte ptr [r14 + r9 + 0x48], r14b ; add esp, 8 ; ret
0x000000000007f0de : adc byte ptr [r8 + 0x39], r9b ; retf 0x2173
0x0000000000073c29 : adc byte ptr [r8 + 0x39], r9b ; retf 0x820f
0x000000000012c5a7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000077458 : adc byte ptr [r8 + 1], cl ; retf 0x3948
0x0000000000074982 : adc byte ptr [r8 + 1], r9b ; ret
0x0000000000081d6a : adc byte ptr [r8 + r9*2 - 0x75], r12b ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4e10
0x00000000000526c9 : adc byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x00000000001448ea : adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000007d95f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000007fbe0 : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x00000000000a08dc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a08fe : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a093c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a09be : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000007451c : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000087514 : adc byte ptr [rax + 0x1f7403fa], al ; movsx eax, dl ; ret
0x000000000009ce2a : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x0000000000091846 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000009c64a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000011b827 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000855fd : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5974
0x00000000000c908c : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000038af0 : adc byte ptr [rax + 0x39], cl ; ret 0x4872
0x000000000007f0df : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x00000000000cd646 : adc byte ptr [rax + 0x39], cl ; retf 0x574
0x0000000000073c2a : adc byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000733a2 : adc byte ptr [rax + 0x39], cl ; retf 0xffb8
0x0000000000038aef : adc byte ptr [rax + 0x39], r9b ; ret 0x4872
0x000000000012c5a8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000001157c5 : adc byte ptr [rax + 0x81], bh ; syscall
0x000000000009cccb : adc byte ptr [rax + 0xf], cl ; mov esp, 0x1d8d4cd2 ; ret 0xd
0x000000000004503c : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011a6a9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000120dce : adc byte ptr [rax + 1], bh ; ret
0x00000000000b2eae : adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000046dae : adc byte ptr [rax + 1], cl ; ret
0x0000000000091fb6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000007419a : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000077459 : adc byte ptr [rax + 1], cl ; retf 0x3948
0x0000000000120dcd : adc byte ptr [rax + 1], dil ; ret
0x0000000000120311 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000081d6b : adc byte ptr [rax + rcx*2 - 0x75], ah ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4e10
0x00000000001026d3 : adc byte ptr [rax + rdx + 0x5b], dh ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000a0ae4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a09e2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0960 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000f9481 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002e833 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000ee5f2 : adc byte ptr [rax - 0x73], cl ; add eax, 0x2ca046 ; pop rbx ; ret
0x00000000000f96a5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000021dc5 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000b426c : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000010a8bb : adc byte ptr [rax - 0x75], cl ; jae 0x10a8e1 ; mov edi, ebp ; call 0xf6b89
0x00000000000b447b : adc byte ptr [rax - 0x75], cl ; jl 0xb44ac ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000072d22 : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000526ca : adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x0000000000119cbd : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000bed2e : adc byte ptr [rax - 0x76b3c475], dl ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000081b51 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rdx
0x0000000000081afe : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rsi
0x000000000009c04c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000002bd98 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000726c7 : adc byte ptr [rax - 0x77], cl ; jo 0x726e5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000037451 : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x00000000000451ab : adc byte ptr [rax - 0x77], cl ; push rax ; adc al, ch ; ret
0x0000000000072687 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000024587 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000003c098 : adc byte ptr [rax - 0x77], cl ; ret 0x2275
0x0000000000041401 : adc byte ptr [rax - 0x77], cl ; ret 0x2975
0x00000000000494bf : adc byte ptr [rax - 0x77], cl ; ret 0x775
0x000000000003c964 : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000008218b : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000082dde : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x00000000001028d5 : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000011ce76 : adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x000000000003c0ad : adc byte ptr [rax - 0x77], cl ; ret 0xed74
0x000000000003c289 : adc byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007d960 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x00000000001448eb : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000001412a7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000001412e3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000097df4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000008835d : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbx*8 + 0x48], 0x29 ; ret
0x000000000007eb00 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rcx*8 - 1], 0xd0 ; jmp 0x7eade
0x00000000000cbc73 : adc byte ptr [rax - 0x7bf0c506], al ; ret
0x000000000002bb37 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000804f3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091d20 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fec51 : adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000f1f53 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000007fbe1 : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x000000000000031e : adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x00000000001a68d0 : adc byte ptr [rax - 0xa], dl ; call qword ptr [rax]
0x00000000000e6e6d : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000de193 : adc byte ptr [rax - 1], bh ; ret
0x0000000000186588 : adc byte ptr [rax - 3], al ; call qword ptr [rax + 0x10fffd40]
0x000000000018737c : adc byte ptr [rax - 5], dl ; call qword ptr [rax + 0x10fffb4f]
0x00000000000ec76d : adc byte ptr [rax], al ; add bl, dh ; ret
0x000000000014bf82 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000014a050 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000014a1f0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x00000000001512c8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000014e751 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c6e1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000750a : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000fa5a : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000ea4f3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000261dc : adc byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000001a7ec0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; cld ; test al, 1 ; add byte ptr [rax], bh ; retf 0xfff6
0x00000000001a159c : adc byte ptr [rax], al ; add byte ptr [rax], al ; fdivr dword ptr [rdi] ; add dword ptr [rax], eax ; cld ; retf
0x00000000001aa0b8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; retf 1
0x00000000001999b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret
0x00000000000ec566 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000003993c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000011996a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000019981c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0
0x0000000000118275 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a196c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019a014 : adc byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0
0x0000000000051cf9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000199808 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000017b90d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000019a028 : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000017b92d : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000000ec924 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000090728 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000013ce98 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000fe4a3 : adc byte ptr [rax], al ; je 0xfe4b6 ; xor eax, eax ; ret
0x000000000002353d : adc byte ptr [rax], al ; mov rdi, r14 ; mov rsi, qword ptr [rbp - 0x60] ; call rsi
0x000000000002b498 : adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x0000000000022f81 : adc byte ptr [rax], al ; mov rdi, rbx ; call r15
0x000000000006c394 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000006ca61 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000006c9f9 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000436b6 : adc byte ptr [rax], al ; ret
0x00000000000a08dd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a08ff : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a093d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a09bf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a0ac1 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000004e43b : adc byte ptr [rbp + 0x29], cl ; retf 0xff83
0x0000000000114423 : adc byte ptr [rbp + 0x5b0875c0], al ; ret
0x000000000012c2c8 : adc byte ptr [rbp + 1], cl ; ret
0x00000000000bb5db : adc byte ptr [rbp - 0x7b], al ; rol byte ptr [rbp + 0xf], 0x44 ; ret
0x0000000000178fe4 : adc byte ptr [rbp - 0xe], al ; jmp qword ptr [rax]
0x0000000000179228 : adc byte ptr [rbp - 0xe], bl ; jmp qword ptr [rax]
0x0000000000187394 : adc byte ptr [rbp - 5], cl ; call qword ptr [rax + 0x10fffb4c]
0x00000000001aa300 : adc byte ptr [rbp - 9], al ; jmp rsi
0x00000000001026d5 : adc byte ptr [rbx + 0x31], bl ; rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x000000000006cc49 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002b728 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007f246 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b9666 : adc byte ptr [rbx + 0x634830ea], al ; retf 0x6b48
0x00000000000b7be1 : adc byte ptr [rbx + 0x634830ea], al ; retf 0x8d48
0x000000000019df24 : adc byte ptr [rbx + 0x80e4c02], al ; ret
0x00000000001a222f : adc byte ptr [rbx + 0x80e5302], al ; ret
0x00000000001ac28b : adc byte ptr [rbx + 0x80e5402], al ; ret
0x00000000001a7e83 : adc byte ptr [rbx + 0x80e5902], al ; ret
0x00000000001913b3 : adc byte ptr [rbx + 0x80e6202], al ; ret
0x000000000019744f : adc byte ptr [rbx + 0x80e6402], al ; ret
0x00000000001a2214 : adc byte ptr [rbx + 0x80e6702], al ; ret
0x00000000001a7fdf : adc byte ptr [rbx + 0x80e7702], al ; ret
0x0000000000196ed3 : adc byte ptr [rbx + 0xa4b0202], al ; ret
0x000000000011a777 : adc byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000007a477 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000012c2c4 : adc byte ptr [rbx + rcx*4 + 0x42], cl ; adc byte ptr [rbp + 1], cl ; ret
0x000000000002527f : adc byte ptr [rbx + rcx*4 + 0x65], cl ; add cl, ch ; retf 0xfffe
0x000000000012f04e : adc byte ptr [rbx + rcx*4 + 5], cl ; ret 0x2877
0x000000000007d5d2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000076017 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x76031 ; ret
0x00000000001101ba : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000d0c96 : adc byte ptr [rbx - 0x76b7c7cc], cl ; xlatb ; call 0xcd769
0x00000000001043eb : adc byte ptr [rbx - 0x7cb603ba], cl ; ret
0x000000000007e765 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x7e77e ; pop rbp ; pop r12 ; ret
0x00000000001791c0 : adc byte ptr [rbx - 0xe], bl ; jmp qword ptr [rax]
0x0000000000186390 : adc byte ptr [rbx - 4], al ; jmp rax
0x00000000000c696e : adc byte ptr [rbx], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007451d : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000011b87f : adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x000000000011b834 : adc byte ptr [rcx + 0x31], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000805e8 : adc byte ptr [rcx + 0x39], cl ; retf
0x00000000000ece4e : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000b4b57 : adc byte ptr [rcx + 1], 0 ; add rcx, rax ; jmp 0xb4b2b
0x00000000001a1ed8 : adc byte ptr [rcx + 1], cl ; add ah, al ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000081dc3 : adc byte ptr [rcx + r12*4 - 0x17], sil ; ret
0x000000000004ee77 : adc byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; call rax
0x00000000000fdcf6 : adc byte ptr [rcx + rcx*4 - 0x12], cl ; xor r15d, r15d ; call rax
0x0000000000075727 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000045a18 : adc byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000081960 : adc byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 8], r15 ; call qword ptr [rax]
0x00000000000a0a42 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0a22 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000081dc4 : adc byte ptr [rcx - 0x17], dh ; ret
0x0000000000025e11 : adc byte ptr [rcx - 0x75], cl ; add ecx, dword ptr [rax - 0x77] ; retf 0x2948
0x00000000000fe649 : adc byte ptr [rcx - 0x77], al ; ret
0x000000000011bd14 : adc byte ptr [rcx - 0x77], al ; ret 0x4388
0x00000000000419b5 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000a5682 : adc byte ptr [rcx - 0x77], cl ; ret 0x6349
0x00000000000b092f : adc byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000001628ae : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000007f197 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000055de4 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000d3af7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000014a083 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000014dc27 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000e6b86 : adc byte ptr [rcx - 0xa], al ; ret 0x4901
0x00000000000270f8 : adc byte ptr [rcx - 0xa], al ; ret 0x4c01
0x0000000000186590 : adc byte ptr [rcx - 3], al ; call qword ptr [rax + 0x20fffd41]
0x00000000000d4357 : adc byte ptr [rcx - 9], al ; ret 0x30f
0x00000000001895ad : adc byte ptr [rcx], al ; add ah, bh ; sub esi, eax ; call rax
0x00000000000f67e1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000019e5c9 : adc byte ptr [rcx], al ; add byte ptr [rdi + rbp*4 - 0xd], dl ; jmp rdi
0x0000000000114478 : adc byte ptr [rcx], al ; je 0x1144a8 ; add rsp, 8 ; ret
0x0000000000114477 : adc byte ptr [rcx], al ; je 0x1144a9 ; add rsp, 8 ; ret
0x00000000000ac9d8 : adc byte ptr [rcx], al ; retf 0x894c
0x000000000014fb10 : adc byte ptr [rcx], bh ; retf 0x557f
0x00000000000b4ac4 : adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000394ee : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007d5d5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000084d2e : adc byte ptr [rcx], cl ; ret 0x65e9
0x0000000000089c12 : adc byte ptr [rcx], cl ; ret 0xb60f
0x000000000002b6f9 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d1ff7 : adc byte ptr [rcx], dh ; rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000ed09d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xed0d9 ; ret
0x00000000000fde07 : adc byte ptr [rdi + 0x2000004], bh ; call rcx
0x0000000000179058 : adc byte ptr [rdi - 0xe], al ; jmp qword ptr [rax]
0x0000000000187384 : adc byte ptr [rdi - 5], cl ; call qword ptr [rax + 0x10fffb4e]
0x0000000000186580 : adc byte ptr [rdi], bh ; std ; call qword ptr [rax + 0x10fffd3f]
0x000000000002ec05 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000001050aa : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000078c38 : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000085cf2 : adc byte ptr [rdi], cl ; mov dh, 0xdb ; neg ebx ; mov eax, ebx ; pop rbx ; ret
0x0000000000119ab9 : adc byte ptr [rdi], cl ; retf 0x5089
0x0000000000119b84 : adc byte ptr [rdi], cl ; retf 0x5389
0x0000000000119b0a : adc byte ptr [rdi], cl ; retf 0xd189
0x00000000000313d9 : adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000119ecc : adc byte ptr [rdi], cl ; retf 0xd789
0x00000000000e6778 : adc byte ptr [rdi], cl ; test byte ptr [rbp - 0x9fffffd], ah ; ret 0xf20
0x00000000000a9851 : adc byte ptr [rdi], cl ; test dl, ch ; or eax, 0xb8480000 ; ret 0xffff
0x0000000000144388 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000015cb33 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000014b271 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b361 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b181 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000153f6b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000152a6f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000153c6f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015336f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015366f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000152d67 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bbc9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000014b721 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014aeb1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000014b901 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b091 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014bae1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b9f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b333 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b423 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b243 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153014 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153c14 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153f14 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153614 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153314 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000152d0c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014afa1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000014eecd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014eced : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014f6c5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e5e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f4e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b153 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014af73 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b063 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ae83 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000e8639 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x00000000000dec87 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x000000000019ecd8 : adc byte ptr [rdi], dl ; add dword ptr [rax], eax ; test dl, dh ; jmp qword ptr [rcx]
0x0000000000003afd : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x000000000019594b : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001a2fd8 : adc byte ptr [rdx + 1], bl ; add byte ptr [rsp + rsi - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000132519 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017919c : adc byte ptr [rdx - 0xe], bl ; jmp qword ptr [rax]
0x000000000019bce0 : adc byte ptr [rdx - 0xe], cl ; call qword ptr [rbx]
0x0000000000095a8d : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000113f0f : adc byte ptr [rdx], al ; je 0x113f1d ; ret
0x000000000015a09b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000186578 : adc byte ptr [rip + 0x3e10fffd], bh ; std ; call qword ptr [rax]
0x000000000014f85f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x0000000000159f4a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000159545 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000159945 : adc byte ptr [rsi + 0xf], ah ; jmp 0x159919
0x00000000001599c3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x159997
0x0000000000159e55 : adc byte ptr [rsi + 0xf], ah ; jmp 0x159e29
0x0000000000159ed3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x159ea7
0x000000000015af75 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15af49
0x000000000015aff3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15afc7
0x000000000015b485 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15b459
0x000000000015b503 : adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4d7
0x0000000000159940 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15991e
0x00000000001599be : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15999c
0x0000000000159e50 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159e2e
0x0000000000159ece : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159eac
0x000000000015af70 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15af4e
0x000000000015afee : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15afcc
0x000000000015b480 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b45e
0x000000000015b4fe : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4dc
0x000000000008ea45 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000009287b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009ca0b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009ca0a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000011477f : adc byte ptr [rsi + rcx + 0x48], dh ; add esp, 8 ; ret
0x000000000018738c : adc byte ptr [rsi - 5], cl ; call qword ptr [rax + 0x10fffb4d]
0x000000000013fa1d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018657c : adc byte ptr [rsi], bh ; std ; call qword ptr [rax]
0x000000000003978a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000000b3c8a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000035270 : adc byte ptr [rsp - 4], al ; ret
0x0000000000034ea4 : adc byte ptr [rsp - 8], al ; ret
0x0000000000153017 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001982e5 : adc ch, bh ; jmp rcx
0x00000000001180ca : adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000001a2a51 : adc ch, dh ; jmp qword ptr [rcx]
0x00000000001867b0 : adc cl, 0xfa ; inc dword ptr [rax - 0x2d] ; cli ; jmp qword ptr [rax]
0x00000000001869b0 : adc cl, bh ; cli ; call rax
0x000000000008e845 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000b4812 : adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000001290fe : adc cl, byte ptr [rax + 0x29] ; retf 0x148
0x00000000001290bc : adc cl, byte ptr [rax + 0x29] ; retf 0x149
0x00000000000b6fee : adc cl, byte ptr [rax + 0x29] ; retf 0x8966
0x000000000012c3ae : adc cl, byte ptr [rax + 1] ; ret 0x3948
0x00000000000eeb18 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000082815 : adc cl, byte ptr [rax - 0x7d] ; stc ; add cl, byte ptr [rax + 0xf] ; retf
0x000000000009c285 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000000970 : adc cl, byte ptr [rcx + rax] ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000000ff839 : adc cl, byte ptr [rcx - 0x77] ; ror byte ptr [rax - 0x3f], 1 ; loop 0xff84c ; jmp 0xff80f
0x00000000000cca2a : adc cl, byte ptr [rdi] ; test esp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x0000000000127af2 : adc cl, ch ; ret
0x00000000000dee9b : adc cl, ch ; ret 0xfffe
0x0000000000179cf9 : adc dh, ah ; call rax
0x00000000001a9699 : adc dh, bh ; call qword ptr [rdi]
0x000000000017a795 : adc dh, ch ; call rax
0x000000000017acb4 : adc dh, ch ; cmc ; jmp rsp
0x000000000017a791 : adc dh, ch ; inc dword ptr [rdx] ; adc dh, ch ; call rax
0x00000000001188aa : adc dh, dh ; ret 0x7401
0x000000000006dddf : adc dh, dh ; ret 0x7420
0x00000000001866f8 : adc dh, dl ; cli ; push rax ; xlatb ; cli ; call rax
0x0000000000191f00 : adc dl, al ; jmp 0x191f04
0x0000000000002766 : adc dl, bh ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000010305a : adc dl, byte ptr [rbx + 0xf480005] ; ret 0xfc3
0x00000000000073b9 : adc dword ptr [r8], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000f605e : adc dword ptr [rax + 0x113], edi ; syscall
0x00000000000f5efe : adc dword ptr [rax + 0x114], edi ; syscall
0x00000000000ec3de : adc dword ptr [rax + 0x115], edi ; syscall
0x00000000000f5fae : adc dword ptr [rax + 0x116], edi ; syscall
0x00000000000e5dde : adc dword ptr [rax + 0x11], edi ; syscall
0x00000000000ec47e : adc dword ptr [rax + 0x11d], edi ; syscall
0x00000000000f73fe : adc dword ptr [rax + 0x120], edi ; syscall
0x00000000000e5e8e : adc dword ptr [rax + 0x12], edi ; syscall
0x00000000000f749e : adc dword ptr [rax + 0x12b], edi ; syscall
0x00000000000f754e : adc dword ptr [rax + 0x133], edi ; syscall
0x00000000000ec1fe : adc dword ptr [rax + 0x146], edi ; syscall
0x00000000000edb6e : adc dword ptr [rax + 0x17], edi ; syscall
0x00000000000f706e : adc dword ptr [rax + 0x2c], edi ; syscall
0x00000000000f6dae : adc dword ptr [rax + 0x2d], edi ; syscall
0x00000000000e61d6 : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000006ed83 : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000000c4c0e : adc dword ptr [rax + 0x3d], edi ; syscall
0x00000000000f76ae : adc dword ptr [rax + 0x45], edi ; syscall
0x00000000000f774e : adc dword ptr [rax + 0x46], edi ; syscall
0x00000000000f5e5e : adc dword ptr [rax + 0xe8], edi ; syscall
0x000000000007450e : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002db4e : adc dword ptr [rax - 0x73], ecx ; add eax, 0x14fcc7 ; ret
0x000000000012c696 : adc dword ptr [rax - 0x75], ecx ; add eax, 0x28daea ; call qword ptr [rax]
0x000000000002175a : adc dword ptr [rax - 0x77], ecx ; add eax, 0x398bc6 ; ret
0x0000000000038c8e : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000006eaa2 : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000008bed6 : adc dword ptr [rax - 0x7d], ecx ; jmp 0xffffffffcb4207e9
0x000000000008bfcd : adc dword ptr [rax - 0x7d], ecx ; jmp 0xffffffffcb4208e0
0x00000000000324ef : adc dword ptr [rax - 0x7d], ecx ; ret
0x000000000004b29f : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000ad8a7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x000000000008d7c4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000001515bb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000014c677 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e5e9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000b248 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000c0e8 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x00000000000073ba : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001639fb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000e5de0 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000905a8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c4ecd : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000006369b : adc dword ptr [rax], eax ; jmp rax
0x000000000005a34d : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000005a739 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000005a21b : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000027f31 : adc dword ptr [rbp + 0x29], ecx ; retf 0x8945
0x000000000008a64e : adc dword ptr [rbp - 0x7c], eax ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000d6314 : adc dword ptr [rbx + 0x634801c0], eax ; ror byte ptr [rax + 0x39], 1 ; retf 0xf072
0x0000000000039912 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a1588 : adc dword ptr [rbx], eax ; ret
0x00000000000a1501 : adc dword ptr [rbx], esp ; ret
0x00000000000d13be : adc dword ptr [rcx + 0x63], ecx ; ret 0x48b
0x000000000015bd77 : adc dword ptr [rcx + 7], edi ; ret
0x000000000007f01e : adc dword ptr [rcx + rax*2 + 0x48], esi ; mov dword ptr [rsi], ecx ; ret
0x000000000010f7f8 : adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a14fc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000015ba12 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000015b9d6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000000d138 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x39
0x0000000000053503 : adc dword ptr [rcx], ebp ; ret
0x000000000010f45b : adc dword ptr [rcx], edi ; retf 0x470f
0x0000000000120d1a : adc dword ptr [rdi + 0x20], eax ; ret
0x00000000000e5f92 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000120ce2 : adc dword ptr [rdi + 0x30], eax ; ret
0x00000000000a1583 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000e5f96 : adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000036670 : adc dword ptr [rdi + 0x60], eax ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000036674 : adc dword ptr [rdi + 0x70], eax ; ret
0x00000000000e63a6 : adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e6c8b : adc dword ptr [rdi + 0xf8], eax ; ret
0x000000000011dcd2 : adc dword ptr [rdi + 8], eax ; ret
0x0000000000110540 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x00000000000a12c3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000a1465 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000a146a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000a1442 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000a1447 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000015bed9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000a12c0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000cfaf7 : adc dword ptr [rdi], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000251c0 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000034e1b : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x00000000000351c0 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x000000000008ad87 : adc dword ptr [rdi], ecx ; test dword ptr [rdx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d7558 : adc dword ptr [rdi], ecx ; test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000e0c13 : adc dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8548
0x000000000015c12c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000008dfeb : adc dword ptr [rdx + rdx*8 + 0x38442074], eax ; retf 0xf41
0x000000000011dceb : adc dword ptr [rdx], eax ; ret
0x000000000012a8be : adc dword ptr [rsi + 0x39], esp ; retf 0x940f
0x00000000000023b9 : adc dword ptr [rsi + 0x6c8cd7d0], esp ; xor bl, al ; retf 0x23c4
0x00000000000e6356 : adc dword ptr [rsi + 0x70], eax ; ret
0x000000000015c25f : adc dword ptr [rsi + 3], edx ; ret
0x000000000015c2fc : adc dword ptr [rsi + 7], edx ; ret
0x00000000001105cd : adc dword ptr [rsi + rcx + 8], eax ; mov byte ptr [rsi + 3], cl ; xor eax, eax ; ret
0x000000000015c0fe : adc dword ptr [rsi - 1], edx ; ret
0x00000000000f5af9 : adc dword ptr [rsp - 0x1c], eax ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000001631c6 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000014c676 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000872fb : adc eax, 0x10520 ; cmovne rax, rdx ; ret
0x00000000000b2eaa : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000878eb : adc eax, 0x11b50 ; cmovne rax, rdx ; ret
0x000000000016da49 : adc eax, 0x15c70000 ; add byte ptr [rax], al ; retf 0x15
0x0000000000088a9d : adc eax, 0x188be ; cmovne rax, rdx ; ret
0x000000000008874d : adc eax, 0x18bee ; cmovne rax, rdx ; ret
0x00000000000885dd : adc eax, 0x18d7e ; cmovne rax, rdx ; ret
0x00000000001228e9 : adc eax, 0x297552 ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001220a7 : adc eax, 0x2b54 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000efc49 : adc eax, 0x2c8b42 ; add rsp, 8 ; ret
0x00000000000efc1a : adc eax, 0x2c8b71 ; ret
0x0000000000175304 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x0000000000085e20 : adc eax, 0x3320e3 ; mov rax, rbx ; pop rbx ; ret
0x000000000007ee33 : adc eax, 0x336498 ; ret
0x000000000007ee8f : adc eax, 0x33900c ; ret
0x0000000000029bb6 : adc eax, 0x358d4800 ; ret
0x000000000003695d : adc eax, 0x37e846 ; ret
0x000000000002ef46 : adc eax, 0x385fdd ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002db29 : adc eax, 0x388fcf ; ret
0x00000000000216fc : adc eax, 0x398a9f ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000b2bda : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000024af6 : adc eax, 0x3d8d4800 ; int1 ; retf 0x15
0x0000000000027045 : adc eax, 0x3d8d4800 ; retf 0x15a5
0x0000000000001ed8 : adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000000c0c4a : adc eax, 0x48ed894c ; mov edi, ebx ; call r12
0x0000000000103075 : adc eax, 0x545a6 ; cmovne rax, rdx ; ret
0x0000000000102fb5 : adc eax, 0x54686 ; cmovne rax, rdx ; ret
0x0000000000102ef5 : adc eax, 0x54746 ; cmovne rax, rdx ; ret
0x0000000000103059 : adc eax, 0x59312 ; cmovne rax, rdx ; ret
0x0000000000102f99 : adc eax, 0x593f2 ; cmovne rax, rdx ; ret
0x0000000000102ed9 : adc eax, 0x594b2 ; cmovne rax, rdx ; ret
0x0000000000103119 : adc eax, 0x59802 ; cmovne rax, rdx ; ret
0x000000000009d1b8 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000018c315 : adc eax, 0x6ec0002 ; stc ; jmp qword ptr [rax]
0x00000000000359d8 : adc eax, 0x6f0f6600 ; ret 0x3de8
0x000000000003594e : adc eax, 0x6f0f6600 ; ret 0xc7e8
0x000000000009e8dc : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00000000000352e4 : adc eax, 0x7e0f6600 ; shl byte ptr [rsi + 0xf], 0x7e ; ret 0xf8c1
0x000000000005e212 : adc eax, 0x83000016 ; ret 0xbf08
0x000000000014c201 : adc eax, 0x83480000 ; ret 0xe910
0x000000000007f4f6 : adc eax, 0x83480007 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130908 : adc eax, 0x894d0000 ; retf
0x00000000000873ab : adc eax, 0xa8130 ; cmovne rax, rdx ; ret
0x0000000000087955 : adc eax, 0xa8de6 ; cmovne rax, rdx ; ret
0x000000000008741b : adc eax, 0xb9cb0 ; cmovne rax, rdx ; ret
0x00000000000879ab : adc eax, 0xbaed0 ; cmovne rax, rdx ; ret
0x000000000008884b : adc eax, 0xbcbb0 ; cmovne rax, rdx ; ret
0x00000000000888ab : adc eax, 0xbe360 ; cmovne rax, rdx ; ret
0x0000000000088b05 : adc eax, 0xceb46 ; cmovne rax, rdx ; ret
0x00000000000887b5 : adc eax, 0xcee76 ; cmovne rax, rdx ; ret
0x0000000000088645 : adc eax, 0xcf006 ; cmovne rax, rdx ; ret
0x0000000000088ae9 : adc eax, 0xd38b2 ; cmovne rax, rdx ; ret
0x0000000000088799 : adc eax, 0xd3be2 ; cmovne rax, rdx ; ret
0x0000000000088629 : adc eax, 0xd3d72 ; cmovne rax, rdx ; ret
0x00000000000886e9 : adc eax, 0xd4242 ; cmovne rax, rdx ; ret
0x000000000008734e : adc eax, 0xd573d ; cmovne rax, rdx ; ret
0x00000000000b361a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000017948c : adc eax, 0xefff285 ; test edx, esi ; jmp qword ptr [rbx]
0x00000000000a17f4 : adc eax, 0xf880272 ; ret
0x00000000000a349b : adc eax, 0xfd40 ; cmovne rax, rdx ; ret
0x000000000010300d : adc eax, 0xfff9e31e ; cmovne rax, rdx ; ret
0x0000000000102f4d : adc eax, 0xfff9e3fe ; cmovne rax, rdx ; ret
0x0000000000102e8d : adc eax, 0xfff9e4be ; cmovne rax, rdx ; ret
0x00000000000526df : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015131e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e409 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000ef80 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000098b0 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2b
0x00000000000ed1dd : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000090428 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004e961 : adc eax, dword ptr [rax] ; add dh, dh ; ret 0xf40
0x000000000004275f : adc eax, dword ptr [rax] ; mov edx, 0x38a ; call 0x2e9f9
0x0000000000042721 : adc eax, dword ptr [rax] ; mov edx, 0x392 ; call 0x2e9f9
0x00000000000427c9 : adc eax, dword ptr [rax] ; mov edx, 0x39e ; call 0x2e9f9
0x00000000000427aa : adc eax, dword ptr [rax] ; mov edx, 0x44c ; call 0x2e9f9
0x0000000000042702 : adc eax, dword ptr [rax] ; mov edx, 0x550 ; call 0x2e9f9
0x0000000000042740 : adc eax, dword ptr [rax] ; mov edx, 0x6ac ; call 0x2e9f9
0x000000000004277e : adc eax, dword ptr [rax] ; mov edx, 0x6d6 ; call 0x2e9f9
0x0000000000033669 : adc eax, dword ptr [rax] ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000ebf6c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x0000000000114dc4 : adc eax, dword ptr [rbx + 0x2a4c4c2d] ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000ce52c : adc eax, dword ptr [rbx + 0x67403f8] ; ret
0x000000000008e0e2 : adc eax, dword ptr [rcx + 0x39] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000ff6a2 : adc eax, dword ptr [rcx - 0x77] ; ret
0x00000000000f6060 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000018c2dd : adc eax, dword ptr [rdx] ; add byte ptr [rbx + rax - 7], ch ; call rax
0x0000000000099208 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000152d0f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000046129 : adc eax, eax ; ret
0x0000000000046266 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000001894b1 : adc eax, esi ; call qword ptr [rax]
0x0000000000107d5e : adc ebp, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000174fa5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000001187f3 : adc ebp, dword ptr [rdx] ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000000e6ac9 : adc ebp, ecx ; ret 0xfffc
0x00000000000fb402 : adc ebx, dword ptr [rbx + 0x5d] ; mov eax, edx ; pop r12 ; ret
0x00000000000f96ac : adc ebx, esi ; ret
0x000000000009f23c : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x00000000000eaa3c : adc ecx, dword ptr [rax + 0x63] ; ret 0x348
0x00000000000df458 : adc ecx, dword ptr [rax + 1] ; ret 0x3944
0x000000000006fb9c : adc ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005158c : adc ecx, dword ptr [rax - 0x77] ; fucomip st(0) ; retf
0x0000000000028b27 : adc ecx, dword ptr [rax - 0x77] ; retf
0x000000000007c7aa : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000000251a9 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000adaf6 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4804
0x00000000000d0b2b : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000a21a4 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000c92b9 : adc ecx, dword ptr [rbx - 0x7cb7fbad] ; ret
0x000000000002b1bc : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000059d23 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x00000000000d9333 : adc ecx, dword ptr [rcx + 0x63] ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000081f87 : adc ecx, dword ptr [rcx - 0x77] ; ret
0x0000000000119f30 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000c93c2 : adc ecx, dword ptr [rdi] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000119aa3 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000993d4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000993f4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000099414 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x000000000009925e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000005909a : adc ecx, ebp ; retf 0xffa5
0x0000000000080271 : adc edi, dword ptr [rbx + rsi] ; mov eax, 0xca ; syscall
0x00000000001ad7e1 : adc edi, ebx ; call rax
0x00000000001004b2 : adc edx, esi ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001764be : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000f5b75 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000007bf13 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006dddd : adc esi, dword ptr [rdx + rdx - 0xa] ; ret 0x7420
0x00000000000710f9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x000000000019d885 : adc esi, ebx ; jmp rdx
0x000000000006f2a7 : adc esi, esi ; ret 0xf20
0x00000000000d0a73 : adc esp, dword ptr [rsi - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000152ef2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000006369a : adc qword ptr [r8], rax ; jmp rax
0x000000000015bd76 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000015ba11 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000015b9d5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000015bed8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000015c25e : adc qword ptr [rsi + 3], rdx ; ret
0x000000000015c2fb : adc qword ptr [rsi + 7], rdx ; ret
0x000000000015c0fd : adc qword ptr [rsi - 1], rdx ; ret
0x000000000010e8cc : adc r11b, bpl ; ret 0x894c
0x000000000014e570 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000046265 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000198fab : add ah, ah ; mov ecx, 0x95100000 ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000172fdf : add ah, ah ; or al, 0xec ; jmp rsp
0x00000000001965ab : add ah, ah ; pop qword ptr [rax] ; add byte ptr [rax + 0x7f], ah ; out dx, al ; jmp qword ptr [rbx]
0x00000000001a29ab : add ah, ah ; push rbx ; add dword ptr [rax], eax ; and byte ptr [rdi], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000196cbb : add ah, ah ; pushfq ; out dx, al ; call qword ptr [rax]
0x00000000001a11eb : add ah, ah ; ret
0x000000000019874b : add ah, ah ; sbb ebp, edi ; call rdi
0x00000000001a302b : add ah, ah ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000016da47 : add ah, al ; adc eax, 0x15c70000 ; add byte ptr [rax], al ; retf 0x15
0x000000000018ee1b : add ah, al ; add dl, ch ; call qword ptr [rcx]
0x000000000019598b : add ah, al ; add dword ptr [rax], 0 ; loopne 0x1959f5 ; out dx, al ; call rsp
0x00000000001a598b : add ah, al ; add dword ptr [rcx], 0 ; add ah, dh ; cmc ; call qword ptr [rdi]
0x00000000001a1edb : add ah, al ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001963bb : add ah, al ; jge 0x1963b1 ; jmp qword ptr [rbx]
0x00000000001a308b : add ah, al ; pop rdx ; add dword ptr [rax], eax ; jo 0x1a30cf ; cmc ; jmp qword ptr [rcx]
0x00000000001a2b8b : add ah, al ; push rbp ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000019762b : add ah, al ; ret
0x000000000019a31b : add ah, al ; ret 0xfff0
0x00000000000a18be : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001a3323 : add ah, bh ; cmp ch, dh ; jmp qword ptr [rcx]
0x0000000000196ec3 : add ah, bh ; cwde ; add byte ptr [rax], al ; or dl, al ; out dx, al ; jmp qword ptr [rsi]
0x000000000018c27f : add ah, bh ; idiv al ; call qword ptr [rax]
0x00000000000a199b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a1909 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001ab0e3 : add ah, bh ; ja 0x1ab0e2 ; call qword ptr [rbx]
0x00000000001963e3 : add ah, bh ; jge 0x1963d9 ; jmp qword ptr [rbx]
0x000000000018d107 : add ah, bh ; jle 0x18d109 ; jmp rsp
0x0000000000196323 : add ah, bh ; jp 0x196319 ; call qword ptr [rdx]
0x00000000001a71a3 : add ah, bh ; mov dh, dh ; jmp qword ptr [rdx]
0x00000000001961c3 : add ah, bh ; mov eax, dword ptr [rax] ; add byte ptr [rax + 0x77], ch ; out dx, al ; call qword ptr [rdi]
0x000000000018c797 : add ah, bh ; mov ecx, edi ; jmp rsp
0x000000000018b54f : add ah, bh ; or edi, esi ; dec eax ; ret
0x00000000001a2fc3 : add ah, bh ; pop rcx ; add dword ptr [rax], eax ; pop rax ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001891c7 : add ah, bh ; ret
0x000000000018b137 : add ah, bh ; ret 0xfff6
0x0000000000187ab7 : add ah, bh ; retf
0x000000000018f1c3 : add ah, bh ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; xor ch, dl ; call qword ptr [rdx]
0x0000000000188a7f : add ah, bh ; std ; out dx, al ; jmp qword ptr [rax]
0x0000000000188c57 : add ah, bh ; sub edi, ebp ; jmp rsp
0x00000000001895af : add ah, bh ; sub esi, eax ; call rax
0x00000000001a7ec3 : add ah, bh ; test al, 1 ; add byte ptr [rax], bh ; retf 0xfff6
0x0000000000189157 : add ah, bh ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x000000000018c827 : add ah, bh ; xchg eax, esi ; stc ; call rax
0x0000000000193aa3 : add ah, bl ; add byte ptr fs:[rax], al ; clc ; in eax, 0xed ; call qword ptr [rdi]
0x00000000001a2433 : add ah, bl ; add dh, ch ; call qword ptr [rdx]
0x000000000019ede3 : add ah, bl ; call qword ptr [rsi]
0x000000000019df33 : add ah, bl ; cmp ebx, esi ; call rcx
0x000000000018c1ef : add ah, bl ; fdiv st(0), st(0) ; call rsp
0x0000000000187c17 : add ah, bl ; in eax, 0xea ; jmp rax
0x0000000000194aa3 : add ah, bl ; je 0x194aaf ; add byte ptr [rax], bh ; out dx, al ; call qword ptr [rdi]
0x0000000000197523 : add ah, bl ; loop 0x197519 ; call qword ptr [rdx]
0x0000000000198da3 : add ah, bl ; mov bh, 0 ; add byte ptr [rax], cl ; mov ch, bh ; jmp qword ptr [rbx]
0x000000000018b0b7 : add ah, bl ; mov dh, 0xf6 ; call rax
0x000000000018d477 : add ah, bl ; mov dl, 0xfd ; call rsp
0x00000000001904d3 : add ah, bl ; mov dl, ch ; call qword ptr [rcx]
0x00000000001887a7 : add ah, bl ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; push rsp ; ret
0x00000000001a31a3 : add ah, bl ; pop rbx ; add dword ptr [rax], eax ; clc ; cmc ; jmp qword ptr [rcx]
0x00000000001885ff : add ah, bl ; push -0x12 ; call rsp
0x000000000019a0a3 : add ah, bl ; retf 0
0x0000000000189fe7 : add ah, bl ; sal bl, cl ; call qword ptr [rax]
0x000000000017bde8 : add ah, bl ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; jmp qword ptr [rax]
0x0000000000189907 : add ah, bl ; stosd dword ptr [rdi], eax ; int1 ; call rax
0x000000000018cdc7 : add ah, bl ; sub edx, edi ; jmp rsp
0x00000000001764e7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x000000000015c25a : add ah, byte ptr [rdx - 0xf] ; jl 0x15c2af ; adc dword ptr [rsi + 3], edx ; ret
0x000000000009925b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000197451 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000001a2603 : add ah, ch ; add al, 0xf5 ; call qword ptr [rdi]
0x000000000018b51f : add ah, ch ; add esi, edi ; ljmp [rax] ; ret
0x000000000018d1df : add ah, ch ; cld ; call rsp
0x00000000001893a7 : add ah, ch ; cld ; out dx, eax ; call rsp
0x00000000001a2ba3 : add ah, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000197cd3 : add ah, ch ; imul dh ; call qword ptr [rax]
0x000000000019fdd3 : add ah, ch ; ja 0x19fdcf ; jmp qword ptr [rcx]
0x0000000000199693 : add ah, ch ; jg 0x19968b ; call qword ptr [rdx]
0x0000000000189b97 : add ah, ch ; jp 0x189b90 ; call rsp
0x0000000000189b97 : add ah, ch ; jp 0x189b91 ; call rsp
0x00000000001962f3 : add ah, ch ; jp 0x1962e9 ; call qword ptr [rdx]
0x00000000001a5333 : add ah, ch ; jrcxz 0x1a5330 ; call qword ptr [rdi]
0x00000000001a75b3 : add ah, ch ; lahf ; add dword ptr [rax], eax ; pop rax ; sahf ; idiv bh ; retf 0
0x000000000018880f : add ah, ch ; lodsb al, byte ptr [rsi] ; out dx, al ; jmp rsp
0x00000000001995b3 : add ah, ch ; mov edi, 0xe0980000 ; sti ; call rsp
0x0000000000189787 : add ah, ch ; movsxd rsi, ecx ; call qword ptr [rax]
0x0000000000189eff : add ah, ch ; pushfq ; call qword ptr [rax]
0x000000000018b15f : add ah, ch ; ret
0x000000000018d517 : add ah, ch ; ret 0xfffd
0x000000000019a1b3 : add ah, ch ; retf
0x000000000018bb0f : add ah, ch ; sal edi, 1 ; call rax
0x000000000018b5f7 : add ah, ch ; sbb dh, bh ; jmp rax
0x000000000019ca03 : add ah, ch ; xchg dl, dh ; jmp qword ptr [rcx]
0x0000000000199293 : add ah, ch ; xor al, dh ; jmp qword ptr [rbx]
0x000000000019d883 : add ah, cl ; adc esi, ebx ; jmp rdx
0x000000000018aa27 : add ah, cl ; and dh, dh ; call rsp
0x0000000000188947 : add ah, cl ; fldz ; jmp rsp
0x000000000018a0c7 : add ah, cl ; in al, 0xf3 ; jmp qword ptr [rax]
0x000000000018cc0f : add ah, cl ; in al, 0xf9 ; jmp rax
0x00000000001a42f3 : add ah, cl ; jae 0x1a42f0 ; call qword ptr [rdi]
0x000000000018798f : add ah, cl ; js 0x187981 ; jmp qword ptr [rax]
0x0000000000188777 : add ah, cl ; lahf ; out dx, al ; inc esp ; ret 0
0x0000000000198a93 : add ah, cl ; mov ah, 0 ; add byte ptr [rax + 0x56], bh ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000188867 : add ah, cl ; mov ch, 0xee ; jmp rax
0x0000000000188d47 : add ah, cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001885bf : add ah, cl ; pop rbp ; out dx, al ; call rax
0x0000000000188ddf : add ah, cl ; push rbp ; out dx, eax ; jmp qword ptr [rax]
0x000000000018b12f : add ah, cl ; ret 0xfff6
0x000000000018ca67 : add ah, cl ; retf
0x000000000018d26f : add ah, cl ; retf 0xfffc
0x00000000001aa093 : add ah, cl ; retf 1
0x00000000001a0293 : add ah, cl ; sub al, 1 ; add byte ptr [rax], bh ; mov esp, esi ; jmp qword ptr [rcx]
0x000000000018c45f : add ah, cl ; sub cl, bh ; jmp rsp
0x000000000018958f : add ah, cl ; sub eax, esi ; call rsp
0x00000000001a7003 : add ah, cl ; xchg dh, dh ; call qword ptr [rdi]
0x00000000001a261b : add ah, dh ; add al, 0xf5 ; call qword ptr [rdi]
0x00000000001890dc : add ah, dh ; add byte ptr [rax], al ; pop rsp ; jge 0x1890d9 ; jmp qword ptr [rax]
0x00000000001a59bb : add ah, dh ; add dword ptr [rcx], 0 ; nop ; hlt ; cmc ; call qword ptr [rdi]
0x00000000001a5990 : add ah, dh ; cmc ; call qword ptr [rdi]
0x000000000019ed2b : add ah, dh ; jmp qword ptr [rcx]
0x000000000019eead : add ah, dh ; jmp rcx
0x00000000001975cb : add ah, dh ; out 0xee, al ; jmp rsp
0x000000000019c4bb : add ah, dh ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdi - 0xe], ch ; call rcx
0x00000000001aa0bb : add ah, dh ; retf 1
0x00000000001a02bb : add ah, dh ; sub al, 1 ; add byte ptr [rax - 0x77], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001967bb : add ah, dh ; xchg eax, ecx ; add byte ptr [rax], al ; mov al, 0x84 ; out dx, al ; jmp qword ptr [rsi]
0x0000000000186734 : add ah, dl ; cli ; jmp rax
0x000000000019654b : add ah, dl ; jle 0x196541 ; jmp qword ptr [rbx]
0x000000000019a69b : add ah, dl ; rol byte ptr [rax], 1 ; add byte ptr [rax + 0xf], dl ; int1 ; call qword ptr [rax]
0x000000000004291e : add al, 0 ; add al, ch ; retf 0xfec0
0x0000000000074533 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000004549b : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000010ec68 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000014a7bd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014f309 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a7e1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000051ae2 : add al, 0 ; add byte ptr [rax], al ; call 0x6e506
0x00000000000b36a3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d752a : add al, 0 ; add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd74d0
0x00000000000e6faf : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000160ceb : add al, 0 ; add byte ptr [rbp + rcx*4 + 0x47], al ; add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000091328 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001200c7 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000511ef : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000042153 : add al, 0 ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000161db2 : add al, 0 ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000001268ba : add al, 0 ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000086ca6 : add al, 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fde09 : add al, 0 ; add byte ptr [rdx], al ; call rcx
0x00000000000b9ad2 : add al, 0 ; add dh, dh ; ret
0x00000000000ca989 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000e8e18 : add al, 0 ; test rax, rax ; sete dl ; jmp 0xe8e5e
0x00000000000436b5 : add al, 0x10 ; add bl, dh ; ret
0x000000000002e839 : add al, 0x10 ; ret
0x00000000000f95d5 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000000f96ab : add al, 0x11 ; ret
0x00000000000a1954 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002292e : add al, 0x17 ; add al, ch ; retf 0xffeb
0x000000000008fcf1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008fc8a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000156bbe : add al, 0x17 ; vzeroupper ; ret
0x000000000019edcc : add al, 0x18 ; add dword ptr [rax], eax ; sal bl, 1 ; call qword ptr [rdi]
0x000000000007ea59 : add al, 0x18 ; test rax, rax ; je 0x7ea69 ; call rax
0x0000000000124bea : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000c4dc1 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e6d07 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000358d2 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003575a : add al, 0x24 ; add rsp, 0x28 ; ret
0x000000000016304e : add al, 0x24 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000162cf9 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000000f8ca4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000f8d05 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000010cbe6 : add al, 0x24 ; call rax
0x000000000008570e : add al, 0x24 ; je 0x857f0 ; call rax
0x000000000006fa22 : add al, 0x24 ; mov edi, dword ptr [rsp + rax*4 + 0x28] ; call 0xec518
0x00000000000a2213 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007463b : add al, 0x24 ; mov rdi, r15 ; call rax
0x00000000000ced9e : add al, 0x24 ; pop rbp ; pop r12 ; ret
0x00000000000859e3 : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eb93 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000220ea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000021de2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000024a66 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f9dd : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000110371 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x00000000000a0799 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a07ab : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000001997fc : add al, 0x31 ; cld ; call qword ptr [rbx]
0x00000000000e6187 : add al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009735e : add al, 0x31 ; ret
0x000000000010e9af : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a2f8c : add al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x000000000009725a : add al, 0x37 ; ret
0x0000000000089c38 : add al, 0x39 ; ret 0xeb75
0x00000000000731af : add al, 0x3a ; ret
0x00000000001a357c : add al, 0x3c ; cmc ; jmp qword ptr [rcx]
0x00000000001745c6 : add al, 0x3d ; retf
0x0000000000189dcc : add al, 0x43 ; add dword ptr [rax], eax ; cmp al, 0x82 ; jmp qword ptr [rax]
0x00000000000e629a : add al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000e622c : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a2496 : add al, 0x48 ; cmove eax, edx ; ret
0x000000000009dd3b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000009eb7b : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x000000000011061e : add al, 0x48 ; lea eax, [rdi + rsi + 8] ; ret
0x0000000000146af9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000146b0b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000070cf8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000139a2a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000007195c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071b65 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000008e3bd : add al, 0x48 ; mov eax, edi ; ret
0x0000000000097604 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000179ef8 : add al, 0x4b ; hlt ; call qword ptr [rdx]
0x0000000000021e7d : add al, 0x4c ; add edi, ebp ; call rax
0x00000000000a2b70 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x000000000004af68 : add al, 0x4d ; cmp eax, ecx ; jne 0x4af68 ; pop rbx ; pop rbp ; ret
0x0000000000102624 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000ceabb : add al, 0x5b ; ret
0x00000000001153b7 : add al, 0x66 ; mov dword ptr [rbp + rax + 0x14], edx ; call 0x21670
0x0000000000146b07 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000992ec : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000019f8bc : add al, 0x6b ; hlt ; call qword ptr [rbx]
0x000000000002b1ba : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000a22a1 : add al, 0x74 ; fiadd word ptr [rcx + 0x39] ; sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x00000000000e6cd4 : add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000160f9a : add al, 0x74 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x00000000000cefa5 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xcefb9 ; xor eax, eax ; ret
0x000000000012117c : add al, 0x74 ; retf
0x00000000000258f3 : add al, 0x74 ; retf 0x8348
0x0000000000104354 : add al, 0x75 ; jmp 0xffffffffc408cca9
0x00000000000b9c57 : add al, 0x75 ; ret 0x8948
0x0000000000119ab3 : add al, 0x75 ; sbb cl, byte ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000cae99 : add al, 0x75 ; sbb dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000eba82 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002ebe0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ec00 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002eb40 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002ebc0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002eae0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002eb80 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002eb20 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002eb60 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002ec80 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002eb00 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002eba0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002eac0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000cef8f : add al, 0x7c ; out dx, al ; ret
0x0000000000063772 : add al, 0x80 ; add rax, rdi ; jmp rax
0x000000000006485e : add al, 0x80 ; add rax, rdx ; xor edx, edx ; jmp rax
0x00000000000a1e44 : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xa1e31 ; ret
0x0000000000052135 : add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000061700 : add al, 0x81 ; add rax, rdx ; jmp rax
0x000000000014beeb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014d7c3 : add al, 0x81 ; sub eax, edx ; ret
0x00000000000d69f2 : add al, 0x82 ; add r8, r10 ; jmp r8
0x00000000000224af : add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000a1df8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa1de8 ; ret
0x00000000000946c7 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000001105f0 : add al, 0x83 ; loopne 0x110677 ; ret
0x0000000000075e92 : add al, 0x83 ; loopne 0x75e9b ; ret
0x0000000000078b54 : add al, 0x83 ; loopne 0x78b5d ; ret
0x0000000000111c4e : add al, 0x83 ; ret 0xf01
0x0000000000085068 : add al, 0x83 ; retf 0x8902
0x00000000000e64a7 : add al, 0x83 ; retf 0xe803
0x00000000000a34c9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000052c2c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000005309f : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000a21be : add al, 0x87 ; test r8d, r8d ; jne 0xa2198 ; ret
0x0000000000146af6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000992cb : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000a1e48 : add al, 0x88 ; je 0xa1e2d ; ret
0x00000000000db3f0 : add al, 0x89 ; ret 0xb60f
0x00000000000a1dfb : add al, 0x8a ; je 0xa1de5 ; ret
0x00000000000992b4 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f73d9 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000eb905 : add al, 0x8b ; jnp 0xeb94d ; jne 0xeb923 ; call 0xe83a8
0x00000000000eb904 : add al, 0x8b ; jnp 0xeb94e ; jne 0xeb924 ; call 0xe83a9
0x00000000000a21a8 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000001963cc : add al, 0x8e ; add byte ptr [rax], al ; loopne 0x196456 ; out dx, al ; jmp qword ptr [rbx]
0x00000000001a68cc : add al, 0x93 ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xa], dl ; call qword ptr [rax]
0x00000000000a1923 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000a24c6 : add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c68a5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000f9487 : add al, 0xa ; ret
0x00000000000c96b9 : add al, 0xa2 ; add rax, rdx ; jmp rax
0x000000000007c6b7 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000002389 : add al, 0xaa ; ret
0x00000000000d3382 : add al, 0xae ; add rax, rsi ; jmp rax
0x0000000000063e79 : add al, 0xb0 ; add rax, rdi ; jmp rax
0x000000000011dca8 : add al, 0xb1 ; add rax, rcx ; jmp rax
0x0000000000117ca7 : add al, 0xb1 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000c64dd : add al, 0xb2 ; add rax, rdx ; jmp rax
0x000000000018b144 : add al, 0xb4 ; add dword ptr [rax], eax ; pop rsp ; ret
0x000000000002e836 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000011adc6 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002ee68 : add al, 0xb8 ; ret
0x00000000000a1869 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000011473d : add al, 0xc6 ; sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000bfdb3 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012d0d7 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000019b7cc : add al, 0xe2 ; add byte ptr [rax], al ; and al, dh ; int1 ; call qword ptr [rax]
0x000000000010e987 : add al, 0xe8 ; ret
0x00000000000bed38 : add al, 0xe8 ; ret 0x3af
0x00000000000a5060 : add al, 0xe8 ; retf 0x54b
0x00000000001135d0 : add al, 0xe9 ; retf 0xfffc
0x00000000000318fa : add al, 0xeb ; ret
0x0000000000198059 : add al, 0xef ; call qword ptr [rax]
0x00000000001a1fac : add al, 0xef ; hlt ; jmp qword ptr [rdx]
0x0000000000197ff9 : add al, 0xef ; jmp qword ptr [rcx]
0x00000000001a299c : add al, 0xf ; cmc ; jmp qword ptr [rcx]
0x000000000002eae5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000008e321 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008e4d3 : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000149ffd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000125949 : add al, 0xf ; retf 0x1689
0x000000000011f381 : add al, 0xf ; retf 0x5089
0x000000000011adb5 : add al, 0xf ; retf 0x6348
0x000000000014f91b : add al, 0xf ; sub rax, rsi ; ret
0x00000000000d009e : add al, 0xf ; test dword ptr [rbx - 0x7d000000], edx ; retf 0x8840
0x00000000000b2ae5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000009cf8b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e0b8a : add al, 0xf ; xchg eax, esp ; ret
0x00000000001149e0 : add al, 0xf ; xchg eax, esp ; ret 0xd021
0x000000000002c426 : add al, 0xf0 ; test rax, rax ; je 0x2c436 ; call rax
0x0000000000139d93 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e765b : add al, 0xf3 ; ret
0x00000000001a2605 : add al, 0xf5 ; call qword ptr [rdi]
0x000000000018b531 : add al, 0xf7 ; call qword ptr [rax - 0x3d]
0x00000000000e11b2 : add al, 0xf7 ; ret 0xfffd
0x00000000001869c9 : add al, 0xfb ; inc dword ptr [rax + 6] ; sti ; call rax
0x00000000001874d0 : add al, 0xfc ; inc dword ptr [rax] ; ret 0xfffc
0x00000000000b2b18 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000e8c64 : add al, 1 ; add byte ptr [rax], al ; syscall
0x000000000019daa9 : add al, 1 ; add byte ptr [rdx + rbx - 0xd], ah ; jmp rdx
0x0000000000051c87 : add al, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006e94d : add al, 1 ; je 0x6e8fe ; jmp 0x6e91b
0x000000000007787d : add al, 1 ; je 0x7782e ; jmp 0x7784b
0x00000000000c0631 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051d02 : add al, 1 ; xor eax, eax ; ret
0x00000000001ad9fd : add al, 2 ; add byte ptr [rax], ah ; push rbx ; sti ; call qword ptr [rdx]
0x00000000001ae7e0 : add al, 2 ; add byte ptr [rax], al ; retf 8
0x000000000008e79c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x56e8
0x000000000015a7a7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000264fc : add al, 4 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x000000000009d0d8 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000096d8d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000096fa8 : add al, 7 ; ret
0x0000000000157274 : add al, 7 ; vzeroupper ; ret
0x0000000000077c73 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000008fe5f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001052cc : add al, 9 ; ror byte ptr [rax + 0x39], 1 ; retf
0x000000000019daa7 : add al, ah ; add al, 1 ; add byte ptr [rdx + rbx - 0xd], ah ; jmp rdx
0x00000000001a1fa7 : add al, ah ; add qword ptr [r8], rax ; add al, 0xef ; hlt ; jmp qword ptr [rdx]
0x0000000000193fa7 : add al, ah ; imul eax, dword ptr [rax], 0xedf42400 ; jmp rsp
0x00000000001a1eef : add al, ah ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001963cf : add al, ah ; jge 0x1963c5 ; jmp qword ptr [rbx]
0x00000000001964a7 : add al, ah ; mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], dl ; jmp qword ptr [rbx]
0x000000000019598f : add al, ah ; pop rbx ; out dx, al ; call rsp
0x000000000019f92f : add al, ah ; push -0xc ; call qword ptr [rax]
0x000000000000961f : add al, ah ; ret 0xe
0x00000000001a98a7 : add al, ah ; ret 1
0x00000000001aa0a7 : add al, ah ; retf 1
0x00000000001acbff : add al, ah ; sal bh, 1 ; call rax
0x000000000019eea7 : add al, ah ; sbb byte ptr [rcx], al ; add byte ptr [rax + rax - 0xc], dh ; jmp rcx
0x00000000001a02a7 : add al, ah ; sub al, 1 ; add byte ptr [rcx + rcx*4 - 0xc], dl ; jmp qword ptr [rcx]
0x00000000000103b7 : add al, ah ; syscall
0x00000000001a1e87 : add al, al ; add qword ptr [rax], rax ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a317f : add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000001ab23f : add al, al ; jp 0x1ab23e ; call rax
0x00000000001a14df : add al, al ; leave ; hlt ; jmp qword ptr [rcx]
0x0000000000199087 : add al, al ; mov edx, 0x47940000 ; sti ; call qword ptr [rax]
0x00000000001a2f87 : add al, al ; pop rcx ; add dword ptr [rax], eax ; add al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x000000000019a32f : add al, al ; ret 0xfff0
0x000000000019a687 : add al, al ; rol byte ptr [rax], 1 ; add byte ptr [rdi + rcx - 0xf], dl ; call qword ptr [rax]
0x00000000001a5a87 : add al, al ; test byte ptr [rcx], al ; add byte ptr [rbp + rsi*8 - 0xb], ah ; call qword ptr [rax]
0x00000000001a04bf : add al, bh ; add dword ptr cs:[rax], eax ; or al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x00000000001a31a7 : add al, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000193aa7 : add al, bh ; in eax, 0xed ; call qword ptr [rdi]
0x000000000019fc17 : add al, bh ; jb 0x19fc13 ; jmp qword ptr [rcx]
0x00000000000a19b5 : add al, bh ; jg 0xa19b7 ; int1 ; mov eax, eax ; ret
0x0000000000198fbf : add al, bh ; mov ecx, 0x3a5c0000 ; cli ; call qword ptr [rax]
0x00000000001a28e7 : add al, bh ; retf 0xfff8
0x00000000001a67bf : add al, bh ; xchg eax, ecx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; idiv r15b ; ret
0x0000000000190447 : add al, bh ; xchg edx, ebp ; call qword ptr [rcx]
0x00000000001a149f : add al, bl ; add dword ptr ds:[rax], eax ; leave ; hlt ; jmp qword ptr [rcx]
0x000000000019af9f : add al, bl ; fld dword ptr [rax] ; add byte ptr [rsp + rcx*4], cl ; int1 ; call qword ptr [rcx]
0x000000000019fb07 : add al, bl ; jb 0x19fb03 ; call qword ptr [rcx]
0x000000000019ed17 : add al, bl ; jmp qword ptr [rcx]
0x00000000001a869f : add al, bl ; mov al, 1 ; add byte ptr [rbp + rbp*8 - 0xa], bl ; call rdi
0x000000000009d3db : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000197a77 : add al, bl ; out dx, al ; jmp rbx
0x00000000001a2b9f : add al, bl ; push rbp ; add dword ptr [rax], eax ; in al, dx ; cmc ; jmp qword ptr [rcx]
0x000000000019a19f : add al, bl ; retf
0x00000000000f18ef : add al, bl ; retf 0xeb83
0x00000000001acaf7 : add al, bl ; retf 0xfff7
0x00000000001a719f : add al, bl ; wait ; add dword ptr [rax], eax ; cld ; mov dh, dh ; jmp qword ptr [rdx]
0x000000000019079f : add al, bl ; xor dword ptr [rax], eax ; add byte ptr [rax + rdx*4 - 0x16], ch ; jmp qword ptr [rdx]
0x00000000000798f6 : add al, bpl ; ret
0x0000000000062e69 : add al, byte ptr [r8] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000153df2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018cb85 : add al, byte ptr [r8] ; lodsb al, byte ptr [rsi] ; loopne 0x18cb8a ; jmp rsp
0x000000000018cb7d : add al, byte ptr [r8] ; pushfq ; loopne 0x18cb82 ; call rax
0x000000000006f790 : add al, byte ptr [rax + rax*8 - 0x7cb7b78c] ; ret 0x3c01
0x000000000009c281 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000029c25 : add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000027337 : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000002ec37 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000062e6a : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000091832 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000012c48e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000001625a9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000081ec9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e37ec : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000f241c : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x000000000015c3f4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000004a466 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008abfc : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014a95d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d581 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a981 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002e722 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000038b34 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe875
0x000000000003c97b : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000012a638 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000011e79f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000120c7f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001203cf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000010b770 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0xe7a76
0x00000000001231f3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000000df09f : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000f1cf9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000118af4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000035ddf : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000c57da : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000077f07 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, r13d ; syscall
0x00000000000efe1e : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, eax ; call 0xec8a8
0x0000000000122a37 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000124bec : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000f824d : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000036d65 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4119 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000047c36 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c04aa : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bf81d : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x000000000008c245 : add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; ret 0x14d
0x000000000008c119 : add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; retf
0x00000000000914a8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000036cfb : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015e134 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d1239 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000160f62 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0x7407
0x00000000000d653c : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; retf 0x840f
0x00000000001af3dd : add al, byte ptr [rax] ; add byte ptr [rdi + 7], bl ; add byte ptr [rax], al ; retf 1
0x00000000000e08a4 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x0000000000050d33 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x00000000001ad9fe : add al, byte ptr [rax] ; and byte ptr [rbx - 5], dl ; call qword ptr [rdx]
0x000000000018c27e : add al, byte ptr [rax] ; cld ; idiv al ; call qword ptr [rax]
0x000000000018c796 : add al, byte ptr [rax] ; cld ; mov ecx, edi ; jmp rsp
0x000000000018c826 : add al, byte ptr [rax] ; cld ; xchg eax, esi ; stc ; call rax
0x000000000018cf56 : add al, byte ptr [rax] ; cmp al, 0x4f ; cli ; call rax
0x000000000018c92e : add al, byte ptr [rax] ; cmp al, 0xb5 ; stc ; jmp rsp
0x000000000018cc9e : add al, byte ptr [rax] ; cmp al, 0xe9 ; stc ; call qword ptr [rax]
0x000000000018c1ee : add al, byte ptr [rax] ; fcomp st(0), st(4) ; clc ; call rsp
0x000000000018c2a6 : add al, byte ptr [rax] ; fdiv st(7), st(0) ; clc ; call rax
0x000000000018c246 : add al, byte ptr [rax] ; fdivr st(0), st(0) ; clc ; call rsp
0x000000000018cdc6 : add al, byte ptr [rax] ; fsubr qword ptr [rcx] ; cli ; jmp rsp
0x000000000018c2de : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; add edi, ecx ; call rax
0x000000000018cc46 : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; out 0xf9, al ; call rsp
0x000000000018c356 : add al, byte ptr [rax] ; jl 0x18c368 ; stc ; call rsp
0x000000000018c456 : add al, byte ptr [rax] ; jl 0x18c487 ; stc ; call rax
0x000000000018c596 : add al, byte ptr [rax] ; jl 0x18c5e8 ; stc ; jmp rax
0x000000000018c8d6 : add al, byte ptr [rax] ; jl 0x18c88e ; stc ; jmp rax
0x000000000018cf5e : add al, byte ptr [rax] ; jl 0x18cfb6 ; cli ; jmp rsp
0x0000000000156b88 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x000000000018c836 : add al, byte ptr [rax] ; lodsb al, byte ptr [rsi] ; cwde ; stc ; call qword ptr [rax]
0x000000000018cb86 : add al, byte ptr [rax] ; lodsb al, byte ptr [rsi] ; loopne 0x18cb89 ; jmp rsp
0x0000000000000951 : add al, byte ptr [rax] ; mov dword ptr [rax], edx ; and cl, byte ptr [rdx] ; ret 0x68a2
0x000000000018c04e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rsp
0x00000000001631c2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000160bea : add al, byte ptr [rax] ; movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x00000000001594bb : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018c4fe : add al, byte ptr [rax] ; or al, 0x35 ; stc ; jmp rax
0x000000000018cf1e : add al, byte ptr [rax] ; or al, 0x49 ; cli ; call rax
0x000000000018c776 : add al, byte ptr [rax] ; or al, 0x84 ; stc ; call rax
0x000000000018cc8e : add al, byte ptr [rax] ; or al, 0xe9 ; stc ; jmp rsp
0x0000000000109ae9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001104fb : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000018c54e : add al, byte ptr [rax] ; pop rsp ; cmp bh, cl ; call rax
0x000000000018c82e : add al, byte ptr [rax] ; pop rsp ; cwde ; stc ; jmp rsp
0x000000000018c22e : add al, byte ptr [rax] ; pop rsp ; in eax, dx ; clc ; call qword ptr [rax]
0x000000000018c60e : add al, byte ptr [rax] ; pop rsp ; pop rcx ; stc ; jmp qword ptr [rax]
0x000000000018ca6e : add al, byte ptr [rax] ; pushfq ; iretd ; stc ; jmp qword ptr [rax]
0x000000000018cb7e : add al, byte ptr [rax] ; pushfq ; loopne 0x18cb81 ; call rax
0x000000000018ca1e : add al, byte ptr [rax] ; pushfq ; ret 0xfff9
0x00000000001ad7de : add al, byte ptr [rax] ; rcl byte ptr [rbx], 1 ; sti ; call rax
0x000000000011260a : add al, byte ptr [rax] ; ret
0x000000000018cf26 : add al, byte ptr [rax] ; sbb al, 0x49 ; cli ; jmp rsp
0x000000000018c6d6 : add al, byte ptr [rax] ; sbb al, 0x74 ; stc ; jmp rax
0x000000000018c15e : add al, byte ptr [rax] ; sbb al, 0xcf ; clc ; jmp rax
0x000000000018cf8e : add al, byte ptr [rax] ; sub al, 0x51 ; cli ; jmp qword ptr [rax]
0x000000000018c8be : add al, byte ptr [rax] ; sub al, 0xac ; stc ; jmp qword ptr [rax]
0x000000000018c94e : add al, byte ptr [rax] ; sub al, 0xb8 ; stc ; jmp rax
0x000000000018c9c6 : add al, byte ptr [rax] ; sub al, 0xbf ; stc ; call qword ptr [rax]
0x000000000018d5a6 : add al, byte ptr [rax] ; sub al, 0xc8 ; std ; call rsp
0x000000000018cce6 : add al, byte ptr [rax] ; sub al, 0xf1 ; stc ; jmp rax
0x00000000001550f8 : add al, byte ptr [rax] ; vzeroupper ; ret
0x00000000000c70db : add al, byte ptr [rbp + 0x31] ; in al, 9 ; ret 0xd889
0x00000000000c70d8 : add al, byte ptr [rbx + 0x314502e2] ; in al, 9 ; ret 0xd889
0x00000000000c8543 : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x0000000000192ace : add al, byte ptr [rbx] ; retf 0xa01
0x0000000000067940 : add al, byte ptr [rcx + 0x29] ; ret
0x000000000007e58e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000000d194a : add al, byte ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000019d881 : add al, byte ptr [rcx] ; add ah, cl ; adc esi, ebx ; jmp rdx
0x00000000000e76e1 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001ad7dd : add al, byte ptr [rdx] ; add al, dl ; adc edi, ebx ; call rax
0x00000000001b07e0 : add al, byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000019b2c1 : add al, byte ptr [rdx] ; or byte ptr [rsi], 8 ; ret
0x000000000009d1da : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000008c118 : add al, byte ptr cs:[rax] ; add byte ptr [rbp + 1], al ; retf
0x000000000018c9c5 : add al, byte ptr ds:[rax] ; sub al, 0xbf ; stc ; call qword ptr [rax]
0x00000000001af3db : add al, ch ; add al, byte ptr [rax] ; add byte ptr [rdi + 7], bl ; add byte ptr [rax], al ; retf 1
0x00000000001a2447 : add al, ch ; add dh, ch ; call qword ptr [rdx]
0x000000000018dbaf : add al, ch ; add eax, 0x610c0000 ; jmp 0x19a6c3
0x000000000018f8af : add al, ch ; and al, byte ptr [rax] ; add byte ptr [rax - 0x16], bl ; call qword ptr [rax]
0x0000000000038867 : add al, ch ; and dword ptr [rcx - 1], 0xffffffff ; xor eax, eax ; ret
0x0000000000021fa5 : add al, ch ; and eax, 0x39000ca6 ; ret
0x000000000011d13b : add al, ch ; call qword ptr [rbx]
0x000000000010a57e : add al, ch ; cld ; retf
0x0000000000051145 : add al, ch ; cmc ; retf
0x00000000000fc027 : add al, ch ; cmp edx, dword ptr [rsi - 0xe] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001a3567 : add al, ch ; cmp esi, ebp ; jmp qword ptr [rcx]
0x0000000000082f73 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000e53cb : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff3
0x00000000000b53cb : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff6
0x00000000000c199b : add al, ch ; lahf ; retf
0x00000000001904e7 : add al, ch ; mov dl, ch ; call qword ptr [rcx]
0x00000000001990af : add al, ch ; mov edx, 0x960c0000 ; sti ; call qword ptr [rax]
0x0000000000042746 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffe
0x00000000000d092b : add al, ch ; or al, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a2faf : add al, ch ; pop rcx ; add dword ptr [rax], eax ; cmp al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x0000000000029c27 : add al, ch ; ret
0x000000000006fd34 : add al, ch ; ret 0
0x0000000000066a38 : add al, ch ; ret 0x115
0x000000000011bf98 : add al, ch ; ret 0x93
0x00000000000b10f8 : add al, ch ; ret 0xaf9
0x000000000002c188 : add al, ch ; ret 0xb9
0x000000000010adc8 : add al, ch ; ret 0xf166
0x0000000000113c98 : add al, ch ; ret 0xf1b7
0x00000000000b1828 : add al, ch ; ret 0xf7d1
0x00000000000a8c28 : add al, ch ; ret 0xf85d
0x0000000000077df8 : add al, ch ; ret 0xfa95
0x0000000000063228 : add al, ch ; ret 0xfcb7
0x00000000000f8158 : add al, ch ; ret 0xff45
0x00000000000daa18 : add al, ch ; ret 0xff6c
0x00000000001a7bb7 : add al, ch ; ret 0xfff6
0x000000000010b806 : add al, ch ; ret 0xfffd
0x0000000000042784 : add al, ch ; ret 0xfffe
0x0000000000042e5f : add al, ch ; retf
0x00000000000356f0 : add al, ch ; retf 0x12b3
0x0000000000068c30 : add al, ch ; retf 0x9d
0x00000000000b1920 : add al, ch ; retf 0xf7d0
0x000000000006cec0 : add al, ch ; retf 0xfb45
0x000000000010aea0 : add al, ch ; retf 0xfdcb
0x0000000000042920 : add al, ch ; retf 0xfec0
0x00000000000c7120 : add al, ch ; retf 0xff95
0x0000000000022930 : add al, ch ; retf 0xffeb
0x00000000000a8a69 : add al, ch ; sbb dword ptr [rdi - 8], 0xd8d48ff ; retf 0xdca
0x00000000000c3547 : add al, ch ; sbb esp, ecx ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000225f1 : add al, ch ; stc ; ret
0x00000000000fa467 : add al, ch ; sti ; jno 0xfa466 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000007b8eb : add al, ch ; sub al, 0 ; add cl, ch ; ret
0x00000000000e51e7 : add al, ch ; xchg eax, ebx ; ret
0x000000000019ee17 : add al, cl ; call qword ptr [rdx]
0x00000000001a8e07 : add al, cl ; div esi ; call rsi
0x000000000019b68f : add al, cl ; loopne 0x19b69b ; add byte ptr [rbp + rbx - 7], bh ; jmp qword ptr [rbx]
0x00000000001a408f : add al, cl ; push 1 ; add byte ptr [rdx - 0xb], ch ; call rcx
0x00000000001aa18f : add al, cl ; retf
0x000000000019a08f : add al, cl ; retf 0
0x000000000019968f : add al, cl ; rol byte ptr [rax], 0 ; in al, dx ; jg 0x19968f ; call qword ptr [rdx]
0x00000000001a068f : add al, cl ; xor byte ptr [rcx], al ; add byte ptr [rdi + rbx*4], bh ; hlt ; call rcx
0x00000000001a3ab7 : add al, dh ; add dword ptr fs:[rax], eax ; test byte ptr [rbx - 0xb], cl ; call qword ptr [rdx]
0x000000000019f8b7 : add al, dh ; and al, byte ptr [rcx] ; add byte ptr [rbx + rbp*2], al ; hlt ; call qword ptr [rbx]
0x00000000001ab0cf : add al, dh ; ja 0x1ab0ce ; call qword ptr [rcx]
0x000000000019655f : add al, dh ; jle 0x196555 ; jmp qword ptr [rbx]
0x00000000001893f9 : add al, dh ; jmp rax
0x000000000019606f : add al, dh ; jne 0x196065 ; jmp qword ptr [rdx]
0x00000000001963b7 : add al, dh ; lea eax, [rax] ; add ah, al ; jge 0x1963b5 ; jmp qword ptr [rbx]
0x000000000019059f : add al, dh ; mov edx, ebp ; jmp qword ptr [rsi]
0x00000000001a31b7 : add al, dh ; pop rbx ; add dword ptr [rax], eax ; adc al, 0x37 ; cmc ; jmp qword ptr [rcx]
0x00000000001998b7 : add al, dh ; ret 0
0x00000000000119a7 : add al, dh ; ret 0x10
0x0000000000004d2f : add al, dh ; retf
0x000000000019a0b7 : add al, dh ; retf 0
0x000000000000aa17 : add al, dh ; retf 7
0x00000000001acc8f : add al, dh ; sal bh, cl ; jmp rsi
0x000000000000640f : add al, dh ; test eax, 0xf ; add byte ptr [rax], al ; retf 0
0x0000000000196cb7 : add al, dh ; xchg eax, esi ; add byte ptr [rax], al ; in al, 0x9c ; out dx, al ; call qword ptr [rax]
0x00000000001ad7df : add al, dl ; adc edi, ebx ; call rax
0x000000000018d797 : add al, dl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*2 - 0x17], al ; call qword ptr [rcx]
0x000000000019edcf : add al, dl ; call qword ptr [rdi]
0x00000000001a2b8f : add al, dl ; cmc ; jmp qword ptr [rcx]
0x00000000000111c7 : add al, dl ; cmp ecx, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000198f97 : add al, dl ; mov ecx, 0x95140000 ; out dx, eax ; call qword ptr [rax]
0x0000000000196597 : add al, dl ; pop qword ptr [rax] ; add byte ptr [rdi + rdi*2 - 0x12], al ; jmp qword ptr [rbx]
0x00000000001a2997 : add al, dl ; push rbx ; add dword ptr [rax], eax ; add al, 0xf ; cmc ; jmp qword ptr [rcx]
0x0000000000005c77 : add al, dl ; ret
0x00000000001a2f4f : add al, dl ; xor esi, ebp ; jmp qword ptr [rcx]
0x0000000000022c7f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ee420 : add bh, al ; and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000016d24b : add bh, al ; sldt word ptr [rax] ; retf 0xf
0x0000000000061deb : add bh, al ; test esp, edi ; idiv bh ; call qword ptr [rax]
0x0000000000163a5f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011bc04 : add bh, bh ; dec dword ptr [rax + 9] ; retf 0xc149
0x000000000011dc1c : add bh, bh ; loope 0x11dbb5 ; ret
0x000000000006528c : add bh, bh ; loopne 0x652da ; mov ebx, 1 ; jmp rax
0x000000000006b21e : add bh, bh ; loopne 0x6b1e3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000006b216 : add bh, bh ; loopne 0x6b264 ; mov ecx, 1 ; jmp rax
0x00000000000b1c0c : add bh, bh ; ret
0x0000000000047a19 : add bh, byte ptr [rax + 1] ; ret
0x0000000000047c34 : add bh, byte ptr [rax + 2] ; ret
0x000000000003615b : add bh, byte ptr [rax - 1] ; ret
0x000000000015e502 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000015f09f : add bh, dh ; fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x0000000000161abe : add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x00000000000d1848 : add bh, dh ; ret
0x0000000000027345 : add bh, dh ; ret 0
0x00000000000e708f : add bh, dh ; ret 0xe6ff
0x0000000000027339 : add bh, dh ; ret 0xf800
0x000000000003a65f : add bh, dh ; ret 0xffef
0x0000000000035207 : add bh, dh ; ret 0xffff
0x00000000001867bc : add bh, dl ; cli ; jmp rax
0x000000000018b514 : add bl, al ; add dword ptr [rax], eax ; mov esp, 0x14fff703 ; ret
0x00000000000c6f8c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000c6fde : add bl, al ; mov rsi, rsp ; call qword ptr [rdx]
0x000000000003685c : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000cedf1 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000c62da : add bl, al ; nop dword ptr [rax] ; ret
0x000000000012c4aa : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000086b54 : add bl, al ; ret
0x000000000012053e : add bl, al ; xor eax, eax ; ret
0x000000000017b197 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001868bd : add bl, bh ; jmp rax
0x0000000000034bef : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000c9442 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000018f385 : add bl, byte ptr [rax + 0xa] ; ret
0x000000000010311a : add bl, byte ptr [rax + 0xf480005] ; ret 0x66c3
0x000000000019e846 : add bl, byte ptr [rbx + 0x48180e0a] ; ret
0x00000000000c9443 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000187038 : add bl, byte ptr [rdx - 5] ; call qword ptr [rdx + 0x22fffb59]
0x00000000001941be : add bl, byte ptr [rsi + rcx + 8] ; ret
0x00000000001277be : add bl, ch ; fidivr dword ptr [rax - 1] ; ret
0x00000000000d5917 : add bl, ch ; fisttp word ptr [rcx - 0x7d] ; ret
0x00000000000b6316 : add bl, ch ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e341d : add bl, ch ; ret
0x00000000000382f7 : add bl, ch ; retf
0x000000000012b52d : add bl, ch ; retf 0xc031
0x00000000001121e9 : add bl, ch ; xchg eax, ebp ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000353a7 : add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000009d78f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009d79f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000001631c3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000021c2f : add bl, dh ; ret
0x00000000001867d4 : add bl, dl ; cli ; jmp rax
0x000000000003348e : add bl, sil ; ret
0x000000000019fb03 : add byte ptr [0x72d80001], bh ; hlt ; call qword ptr [rcx]
0x000000000005237c : add byte ptr [r11 - 0x79f0f408], r8b ; retf 0xfffe
0x00000000000ec667 : add byte ptr [r13 + rdx - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000c640c : add byte ptr [r13 - 0x36], sil ; jmp 0xc63be
0x00000000000c640b : add byte ptr [r13 - 0x36], sil ; jmp 0xc63bf
0x000000000010f74c : add byte ptr [r8 + 1], r9b ; ret
0x00000000000884a6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000100af7 : add byte ptr [r8 - 0x77], r9b ; ret 0xe883
0x0000000000086f21 : add byte ptr [r8 - 0x77], r9b ; retf 0xd5e8
0x00000000000c4685 : add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000191efd : add byte ptr [r8], al ; adc dl, al ; jmp 0x191f07
0x0000000000024b2d : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000e76df : add byte ptr [rax + 0x102], bh ; syscall
0x00000000000e94cf : add byte ptr [rax + 0x107], bh ; syscall
0x0000000000051cf7 : add byte ptr [rax + 0x10], bh ; ret
0x00000000000eca85 : add byte ptr [rax + 0x10], bh ; syscall
0x00000000000e940f : add byte ptr [rax + 0x10a], bh ; syscall
0x00000000000f67df : add byte ptr [rax + 0x110], bh ; syscall
0x00000000000f5c84 : add byte ptr [rax + 0x119], bh ; syscall
0x0000000000160435 : add byte ptr [rax + 0x11], cl ; retf
0x00000000000f683f : add byte ptr [rax + 0x11b], bh ; syscall
0x00000000000f5d6f : add byte ptr [rax + 0x122], bh ; syscall
0x00000000000f5d6e : add byte ptr [rax + 0x122], dil ; syscall
0x00000000000f64af : add byte ptr [rax + 0x123], bh ; syscall
0x00000000000e824f : add byte ptr [rax + 0x124], bh ; syscall
0x00000000000e82af : add byte ptr [rax + 0x125], bh ; syscall
0x00000000000f65cf : add byte ptr [rax + 0x126], bh ; syscall
0x00000000000f68cf : add byte ptr [rax + 0x12c], bh ; syscall
0x00000000000f63ef : add byte ptr [rax + 0x131], bh ; syscall
0x00000000000ede9f : add byte ptr [rax + 0x132], bh ; syscall
0x00000000000c5166 : add byte ptr [rax + 0x142], bh ; syscall
0x00000000000f69ef : add byte ptr [rax + 0x14a], bh ; syscall
0x00000000000f6a1f : add byte ptr [rax + 0x14b], bh ; syscall
0x00000000000e7b3f : add byte ptr [rax + 0x15], bh ; syscall
0x00000000000e7b3e : add byte ptr [rax + 0x15], dil ; syscall
0x000000000007ec8f : add byte ptr [rax + 0x16], bh ; ret
0x00000000000e827f : add byte ptr [rax + 0x16], bh ; syscall
0x000000000018ed27 : add byte ptr [rax + 0x17], ah ; add byte ptr [rax], al ; push rsp ; add dl, ch ; call qword ptr [rbx]
0x000000000019ed27 : add byte ptr [rax + 0x17], ah ; add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x000000000007ebef : add byte ptr [rax + 0x18], bh ; syscall
0x00000000000f0ccf : add byte ptr [rax + 0x1b], bh ; syscall
0x000000000019f207 : add byte ptr [rax + 0x1c], al ; add dword ptr [rax], eax ; adc al, 0x30 ; hlt ; jmp qword ptr [rax]
0x00000000000f792f : add byte ptr [rax + 0x1e], bh ; syscall
0x00000000000f79bf : add byte ptr [rax + 0x1f], bh ; syscall
0x000000000003513b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000e81ef : add byte ptr [rax + 0x20], bh ; syscall
0x00000000000e821f : add byte ptr [rax + 0x21], bh ; syscall
0x000000000015f1a6 : add byte ptr [rax + 0x21], cl ; ret 0x50e9
0x0000000000161c4e : add byte ptr [rax + 0x21], cl ; ret 0x8944
0x0000000000162653 : add byte ptr [rax + 0x21], cl ; ret 0xe583
0x0000000000161bb8 : add byte ptr [rax + 0x21], cl ; ret 0xffb8
0x000000000015fbfc : add byte ptr [rax + 0x21], cl ; retf 0x8341
0x000000000004ac52 : add byte ptr [rax + 0x21], cl ; retf 0xc148
0x0000000000161067 : add byte ptr [rax + 0x21], cl ; ror dword ptr [rcx + 0x39], 1 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x000000000019f90f : add byte ptr [rax + 0x23], cl ; add dword ptr [rax], eax ; pop rsp ; cmc ; clc ; call qword ptr [rax]
0x00000000001a7147 : add byte ptr [rax + 0x2400019b], al ; mov esi, esi ; call rsi
0x000000000019fc27 : add byte ptr [rax + 0x26], ah ; add dword ptr [rax], eax ; adc al, 0x73 ; hlt ; jmp qword ptr [rsi]
0x00000000000b6f0f : add byte ptr [rax + 0x26], bh ; syscall
0x000000000019fd3f : add byte ptr [rax + 0x27], bh ; add dword ptr [rax], eax ; pushfq ; ja 0x19fd43 ; jmp qword ptr [rcx]
0x00000000000c5a4f : add byte ptr [rax + 0x27], bh ; syscall
0x00000000000f717f : add byte ptr [rax + 0x29], bh ; syscall
0x00000000000666d3 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000cc9ff : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b8285 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000cc8b7 : add byte ptr [rax + 0x29], cl ; ret 0x2a8b
0x0000000000026a94 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000004de2e : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000008cdc3 : add byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000025516 : add byte ptr [rax + 0x29], cl ; retf
0x000000000004d0d1 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x00000000000b9cbf : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000000d752d : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd74cd
0x000000000019ed4f : add byte ptr [rax + 0x2c000117], cl ; jmp qword ptr [rcx]
0x00000000001a446f : add byte ptr [rax + 0x2c00016e], ch ; jl 0x1a4474 ; call rbx
0x00000000001a2c47 : add byte ptr [rax + 0x2f], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a0637 : add byte ptr [rax + 0x30], dh ; add dword ptr [rax], eax ; xor al, 0x9e ; hlt ; jmp rsi
0x00000000001785c3 : add byte ptr [rax + 0x30fffff6], cl ; idiv bh ; call rax
0x0000000000194e6f : add byte ptr [rax + 0x32], dl ; out dx, al ; jmp rdi
0x00000000000f6c4f : add byte ptr [rax + 0x33], bh ; syscall
0x000000000019f947 : add byte ptr [rax + 0x34000123], al ; cmc ; clc ; call qword ptr [rax]
0x00000000001a5867 : add byte ptr [rax + 0x34000182], ah ; cmc ; call qword ptr [rbx]
0x00000000001a2fc7 : add byte ptr [rax + 0x34], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a308f : add byte ptr [rax + 0x35], dh ; cmc ; jmp qword ptr [rcx]
0x000000000002533b : add byte ptr [rax + 0x39], cl ; ret
0x0000000000079a1f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000007e787 : add byte ptr [rax + 0x39], cl ; ret 0x8b75
0x00000000000a4a7c : add byte ptr [rax + 0x39], cl ; ret 0xd67d
0x00000000000c6290 : add byte ptr [rax + 0x39], cl ; retf 0x1674
0x0000000000103daf : add byte ptr [rax + 0x39], cl ; retf 0x2777
0x0000000000132406 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000138cff : add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000c62a1 : add byte ptr [rax + 0x39], cl ; retf 0x3974
0x000000000008325e : add byte ptr [rax + 0x39], cl ; retf 0x4c72
0x0000000000104a9f : add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000001374b3 : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000113524 : add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000015c188 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000103e2f : add byte ptr [rax + 0x39], cl ; retf 0x877
0x0000000000131f26 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000015ca13 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000157b80 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000001a335f : add byte ptr [rax + 0x39], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000c50ef : add byte ptr [rax + 0x3b], bh ; syscall
0x00000000001a364b : add byte ptr [rax + 0x3d700001], al ; cmc ; jmp qword ptr [rbx]
0x00000000001a364f : add byte ptr [rax + 0x3d], dh ; cmc ; jmp qword ptr [rbx]
0x00000000000360ff : add byte ptr [rax + 0x3e], bh ; syscall
0x00000000000c4b2f : add byte ptr [rax + 0x3f], bh ; syscall
0x00000000000c4b2e : add byte ptr [rax + 0x3f], dil ; syscall
0x0000000000190147 : add byte ptr [rax + 0x400002b], al ; jp 0x190141 ; call rsp
0x00000000001a3577 : add byte ptr [rax + 0x400015f], dh ; cmp al, 0xf5 ; jmp qword ptr [rcx]
0x00000000000f785f : add byte ptr [rax + 0x40], bh ; syscall
0x00000000000073b7 : add byte ptr [rax + 0x43], al ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000f795f : add byte ptr [rax + 0x43], bh ; syscall
0x00000000000f795e : add byte ptr [rax + 0x43], dil ; syscall
0x0000000000185c4d : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x0000000000196457 : add byte ptr [rax + 0x4400008e], dl ; jle 0x196455 ; jmp qword ptr [rbx]
0x00000000001a5a57 : add byte ptr [rax + 0x44000184], dl ; cmc ; cmc ; call qword ptr [rdi]
0x000000000002d9fd : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000000f77ef : add byte ptr [rax + 0x44], bh ; syscall
0x00000000000f781f : add byte ptr [rax + 0x47], bh ; syscall
0x00000000000ec569 : add byte ptr [rax + 0x48], bh ; syscall
0x0000000000034e30 : add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x00000000001a1f27 : add byte ptr [rax + 0x49], ah ; add dword ptr [rax], eax ; xor al, 0xee ; hlt ; jmp qword ptr [rcx]
0x00000000000e7eff : add byte ptr [rax + 0x49], bh ; syscall
0x000000000000d117 : add byte ptr [rax + 0x4b], ah ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019647f : add byte ptr [rax + 0x4c00008e], bh ; jle 0x19647d ; jmp qword ptr [rbx]
0x00000000000ef3af : add byte ptr [rax + 0x4d], bh ; syscall
0x00000000001a242f : add byte ptr [rax + 0x4e], ch ; add dword ptr [rax], eax ; fadd qword ptr [rdx] ; cmc ; call qword ptr [rdx]
0x00000000001a2617 : add byte ptr [rax + 0x50], dl ; add dword ptr [rax], eax ; hlt ; add al, 0xf5 ; call qword ptr [rdi]
0x00000000000e839f : add byte ptr [rax + 0x51], bh ; syscall
0x000000000019e107 : add byte ptr [rax + 0x51], bl ; jmp rdx
0x0000000000051b7f : add byte ptr [rax + 0x52], bh ; syscall
0x00000000000e94ff : add byte ptr [rax + 0x54], bh ; syscall
0x0000000000198a97 : add byte ptr [rax + 0x56], bh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000e937f : add byte ptr [rax + 0x56], bh ; syscall
0x00000000001a2d07 : add byte ptr [rax + 0x57], al ; add dword ptr [rax], eax ; xor ch, dh ; jmp qword ptr [rcx]
0x00000000000e943f : add byte ptr [rax + 0x59], bh ; syscall
0x00000000001a2f37 : add byte ptr [rax + 0x59], dh ; add dword ptr [rax], eax ; mov ah, 0x33 ; cmc ; jmp qword ptr [rcx]
0x00000000001a3027 : add byte ptr [rax + 0x5a], ah ; add dword ptr [rax], eax ; in al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x00000000000e75bf : add byte ptr [rax + 0x5a], bh ; syscall
0x00000000001a313f : add byte ptr [rax + 0x5b], bh ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000000e75ef : add byte ptr [rax + 0x5b], bh ; syscall
0x0000000000021700 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000019323f : add byte ptr [rax + 0x5c], bh ; add byte ptr [rax], al ; ret 0xffed
0x00000000000e8bff : add byte ptr [rax + 0x5d], bh ; syscall
0x00000000001a331f : add byte ptr [rax + 0x5d], bl ; add dword ptr [rax], eax ; cld ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000000e8c2f : add byte ptr [rax + 0x5e], bh ; syscall
0x00000000000e75af : add byte ptr [rax + 0x5f], bh ; syscall
0x00000000000eccbf : add byte ptr [rax + 0x62], bh ; syscall
0x00000000000eccbe : add byte ptr [rax + 0x62], dil ; syscall
0x000000000008e350 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x000000000003366a : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000052132 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000002f5a0 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000005a21c : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000005a34e : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000c68a2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000a1866 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000002c968 : add byte ptr [rax + 0x63], cl ; ret
0x00000000001012f0 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000003b2e1 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000003b3b6 : add byte ptr [rax + 0x63], cl ; ret 0xc749
0x00000000000deadc : add byte ptr [rax + 0x63], cl ; ret 0xd289
0x0000000000163449 : add byte ptr [rax + 0x63], cl ; retf
0x00000000000fda44 : add byte ptr [rax + 0x63], cl ; retf 0x4864
0x00000000000db82f : add byte ptr [rax + 0x63], cl ; retf 0x5489
0x00000000000abb3f : add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000ac23e : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000007316f : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000006ccdb : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000610d5 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000194057 : add byte ptr [rax + 0x6400006a], dl ; imul ebp ; call qword ptr [rsi]
0x0000000000197977 : add byte ptr [rax + 0x640000a3], dh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a5b77 : add byte ptr [rax + 0x64000185], dh ; div ebp ; call qword ptr [rcx]
0x00000000000c4b5f : add byte ptr [rax + 0x64], bh ; syscall
0x00000000000c5a6f : add byte ptr [rax + 0x66], bh ; syscall
0x00000000000f662f : add byte ptr [rax + 0x67], bh ; syscall
0x00000000000c5a8f : add byte ptr [rax + 0x68], bh ; syscall
0x00000000000c5a7f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000019982f : add byte ptr [rax + 0x6c000000], al ; ret 0
0x000000000018ed4f : add byte ptr [rax + 0x6c000017], cl ; add dl, ch ; call qword ptr [rbx]
0x00000000001a155f : add byte ptr [rax + 0x6c00013f], bl ; retf
0x00000000001a1f4f : add byte ptr [rax + 0x6c000149], cl ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000000c5a9f : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000196447 : add byte ptr [rax + 0x6d], bh ; stc ; jmp qword ptr [rbx]
0x00000000000c5c7f : add byte ptr [rax + 0x6d], bh ; syscall
0x000000000019641f : add byte ptr [rax + 0x6d], dh ; stc ; jmp qword ptr [rbx]
0x00000000000c5a5f : add byte ptr [rax + 0x6e], bh ; syscall
0x0000000000006b5f : add byte ptr [rax + 0x6f], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c5caf : add byte ptr [rax + 0x6f], bh ; syscall
0x00000000000c5d0f : add byte ptr [rax + 0x70], bh ; syscall
0x000000000019fa77 : add byte ptr [rax + 0x72], bl ; hlt ; call qword ptr [rdx]
0x000000000010357e : add byte ptr [rax + 0x72f13948], dl ; sbb ecx, dword ptr [rbp - 0x77] ; ret 0x3145
0x00000000000c5aaf : add byte ptr [rax + 0x73], bh ; syscall
0x000000000009c27f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001ac87f : add byte ptr [rax + 0x75], dl ; sti ; jmp qword ptr [rdx]
0x00000000000c5d3f : add byte ptr [rax + 0x76], bh ; syscall
0x00000000001961c7 : add byte ptr [rax + 0x77], ch ; out dx, al ; call qword ptr [rdi]
0x00000000001565ef : add byte ptr [rax + 0x77f8c517], cl ; ret
0x00000000000c5d6f : add byte ptr [rax + 0x78], bh ; syscall
0x000000000009dcdf : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c5c4f : add byte ptr [rax + 0x79], bh ; syscall
0x00000000001a4f1f : add byte ptr [rax + 0x79], bl ; add dword ptr [rax], eax ; ret
0x00000000000f5c0f : add byte ptr [rax + 0x7a], bh ; syscall
0x0000000000196287 : add byte ptr [rax + 0x7a], ch ; out dx, al ; call qword ptr [rsi]
0x00000000000f5c0e : add byte ptr [rax + 0x7a], dil ; syscall
0x00000000000f5c3f : add byte ptr [rax + 0x7b], bh ; syscall
0x000000000019067f : add byte ptr [rax + 0x7c000030], bh ; mov edx, gs ; jmp rsp
0x000000000019b16f : add byte ptr [rax + 0x7c0000db], ch ; xchg eax, ebx ; int1 ; jmp qword ptr [rax]
0x000000000019ec5f : add byte ptr [rax + 0x7c000116], bl ; call qword ptr [rbx]
0x00000000000c5cdf : add byte ptr [rax + 0x7c], bh ; syscall
0x00000000001a532f : add byte ptr [rax + 0x7d], ch ; add dword ptr [rax], eax ; in al, dx ; jrcxz 0x1a5334 ; call qword ptr [rdi]
0x0000000000034cee : add byte ptr [rax + 0x7e0f4866], dl ; ret 0xb848
0x00000000000c61df : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000f63bf : add byte ptr [rax + 0x7e], bh ; syscall
0x00000000001965af : add byte ptr [rax + 0x7f], ah ; out dx, al ; jmp qword ptr [rbx]
0x0000000000036134 : add byte ptr [rax + 0x7f], bh ; syscall
0x00000000001a551f : add byte ptr [rax + 0x7f], bl ; add dword ptr [rax], eax ; jl 0x1a5517 ; cmc ; call qword ptr [rbx]
0x000000000011083f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x0000000000036180 : add byte ptr [rax + 0x82], bh ; syscall
0x000000000003650f : add byte ptr [rax + 0x83], bh ; syscall
0x00000000000e6f0f : add byte ptr [rax + 0x84], bh ; syscall
0x00000000000e6f0e : add byte ptr [rax + 0x84], dil ; syscall
0x00000000000f680f : add byte ptr [rax + 0x86], bh ; syscall
0x00000000000e74df : add byte ptr [rax + 0x8a], bh ; syscall
0x00000000000ecfcf : add byte ptr [rax + 0x8d], bh ; syscall
0x00000000000ecfce : add byte ptr [rax + 0x8d], dil ; syscall
0x00000000000ddf5f : add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000ddf8f : add byte ptr [rax + 0x8f], bh ; syscall
0x00000000000ddfbf : add byte ptr [rax + 0x90], bh ; syscall
0x00000000000ddfef : add byte ptr [rax + 0x91], bh ; syscall
0x00000000000de04f : add byte ptr [rax + 0x92], bh ; syscall
0x00000000000de07f : add byte ptr [rax + 0x93], bh ; syscall
0x0000000000161ba8 : add byte ptr [rax + 0x9480000], al ; ret 0xb848
0x00000000000de0af : add byte ptr [rax + 0x94], bh ; syscall
0x00000000000f0d5f : add byte ptr [rax + 0x96], bh ; syscall
0x00000000000f0d8f : add byte ptr [rax + 0x97], bh ; syscall
0x00000000000f0dbf : add byte ptr [rax + 0x98], bh ; syscall
0x00000000000f631f : add byte ptr [rax + 0x9a], bh ; syscall
0x00000000000f66ef : add byte ptr [rax + 0x9b], bh ; syscall
0x00000000000f62ef : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000000f62ee : add byte ptr [rax + 0x9e], dil ; syscall
0x00000000000edd3f : add byte ptr [rax + 0xa1], bh ; syscall
0x00000000000eddef : add byte ptr [rax + 0xa2], bh ; syscall
0x00000000000edd0f : add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000f5baf : add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000ee1cf : add byte ptr [rax + 0xa7], bh ; syscall
0x00000000000ee1ff : add byte ptr [rax + 0xa8], bh ; syscall
0x00000000000f0bcf : add byte ptr [rax + 0xa], bh ; syscall
0x0000000000194317 : add byte ptr [rax + 0xa], ch ; out dx, al ; jmp rcx
0x00000000000eda8f : add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000edb2f : add byte ptr [rax + 0xab], bh ; syscall
0x00000000000f5a8f : add byte ptr [rax + 0xac], bh ; syscall
0x00000000000f641f : add byte ptr [rax + 0xae], bh ; syscall
0x00000000000f644f : add byte ptr [rax + 0xb0], bh ; syscall
0x00000000000f6a4f : add byte ptr [rax + 0xba], bh ; syscall
0x00000000000f5bdf : add byte ptr [rax + 0xbb], bh ; syscall
0x000000000018ec5f : add byte ptr [rax + 0xc000016], bl ; add dl, ch ; call qword ptr [rsi]
0x000000000019656f : add byte ptr [rax + 0xc00008f], ch ; jg 0x19656d ; jmp qword ptr [rbx]
0x000000000019905f : add byte ptr [rax + 0xc0000ba], bl ; pop rbx ; cli ; call qword ptr [rax]
0x00000000001a327f : add byte ptr [rax + 0xc00015c], bh ; cmp ch, dh ; call qword ptr [rsi]
0x00000000000f39ef : add byte ptr [rax + 0xc6], bh ; syscall
0x00000000000f38cf : add byte ptr [rax + 0xc7], bh ; syscall
0x00000000000854c7 : add byte ptr [rax + 0xc], bh ; pop rbx ; ret
0x0000000000023ba4 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000000f647f : add byte ptr [rax + 0xd5], bh ; syscall
0x00000000000f634f : add byte ptr [rax + 0xe4], bh ; syscall
0x0000000000035de2 : add byte ptr [rax + 0xe], bh ; syscall
0x00000000000f6a5f : add byte ptr [rax + 0xea], bh ; syscall
0x000000000008855d : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x00000000000a1937 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000002eb84 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000007b3bf : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d18fb : add byte ptr [rax + 0xf], al ; test dword ptr [rip - 0xc000001], edi ; ret
0x00000000000971c5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000242b7 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000000ee278 : add byte ptr [rax + 0xf], cl ; ret
0x00000000000f763a : add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x0000000000087448 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000012bdf8 : add byte ptr [rax + 0xf], cl ; ret 0x8148
0x0000000000122a69 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000028aab : add byte ptr [rax + 0xf], cl ; ret 0x8545
0x00000000000266d0 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000082e1f : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000b599f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000088649 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000008a6d4 : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000000872ff : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000025c1f : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x0000000000087852 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000011257f : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000019a69f : add byte ptr [rax + 0xf], dl ; int1 ; call qword ptr [rax]
0x00000000000c624f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000c624e : add byte ptr [rax + 0xfc17], dil ; ret
0x00000000000f659f : add byte ptr [rax + 0xfd], bh ; syscall
0x00000000000f65ff : add byte ptr [rax + 0xff], bh ; syscall
0x00000000000c61ef : add byte ptr [rax + 0xfffa], bh ; ret
0x00000000001a15c8 : add byte ptr [rax + 1], al ; add byte ptr [rsp + rcx*8], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000e61e7 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000036857 : add byte ptr [rax + 1], bh ; ret
0x00000000000ec71f : add byte ptr [rax + 1], bh ; syscall
0x00000000000115d7 : add byte ptr [rax + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000091834 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000150aa9 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000006a134 : add byte ptr [rax + 1], cl ; enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000024b32 : add byte ptr [rax + 1], cl ; ret
0x0000000000046fbf : add byte ptr [rax + 1], cl ; ret 0x149
0x000000000012c490 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x0000000000150aa0 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x0000000000138dbd : add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000346ed : add byte ptr [rax + 1], cl ; retf 0xeeb
0x00000000000e61e6 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x0000000000077c5e : add byte ptr [rax + 1], dil ; ret
0x00000000000ec71e : add byte ptr [rax + 1], dil ; syscall
0x000000000018cf8c : add byte ptr [rax + 2], ah ; add byte ptr [rcx + rdx*2], ch ; cli ; jmp qword ptr [rax]
0x00000000001b050f : add byte ptr [rax + 2], al ; add byte ptr [rax], al ; ret 3
0x0000000000047cad : add byte ptr [rax + 2], bh ; ret
0x0000000000198057 : add byte ptr [rax + 4], bh ; out dx, eax ; call qword ptr [rax]
0x000000000014fcdf : add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000c66a6 : add byte ptr [rax + 7], bh ; ret
0x00000000001b04af : add byte ptr [rax + 7], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e7b0f : add byte ptr [rax + 8], bh ; syscall
0x000000000019df2f : add byte ptr [rax + 9], ch ; add dword ptr [rax], eax ; fdivr qword ptr [rcx] ; call rcx
0x00000000001617d6 : add byte ptr [rax + 9], cl ; fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000015ff07 : add byte ptr [rax + 9], cl ; ret
0x0000000000161bab : add byte ptr [rax + 9], cl ; ret 0xb848
0x000000000016c2c7 : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001893f7 : add byte ptr [rax + rax - 0x10], bl ; jmp rax
0x000000000018ed53 : add byte ptr [rax + rax - 0x16], ch ; call qword ptr [rbx]
0x000000000018ed2b : add byte ptr [rax + rax - 0x16], dl ; call qword ptr [rbx]
0x000000000019eeab : add byte ptr [rax + rax - 0xc], dh ; jmp rcx
0x000000000018d2e7 : add byte ptr [rax + rax - 3], bh ; call rax
0x00000000001ab533 : add byte ptr [rax + rax*4 - 9], cl ; jmp rsi
0x0000000000199013 : add byte ptr [rax + rax*4], bh ; sti ; call qword ptr [rax]
0x0000000000196613 : add byte ptr [rax + rax*4], ch ; out dx, al ; call qword ptr [rdx]
0x000000000019b73b : add byte ptr [rax + rax*8], dl ; int1 ; call qword ptr [rdx]
0x000000000009d35c : add byte ptr [rax + rax], 0 ; ret
0x00000000000eda7f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; jmp 0xeda57
0x000000000001924f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; ret 0x5f
0x00000000000511ee : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000085bf : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x35
0x00000000001aa15b : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cwde ; retf
0x00000000001998b3 : add byte ptr [rax + rax], cl ; add al, dh ; ret 0
0x000000000000d7c7 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43
0x00000000000858f3 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; jmp 0x858cb
0x00000000000822fb : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000084770 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000086c29 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003ad37 : add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x00000000001ae3bb : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; retf
0x000000000019a1af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf
0x000000000018c457 : add byte ptr [rax + rbp - 7], bh ; call rax
0x00000000000b3165 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x0000000000189f3f : add byte ptr [rax + rbp*4 - 0xd], bh ; call qword ptr [rax]
0x000000000018989f : add byte ptr [rax + rbp*4 - 0xf], ch ; jmp qword ptr [rax]
0x000000000018a637 : add byte ptr [rax + rbp*4], bh ; cmc ; jmp rsp
0x00000000001881a7 : add byte ptr [rax + rbp*8 - 0x15], bl ; jmp qword ptr [rax]
0x000000000019fde3 : add byte ptr [rax + rbp], bl ; add dword ptr [rax], eax ; or byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x000000000019ee13 : add byte ptr [rax + rbx + 1], cl ; add al, cl ; call qword ptr [rdx]
0x00000000001027fd : add byte ptr [rax + rbx - 0x37], dh ; ret
0x000000000019ce6b : add byte ptr [rax + rbx*4 - 0xe], ah ; jmp rcx
0x000000000018c82f : add byte ptr [rax + rbx*4 - 7], bl ; jmp rsp
0x000000000019ade3 : add byte ptr [rax + rbx*8], bl ; add byte ptr [rax], al ; js 0x19adca ; sti ; call qword ptr [rbx]
0x000000000019edcb : add byte ptr [rax + rbx], al ; add dword ptr [rax], eax ; sal bl, 1 ; call qword ptr [rdi]
0x00000000000019af : add byte ptr [rax + rcx + 0x8be0000], bh ; add byte ptr [rax], al ; ret 8
0x00000000001a1e73 : add byte ptr [rax + rcx*2 - 0x12d7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000043839 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xae8
0x00000000001634ed : add byte ptr [rax + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret
0x000000000003a1c0 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x23e8
0x0000000000047dba : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x29e8
0x0000000000039f83 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x60e8
0x0000000000039d57 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x8ce8
0x000000000018ba3f : add byte ptr [rax + rcx*8 - 9], ch ; jmp qword ptr [rax]
0x000000000018d5a7 : add byte ptr [rax + rcx*8], ch ; std ; call rsp
0x00000000001a32d3 : add byte ptr [rax + rdi - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000194e6b : add byte ptr [rax + rdi*2 + 0x32500000], ah ; out dx, al ; jmp rdi
0x0000000000187977 : add byte ptr [rax + rdi*2 - 0x16], bh ; jmp rsp
0x000000000018796f : add byte ptr [rax + rdi*2 - 0x16], bl ; call rax
0x000000000018d08f : add byte ptr [rax + rdi*2 - 6], ch ; call qword ptr [rax]
0x00000000001ac52b : add byte ptr [rax + rdi*2], dl ; sti ; jmp qword ptr [rdx]
0x000000000019b66b : add byte ptr [rax + rdi*4 - 0xf], dh ; jmp qword ptr [rcx]
0x000000000018c94f : add byte ptr [rax + rdi*4], ch ; stc ; jmp rax
0x00000000001a3283 : add byte ptr [rax + rdi], cl ; cmc ; call qword ptr [rsi]
0x000000000019075b : add byte ptr [rax + rdx*4 - 0x16], al ; jmp qword ptr [rax]
0x00000000001907a3 : add byte ptr [rax + rdx*4 - 0x16], ch ; jmp qword ptr [rdx]
0x0000000000190773 : add byte ptr [rax + rdx*4 - 0x16], cl ; jmp qword ptr [rdx]
0x000000000019cd2b : add byte ptr [rax + rdx*4 - 0xe], al ; jmp qword ptr [rcx]
0x00000000001a04c3 : add byte ptr [rax + rdx*4], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000189a47 : add byte ptr [rax + rdx*8], cl ; int1 ; jmp qword ptr [rax]
0x00000000001a2d0b : add byte ptr [rax + rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000019466b : add byte ptr [rax + rsi*2 + 0x15a00000], ah ; out dx, al ; jmp rsp
0x000000000018b32f : add byte ptr [rax + rsi*8 - 0xa], bl ; jmp rsp
0x000000000019b7e3 : add byte ptr [rax + rsi*8], bl ; int1 ; call qword ptr [rax]
0x00000000001a577b : add byte ptr [rax + rsi*8], dl ; cmc ; call qword ptr [rdi]
0x000000000019f20b : add byte ptr [rax + rsi], dl ; hlt ; jmp qword ptr [rax]
0x00000000001ac617 : add byte ptr [rax - 0x10], dl ; add dword ptr [rax], eax ; push rsp ; ja 0x1ac622 ; jmp qword ptr [rdx]
0x00000000001ac527 : add byte ptr [rax - 0x11], ah ; add dword ptr [rax], eax ; adc al, 0x78 ; sti ; jmp qword ptr [rdx]
0x000000000019912b : add byte ptr [rax - 0x11], al ; jmp rdx
0x00000000001a1f3f : add byte ptr [rax - 0x12], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000197787 : add byte ptr [rax - 0x14], bh ; out dx, al ; jmp rcx
0x000000000006c91f : add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x000000000011f714 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894d
0x000000000018f8b3 : add byte ptr [rax - 0x16], bl ; call qword ptr [rax]
0x0000000000078bce : add byte ptr [rax - 0x16fa74b8], dl ; ret
0x00000000001001ba : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0xeac1
0x00000000001a550f : add byte ptr [rax - 0x17], dh ; cmc ; call qword ptr [rbx]
0x00000000001a54df : add byte ptr [rax - 0x17], dl ; cmc ; call qword ptr [rsi]
0x00000000001975c8 : add byte ptr [rax - 0x190c0000], ah ; out dx, al ; jmp rsp
0x0000000000198747 : add byte ptr [rax - 0x1bffff4f], al ; sbb ebp, edi ; call rdi
0x0000000000193a3f : add byte ptr [rax - 0x1c], dl ; in eax, dx ; call qword ptr [rdi]
0x000000000000cfdf : add byte ptr [rax - 0x1e], ah ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000019b737 : add byte ptr [rax - 0x1f], dh ; add byte ptr [rax], al ; adc al, 0xc0 ; int1 ; call qword ptr [rdx]
0x000000000019b03f : add byte ptr [rax - 0x26], bh ; add byte ptr [rax], al ; jl 0x19afda ; int1 ; call qword ptr [rax]
0x000000000019ade7 : add byte ptr [rax - 0x28], bh ; sti ; call qword ptr [rbx]
0x0000000000196547 : add byte ptr [rax - 0x2bffff71], al ; jle 0x196545 ; jmp qword ptr [rbx]
0x00000000000366b9 : add byte ptr [rax - 0x2d], cl ; loopne 0x3670f ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001a18e7 : add byte ptr [rax - 0x2e], bh ; hlt ; jmp qword ptr [rsi]
0x000000000019d87f : add byte ptr [rax - 0x33fffefe], bh ; adc esi, ebx ; jmp rdx
0x0000000000034047 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000082fd2 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000000480c7 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b368f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b366f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b36cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000b367f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b36bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000035e4f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001a133f : add byte ptr [rax - 0x39], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7cef : add byte ptr [rax - 0x3a], dl ; idiv bh ; ret 0
0x0000000000034a05 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000001a103f : add byte ptr [rax - 0x3f], al ; hlt ; call qword ptr [rsi]
0x000000000019972f : add byte ptr [rax - 0x3f], ch ; add byte ptr [rax], al ; or al, 0xe3 ; sti ; call qword ptr [rdx]
0x00000000001290fa : add byte ptr [rax - 0x3f], cl ; cli ; adc cl, byte ptr [rax + 0x29] ; retf 0x148
0x0000000000111c4a : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x83 ; ret 0xf01
0x00000000000216ee : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002bd40 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000035ba5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000ec7fc : add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000000e391e : add byte ptr [rax - 0x41f0d806], al ; retf 0x3174
0x00000000001a2d5f : add byte ptr [rax - 0x43fffea9], bl ; xor ch, dh ; jmp qword ptr [rcx]
0x000000000019ad7f : add byte ptr [rax - 0x43ffff29], bh ; outsb dx, byte ptr [rsi] ; int1 ; jmp qword ptr [rbx]
0x000000000019ab4f : add byte ptr [rax - 0x43ffff2b], cl ; int1 ; call qword ptr [rbx]
0x0000000000193f7f : add byte ptr [rax - 0x43ffff97], bh ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199127 : add byte ptr [rax - 0x45], ah ; add byte ptr [rax], al ; loopne 0x199126 ; jmp rdx
0x00000000000651fb : add byte ptr [rax - 0x46273], al ; call qword ptr [rax]
0x00000000001a0d07 : add byte ptr [rax - 0x46], bl ; hlt ; call qword ptr [rdx]
0x000000000019900f : add byte ptr [rax - 0x46], cl ; add byte ptr [rax], al ; cmp al, 0x80 ; sti ; call qword ptr [rax]
0x0000000000199037 : add byte ptr [rax - 0x46], dh ; add byte ptr [rax], al ; mov ah, 0xb6 ; out dx, eax ; call qword ptr [rax]
0x000000000019b67b : add byte ptr [rax - 0x47700000], dh ; int1 ; jmp qword ptr [rcx]
0x0000000000198e2f : add byte ptr [rax - 0x48], ch ; add byte ptr [rax], al ; cmp al, 0x7e ; sti ; call rsp
0x000000000003bd4c : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000003ecdd : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000064cdf : add byte ptr [rax - 0x4ef43], al ; jmp qword ptr [rax]
0x0000000000007507 : add byte ptr [rax - 0x4f], dh ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a7f1f : add byte ptr [rax - 0x57], bl ; add dword ptr [rax], eax ; pop rsp ; retf 0xfff6
0x00000000001a3167 : add byte ptr [rax - 0x5bfffea5], ah ; cmc ; jmp qword ptr [rcx]
0x000000000019751f : add byte ptr [rax - 0x61], bl ; add byte ptr [rax], al ; fsubr st(2), st(0) ; out dx, al ; call qword ptr [rdx]
0x00000000001a75b7 : add byte ptr [rax - 0x62], bl ; idiv bh ; retf 0
0x00000000001ac95f : add byte ptr [rax - 0x63fffe0d], bl ; je 0x1ac96a ; jmp qword ptr [rdx]
0x000000000019691f : add byte ptr [rax - 0x6d], bl ; add byte ptr [rax], al ; test rsi, r13 ; jmp qword ptr [rsi]
0x000000000019660f : add byte ptr [rax - 0x70], cl ; add byte ptr [rax], al ; sub al, 0x80 ; out dx, al ; call qword ptr [rdx]
0x000000000019651f : add byte ptr [rax - 0x71], bl ; add byte ptr [rax], al ; pushfq ; jle 0x19651d ; jmp qword ptr [rbx]
0x00000000001a0437 : add byte ptr [rax - 0x71], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000196407 : add byte ptr [rax - 0x72], al ; add byte ptr [rax], al ; xor al, 0x7e ; out dx, al ; jmp qword ptr [rbx]
0x000000000019642f : add byte ptr [rax - 0x72], ch ; add byte ptr [rax], al ; cmp al, 0x7e ; out dx, al ; jmp qword ptr [rbx]
0x000000000019631f : add byte ptr [rax - 0x73], bl ; add byte ptr [rax], al ; cld ; jp 0x19631d ; call qword ptr [rdx]
0x00000000000c943f : add byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000021eef : add byte ptr [rax - 0x73], cl ; add eax, 0x15b467 ; ret
0x0000000000021eff : add byte ptr [rax - 0x73], cl ; add eax, 0x15d1f9 ; ret
0x00000000000f3767 : add byte ptr [rax - 0x73], cl ; add eax, 0x8bb59 ; pop rbx ; ret
0x00000000000249e1 : add byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x0000000000112ccc : add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000b31af : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b31bf : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b319f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000110a93 : add byte ptr [rax - 0x73], cl ; je 0x110ac5 ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000c932f : add byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000fd498 : add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000000ee818 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000042d47 : add byte ptr [rax - 0x73], cl ; xor eax, 0x1f1 ; call rax
0x000000000006f4c5 : add byte ptr [rax - 0x73], cl ; xor eax, 0x243 ; call rax
0x000000000007d276 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe2f2 ; call rax
0x000000000007cef3 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe675 ; call rax
0x000000000007cbed : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe97b ; call rax
0x000000000007b9bf : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffba9 ; call rax
0x000000000006f885 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffe83 ; call rax
0x000000000007b681 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffee7 ; call rax
0x000000000019afe7 : add byte ptr [rax - 0x74], bl ; int1 ; jmp qword ptr [rcx]
0x000000000019b02f : add byte ptr [rax - 0x74], dh ; int1 ; call qword ptr [rcx]
0x00000000000804ef : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001628f8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010f762 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 1], r9b ; ret
0x00000000000c4682 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000038e81 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000010d667 : add byte ptr [rax - 0x75], cl ; add eax, 0x2a9289 ; ret
0x000000000007d82f : add byte ptr [rax - 0x75], cl ; add eax, 0x338d69 ; ret
0x000000000002b4cf : add byte ptr [rax - 0x75], cl ; add eax, 0x38b491 ; ret
0x0000000000022dbf : add byte ptr [rax - 0x75], cl ; add eax, 0x3973e1 ; ret
0x0000000000022daf : add byte ptr [rax - 0x75], cl ; add eax, 0x397401 ; ret
0x00000000000ee44d : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000037667 : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000000f2efd : add byte ptr [rax - 0x75], cl ; cmp al, ch ; retf 0xf7aa
0x0000000000022d3f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008a52e : add byte ptr [rax - 0x75], cl ; je 0x8a55f ; cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000d60fb : add byte ptr [rax - 0x75], cl ; je 0xd612b ; jo 0xd610a ; ret 0xc083
0x0000000000086a07 : add byte ptr [rax - 0x75], cl ; jg 0x86a5c ; mov rsi, rbp ; call rax
0x000000000002e9aa : add byte ptr [rax - 0x75], cl ; jl 0x2e9da ; or al, ch ; ret
0x0000000000086b0f : add byte ptr [rax - 0x75], cl ; jnp 0x86b64 ; mov rsi, r13 ; call rax
0x0000000000086b77 : add byte ptr [rax - 0x75], cl ; jnp 0x86bc9 ; call rax
0x00000000000384a2 : add byte ptr [rax - 0x75], cl ; js 0x384cc ; call rdx
0x00000000000d17ef : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000f3aff : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000000f1f4f : add byte ptr [rax - 0x75], cl ; push rax ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000008cf77 : add byte ptr [rax - 0x75], cl ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x4890
0x000000000008c98f : add byte ptr [rax - 0x75], cl ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000013394f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000d4b20 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x60 ; call 0x215c8
0x000000000004660a : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000000f94a6 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000234be : add byte ptr [rax - 0x75], cl ; ret
0x00000000000f85ee : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000006bfca : add byte ptr [rax - 0x75], cl ; xor eax, 0x348f96 ; call rax
0x0000000000069111 : add byte ptr [rax - 0x75], cl ; xor eax, 0x34be4f ; call rax
0x00000000000661ef : add byte ptr [rax - 0x75], cl ; xor eax, 0x34ed71 ; call rax
0x000000000006342f : add byte ptr [rax - 0x75], cl ; xor eax, 0x351b31 ; call rax
0x0000000000059e31 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35b12f ; call rax
0x000000000005281a : add byte ptr [rax - 0x75], cl ; xor eax, 0x362746 ; call rax
0x00000000000ef719 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000076e41 : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000000803e0 : add byte ptr [rax - 0x77], cl ; adc bl, dh ; ret
0x000000000012c5a4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000087a76 : add byte ptr [rax - 0x77], cl ; add eax, 0x3304ca ; ret
0x000000000007edcc : add byte ptr [rax - 0x77], cl ; add eax, 0x3364ac ; ret
0x000000000007ed9c : add byte ptr [rax - 0x77], cl ; add eax, 0x3364e4 ; ret
0x000000000012c8ef : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000819f0 : add byte ptr [rax - 0x77], cl ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000038e0f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00000000000ef571 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000071145 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000015686f : add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x000000000014f964 : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax + 0x63] ; ret 0x8348
0x000000000006e28a : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010b787 : add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 9] ; call 0xe79d9
0x00000000000ebcc3 : add byte ptr [rax - 0x77], cl ; fidivr dword ptr [rax + 0x10f] ; syscall
0x00000000000dbd74 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x6de8
0x0000000000086160 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 9] ; call rax
0x0000000000038708 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 0xca] ; syscall
0x0000000000034057 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x000000000008e79e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x56e8
0x00000000000658b5 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x00000000000238b7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x7d] ; ret
0x00000000000ceafb : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000c5631 : add byte ptr [rax - 0x77], cl ; fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x00000000000e2774 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x0000000000075ddb : add byte ptr [rax - 0x77], cl ; iretd ; mov eax, 0xca ; syscall
0x000000000011a983 : add byte ptr [rax - 0x77], cl ; jne 0x11a9f9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079263 : add byte ptr [rax - 0x77], cl ; mov edx, 0xe0 ; pop rbx ; ret
0x00000000000864a9 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000001253ef : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x2167e
0x000000000011a348 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000010c8b3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x000000000010c9f3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000118ba3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001189e4 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000811e1 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 0xca ; syscall
0x000000000010cbe0 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp] ; call rax
0x000000000011b11e : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, r12 ; call 0x117b99
0x0000000000101e02 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000002b0d7 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000054728 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000113db6 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000008391c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000004549d : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006f410 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000023f56 : add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000005173f : add byte ptr [rax - 0x77], cl ; ret 0x2ce9
0x0000000000162fa3 : add byte ptr [rax - 0x77], cl ; ret 0x3775
0x000000000003438a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000df03f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002b43d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bb749 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000004ecde : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f538 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d48d2 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000109f3a : add byte ptr [rax - 0x77], cl ; ret 0x9066
0x000000000004383d : add byte ptr [rax - 0x77], cl ; ret 0xae8
0x0000000000029d84 : add byte ptr [rax - 0x77], cl ; ret 0xb7eb
0x00000000000ea52f : add byte ptr [rax - 0x77], cl ; ret 0xbbeb
0x00000000000308ee : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000042b2a : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000086ea7 : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x0000000000038b38 : add byte ptr [rax - 0x77], cl ; ret 0xe875
0x0000000000100af8 : add byte ptr [rax - 0x77], cl ; ret 0xe883
0x000000000003c97f : add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000086832 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000804be : add byte ptr [rax - 0x77], cl ; retf
0x000000000014bf84 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000007ef0f : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000069562 : add byte ptr [rax - 0x77], cl ; retf 0x2b48
0x000000000014a052 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000014a1f2 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x0000000000042026 : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000045fd7 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000025f70 : add byte ptr [rax - 0x77], cl ; retf 0x894d
0x00000000000ff5e7 : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000073504 : add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x0000000000149fb0 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000085f66 : add byte ptr [rax - 0x77], cl ; retf 0x9aeb
0x0000000000086f22 : add byte ptr [rax - 0x77], cl ; retf 0xd5e8
0x00000000000d0a5f : add byte ptr [rax - 0x77], cl ; retf 0xe183
0x0000000000081917 : add byte ptr [rax - 0x77], cl ; retf 0xe283
0x000000000014be06 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000001511ac : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000000f080f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; retf 0xc931
0x00000000000f241e : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x00000000000a13a0 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000012c55c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000028b49 : add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x4890
0x000000000006df3c : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; loopne 0x6df4b ; add byte ptr [rax], al ; ret
0x000000000012cf85 : add byte ptr [rax - 0x77], cl ; xlatb ; call rsi
0x00000000000ebf5e : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x00000000001a02bf : add byte ptr [rax - 0x77], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001629d6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000016302e : add byte ptr [rax - 0x7ab80000], al ; ret
0x00000000000975ff : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000163031 : add byte ptr [rax - 0x7b], cl ; ret
0x0000000000034df9 : add byte ptr [rax - 0x7b], cl ; ret 0xd574
0x0000000000021bab : add byte ptr [rax - 0x7b], cl ; ret 0xf41
0x000000000007fdb4 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000679fc : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x11
0x000000000005cdb7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000099ac3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000e8e19 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x35eb
0x000000000011912a : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*2 + 0x41], 0x83 ; call qword ptr [rbx]
0x000000000007afaf : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000163e37 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x0000000000115726 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0xf3 ; ret
0x00000000000a16ff : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x00000000001234c3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000efc3d : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000000e6eb9 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rsi + 0x31], 0xd2 ; call rax
0x000000000008a60f : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000000c5131 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000c9374 : add byte ptr [rax - 0x7bf0d606], al ; ret 0
0x000000000014289b : add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000018ed77 : add byte ptr [rax - 0x7bffffe9], dh ; add dl, ch ; call qword ptr [rbx]
0x00000000001486b7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000042ba6 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d73bd
0x00000000000450a7 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d98b7
0x0000000000083d02 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000081ef3 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000008552d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002e977 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000033ed3 : add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x000000000007c26f : add byte ptr [rax - 0x7d], cl ; jg 0x7c2b5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000072b76 : add byte ptr [rax - 0x7d], cl ; jle 0x72bb4 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000082ff2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000022218 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000082447 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000003b647 : add byte ptr [rax - 0x7d], cl ; ret 0x3801
0x000000000010ec6a : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000a0ccf : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000041607 : add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x00000000000fdb3f : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000010ee3a : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000005a24c : add byte ptr [rax - 0x7d], cl ; ret 0x4504
0x0000000000022c85 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d7251 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000f7b2a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000066c7b : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000ff6e1 : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000086a9b : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000b6c27 : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000014a07f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010bd89 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000010fde7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x00000000000da4c7 : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c8ef : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000082d86 : add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x0000000000030271 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014c063 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000127f90 : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000d6d2d : add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x000000000014a0a3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000028067 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007e921 : add byte ptr [rax - 0x7d], cl ; ret 0xf20
0x0000000000080964 : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000081662 : add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000033b25 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000036f75 : add byte ptr [rax - 0x7d], cl ; retf 0x48ff
0x0000000000033cba : add byte ptr [rax - 0x7d], cl ; retf 0xe908
0x000000000008fd9f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000009773f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000450ef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x5b ; ret
0x0000000000044277 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000a2492 : add byte ptr [rax - 0x7d], cl ; stc ; add al, 0x48 ; cmove eax, edx ; ret
0x00000000001230b9 : add byte ptr [rax - 0x7f], cl ; ret
0x000000000002e724 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000001375bb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000d6168 : add byte ptr [rax - 0x7f], cl ; retf 0
0x000000000019ed67 : add byte ptr [rax - 0xd], cl ; jmp qword ptr [rcx]
0x00000000001a595f : add byte ptr [rax - 0xd], dh ; cmc ; call qword ptr [rdi]
0x00000000001a587f : add byte ptr [rax - 0xe], al ; cmc ; call qword ptr [rbx]
0x0000000000178f20 : add byte ptr [rax - 0xe], al ; jmp qword ptr [rax]
0x00000000001a58a7 : add byte ptr [rax - 0xe], bl ; cmc ; jmp qword ptr [rdi]
0x00000000000365df : add byte ptr [rax - 1], bh ; jmp 0x365b9
0x00000000000c54ec : add byte ptr [rax - 1], bh ; leave ; ret
0x0000000000059cc7 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], rsi ; ret
0x000000000002b69e : add byte ptr [rax - 1], bh ; pop rbx ; pop r12 ; ret
0x000000000003418d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000035e2d : add byte ptr [rax - 1], bh ; ret
0x0000000000036976 : add byte ptr [rax - 1], dil ; ret
0x0000000000186f8c : add byte ptr [rax - 5], bl ; call qword ptr [rax + 0x20fffb57]
0x00000000001a2207 : add byte ptr [rax - 9], bh ; hlt ; jmp rcx
0x00000000000e648b : add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x00000000000d94d4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000113521 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000157b7d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000150a9d : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x0000000000138dba : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000014fce2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000353a3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000125bdb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000139d9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000ba91b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0xba8f0
0x00000000000bcd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbcd2f
0x00000000000bcd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbcd31
0x00000000000ea52b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0xea4f7
0x000000000007b13b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a18eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000163d0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ce53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000102813 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; sub eax, 1 ; leave ; ret
0x0000000000155a8d : add byte ptr [rax], 0 ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000086ffb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000044159 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x8940
0x00000000000d1891 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000001597c1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003cc34 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x00000000001a98a3 : add byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ah ; ret 1
0x0000000000000762 : add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x00000000000c4ece : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000001a11e7 : add byte ptr [rax], ah ; cmp al, 1 ; add ah, ah ; ret
0x0000000000198fe7 : add byte ptr [rax], ah ; mov edx, 0x2c840000 ; sti ; call qword ptr [rax]
0x000000000002ebc4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001ad9ff : add byte ptr [rax], ah ; push rbx ; sti ; call qword ptr [rdx]
0x00000000001a29e7 : add byte ptr [rax], ah ; push rsp ; add dword ptr [rax], eax ; je 0x1a2a05 ; cmc ; jmp qword ptr [rcx]
0x0000000000019867 : add byte ptr [rax], ah ; ret
0x000000000000e47f : add byte ptr [rax], ah ; retf
0x00000000000110bf : add byte ptr [rax], ah ; retf 0xe
0x0000000000009d0f : add byte ptr [rax], ah ; syscall
0x00000000001a2f9f : add byte ptr [rax], ah ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000019a1ae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000001a14da : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; ror cl, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a30da : add byte ptr [rax], al ; adc al, 0x5b ; add dword ptr [rax], eax ; loopne 0x1a3120 ; cmc ; jmp qword ptr [rcx]
0x0000000000198f9a : add byte ptr [rax], al ; adc al, 0x95 ; out dx, eax ; call qword ptr [rax]
0x000000000019b73a : add byte ptr [rax], al ; adc al, 0xc0 ; int1 ; call qword ptr [rdx]
0x00000000001aa1da : add byte ptr [rax], al ; adc al, 0xcc ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; call rdi
0x000000000019bcda : add byte ptr [rax], al ; adc al, 0xe7 ; add byte ptr [rax], al ; adc byte ptr [rdx - 0xe], cl ; call qword ptr [rbx]
0x00000000001ad7da : add byte ptr [rax], al ; adc al, 2 ; add al, byte ptr [rax] ; rcl byte ptr [rbx], 1 ; sti ; call rax
0x000000000019d5aa : add byte ptr [rax], al ; adc al, 5 ; call rsi
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001aa0b6 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; retf 1
0x000000000019981a : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0
0x000000000019a012 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0
0x0000000000199806 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000019a026 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001a1ed6 : add byte ptr [rax], al ; adc byte ptr [rcx + 1], cl ; add ah, al ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x000000000019e5c7 : add byte ptr [rax], al ; adc byte ptr [rcx], al ; add byte ptr [rdi + rbp*4 - 0xd], dl ; jmp rdi
0x000000000019ecd6 : add byte ptr [rax], al ; adc byte ptr [rdi], dl ; add dword ptr [rax], eax ; test dl, dh ; jmp qword ptr [rcx]
0x00000000001a2fd6 : add byte ptr [rax], al ; adc byte ptr [rdx + 1], bl ; add byte ptr [rsp + rsi - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019bcde : add byte ptr [rax], al ; adc byte ptr [rdx - 0xe], cl ; call qword ptr [rbx]
0x00000000001a2a4f : add byte ptr [rax], al ; adc ch, dh ; jmp qword ptr [rcx]
0x0000000000191efe : add byte ptr [rax], al ; adc dl, al ; jmp 0x191f06
0x0000000000172fdd : add byte ptr [rax], al ; add ah, ah ; or al, 0xec ; jmp rsp
0x00000000001a9989 : add byte ptr [rax], al ; add ah, al ; ret
0x00000000001a7ec1 : add byte ptr [rax], al ; add ah, bh ; test al, 1 ; add byte ptr [rax], bh ; retf 0xfff6
0x000000000019a0a1 : add byte ptr [rax], al ; add ah, bl ; retf 0
0x00000000001999b1 : add byte ptr [rax], al ; add ah, ch ; ret
0x000000000019a1b1 : add byte ptr [rax], al ; add ah, ch ; retf
0x00000000001aa091 : add byte ptr [rax], al ; add ah, cl ; retf 1
0x000000000019c4b9 : add byte ptr [rax], al ; add ah, dh ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdi - 0xe], ch ; call rcx
0x00000000001aa0b9 : add byte ptr [rax], al ; add ah, dh ; retf 1
0x000000000019edca : add byte ptr [rax], al ; add al, 0x18 ; add dword ptr [rax], eax ; sal bl, 1 ; call qword ptr [rdi]
0x00000000001997fa : add byte ptr [rax], al ; add al, 0x31 ; cld ; call qword ptr [rbx]
0x00000000001963ca : add byte ptr [rax], al ; add al, 0x8e ; add byte ptr [rax], al ; loopne 0x196458 ; out dx, al ; jmp qword ptr [rbx]
0x00000000001a68ca : add byte ptr [rax], al ; add al, 0x93 ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xa], dl ; call qword ptr [rax]
0x000000000019b7ca : add byte ptr [rax], al ; add al, 0xe2 ; add byte ptr [rax], al ; and al, dh ; int1 ; call qword ptr [rax]
0x00000000001ae7de : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; retf 8
0x00000000001a98a5 : add byte ptr [rax], al ; add al, ah ; ret 1
0x00000000001aa0a5 : add byte ptr [rax], al ; add al, ah ; retf 1
0x000000000019a19d : add byte ptr [rax], al ; add al, bl ; retf
0x00000000001231f1 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000000000010a57c : add byte ptr [rax], al ; add al, ch ; cld ; retf
0x0000000000051143 : add byte ptr [rax], al ; add al, ch ; cmc ; retf
0x00000000000e53c9 : add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff3
0x000000000002b215 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000006fd32 : add byte ptr [rax], al ; add al, ch ; ret 0
0x000000000011bf96 : add byte ptr [rax], al ; add al, ch ; ret 0x93
0x000000000002c186 : add byte ptr [rax], al ; add al, ch ; ret 0xb9
0x000000000010adc6 : add byte ptr [rax], al ; add al, ch ; ret 0xf166
0x0000000000077df6 : add byte ptr [rax], al ; add al, ch ; ret 0xfa95
0x00000000000f8156 : add byte ptr [rax], al ; add al, ch ; ret 0xff45
0x00000000000daa16 : add byte ptr [rax], al ; add al, ch ; ret 0xff6c
0x0000000000042e5d : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000068c2e : add byte ptr [rax], al ; add al, ch ; retf 0x9d
0x000000000006cebe : add byte ptr [rax], al ; add al, ch ; retf 0xfb45
0x000000000010ae9e : add byte ptr [rax], al ; add al, ch ; retf 0xfdcb
0x00000000000225ef : add byte ptr [rax], al ; add al, ch ; stc ; ret
0x00000000000e51e5 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret
0x00000000001aa18d : add byte ptr [rax], al ; add al, cl ; retf
0x000000000019a08d : add byte ptr [rax], al ; add al, cl ; retf 0
0x00000000001998b5 : add byte ptr [rax], al ; add al, dh ; ret 0
0x000000000019a0b5 : add byte ptr [rax], al ; add al, dh ; retf 0
0x0000000000061de9 : add byte ptr [rax], al ; add bh, al ; test esp, edi ; idiv bh ; call qword ptr [rax]
0x0000000000163a5d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011dc1a : add byte ptr [rax], al ; add bh, bh ; loope 0x11dbb7 ; ret
0x00000000000d1846 : add byte ptr [rax], al ; add bh, dh ; ret
0x000000000003a65d : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x00000000000c6f8a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000c6fdc : add byte ptr [rax], al ; add bl, al ; mov rsi, rsp ; call qword ptr [rdx]
0x000000000003685a : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000c62d8 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; ret
0x0000000000086b52 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000012053c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000d5915 : add byte ptr [rax], al ; add bl, ch ; fisttp word ptr [rcx - 0x7d] ; ret
0x00000000000e341b : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000382f5 : add byte ptr [rax], al ; add bl, ch ; retf
0x00000000000353a5 : add byte ptr [rax], al ; add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000009d78d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009d79d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002ce55 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000051cf5 : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; ret
0x00000000000ed19d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x00000000000f5c82 : add byte ptr [rax], al ; add byte ptr [rax + 0x119], bh ; syscall
0x000000000007ec8d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000007ebed : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x0000000000162651 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0xe583
0x000000000015fbfa : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0x8341
0x000000000004ac50 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0xc148
0x00000000000c5a4d : add byte ptr [rax], al ; add byte ptr [rax + 0x27], bh ; syscall
0x00000000000666d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000cc9fd : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b8283 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000cc8b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2a8b
0x000000000004de2c : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000008cdc1 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000d752b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xd74cf
0x000000000010ef3f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000103dad : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x0000000000132404 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000013b7f1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000c629f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x3974
0x0000000000104a9d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x0000000000113522 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000157b7e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000c50ed : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x00000000000360fd : add byte ptr [rax], al ; add byte ptr [rax + 0x3e], bh ; syscall
0x00000000000f785d : add byte ptr [rax], al ; add byte ptr [rax + 0x40], bh ; syscall
0x0000000000185c4b : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002d9fb : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000000f77ed : add byte ptr [rax], al ; add byte ptr [rax + 0x44], bh ; syscall
0x00000000000ec567 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x00000000000e7efd : add byte ptr [rax], al ; add byte ptr [rax + 0x49], bh ; syscall
0x00000000000e937d : add byte ptr [rax], al ; add byte ptr [rax + 0x56], bh ; syscall
0x00000000000e75bd : add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x000000000019323d : add byte ptr [rax], al ; add byte ptr [rax + 0x5c], bh ; add byte ptr [rax], al ; ret 0xffed
0x00000000000e75ad : add byte ptr [rax], al ; add byte ptr [rax + 0x5f], bh ; syscall
0x0000000000068da5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003b2df : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000163447 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000db82d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x5489
0x00000000000abb3d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000ac23c : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000007316d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000000c5a6d : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000000c5a8d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000c5a7d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000019982d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c000000], al ; ret 0
0x00000000001a155d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c00013f], bl ; retf
0x00000000000c5a9d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000c5a5d : add byte ptr [rax], al ; add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000c5aad : add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x000000000009dcdd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c5c4d : add byte ptr [rax], al ; add byte ptr [rax + 0x79], bh ; syscall
0x00000000001a4f1d : add byte ptr [rax], al ; add byte ptr [rax + 0x79], bl ; add dword ptr [rax], eax ; ret
0x00000000000c5cdd : add byte ptr [rax], al ; add byte ptr [rax + 0x7c], bh ; syscall
0x0000000000034cec : add byte ptr [rax], al ; add byte ptr [rax + 0x7e0f4866], dl ; ret 0xb848
0x0000000000036132 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000003617e : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x000000000003650d : add byte ptr [rax], al ; add byte ptr [rax + 0x83], bh ; syscall
0x00000000000ddf5d : add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x0000000000161ba6 : add byte ptr [rax], al ; add byte ptr [rax + 0x9480000], al ; ret 0xb848
0x00000000000edd0d : add byte ptr [rax], al ; add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000f5bad : add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000eda8d : add byte ptr [rax], al ; add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000edb2d : add byte ptr [rax], al ; add byte ptr [rax + 0xab], bh ; syscall
0x0000000000051d71 : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000035de0 : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000000f6a5d : add byte ptr [rax], al ; add byte ptr [rax + 0xea], bh ; syscall
0x00000000000a1935 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000000ee276 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000f7638 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x00000000000c634c : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000012bdf6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8148
0x0000000000129dd2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000028aa9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8545
0x00000000000266ce : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000082e1d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000008a6d2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000008a708 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000025c1d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000000c6384 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000011257d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000c61ed : add byte ptr [rax], al ; add byte ptr [rax + 0xfffa], bh ; ret
0x00000000001a15c6 : add byte ptr [rax], al ; add byte ptr [rax + 1], al ; add byte ptr [rsp + rcx*8], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000ea5a7 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000036855 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000b2de0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000150aa7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000024b30 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000046fbd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000150a9e : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x0000000000138dbb : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000346eb : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xeeb
0x00000000001b050d : add byte ptr [rax], al ; add byte ptr [rax + 2], al ; add byte ptr [rax], al ; ret 3
0x0000000000047cab : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000c66a4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000000e7b0d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000015ff05 : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret
0x000000000001924d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; ret 0x5f
0x00000000001aa159 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cwde ; retf
0x000000000019a1ad : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000000b3163 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x000000000006c91d : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x0000000000078bcc : add byte ptr [rax], al ; add byte ptr [rax - 0x16fa74b8], dl ; ret
0x00000000001975c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x190c0000], ah ; out dx, al ; jmp rsp
0x000000000003af6f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000082fd0 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000000480c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000111c48 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x83 ; ret 0xf01
0x00000000000216ec : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002bd3e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000035ba3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000ec7fa : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000001a7f1d : add byte ptr [rax], al ; add byte ptr [rax - 0x57], bl ; add dword ptr [rax], eax ; pop rsp ; retf 0xfff6
0x0000000000112cca : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000b31ad : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b31bd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b319d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000fd496 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000000804ed : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ee44b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000d0d8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d60f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xd612d ; jo 0xd610c ; ret 0xc083
0x00000000000384a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x384ce ; call rdx
0x00000000000d17ed : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000f3afd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000008cf75 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x4890
0x000000000008c98d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000f94a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x0000000000071143 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000015686d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x000000000008615e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 9] ; call rax
0x00000000000658b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x00000000000fe212 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x00000000000864a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000001253ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x21680
0x000000000011a346 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000003c5d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000113db4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000008391a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000618e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006f40e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000063811 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000005173d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2ce9
0x000000000010a84c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bb747 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000007fe04 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000ea52d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbbeb
0x0000000000067f0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000038b36 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe875
0x000000000003c97d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x00000000000f30d2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000007ef0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000069560 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2b48
0x0000000000042024 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000045fd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000025f6e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894d
0x0000000000073502 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x0000000000149fae : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000000d0a5d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xe183
0x000000000014be04 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000001511aa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000000f080d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; retf 0xc931
0x000000000012cf83 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; call rsi
0x00000000001629d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000016302c : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x0000000000021ba9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ret 0xf41
0x00000000000679fa : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x11
0x000000000005cdb5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000163e35 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; ret
0x00000000001234c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000008a60d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000000c512f : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000c9372 : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0d606], al ; ret 0
0x0000000000042ba4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d73bf
0x00000000000450a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d98b9
0x0000000000083d00 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000033ed1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x0000000000082ff0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003333d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a0ccd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000010ee38 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000022c83 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f7b28 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000ff6df : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000cae6b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000b6c25 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000014bba3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003026f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014d721 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000127f8e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000d6d2b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x000000000014bbcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000893fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000081660 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000036f73 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x48ff
0x0000000000033cb8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0xe908
0x000000000008fd9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000fd33d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000001230b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000138db4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000d6166 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000000365dd : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; jmp 0x365bb
0x00000000000c54ea : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; leave ; ret
0x000000000003418b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000035e2b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001a98a1 : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ah ; ret 1
0x00000000001a11e5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; cmp al, 1 ; add ah, ah ; ret
0x0000000000019865 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000019a1ac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000001aa0b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; retf 1
0x0000000000199818 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0
0x000000000019a010 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0
0x0000000000199804 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000019a024 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000172fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, ah ; or al, 0xec ; jmp rsp
0x00000000000705eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000001aa18a : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf
0x0000000000163a5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a65b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x00000000000382f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf
0x000000000009d79b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000005268b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000103dab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x000000000012be2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000000db82b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x5489
0x000000000007316b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x0000000000024b2e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000001297cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b31ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000b31bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000b319b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000f3afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007d85b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000083918 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000067f0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007ef0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000003333b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a0ccb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e564b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008165e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x0000000000019863 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000000de17a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000019861 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000000a840 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001bb89 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000000adb0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5f
0x00000000001af0d0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000185998 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x00000000001b1220 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x0000000000019879 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000172fda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in al, 0xc ; in al, dx ; jmp rsp
0x00000000000198aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000018595a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000000728a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001bb8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000016ef92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000010e2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2d
0x000000000016f482 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000df7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x0000000000005b4a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000d7ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43
0x000000000000fb9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x000000000000adb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5f
0x000000000000e2c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xa
0x00000000001b07e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000016df6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000016e5aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001af0d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000000dfa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000016efd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x000000000001127a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x25
0x000000000000b7ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x29
0x00000000000098b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2b
0x0000000000011142 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c
0x000000000000ecca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x30
0x000000000016f4c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000000085c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x35
0x000000000000d13a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x39
0x000000000018599a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x000000000000dd52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4c
0x0000000000005d5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5c
0x000000000016dcba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000016dfaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x000000000000c0ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x000000000000d2ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 7
0x00000000000a072b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001987b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000008a01c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011440b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x18], dl ; retf 3
0x0000000000038ff9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000f0edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000d697b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x850f
0x00000000000a0f0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000126afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000e731b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x4cb9
0x00000000000f769b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x8b64
0x00000000000f635b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000e5dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x8b64
0x0000000000162cdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x00000000000cc92b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000008b09b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x000000000012f66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008e9fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000018595b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000b304b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x0000000000158f0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf 0xc985
0x00000000000cfedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000f0b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000004e94b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000000b364c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000163e95 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee74c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000353a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000163a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000170fbc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017016c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000000ebd74 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000f7637 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000ee275 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a18a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000008a707 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000008a6d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000172fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, 0xc ; in al, dx ; jmp rsp
0x00000000000382f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x382ca
0x0000000000080f47 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x80f1d
0x000000000006935a : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000015cd5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000015cd6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000015cd7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000015cd8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000015cd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000015ccdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000015ccec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000015ccfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000015cd0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000015cd1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000015cd2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000015cd3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000015cd4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000b319c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000b31bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000b31ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000015cccc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000014473c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009dcdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000009c6dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009d6ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000009d3ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014477c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014479c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014476c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e63ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009d6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009d6ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009d6dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000051cf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x00000000000ed19c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x000000000007ec8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000007ebec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000000c5a4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x27 ; syscall
0x00000000000c50ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000360fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3e ; syscall
0x00000000000f785c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x40 ; syscall
0x00000000000f77ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x00000000000e7efc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x49 ; syscall
0x00000000000e937c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000e75bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000e75ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5f ; syscall
0x00000000000c5a6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000c5a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000c5a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000c5a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000c5a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000c5aac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000c5c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x79 ; syscall
0x00000000000c5cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x000000000003650c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x83 ; syscall
0x00000000000ddf5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000edd0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000f5bac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000eda8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000edb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x00000000000f6a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xea ; syscall
0x00000000000c61ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x000000000007407c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000036854 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000047caa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001015cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 7 ; ret
0x00000000000e7b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x0000000000125bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d178c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000073d4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000011e45c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x000000000012a639 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000c50ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000139d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001447ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000007f284 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x0000000000125f98 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009d70c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009d71c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000119a4a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ba91c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0xba8ef
0x00000000000bcd54 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbcd2e
0x00000000000bcd54 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbcd30
0x00000000000f3afc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000007d84c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000ee44a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000071142 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001253ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x21681
0x000000000012cf82 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; call rsi
0x00000000000ea52c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0xea4f6
0x000000000014474c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009d6bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009d78c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009d79c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007b13c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a18ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000139eec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000198ac : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000012a708 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000f8277 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000038ffa : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000083ad2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002bc41 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018595c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000185c4a : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000006b64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000073bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000001bb8d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000016ff8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000170724 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000016ef94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000010e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2d
0x000000000016f484 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000df7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x0000000000005b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000d7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43
0x000000000000fb9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x000000000000adb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5f
0x000000000000e2c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xa
0x00000000001b07e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000016df6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000016e5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001af0d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000000dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000004b84 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000016ffc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000170764 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000016efd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x000000000001127c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x25
0x000000000000b7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x29
0x00000000000098b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2b
0x0000000000011144 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c
0x000000000000eccc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x30
0x000000000016f4c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000000085c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x35
0x000000000000d13c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x39
0x0000000000173885 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x000000000018599c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x000000000000dd54 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4c
0x0000000000005d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5c
0x00000000000043bc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000f18c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000016dfac : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 3
0x000000000000c0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x000000000000d2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 7
0x0000000000102814 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub eax, 1 ; leave ; ret
0x000000000003ad58 : add byte ptr [rax], al ; add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x0000000000155a8e : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000015074c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000a072c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000ebf7c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007d7fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015464c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000000b2ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000019c9fd : add byte ptr [rax], al ; add byte ptr [rax], bh ; hlt ; add byte ptr [rax], al ; in al, dx ; xchg dl, dh ; jmp qword ptr [rcx]
0x000000000019ccfd : add byte ptr [rax], al ; add byte ptr [rax], bh ; test dword ptr [rax], 0xf2900c00 ; jmp qword ptr [rcx]
0x000000000019a0dd : add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x00000000001aa0c9 : add byte ptr [rax], al ; add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x0000000000199901 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000015ee34 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000001997cd : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0
0x00000000001aa0cd : add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x00000000000a072d : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001987d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000001997f5 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0
0x000000000019a09d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, bl ; retf 0
0x00000000001aa08d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, cl ; retf 1
0x00000000001aa0b5 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, dh ; retf 1
0x00000000001aa0a1 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, ah ; retf 1
0x000000000019a089 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, cl ; retf 0
0x000000000019a0b1 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, dh ; retf 0
0x000000000019a0d9 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x00000000001997c9 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0
0x00000000001997f1 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0
0x000000000019e5c6 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add dword ptr [rax], eax ; push rsp ; scasd eax, dword ptr [rdi] ; jmp rdi
0x00000000001a2c09 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2f], ch ; cmc ; call qword ptr [rax]
0x0000000000079935 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000002b23d : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000088bcd : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000bcd22 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d3b32 : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; ret
0x00000000000d137c : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf
0x00000000000d68b8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf 0x8f0f
0x00000000000f1d0d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000000fb2be : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000cd6f3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000bb4ca : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; ret
0x0000000000118af5 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x000000000019a329 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*8], ah ; add al, al ; ret 0xfff0
0x000000000019a341 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*8], bh ; add byte ptr [rax], cl ; ret
0x000000000002177e : add byte ptr [rax], al ; add byte ptr [rbp - 0x3c], dh ; ret
0x0000000000163bc8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; nop dword ptr [rax] ; ret
0x0000000000045cf3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf 0x8341
0x00000000000a5f1c : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x000000000014bb58 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f1547 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x00000000000cd8e5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000011a885 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c5c3e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000002b5fa : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000001128da : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8941
0x000000000011288a : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x00000000001128b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8941
0x000000000013967d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000036b05 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021f64 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000024226 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000015b8f8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019d0f9 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*8], dh ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a28e1 : add byte ptr [rax], al ; add byte ptr [rbx + rdx*2], bl ; add dword ptr [rax], eax ; clc ; retf 0xfff8
0x000000000019c911 : add byte ptr [rax], al ; add byte ptr [rbx + rsi*8], cl ; add byte ptr [rax], bh ; test dl, dh ; jmp qword ptr [rcx]
0x000000000011440d : add byte ptr [rax], al ; add byte ptr [rbx - 0x18], dl ; retf 3
0x0000000000125c39 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x000000000006a7b5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4b743], al ; call qword ptr [rax]
0x00000000000f9cb8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x0000000000038ffb : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000011016b : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x0000000000091f02 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x000000000008c0bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe1d], al ; retf 1
0x0000000000155041 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x00000000000f0edd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000061c90 : add byte ptr [rax], al ; add byte ptr [rbx - 0x90343], al ; call qword ptr [rax]
0x0000000000160530 : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000001610ee : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x000000000006aaa8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8948
0x000000000016169b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x000000000009c9ef : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x00000000000748e1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000014479d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000d697d : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x850f
0x00000000000f09bf : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000006d58b : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000014477d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009d6ed : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000001026e9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000000000004a5a2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000b1539 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; retf
0x00000000000670e8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000067075 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000006b3f6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000001605a1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000016135f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret 0x8349
0x0000000000127274 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret 0xff85
0x00000000000a0f0d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000b5b4b : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; retf 0x8d49
0x0000000000191ef9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2], dh ; add byte ptr [rax], al ; adc dl, al ; jmp 0x191f0b
0x0000000000077f08 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x000000000008385c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000006d2fc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x0000000000035dee : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000004dfc1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000015499d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000002f9e0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000010b734 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], al ; call 0xe79d8
0x0000000000100c42 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0xfd6e8
0x0000000000126afd : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000e63ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000651a3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x42], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000254cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rdi], cl ; retf 0xd285
0x00000000000313f9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000004403c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x4440
0x000000000004415a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8940
0x00000000000446aa : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xbe40
0x00000000000d0254 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; fld dword ptr [rbp + 0x39] ; retf
0x000000000010eaeb : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000cd3f3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000ba91d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc4eb
0x00000000000ec2ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x18b8
0x00000000000e731d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x4cb9
0x00000000000f6d9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x8b64
0x00000000000bcd55 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0xcbeb
0x0000000000071003 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; clc ; mov rax, r8 ; ret
0x000000000016102d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x0000000000087788 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; out 0xf7, al ; fucomi st(0) ; retf
0x0000000000087d23 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000015ed12 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000118f99 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x0000000000087d6c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000015fd53 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000000f635d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000f5ded : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x00000000000f711d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x00000000000e5dcd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x8b64
0x0000000000088ba6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x00000000000b024d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x8b04
0x000000000005aa85 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000000000021a8c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf
0x0000000000162cdd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x00000000000bcd3c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000088c37 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000008af3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x00000000000d755c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000cca2e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x000000000012f66d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000c5399 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x000000000008e9fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000018595d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000920d0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00000000000920f6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000449eb : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000443c2 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf66
0x00000000001a0ec6 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; add dword ptr [rax], eax ; and al, 0xbe ; hlt ; call qword ptr [rcx]
0x0000000000158a4d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; enter 0x2c75, -0x7d ; ret 0x8104
0x000000000014febd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x1d75, -0x7d ; ret 0x8101
0x000000000015037d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x0000000000087bb4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000ba06d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bdf18 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x858b
0x00000000000bde70 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000bae2a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x894c
0x00000000000bdb7c : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000bc30e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000bee9d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000ecfa1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x000000000004fcb0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b4ab0 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000ba034 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xe889
0x00000000000a3e53 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul cl ; ret 0xfffc
0x00000000000f0b5a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000007853b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000082c05 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rdx + 0x5b], 0x5d ; ret
0x0000000000091a1a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000001a54c6 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; add byte ptr [rcx + rbp*8 - 0xb], al ; call qword ptr [rbx]
0x00000000000b2c22 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x000000000015eb22 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000006ab5f : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x48], cl ; fimul dword ptr [rbp + 0x63] ; ret
0x0000000000069797 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x48], cl ; fmul dword ptr [rbp + 0x63] ; ret
0x000000000002212d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000004af75 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; sbb dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x0000000000120d16 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], eax ; ret
0x0000000000120cde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x000000000011dcce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x000000000011dce7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], eax ; ret
0x00000000000e6bfa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000007e568 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0xf390dbeb ; ret
0x00000000000a1835 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000139e7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000fba03 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; call rdx
0x000000000011d171 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000010729b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; retf
0x00000000000fc392 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; xchg eax, esp ; retf 0x2b
0x000000000006f8b3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x35 ; ret
0x0000000000139eed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000ba9dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c93ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a18ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000007b13d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000091a5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000504d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; push rax ; ret 0xf41
0x00000000000da10b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000b40b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000bd6af : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00000000000bb014 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x5841
0x00000000000bf837 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x00000000000bf9b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000002bd89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000000d1892 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000bdcc3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000000bc76d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf001
0x00000000000ebd75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000014f9ab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000515d9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x0000000000044bb3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xed85
0x000000000019bcd9 : add byte ptr [rax], al ; add byte ptr [rdi], dl ; add byte ptr [rax], al ; adc byte ptr [rdx - 0xe], cl ; call qword ptr [rbx]
0x00000000000ab657 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000000c2c0b : add byte ptr [rax], al ; add byte ptr [rdx + rdx*8 - 0x76b7678b], al ; ret
0x000000000014faf0 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x00000000001597c2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000091e5a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000091982 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000b304d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000018d671 : add byte ptr [rax], al ; add byte ptr [rsi + rax*2 - 0x17], ch ; jmp rcx
0x000000000010502b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, edi ; bswap eax ; ret
0x0000000000158f0d : add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf 0xc985
0x00000000000e34e8 : add byte ptr [rax], al ; add cl, ch ; mov ebp, 0x83000001 ; ret
0x000000000003cc35 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000597d2 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd2
0x00000000000dd150 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff9
0x000000000004a6c1 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000117123 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000024069 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000003cf54 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff2
0x00000000000d5159 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff6
0x00000000000264fe : add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x00000000001066ec : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000005fbe9 : add byte ptr [rax], al ; add cl, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000067c2e : add byte ptr [rax], al ; add dh, al ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x0000000000061bf0 : add byte ptr [rax], al ; add dh, al ; test eax, edi ; idiv bh ; jmp qword ptr [rax]
0x00000000000cfe5e : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000261de : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000f0b3d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000015df91 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000d0e12 : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x0000000000119f21 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000000000097aa0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000097aa9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000000000004e94d : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x000000000010001f : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x000000000018ed16 : add byte ptr [rax], al ; add dl, bpl ; call qword ptr [rbx]
0x00000000001a15c7 : add byte ptr [rax], al ; add dword ptr [rax], eax ; xor al, 0xcc ; hlt ; jmp qword ptr [rcx]
0x000000000019fc12 : add byte ptr [rax], al ; add dword ptr es:[rax], eax ; clc ; jb 0x19fc18 ; jmp qword ptr [rcx]
0x000000000011f37b : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf042454] ; retf 0x5089
0x00000000001a1f12 : add byte ptr [rax], al ; add qword ptr [r8], rax ; sbb dh, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000e0eea : add byte ptr [rax], al ; add r9, r15 ; add r8, r15 ; call r14
0x00000000000450ee : add byte ptr [rax], al ; add rax, 1 ; pop rbx ; ret
0x00000000000b364e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000091833 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000150aa8 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x0000000000069a57 : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000011e7a1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000120c81 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001203d1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000011dc14 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000346ec : add byte ptr [rax], al ; add rdx, rcx ; jmp 0x34705
0x0000000000111db0 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011aaa6 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000036299 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000369e5 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b4765 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000035a18 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000e7fa7 : add byte ptr [rax], al ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002208b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00000000000755a5 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000350d0 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000007f893 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000162be1 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000000e7789 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e7e83 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000043844 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000087aad : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000022e17 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000034ca6 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000353a6 : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000001924e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; ret 0x5f
0x00000000001948fa : add byte ptr [rax], al ; and al, 0x21 ; out dx, al ; call rsp
0x00000000001a1eea : add byte ptr [rax], al ; and al, 0x49 ; add dword ptr [rax], eax ; loopne 0x1a1ee8 ; hlt ; jmp qword ptr [rcx]
0x00000000001a2fea : add byte ptr [rax], al ; and al, 0x5a ; add dword ptr [rax], eax ; nop ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000193faa : add byte ptr [rax], al ; and al, 0xf4 ; in eax, dx ; jmp rsp
0x000000000019b7ce : add byte ptr [rax], al ; and al, dh ; int1 ; call qword ptr [rax]
0x00000000001a11e6 : add byte ptr [rax], al ; and byte ptr [rcx + rax], bh ; add ah, ah ; ret
0x00000000001a29e6 : add byte ptr [rax], al ; and byte ptr [rcx + rax], dl ; je 0x1a2a06 ; cmc ; jmp qword ptr [rcx]
0x000000000019c4be : add byte ptr [rax], al ; and byte ptr [rdi - 0xe], ch ; call rcx
0x0000000000198fe6 : add byte ptr [rax], al ; and byte ptr [rdx + 0x2c840000], bh ; sti ; call qword ptr [rax]
0x00000000000a1936 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000f5924 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000019f92a : add byte ptr [rax], al ; and eax, dword ptr fs:[rcx] ; add al, ah ; push -0xc ; call qword ptr [rax]
0x000000000002ee9b : add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000075d8e : add byte ptr [rax], al ; and edx, 0xffffffcf ; mov dword ptr [rdi], edx ; ret
0x0000000000187f2e : add byte ptr [rax], al ; and r13b, bl ; jmp rax
0x000000000019f90e : add byte ptr [rax], al ; and rax, qword ptr [rcx] ; add byte ptr [rbp + rsi*8 - 8], bl ; call qword ptr [rax]
0x0000000000091a5e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000974e0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000971c4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000011f22a : add byte ptr [rax], al ; call 0x11b504
0x00000000001904e6 : add byte ptr [rax], al ; call 0x1218ef7a
0x00000000001980f6 : add byte ptr [rax], al ; call 0x12197008
0x00000000000449c1 : add byte ptr [rax], al ; call 0x21494
0x000000000010544e : add byte ptr [rax], al ; call 0x2166c
0x00000000000e53ca : add byte ptr [rax], al ; call 0x2167c
0x0000000000042707 : add byte ptr [rax], al ; call 0x2e9f4
0x0000000000051ae4 : add byte ptr [rax], al ; call 0x6e504
0x000000000006fd33 : add byte ptr [rax], al ; call 0x7bf84
0x000000000010b772 : add byte ptr [rax], al ; call 0xe7a74
0x000000000016d3ea : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000163a5e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000012cb6e : add byte ptr [rax], al ; call r14
0x0000000000021de6 : add byte ptr [rax], al ; call rax
0x0000000000170fbe : add byte ptr [rax], al ; call rdi
0x0000000000038405 : add byte ptr [rax], al ; call rdx
0x000000000017016e : add byte ptr [rax], al ; call rsp
0x00000000001a04be : add byte ptr [rax], al ; clc ; add dword ptr cs:[rax], eax ; or al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x0000000000193aa6 : add byte ptr [rax], al ; clc ; in eax, 0xed ; call qword ptr [rdi]
0x00000000000a19b4 : add byte ptr [rax], al ; clc ; jg 0xa19b8 ; int1 ; mov eax, eax ; ret
0x0000000000198fbe : add byte ptr [rax], al ; clc ; mov ecx, 0x3a5c0000 ; cli ; call qword ptr [rax]
0x0000000000190446 : add byte ptr [rax], al ; clc ; xchg edx, ebp ; call qword ptr [rcx]
0x0000000000196ec2 : add byte ptr [rax], al ; cld ; cwde ; add byte ptr [rax], al ; or dl, al ; out dx, al ; jmp qword ptr [rsi]
0x00000000001963e2 : add byte ptr [rax], al ; cld ; jge 0x1963da ; jmp qword ptr [rbx]
0x0000000000196322 : add byte ptr [rax], al ; cld ; jp 0x19631a ; call qword ptr [rdx]
0x00000000001961c2 : add byte ptr [rax], al ; cld ; mov eax, dword ptr [rax] ; add byte ptr [rax + 0x77], ch ; out dx, al ; call qword ptr [rdi]
0x00000000001a2fc2 : add byte ptr [rax], al ; cld ; pop rcx ; add dword ptr [rax], eax ; pop rax ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001891c6 : add byte ptr [rax], al ; cld ; ret
0x0000000000187ab6 : add byte ptr [rax], al ; cld ; retf
0x000000000018f1c2 : add byte ptr [rax], al ; cld ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; xor ch, dl ; call qword ptr [rdx]
0x0000000000188a7e : add byte ptr [rax], al ; cld ; std ; out dx, al ; jmp qword ptr [rax]
0x0000000000188c56 : add byte ptr [rax], al ; cld ; sub edi, ebp ; jmp rsp
0x00000000001a7ec2 : add byte ptr [rax], al ; cld ; test al, 1 ; add byte ptr [rax], bh ; retf 0xfff6
0x0000000000189156 : add byte ptr [rax], al ; cld ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x00000000000bf9b6 : add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000ebd76 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000001104b0 : add byte ptr [rax], al ; cmovae eax, edi ; ret
0x00000000000f7639 : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000df0a1 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000ee277 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a18e1 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000a18a9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000087851 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d1893 : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x00000000000bf838 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000008a6d3 : add byte ptr [rax], al ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000a349e : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c4b7f : add byte ptr [rax], al ; cmovne rdx, rax ; mov rax, rdx ; ret
0x00000000000fd9df : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000019c9fe : add byte ptr [rax], al ; cmp ah, dh ; add byte ptr [rax], al ; in al, dx ; xchg dl, dh ; jmp qword ptr [rcx]
0x000000000019fb02 : add byte ptr [rax], al ; cmp al, 0x25 ; add dword ptr [rax], eax ; fdiv dword ptr [rdx - 0xc] ; call qword ptr [rcx]
0x00000000000cc026 : add byte ptr [rax], al ; cmp al, 0x3d ; je 0xcc091 ; cmp al, 0x2e ; jne 0xcc003 ; jmp 0xcc044
0x00000000001a2202 : add byte ptr [rax], al ; cmp al, 0x4c ; add dword ptr [rax], eax ; js 0x1a220a ; hlt ; jmp rcx
0x0000000000196432 : add byte ptr [rax], al ; cmp al, 0x7e ; out dx, al ; jmp qword ptr [rbx]
0x0000000000198e32 : add byte ptr [rax], al ; cmp al, 0x7e ; sti ; call rsp
0x0000000000199012 : add byte ptr [rax], al ; cmp al, 0x80 ; sti ; call qword ptr [rax]
0x00000000001a6002 : add byte ptr [rax], al ; cmp al, 0x8a ; add dword ptr [rax], eax ; sub byte ptr [rsi + rsi*8], dl ; call rdx
0x000000000019e102 : add byte ptr [rax], al ; cmp al, 0xb ; add dword ptr [rax], eax ; pop rax ; push rcx ; jmp rdx
0x00000000001888f6 : add byte ptr [rax], al ; cmp al, 0xc2 ; out dx, al ; inc esp ; retf 0
0x000000000018890e : add byte ptr [rax], al ; cmp al, 0xc3 ; out dx, al ; push qword ptr [rax] ; retf
0x000000000019ae72 : add byte ptr [rax], al ; cmp al, 0xdf ; sti ; jmp rsi
0x00000000001a25fe : add byte ptr [rax], al ; cmp byte ptr [rax + 1], dl ; add ah, ch ; add al, 0xf5 ; call qword ptr [rdi]
0x00000000001486b6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000195876 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x12], dl ; jmp qword ptr [rsi]
0x0000000000194aa6 : add byte ptr [rax], al ; cmp byte ptr [rsi], ah ; out dx, al ; call qword ptr [rdi]
0x0000000000192bfe : add byte ptr [rax], al ; cmp byte ptr [rsi], dl ; add byte ptr [rsp], cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a0ec7 : add byte ptr [rax], al ; cmp dword ptr [rcx], eax ; add byte ptr [rsi + rdi*4], ah ; hlt ; call qword ptr [rcx]
0x0000000000103dae : add byte ptr [rax], al ; cmp rdx, rcx ; ja 0x103de5 ; xor eax, eax ; syscall
0x00000000001ac95e : add byte ptr [rax], al ; cwde ; add dword ptr [rax], eax ; pushfq ; je 0x1ac96b ; jmp qword ptr [rdx]
0x00000000001964e6 : add byte ptr [rax], al ; cwde ; insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x00000000001995b6 : add byte ptr [rax], al ; cwde ; loopne 0x1995bb ; call rsp
0x000000000019905e : add byte ptr [rax], al ; cwde ; mov edx, 0x5b0c0000 ; cli ; call qword ptr [rax]
0x00000000001aa15e : add byte ptr [rax], al ; cwde ; retf
0x000000000016c2d6 : add byte ptr [rax], al ; enter 0, 0 ; retf
0x000000000017116e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000016d4f6 : add byte ptr [rax], al ; enter 0x11, 0 ; retf
0x00000000001a068e : add byte ptr [rax], al ; enter 0x130, 0 ; cmp al, 0x9f ; hlt ; call rcx
0x000000000016d8f6 : add byte ptr [rax], al ; enter 0x14, 0 ; retf
0x00000000001a588e : add byte ptr [rax], al ; enter 0x182, 0 ; cmc ; call qword ptr [rbx]
0x000000000017256e : add byte ptr [rax], al ; enter 0xa, 0 ; retf 0xa
0x000000000017276e : add byte ptr [rax], al ; enter 0xb, 0 ; retf 0xb
0x000000000019928e : add byte ptr [rax], al ; enter 0xbc, 0 ; in al, dx ; xor al, dh ; jmp qword ptr [rbx]
0x000000000017296e : add byte ptr [rax], al ; enter 0xc, 0 ; retf 0xc
0x000000000019968e : add byte ptr [rax], al ; enter 0xc0, 0 ; in al, dx ; jg 0x199690 ; call qword ptr [rdx]
0x000000000016d0f6 : add byte ptr [rax], al ; enter 0xe, 0 ; retf
0x000000000019b68e : add byte ptr [rax], al ; enter 0xe0, 0 ; jl 0x19b6bc ; stc ; jmp qword ptr [rbx]
0x000000000016c41e : add byte ptr [rax], al ; enter 1, 0 ; retf
0x000000000017136e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x000000000017156e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x000000000017176e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x000000000017196e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x0000000000171b6e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x0000000000171d6e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x000000000000182e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x000000000017216e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x000000000017236e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x000000000018d6a2 : add byte ptr [rax], al ; fadd qword ptr [rax] ; add byte ptr [rax], al ; sub byte ptr [rax - 0x17], cl ; call qword ptr [rsi]
0x00000000001a58a2 : add byte ptr [rax], al ; fadd qword ptr [rdx - 0xda7ffff] ; cmc ; jmp qword ptr [rdi]
0x00000000001a2b9e : add byte ptr [rax], al ; fcom dword ptr [rbp + 1] ; add ah, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018ed9e : add byte ptr [rax], al ; fcom dword ptr [rdi] ; add byte ptr [rax], al ; pushfq ; add dl, ch ; call qword ptr [rbx]
0x000000000019e9a2 : add byte ptr [rax], al ; fcom qword ptr [rbx] ; add dword ptr [rax], eax ; test al, 0xd6 ; jmp qword ptr [rdi]
0x00000000001a31a2 : add byte ptr [rax], al ; fcomp qword ptr [rbx + 1] ; add al, bh ; cmc ; jmp qword ptr [rcx]
0x000000000019af9e : add byte ptr [rax], al ; fcomp st(1) ; add byte ptr [rax], al ; or al, 0x8c ; int1 ; call qword ptr [rcx]
0x000000000019b19e : add byte ptr [rax], al ; fcomp st(3) ; add byte ptr [rax], al ; pushfq ; xchg eax, ebx ; int1 ; call rcx
0x000000000019ad46 : add byte ptr [rax], al ; fdiv dword ptr [rdi] ; cld ; jmp qword ptr [rbx]
0x0000000000194aa2 : add byte ptr [rax], al ; fdiv qword ptr [rax + rax] ; cmp byte ptr [rsi], ah ; out dx, al ; call qword ptr [rdi]
0x0000000000198da2 : add byte ptr [rax], al ; fdiv qword ptr [rdi - 0x75f80000] ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000197a76 : add byte ptr [rax], al ; fdiv st(3) ; out dx, al ; jmp rbx
0x00000000001a159e : add byte ptr [rax], al ; fdivr dword ptr [rdi] ; add dword ptr [rax], eax ; cld ; retf
0x00000000001a149e : add byte ptr [rax], al ; fdivr dword ptr [rsi] ; add dword ptr [rax], eax ; leave ; hlt ; jmp qword ptr [rcx]
0x00000000001992a2 : add byte ptr [rax], al ; fdivr qword ptr [rax + rax - 0xfc8f800] ; call rsp
0x000000000019b02a : add byte ptr [rax], al ; fiadd dword ptr fs:[rax] ; add byte ptr [rax - 0x74], dh ; int1 ; call qword ptr [rcx]
0x0000000000034bee : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x00000000001963a2 : add byte ptr [rax], al ; fmul qword ptr [rbp + 0x7da80000] ; out dx, al ; jmp qword ptr [rbx]
0x0000000000193aa2 : add byte ptr [rax], al ; fsub qword ptr [rax + rax] ; clc ; in eax, 0xed ; call qword ptr [rdi]
0x0000000000188f06 : add byte ptr [rax], al ; fsubr qword ptr [rbx - 0x11] ; call qword ptr [rax]
0x00000000001885fe : add byte ptr [rax], al ; fsubr qword ptr [rdx - 0x12] ; call rsp
0x0000000000197522 : add byte ptr [rax], al ; fsubr st(2), st(0) ; out dx, al ; call qword ptr [rdx]
0x0000000000187bae : add byte ptr [rax], al ; fucomip st(2) ; jmp qword ptr [rax]
0x00000000001a59ba : add byte ptr [rax], al ; hlt ; add dword ptr [rcx], 0 ; nop ; hlt ; cmc ; call qword ptr [rdi]
0x00000000001a598f : add byte ptr [rax], al ; hlt ; cmc ; call qword ptr [rdi]
0x00000000001975ca : add byte ptr [rax], al ; hlt ; out 0xee, al ; jmp rsp
0x000000000019c4ba : add byte ptr [rax], al ; hlt ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdi - 0xe], ch ; call rcx
0x00000000001aa0ba : add byte ptr [rax], al ; hlt ; retf 1
0x00000000001a02ba : add byte ptr [rax], al ; hlt ; sub al, 1 ; add byte ptr [rax - 0x77], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001967ba : add byte ptr [rax], al ; hlt ; xchg eax, ecx ; add byte ptr [rax], al ; mov al, 0x84 ; out dx, al ; jmp qword ptr [rsi]
0x000000000019405a : add byte ptr [rax], al ; imul ebp ; call qword ptr [rsi]
0x000000000019874a : add byte ptr [rax], al ; in al, 0x1b ; out dx, eax ; call rdi
0x00000000001a578a : add byte ptr [rax], al ; in al, 0x2a ; add dword ptr [rax], eax ; and al, dh ; cmc ; call rcx
0x00000000001a29aa : add byte ptr [rax], al ; in al, 0x53 ; add dword ptr [rax], eax ; and byte ptr [rdi], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000196cba : add byte ptr [rax], al ; in al, 0x9c ; out dx, al ; call qword ptr [rax]
0x0000000000172fde : add byte ptr [rax], al ; in al, 0xc ; in al, dx ; jmp rsp
0x0000000000197cd2 : add byte ptr [rax], al ; in al, dx ; imul dh ; call qword ptr [rax]
0x0000000000199692 : add byte ptr [rax], al ; in al, dx ; jg 0x19968c ; call qword ptr [rdx]
0x00000000001962f2 : add byte ptr [rax], al ; in al, dx ; jp 0x1962ea ; call qword ptr [rdx]
0x000000000018880e : add byte ptr [rax], al ; in al, dx ; lodsb al, byte ptr [rsi] ; out dx, al ; jmp rsp
0x00000000001995b2 : add byte ptr [rax], al ; in al, dx ; mov edi, 0xe0980000 ; sti ; call rsp
0x00000000001999b2 : add byte ptr [rax], al ; in al, dx ; ret
0x000000000018d516 : add byte ptr [rax], al ; in al, dx ; ret 0xfffd
0x000000000019a1b2 : add byte ptr [rax], al ; in al, dx ; retf
0x000000000019ca02 : add byte ptr [rax], al ; in al, dx ; xchg dl, dh ; jmp qword ptr [rcx]
0x0000000000199292 : add byte ptr [rax], al ; in al, dx ; xor al, dh ; jmp qword ptr [rbx]
0x000000000018ed52 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dl, ch ; call qword ptr [rbx]
0x0000000000188846 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov bl, 0xee ; call qword ptr [rax]
0x00000000001884ee : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov cl, 0xec ; call qword ptr [rax]
0x00000000001a3332 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rbp ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000199832 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x00000000001891ee : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001ad132 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sti ; add dword ptr [rax], eax ; pop rax ; in al, 0xf7 ; call qword ptr [rdx]
0x00000000001887de : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; out dx, al ; jmp rax
0x000000000018f13a : add byte ptr [rax], al ; je 0x18f162 ; add byte ptr [rax], al ; rcr byte ptr [rsi], 0xea ; jmp rdx
0x0000000000193a3a : add byte ptr [rax], al ; je 0x193aab ; add byte ptr [rax], al ; push rax ; in al, 0xed ; call qword ptr [rdi]
0x000000000019ab3a : add byte ptr [rax], al ; je 0x19ab1c ; add byte ptr [rax], al ; mov al, 0x44 ; int1 ; call qword ptr [rbx]
0x000000000019b66a : add byte ptr [rax], al ; je 0x19b62b ; int1 ; jmp qword ptr [rcx]
0x000000000019ed3a : add byte ptr [rax], al ; je 0x19ed5e ; add dword ptr [rax], eax ; adc bl, dh ; jmp qword ptr [rcx]
0x00000000001a1f3a : add byte ptr [rax], al ; je 0x1a1f90 ; add dword ptr [rax], eax ; push rax ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b7a : add byte ptr [rax], al ; je 0x1b0b89 ; add byte ptr [rax], al ; syscall
0x0000000000086606 : add byte ptr [rax], al ; je 0x86615 ; ret
0x00000000000ab658 : add byte ptr [rax], al ; je 0xab663 ; ret
0x00000000000b3164 : add byte ptr [rax], al ; je 0xb31d8 ; lea rax, [rdi - 0x10] ; ret
0x00000000000c6192 : add byte ptr [rax], al ; je 0xc61f9 ; mov eax, 0x7f ; ret
0x00000000000c63d6 : add byte ptr [rax], al ; je 0xc63c4 ; mov eax, 1 ; ret
0x000000000015eb23 : add byte ptr [rax], al ; jg 0x15eb36 ; neg eax ; ret
0x000000000019659a : add byte ptr [rax], al ; jg 0x196592 ; jmp qword ptr [rbx]
0x00000000001a54c7 : add byte ptr [rax], al ; jg 0x1a54d4 ; add byte ptr [rcx + rbp*8 - 0xb], al ; call qword ptr [rbx]
0x00000000001a550a : add byte ptr [rax], al ; jg 0x1a5519 ; add byte ptr [rax - 0x17], dh ; cmc ; call qword ptr [rbx]
0x00000000000b2c23 : add byte ptr [rax], al ; jg 0xb2c2f ; neg eax ; ret
0x000000000015b8f9 : add byte ptr [rax], al ; jl 0x15b906 ; neg eax ; ret
0x00000000001888fe : add byte ptr [rax], al ; jl 0x1888c9 ; out dx, al ; jmp rax
0x0000000000188c9e : add byte ptr [rax], al ; jl 0x188cda ; out dx, eax ; call rax
0x0000000000189216 : add byte ptr [rax], al ; jl 0x1891f0 ; out dx, eax ; jmp rax
0x000000000018d506 : add byte ptr [rax], al ; jl 0x18d4d1 ; std ; jmp rax
0x0000000000190442 : add byte ptr [rax], al ; jl 0x19047d ; add byte ptr [rax], al ; clc ; xchg edx, ebp ; call qword ptr [rcx]
0x0000000000194dd2 : add byte ptr [rax], al ; jl 0x194e0a ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196442 : add byte ptr [rax], al ; jl 0x1963dd ; add byte ptr [rax], al ; js 0x1964c0 ; stc ; jmp qword ptr [rbx]
0x000000000019ad42 : add byte ptr [rax], al ; jl 0x19ad26 ; add byte ptr [rax], al ; fdiv dword ptr [rdi] ; cld ; jmp qword ptr [rbx]
0x000000000019b042 : add byte ptr [rax], al ; jl 0x19afd7 ; int1 ; call qword ptr [rax]
0x000000000019b172 : add byte ptr [rax], al ; jl 0x19b10e ; int1 ; jmp qword ptr [rax]
0x000000000019b1e2 : add byte ptr [rax], al ; jl 0x19b17f ; int1 ; call rcx
0x000000000019b692 : add byte ptr [rax], al ; jl 0x19b6b8 ; stc ; jmp qword ptr [rbx]
0x00000000001a2442 : add byte ptr [rax], al ; jl 0x1a249d ; add dword ptr [rax], eax ; call 0x131a1958
0x00000000001a3242 : add byte ptr [rax], al ; jl 0x1a32ab ; add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a5a42 : add byte ptr [rax], al ; jl 0x1a59d3 ; add dword ptr [rax], eax ; cmp ch, dh ; cmc ; call qword ptr [rdi]
0x00000000001ab142 : add byte ptr [rax], al ; jl 0x1ab12a ; add dword ptr [rax], eax ; or byte ptr [rcx - 9], bh ; jmp qword ptr [rbx]
0x000000000019645a : add byte ptr [rax], al ; jle 0x196452 ; jmp qword ptr [rbx]
0x0000000000196482 : add byte ptr [rax], al ; jle 0x19647a ; jmp qword ptr [rbx]
0x00000000001964fa : add byte ptr [rax], al ; jle 0x1964f2 ; jmp qword ptr [rbx]
0x0000000000118c91 : add byte ptr [rax], al ; jmp 0x118c63
0x00000000000382f6 : add byte ptr [rax], al ; jmp 0x382c8
0x0000000000080f49 : add byte ptr [rax], al ; jmp 0x80f1b
0x00000000000858f6 : add byte ptr [rax], al ; jmp 0x858c8
0x00000000000e341c : add byte ptr [rax], al ; jmp 0xe33e6
0x00000000000eda82 : add byte ptr [rax], al ; jmp 0xeda54
0x0000000000177f2e : add byte ptr [rax], al ; jmp 0xffffffffc3177f44
0x00000000001aea72 : add byte ptr [rax], al ; jmp 0xffffffffcb1aea86
0x0000000000024a6a : add byte ptr [rax], al ; jmp rax
0x000000000011dc1b : add byte ptr [rax], al ; jmp rcx
0x0000000000150e72 : add byte ptr [rax], al ; jne 0x150d88 ; ret
0x0000000000157d70 : add byte ptr [rax], al ; jne 0x157cf8 ; ret
0x000000000002177f : add byte ptr [rax], al ; jne 0x2174b ; ret
0x000000000003ad39 : add byte ptr [rax], al ; jne 0x3ad7c ; xor eax, eax ; ret
0x000000000003d709 : add byte ptr [rax], al ; jne 0x3d74c ; xor eax, eax ; ret
0x00000000000400f9 : add byte ptr [rax], al ; jne 0x4013c ; xor eax, eax ; ret
0x0000000000047f49 : add byte ptr [rax], al ; jne 0x47f8c ; xor eax, eax ; ret
0x00000000000a3e89 : add byte ptr [rax], al ; jne 0xa3ecc ; xor eax, eax ; ret
0x00000000000a6609 : add byte ptr [rax], al ; jne 0xa664c ; xor eax, eax ; ret
0x00000000000a8cf9 : add byte ptr [rax], al ; jne 0xa8d3c ; xor eax, eax ; ret
0x00000000000af049 : add byte ptr [rax], al ; jne 0xaf08c ; xor eax, eax ; ret
0x00000000000c352e : add byte ptr [rax], al ; jne 0xc34f7 ; jmp 0xc34ee
0x00000000000c61c7 : add byte ptr [rax], al ; jne 0xc619b ; ret
0x00000000000e5371 : add byte ptr [rax], al ; jne 0xe5339 ; mov rdi, rax ; call 0x21681
0x00000000000fa44e : add byte ptr [rax], al ; jne 0xfa417 ; jmp 0xfa40e
0x00000000000fc00e : add byte ptr [rax], al ; jne 0xfbfd7 ; jmp 0xfbfce
0x000000000019641e : add byte ptr [rax], al ; jo 0x196494 ; stc ; jmp qword ptr [rbx]
0x0000000000199036 : add byte ptr [rax], al ; jo 0x198ffd ; add byte ptr [rax], al ; mov ah, 0xb6 ; out dx, eax ; call qword ptr [rax]
0x000000000019b02e : add byte ptr [rax], al ; jo 0x19afc3 ; int1 ; call qword ptr [rcx]
0x000000000019b736 : add byte ptr [rax], al ; jo 0x19b724 ; add byte ptr [rax], al ; adc al, 0xc0 ; int1 ; call qword ptr [rdx]
0x00000000001a0636 : add byte ptr [rax], al ; jo 0x1a0673 ; add dword ptr [rax], eax ; xor al, 0x9e ; hlt ; jmp rsi
0x00000000001a2f36 : add byte ptr [rax], al ; jo 0x1a2f9c ; add dword ptr [rax], eax ; mov ah, 0x33 ; cmc ; jmp qword ptr [rcx]
0x000000000019323e : add byte ptr [rax], al ; js 0x1932a5 ; add byte ptr [rax], al ; ret 0xffed
0x0000000000196446 : add byte ptr [rax], al ; js 0x1964bc ; stc ; jmp qword ptr [rbx]
0x0000000000197786 : add byte ptr [rax], al ; js 0x19777b ; out dx, al ; jmp rcx
0x0000000000198056 : add byte ptr [rax], al ; js 0x198063 ; out dx, eax ; call qword ptr [rax]
0x0000000000198a96 : add byte ptr [rax], al ; js 0x198af5 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019ade6 : add byte ptr [rax], al ; js 0x19adc7 ; sti ; call qword ptr [rbx]
0x000000000019b03e : add byte ptr [rax], al ; js 0x19b025 ; add byte ptr [rax], al ; jl 0x19afdb ; int1 ; call qword ptr [rax]
0x000000000019fd3e : add byte ptr [rax], al ; js 0x19fd72 ; add dword ptr [rax], eax ; pushfq ; ja 0x19fd44 ; jmp qword ptr [rcx]
0x00000000001a313e : add byte ptr [rax], al ; js 0x1a31a6 ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000000c66a5 : add byte ptr [rax], al ; js 0xc66b5 ; ret
0x0000000000063694 : add byte ptr [rax], al ; lea r8, [rip + 0x114943] ; jmp rax
0x0000000000118c51 : add byte ptr [rax], al ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x0000000000118af6 : add byte ptr [rax], al ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x000000000015cd5e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000015cd6e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000015cd7e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000015cd8e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000015cd9e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000015ccbd : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000015ccde : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000015ccee : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000015ccfe : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000015cd0e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000015cd1e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000015cd2e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000015cc6a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000015cd3e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000015cd4e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000b303b : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000b319e : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000b31be : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000b31ae : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000015ccce : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000021eee : add byte ptr [rax], al ; lea rax, [rip + 0x15b467] ; ret
0x0000000000021efe : add byte ptr [rax], al ; lea rax, [rip + 0x15d1f9] ; ret
0x0000000000042d46 : add byte ptr [rax], al ; lea rsi, [rip + 0x1f1] ; call rax
0x000000000006f4c4 : add byte ptr [rax], al ; lea rsi, [rip + 0x243] ; call rax
0x000000000007b680 : add byte ptr [rax], al ; lea rsi, [rip - 0x119] ; call rax
0x000000000007cbec : add byte ptr [rax], al ; lea rsi, [rip - 0x1685] ; call rax
0x000000000006f884 : add byte ptr [rax], al ; lea rsi, [rip - 0x17d] ; call rax
0x000000000007cef2 : add byte ptr [rax], al ; lea rsi, [rip - 0x198b] ; call rax
0x000000000007d275 : add byte ptr [rax], al ; lea rsi, [rip - 0x1d0e] ; call rax
0x000000000007b9be : add byte ptr [rax], al ; lea rsi, [rip - 0x457] ; call rax
0x00000000001a3ab6 : add byte ptr [rax], al ; lock add dword ptr fs:[rax], eax ; test byte ptr [rbx - 0xb], cl ; call qword ptr [rdx]
0x000000000018edf2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dl, ch ; call qword ptr [rcx]
0x00000000001a1e72 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; sub ch, ch ; hlt ; jmp qword ptr [rcx]
0x000000000019fa72 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and al, 1 ; add byte ptr [rax + 0x72], bl ; hlt ; call qword ptr [rdx]
0x0000000000197a72 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv st(3) ; out dx, al ; jmp rbx
0x00000000001891be : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000188126 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xffeb
0x000000000018d50e : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xfffd
0x0000000000193fa6 : add byte ptr [rax], al ; loopne 0x19401c ; add byte ptr [rax], al ; and al, 0xf4 ; in eax, dx ; jmp rsp
0x000000000019598e : add byte ptr [rax], al ; loopne 0x1959f2 ; out dx, al ; call rsp
0x00000000001964a6 : add byte ptr [rax], al ; loopne 0x196441 ; add byte ptr [rax], al ; push rsp ; jle 0x1964a6 ; jmp qword ptr [rbx]
0x00000000001963ce : add byte ptr [rax], al ; loopne 0x196454 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000198ba6 : add byte ptr [rax], al ; loopne 0x198b68 ; add byte ptr [rax], al ; test byte ptr [rdx - 0x11], bl ; call qword ptr [rax]
0x000000000019912a : add byte ptr [rax], al ; loopne 0x199123 ; jmp rdx
0x000000000019d5a6 : add byte ptr [rax], al ; loopne 0x19d5b2 ; add byte ptr [rax], al ; adc al, 5 ; call rsi
0x000000000019daa6 : add byte ptr [rax], al ; loopne 0x19dab7 ; add dword ptr [rax], eax ; sbb dh, bl ; jmp rdx
0x000000000019eea6 : add byte ptr [rax], al ; loopne 0x19eecb ; add dword ptr [rax], eax ; je 0x19eeb7 ; hlt ; jmp rcx
0x00000000001a02a6 : add byte ptr [rax], al ; loopne 0x1a02df ; add dword ptr [rax], eax ; push rsp ; mov esp, esi ; jmp qword ptr [rcx]
0x00000000001a1fa6 : add byte ptr [rax], al ; loopne 0x1a1ffc ; add dword ptr [rax], eax ; add al, 0xef ; hlt ; jmp qword ptr [rdx]
0x00000000001a317a : add byte ptr [rax], al ; mov ah, 0x5b ; add dword ptr [rax], eax ; sal byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000001a587a : add byte ptr [rax], al ; mov ah, 0x82 ; add dword ptr [rax], eax ; cmc ; call qword ptr [rbx]
0x000000000019903a : add byte ptr [rax], al ; mov ah, 0xb6 ; out dx, eax ; call qword ptr [rax]
0x000000000019e57a : add byte ptr [rax], al ; mov ah, 0xf ; add dword ptr [rax], eax ; nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax]
0x00000000001ac87a : add byte ptr [rax], al ; mov ah, 0xf2 ; add dword ptr [rax], eax ; push rax ; jne 0x1ac887 ; jmp qword ptr [rdx]
0x000000000019ab3e : add byte ptr [rax], al ; mov al, 0x44 ; int1 ; call qword ptr [rbx]
0x00000000001a3576 : add byte ptr [rax], al ; mov al, 0x5f ; add dword ptr [rax], eax ; add al, 0x3c ; cmc ; jmp qword ptr [rcx]
0x00000000001a5776 : add byte ptr [rax], al ; mov al, 0x81 ; add dword ptr [rax], eax ; adc al, 0xf0 ; cmc ; call qword ptr [rdi]
0x00000000001967be : add byte ptr [rax], al ; mov al, 0x84 ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a5b76 : add byte ptr [rax], al ; mov al, 0x85 ; add dword ptr [rax], eax ; div ebp ; call qword ptr [rcx]
0x0000000000197976 : add byte ptr [rax], al ; mov al, 0xa3 ; add byte ptr [rax], al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000146a9e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000014276e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000112606 : add byte ptr [rax], al ; mov byte ptr [r10], 0 ; ret
0x000000000016c74a : add byte ptr [rax], al ; mov byte ptr [rax + rax], 0 ; retf 4
0x0000000000196496 : add byte ptr [rax], al ; mov byte ptr [rbp - 7], ch ; jmp qword ptr [rbx]
0x00000000001a1f4e : add byte ptr [rax], al ; mov byte ptr [rcx + 1], cl ; add byte ptr [rsi + rbp*8 - 0xc], ch ; jmp qword ptr [rcx]
0x000000000014473e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000ccfc6 : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000001959d6 : add byte ptr [rax], al ; mov byte ptr [rdi - 0x12], bl ; call qword ptr [rdx]
0x0000000000078fae : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000155783 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000009dcde : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000009c6de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000018ed4e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dl, ch ; call qword ptr [rbx]
0x000000000019ed4e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; add dword ptr [rax], eax ; sub al, 0xf3 ; jmp qword ptr [rcx]
0x000000000009d6ae : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000008e28e : add byte ptr [rax], al ; mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x000000000009d3ae : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000193366 : add byte ptr [rax], al ; mov dl, cl ; in eax, dx ; jmp qword ptr [rdi]
0x000000000014477e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000014479e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000014478e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000014476e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e63ee : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009d6ce : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000008e47e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x000000000009d6ee : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009d6fe : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009d6de : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000007ed7b : add byte ptr [rax], al ; mov dword ptr [rip + 0x336529], eax ; ret
0x000000000011995f : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000119a0e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x00000000001199fe : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x0000000000119a2e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000119a1e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000e6c14 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000009c6ee : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000051cf6 : add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x00000000000eca84 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000e76de : add byte ptr [rax], al ; mov eax, 0x102 ; syscall
0x00000000000e94ce : add byte ptr [rax], al ; mov eax, 0x107 ; syscall
0x00000000000e940e : add byte ptr [rax], al ; mov eax, 0x10a ; syscall
0x00000000000f67de : add byte ptr [rax], al ; mov eax, 0x110 ; syscall
0x00000000000f5c83 : add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x00000000000f683e : add byte ptr [rax], al ; mov eax, 0x11b ; syscall
0x00000000000f64ae : add byte ptr [rax], al ; mov eax, 0x123 ; syscall
0x00000000000e824e : add byte ptr [rax], al ; mov eax, 0x124 ; syscall
0x00000000000e82ae : add byte ptr [rax], al ; mov eax, 0x125 ; syscall
0x00000000000f65ce : add byte ptr [rax], al ; mov eax, 0x126 ; syscall
0x00000000000f68ce : add byte ptr [rax], al ; mov eax, 0x12c ; syscall
0x00000000000f63ee : add byte ptr [rax], al ; mov eax, 0x131 ; syscall
0x00000000000f69ee : add byte ptr [rax], al ; mov eax, 0x14a ; syscall
0x00000000000f6a1e : add byte ptr [rax], al ; mov eax, 0x14b ; syscall
0x000000000007ec8e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000e827e : add byte ptr [rax], al ; mov eax, 0x16 ; syscall
0x000000000007ebee : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000000f0cce : add byte ptr [rax], al ; mov eax, 0x1b ; syscall
0x00000000000f792e : add byte ptr [rax], al ; mov eax, 0x1e ; syscall
0x00000000000f79be : add byte ptr [rax], al ; mov eax, 0x1f ; syscall
0x00000000000e821e : add byte ptr [rax], al ; mov eax, 0x21 ; syscall
0x00000000000b6f0e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000000c5a4e : add byte ptr [rax], al ; mov eax, 0x27 ; syscall
0x00000000000f717e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x00000000000f6c4e : add byte ptr [rax], al ; mov eax, 0x33 ; syscall
0x00000000000c50ee : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000360fe : add byte ptr [rax], al ; mov eax, 0x3e ; syscall
0x00000000000f785e : add byte ptr [rax], al ; mov eax, 0x40 ; syscall
0x00000000000f77ee : add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x00000000000f781e : add byte ptr [rax], al ; mov eax, 0x47 ; syscall
0x00000000000ec568 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000000e7efe : add byte ptr [rax], al ; mov eax, 0x49 ; syscall
0x000000000019647e : add byte ptr [rax], al ; mov eax, 0x4c00008e ; jle 0x19647e ; jmp qword ptr [rbx]
0x00000000000ef3ae : add byte ptr [rax], al ; mov eax, 0x4d ; syscall
0x00000000000e839e : add byte ptr [rax], al ; mov eax, 0x51 ; syscall
0x00000000000e94fe : add byte ptr [rax], al ; mov eax, 0x54 ; syscall
0x00000000000e937e : add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000e943e : add byte ptr [rax], al ; mov eax, 0x59 ; syscall
0x00000000000e75be : add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000e75ee : add byte ptr [rax], al ; mov eax, 0x5b ; syscall
0x00000000000e8bfe : add byte ptr [rax], al ; mov eax, 0x5d ; syscall
0x00000000000e8c2e : add byte ptr [rax], al ; mov eax, 0x5e ; syscall
0x00000000000e75ae : add byte ptr [rax], al ; mov eax, 0x5f ; syscall
0x00000000000c4b5e : add byte ptr [rax], al ; mov eax, 0x64 ; syscall
0x00000000000c5a6e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000f662e : add byte ptr [rax], al ; mov eax, 0x67 ; syscall
0x00000000000c5a8e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000c5a7e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000c5a9e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000c5c7e : add byte ptr [rax], al ; mov eax, 0x6d ; syscall
0x00000000000c5a5e : add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000c5cae : add byte ptr [rax], al ; mov eax, 0x6f ; syscall
0x00000000000c5d0e : add byte ptr [rax], al ; mov eax, 0x70 ; syscall
0x00000000000c5aae : add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000c5d3e : add byte ptr [rax], al ; mov eax, 0x76 ; syscall
0x00000000000c5d6e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall
0x00000000000c5c4e : add byte ptr [rax], al ; mov eax, 0x79 ; syscall
0x00000000000f5c3e : add byte ptr [rax], al ; mov eax, 0x7b ; syscall
0x00000000000c5cde : add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x000000000019067e : add byte ptr [rax], al ; mov eax, 0x7c000030 ; mov edx, gs ; jmp rsp
0x00000000000c61de : add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x00000000000f63be : add byte ptr [rax], al ; mov eax, 0x7e ; syscall
0x0000000000036133 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000011083e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x000000000003617f : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x000000000003650e : add byte ptr [rax], al ; mov eax, 0x83 ; syscall
0x00000000000f680e : add byte ptr [rax], al ; mov eax, 0x86 ; syscall
0x00000000000e74de : add byte ptr [rax], al ; mov eax, 0x8a ; syscall
0x00000000000ddf5e : add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000ddf8e : add byte ptr [rax], al ; mov eax, 0x8f ; syscall
0x00000000000ddfbe : add byte ptr [rax], al ; mov eax, 0x90 ; syscall
0x00000000000ddfee : add byte ptr [rax], al ; mov eax, 0x91 ; syscall
0x00000000000de04e : add byte ptr [rax], al ; mov eax, 0x92 ; syscall
0x00000000000de07e : add byte ptr [rax], al ; mov eax, 0x93 ; syscall
0x00000000000de0ae : add byte ptr [rax], al ; mov eax, 0x94 ; syscall
0x00000000000f0d5e : add byte ptr [rax], al ; mov eax, 0x96 ; syscall
0x00000000000f0d8e : add byte ptr [rax], al ; mov eax, 0x97 ; syscall
0x00000000000f0dbe : add byte ptr [rax], al ; mov eax, 0x98 ; syscall
0x00000000000f631e : add byte ptr [rax], al ; mov eax, 0x9a ; syscall
0x00000000000f66ee : add byte ptr [rax], al ; mov eax, 0x9b ; syscall
0x00000000000f0bce : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000000edd3e : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall
0x00000000000edd0e : add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000f5bae : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000ee1ce : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall
0x00000000000ee1fe : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall
0x00000000000eda8e : add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000edb2e : add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x00000000000f5a8e : add byte ptr [rax], al ; mov eax, 0xac ; syscall
0x00000000000f641e : add byte ptr [rax], al ; mov eax, 0xae ; syscall
0x00000000000f644e : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall
0x00000000000f6a4e : add byte ptr [rax], al ; mov eax, 0xba ; syscall
0x00000000000f5bde : add byte ptr [rax], al ; mov eax, 0xbb ; syscall
0x0000000000193f7e : add byte ptr [rax], al ; mov eax, 0xbc000069 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ad7e : add byte ptr [rax], al ; mov eax, 0xbc0000d7 ; outsb dx, byte ptr [rsi] ; int1 ; jmp qword ptr [rbx]
0x00000000000854c6 : add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; ret
0x00000000001a327e : add byte ptr [rax], al ; mov eax, 0xc00015c ; cmp ch, dh ; call qword ptr [rsi]
0x00000000000f39ee : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall
0x00000000000f38ce : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall
0x0000000000051d72 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000019d87e : add byte ptr [rax], al ; mov eax, 0xcc000102 ; adc esi, ebx ; jmp rdx
0x00000000000f647e : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall
0x0000000000035de1 : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000f634e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall
0x00000000000f6a5e : add byte ptr [rax], al ; mov eax, 0xea ; syscall
0x00000000000f659e : add byte ptr [rax], al ; mov eax, 0xfd ; syscall
0x00000000000f65fe : add byte ptr [rax], al ; mov eax, 0xff ; syscall
0x00000000000c61ee : add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x00000000000365de : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x365ba
0x00000000000c54eb : add byte ptr [rax], al ; mov eax, 0xffffffff ; leave ; ret
0x000000000003418c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035e2c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ea5a8 : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000036856 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000047cac : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001015ce : add byte ptr [rax], al ; mov eax, 7 ; ret
0x00000000000e7b0e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x0000000000149e8e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007d59e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000125bde : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d178e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000077c9e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000077c6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000007ecde : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000073d4e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000003692e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x37e872] ; ret
0x000000000006d58c : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f09c0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b6fb : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000085631 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010fe16 : add byte ptr [rax], al ; mov eax, ecx ; ret
0x0000000000035dad : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000002262c : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000e72f2 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000e7311 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000fd6cf : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077f09 : add byte ptr [rax], al ; mov eax, r13d ; syscall
0x000000000004fe12 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d2fd : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000035def : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000004dfc2 : add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000009c71e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000010e9be : add byte ptr [rax], al ; mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x000000000010e92e : add byte ptr [rax], al ; mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x00000000000efe20 : add byte ptr [rax], al ; mov edi, eax ; call 0xec8a6
0x000000000012d2cb : add byte ptr [rax], al ; mov edi, eax ; mov eax, 0x3e ; syscall
0x00000000000ecab7 : add byte ptr [rax], al ; mov edi, ebx ; mov eax, 0x10 ; syscall
0x00000000000c50ae : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000000e6a28 : add byte ptr [rax], al ; mov edi, edx ; syscall
0x000000000010b735 : add byte ptr [rax], al ; mov edi, r14d ; call 0xe79d7
0x000000000005c94e : add byte ptr [rax], al ; mov edi, r14d ; call 0xf9437
0x00000000000f5d36 : add byte ptr [rax], al ; mov edx, 8 ; syscall
0x000000000013967e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009c70e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000196406 : add byte ptr [rax], al ; mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2], dh ; out dx, al ; jmp qword ptr [rbx]
0x000000000007e626 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000188936 : add byte ptr [rax], al ; mov esi, ss ; out dx, al ; jmp qword ptr [rax]
0x0000000000196582 : add byte ptr [rax], al ; mov esp, 0x2800008f ; jg 0x196582 ; jmp qword ptr [rbx]
0x0000000000196282 : add byte ptr [rax], al ; mov esp, 0x6800008c ; jp 0x196282 ; call qword ptr [rsi]
0x0000000000197782 : add byte ptr [rax], al ; mov esp, 0x780000a1 ; in al, dx ; out dx, al ; jmp rcx
0x000000000018876e : add byte ptr [rax], al ; mov esp, 0xb0ffee9f ; ret 0
0x0000000000189296 : add byte ptr [rax], al ; mov esp, fs ; out dx, eax ; call rsp
0x000000000010fb1e : add byte ptr [rax], al ; mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x0000000000101e01 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000012c5a3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012c55b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012c8ee : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001447be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001447de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001447ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001447fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000014480e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000014481e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000014482e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001447ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001447ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000011b03b : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000007f286 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x60], rcx ; ret
0x0000000000125f9a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009d70e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000009d72e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009d74e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009d75e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009d76e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009d77e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009d73e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009d71e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000479f8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000076989 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007edcb : add byte ptr [rax], al ; mov qword ptr [rip + 0x3364ac], rax ; ret
0x000000000007ed9b : add byte ptr [rax], al ; mov qword ptr [rip + 0x3364e4], rax ; ret
0x000000000011999c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011996c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000038d66 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000122a39 : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000021965 : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x21935
0x00000000000ba91e : add byte ptr [rax], al ; mov r10d, eax ; jmp 0xba8ed
0x00000000000bcd56 : add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbcd2c
0x00000000000bcd56 : add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xbcd2e
0x000000000012b456 : add byte ptr [rax], al ; mov r13d, 0xffffffff ; jmp 0x12b434
0x00000000000651a4 : add byte ptr [rax], al ; mov r14d, 1 ; jmp rax
0x0000000000071004 : add byte ptr [rax], al ; mov r8, rdi ; mov rax, r8 ; ret
0x0000000000035cfa : add byte ptr [rax], al ; mov rax, -1 ; ret
0x0000000000035e4e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000000b366e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000b367e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000b368e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000b369e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000b36ae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000b36be : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000b36ce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000074c0e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000001025d6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f3afe : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000038e80 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007d84e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000010d666 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a9289] ; ret
0x000000000007d82e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x338d69] ; ret
0x000000000002b4ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x38b491] ; ret
0x0000000000022dbe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3973e1] ; ret
0x0000000000022dae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x397401] ; ret
0x00000000000ee44c : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000015499e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000007a3e4 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051411 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006e289 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004b197 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000003412c : add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000071144 : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000015686e : add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x00000000000a139f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000384a1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000086b0e : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x0000000000086a06 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000001005ce : add byte ptr [rax], al ; mov rdi, r14 ; call 0xfd077
0x0000000000100c43 : add byte ptr [rax], al ; mov rdi, r14 ; call 0xfd6e7
0x000000000002f9e1 : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000008385d : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x0000000000109d19 : add byte ptr [rax], al ; mov rdi, rax ; call 0x76017
0x00000000001253ee : add byte ptr [rax], al ; mov rdi, rbp ; call 0x2167f
0x000000000011a347 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001220aa : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006c6a7 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000012cf84 : add byte ptr [rax], al ; mov rdi, rdx ; call rsi
0x0000000000124bee : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009c74e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000d4b1f : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x60] ; call 0x215c9
0x0000000000085b23 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, rcx ; call rax
0x0000000000029d83 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x29d45
0x00000000000ea52e : add byte ptr [rax], al ; mov rdx, rax ; jmp 0xea4f4
0x00000000000ebf5d : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000006bfc9 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x348f96] ; call rax
0x0000000000069110 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x34be4f] ; call rax
0x00000000000661ee : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x34ed71] ; call rax
0x000000000006342e : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x351b31] ; call rax
0x0000000000059e30 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35b12f] ; call rax
0x0000000000052819 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x362746] ; call rax
0x00000000000864a8 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008615f : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r14 ; call rax
0x000000000018781e : add byte ptr [rax], al ; mov word ptr [rbp - 0x16], fs ; call rsp
0x000000000014475e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000014474e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000ecb82 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000009d6be : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000001565fe : add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000198052 : add byte ptr [rax], al ; mov word ptr [rdx + 0x4780000], gs ; out dx, eax ; call qword ptr [rax]
0x0000000000039ab4 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000009d78e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009d79e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001a116a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x0000000000194e6a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; js 0x194e78 ; add byte ptr [rax + 0x32], dl ; out dx, al ; jmp rdi
0x000000000019606a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov al, byte ptr [rax] ; add al, dh ; jne 0x19606a ; jmp qword ptr [rdx]
0x000000000019976a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rax], 0 ; xor bl, ah ; sti ; call qword ptr [rbx]
0x000000000006376e : add byte ptr [rax], al ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, rdi ; jmp rax
0x000000000006c8da : add byte ptr [rax], al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000002cf6e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000120d17 : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x0000000000120cdf : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x000000000011dccf : add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000011dce8 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000e6bfb : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x00000000000df0ae : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000007b13e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000a18ee : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000013980e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000139eee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000139e7e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000019660e : add byte ptr [rax], al ; nop ; add byte ptr [rax], al ; sub al, 0x80 ; out dx, al ; call qword ptr [rdx]
0x000000000018ed8e : add byte ptr [rax], al ; nop ; add dl, ch ; call qword ptr [rbx]
0x00000000001964be : add byte ptr [rax], al ; nop ; insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x00000000000f689c : add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x00000000000f692c : add byte ptr [rax], al ; nop ; mov eax, 0x134 ; syscall
0x00000000000f69bc : add byte ptr [rax], al ; nop ; mov eax, 0x13f ; syscall
0x00000000000f0c9d : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x00000000000c4d4d : add byte ptr [rax], al ; nop ; mov eax, 0x25 ; syscall
0x00000000000f714c : add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x00000000000f6b4d : add byte ptr [rax], al ; nop ; mov eax, 0x31 ; syscall
0x00000000000f6cac : add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x00000000000f6c1d : add byte ptr [rax], al ; nop ; mov eax, 0x34 ; syscall
0x00000000000e836d : add byte ptr [rax], al ; nop ; mov eax, 0x50 ; syscall
0x00000000000e76ac : add byte ptr [rax], al ; nop ; mov eax, 0x53 ; syscall
0x00000000000e949c : add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x00000000000e93dc : add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x00000000000f67ac : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x00000000000f638c : add byte ptr [rax], al ; nop ; mov eax, 0x7d ; syscall
0x00000000000f5e1c : add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x00000000000e74ac : add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x00000000000ecf8c : add byte ptr [rax], al ; nop ; mov eax, 0x8c ; syscall
0x00000000000f0d2c : add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x00000000000ee19c : add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x00000000000f5a5c : add byte ptr [rax], al ; nop ; mov eax, 0xad ; syscall
0x00000000000f650c : add byte ptr [rax], al ; nop ; mov eax, 0xb1 ; syscall
0x00000000000f66bc : add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x00000000000f395c : add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x00000000000f39bc : add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x00000000000f389c : add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x00000000000f3a4c : add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x00000000000f656c : add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x000000000010c0ed : add byte ptr [rax], al ; nop ; mov eax, 1 ; pop rbx ; ret
0x000000000011e75d : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x00000000000ec50d : add byte ptr [rax], al ; nop ; mov eax, 3 ; syscall
0x000000000010502c : add byte ptr [rax], al ; nop ; mov eax, edi ; bswap eax ; ret
0x000000000010503d : add byte ptr [rax], al ; nop ; mov eax, edi ; rol ax, 8 ; ret
0x0000000000196456 : add byte ptr [rax], al ; nop ; mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], al ; jmp qword ptr [rbx]
0x0000000000194056 : add byte ptr [rax], al ; nop ; push 0 ; add byte ptr [rdi + rsi*8 - 0x13], ah ; call qword ptr [rsi]
0x00000000000198ae : add byte ptr [rax], al ; nop ; ret
0x000000000019d12e : add byte ptr [rax], al ; nop ; retf 0xfff2
0x00000000001a5a56 : add byte ptr [rax], al ; nop ; test byte ptr [rcx], al ; add byte ptr [rbp + rsi*8 - 0xb], al ; call qword ptr [rdi]
0x0000000000190756 : add byte ptr [rax], al ; nop ; xor dword ptr [rax], eax ; add byte ptr [rax + rdx*4 - 0x16], al ; jmp qword ptr [rax]
0x0000000000125869 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x0000000000125d99 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000078b3b : add byte ptr [rax], al ; nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000c068b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000012a70a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000021e0b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x000000000018f6d2 : add byte ptr [rax], al ; or al, 0x21 ; add byte ptr [rax], al ; or byte ptr [rdx - 0x16], bl ; jmp qword ptr [rbx]
0x0000000000199062 : add byte ptr [rax], al ; or al, 0x5b ; cli ; call qword ptr [rax]
0x000000000018dbb2 : add byte ptr [rax], al ; or al, 0x61 ; jmp 0x19a6c0
0x0000000000196572 : add byte ptr [rax], al ; or al, 0x7f ; out dx, al ; jmp qword ptr [rbx]
0x00000000001959d2 : add byte ptr [rax], al ; or al, 0x84 ; add byte ptr [rax], al ; mov byte ptr [rdi - 0x12], bl ; call qword ptr [rdx]
0x000000000019afa2 : add byte ptr [rax], al ; or al, 0x8c ; int1 ; call qword ptr [rcx]
0x00000000001a6ad2 : add byte ptr [rax], al ; or al, 0x95 ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bl ; jmp qword ptr [rsi]
0x00000000001990b2 : add byte ptr [rax], al ; or al, 0x96 ; sti ; call qword ptr [rax]
0x000000000019b2e2 : add byte ptr [rax], al ; or al, 0x99 ; int1 ; jmp rbx
0x00000000001a6fd2 : add byte ptr [rax], al ; or al, 0x9a ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bh ; jmp rcx
0x0000000000188436 : add byte ptr [rax], al ; or al, 0xa0 ; in al, dx ; jmp rax
0x0000000000192c02 : add byte ptr [rax], al ; or al, 0xa4 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000188896 : add byte ptr [rax], al ; or al, 0xba ; out dx, al ; jmp rax
0x000000000018811e : add byte ptr [rax], al ; or al, 0xc2 ; jmp 0x188126
0x0000000000199732 : add byte ptr [rax], al ; or al, 0xe3 ; sti ; call qword ptr [rdx]
0x0000000000034e2f : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x000000000001927a : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5f
0x00000000001ae1f6 : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x0000000000194dce : add byte ptr [rax], al ; or byte ptr [rax], bh ; add byte ptr [rdi + rbp - 0x12], bh ; jmp qword ptr [rbx]
0x000000000019fdce : add byte ptr [rax], al ; or byte ptr [rax], ch ; add dword ptr [rax], eax ; in al, dx ; ja 0x19fdd4 ; jmp qword ptr [rcx]
0x00000000001a32ce : add byte ptr [rax], al ; or byte ptr [rbp + 1], bl ; add byte ptr [rax + rdi - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001964ce : add byte ptr [rax], al ; or byte ptr [rdi + 0x7e5c0000], cl ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196546 : add byte ptr [rax], al ; or byte ptr [rdi + 0x7ed40000], 0xee ; jmp qword ptr [rbx]
0x0000000000197cce : add byte ptr [rax], al ; or byte ptr [rdi - 0x9140000], ah ; out dx, al ; call qword ptr [rax]
0x0000000000194d36 : add byte ptr [rax], al ; or byte ptr [rdi], ch ; out dx, al ; jmp qword ptr [rdi]
0x000000000018f6d6 : add byte ptr [rax], al ; or byte ptr [rdx - 0x16], bl ; jmp qword ptr [rbx]
0x0000000000196ec6 : add byte ptr [rax], al ; or dl, al ; out dx, al ; jmp qword ptr [rsi]
0x000000000019797a : add byte ptr [rax], al ; out dx, al ; jmp qword ptr [rdx]
0x00000000001026ea : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000000001a551e : add byte ptr [rax], al ; pop rax ; jg 0x1a552d ; add byte ptr [rcx + rbp*8 - 0xb], bh ; call qword ptr [rbx]
0x000000000019751e : add byte ptr [rax], al ; pop rax ; lahf ; add byte ptr [rax], al ; fsubr st(2), st(0) ; out dx, al ; call qword ptr [rdx]
0x000000000019631e : add byte ptr [rax], al ; pop rax ; lea eax, [rax] ; add ah, bh ; jp 0x19631e ; call qword ptr [rdx]
0x00000000001a331e : add byte ptr [rax], al ; pop rax ; pop rbp ; add dword ptr [rax], eax ; cld ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000019981e : add byte ptr [rax], al ; pop rax ; ret 0
0x00000000001aa91e : add byte ptr [rax], al ; pop rax ; rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*2 - 9], ch ; jmp rsi
0x000000000019691e : add byte ptr [rax], al ; pop rax ; xchg eax, ebx ; add byte ptr [rax], al ; test rsi, r13 ; jmp qword ptr [rsi]
0x00000000000f1d0e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x000000000007ed44 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fb2bf : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cd6f4 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000f824f : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000038ffc : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000083a44 : add byte ptr [rax], al ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x00000000000c5c3f : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000002b5fb : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x000000000012cf96 : add byte ptr [rax], al ; pop rbx ; pop r14 ; ret
0x0000000000036b06 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021f65 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024227 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002bc43 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000011a886 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000018595e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000000c505e : add byte ptr [rax], al ; pop rdi ; mov eax, 0x3a ; syscall
0x0000000000198fc2 : add byte ptr [rax], al ; pop rsp ; cmp bh, dl ; call qword ptr [rax]
0x0000000000187866 : add byte ptr [rax], al ; pop rsp ; jb 0x18785a ; jmp rsp
0x000000000018865e : add byte ptr [rax], al ; pop rsp ; je 0x188656 ; jmp rax
0x00000000001890de : add byte ptr [rax], al ; pop rsp ; jge 0x1890d7 ; jmp qword ptr [rax]
0x00000000001964d2 : add byte ptr [rax], al ; pop rsp ; jle 0x1964ca ; jmp qword ptr [rbx]
0x000000000018796e : add byte ptr [rax], al ; pop rsp ; js 0x187962 ; call rax
0x0000000000187c26 : add byte ptr [rax], al ; pop rsp ; out 0xea, al ; jmp qword ptr [rax]
0x00000000001a4422 : add byte ptr [rax], al ; pop rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; jp 0x1a4429 ; call rcx
0x0000000000188646 : add byte ptr [rax], al ; pop rsp ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rax]
0x00000000001891e6 : add byte ptr [rax], al ; pop rsp ; retf 0xffef
0x0000000000188a56 : add byte ptr [rax], al ; pop rsp ; sti ; out dx, al ; call qword ptr [rax]
0x00000000001acd22 : add byte ptr [rax], al ; pop rsp ; test dword ptr [rcx], 0xf7d4a800 ; call qword ptr [rbx]
0x000000000018836e : add byte ptr [rax], al ; pop rsp ; xchg esp, ebp ; call rax
0x00000000001a532e : add byte ptr [rax], al ; push -0x13fffe83 ; jrcxz 0x1a5335 ; call qword ptr [rdi]
0x00000000001a242e : add byte ptr [rax], al ; push -0x23fffeb2 ; add dh, ch ; call qword ptr [rdx]
0x000000000019df2e : add byte ptr [rax], al ; push -0x23fffef7 ; cmp ebx, esi ; call rcx
0x000000000019642e : add byte ptr [rax], al ; push 0x3c00008e ; jle 0x19642e ; jmp qword ptr [rbx]
0x0000000000198e2e : add byte ptr [rax], al ; push 0x3c0000b8 ; jle 0x198e3b ; call rsp
0x000000000019972e : add byte ptr [rax], al ; push 0xc0000c1 ; jrcxz 0x19973b ; call qword ptr [rdx]
0x0000000000193a3e : add byte ptr [rax], al ; push rax ; in al, 0xed ; call qword ptr [rdi]
0x00000000001ac616 : add byte ptr [rax], al ; push rax ; lock add dword ptr [rax], eax ; push rsp ; ja 0x1ac623 ; jmp qword ptr [rdx]
0x0000000000185c4c : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001a2616 : add byte ptr [rax], al ; push rax ; push rax ; add dword ptr [rax], eax ; hlt ; add al, 0xf5 ; call qword ptr [rdi]
0x000000000019d0fe : add byte ptr [rax], al ; push rax ; ret
0x00000000001a9816 : add byte ptr [rax], al ; push rax ; ret 1
0x000000000019a016 : add byte ptr [rax], al ; push rax ; retf 0
0x000000000018ee16 : add byte ptr [rax], al ; push rax ; sbb byte ptr [rax], al ; add ah, al ; add dl, ch ; call qword ptr [rcx]
0x0000000000194e6e : add byte ptr [rax], al ; push rax ; xor ch, dh ; jmp rdi
0x000000000010266e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000125fae : add byte ptr [rax], al ; push rbx ; call 0x122ab5
0x00000000000b526e : add byte ptr [rax], al ; push rbx ; mov rbx, rdi ; call 0x21498
0x00000000001a2d06 : add byte ptr [rax], al ; push rdi ; add dword ptr [rax], eax ; xor ch, dh ; jmp qword ptr [rcx]
0x000000000018ed2a : add byte ptr [rax], al ; push rsp ; add dl, ch ; call qword ptr [rbx]
0x00000000001964aa : add byte ptr [rax], al ; push rsp ; jle 0x1964a2 ; jmp qword ptr [rbx]
0x0000000000198c1a : add byte ptr [rax], al ; push rsp ; mov dh, 0 ; add byte ptr [rax], dh ; pop rbx ; out dx, eax ; call qword ptr [rbx]
0x000000000019641a : add byte ptr [rax], al ; push rsp ; mov es, word ptr [rax] ; add byte ptr [rax + 0x6d], dh ; stc ; jmp qword ptr [rbx]
0x000000000018eda2 : add byte ptr [rax], al ; pushfq ; add dl, ch ; call qword ptr [rbx]
0x00000000001a1462 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; fmul st(0) ; hlt ; jmp qword ptr [rcx]
0x0000000000187f3e : add byte ptr [rax], al ; pushfq ; and ch, bl ; call qword ptr [rax]
0x00000000001883de : add byte ptr [rax], al ; pushfq ; cdq ; in al, dx ; jmp rsp
0x0000000000187b96 : add byte ptr [rax], al ; pushfq ; fsubp st(2) ; jmp rsp
0x000000000019acf2 : add byte ptr [rax], al ; pushfq ; insd dword ptr [rdi], dx ; int1 ; call qword ptr [rdx]
0x000000000018863e : add byte ptr [rax], al ; pushfq ; insd dword ptr [rdi], dx ; out dx, al ; jmp rax
0x0000000000196522 : add byte ptr [rax], al ; pushfq ; jle 0x19651a ; jmp qword ptr [rbx]
0x000000000018879e : add byte ptr [rax], al ; pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp rax
0x0000000000188d06 : add byte ptr [rax], al ; pushfq ; out dx, eax ; jmp rsp
0x0000000000193362 : add byte ptr [rax], al ; pushfq ; pop rbp ; add byte ptr [rax], al ; mov dl, cl ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3562 : add byte ptr [rax], al ; pushfq ; pop rdi ; add dword ptr [rax], eax ; call 0x221a2ab1
0x0000000000188dfe : add byte ptr [rax], al ; pushfq ; pop rsp ; out dx, eax ; jmp rax
0x0000000000187aae : add byte ptr [rax], al ; pushfq ; retf
0x000000000019b1a2 : add byte ptr [rax], al ; pushfq ; xchg eax, ebx ; int1 ; call rcx
0x000000000017d2a2 : add byte ptr [rax], al ; pushfq ; xor bh, dl ; dec esp ; xor edx, edi ; jmp rsp
0x000000000019a686 : add byte ptr [rax], al ; rcl al, 0 ; add byte ptr [rdi + rcx - 0xf], dl ; call qword ptr [rax]
0x00000000001a2996 : add byte ptr [rax], al ; rcl byte ptr [rbx + 1], 1 ; add byte ptr [rdi + rcx], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a2f86 : add byte ptr [rax], al ; rcr byte ptr [rcx + 1], 0 ; add al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x000000000018f13e : add byte ptr [rax], al ; rcr byte ptr [rsi], 0xea ; jmp rdx
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000000c1e : add byte ptr [rax], al ; ret 0
0x000000000016d4ee : add byte ptr [rax], al ; ret 0x11
0x000000000016d8ee : add byte ptr [rax], al ; ret 0x14
0x000000000001bb8f : add byte ptr [rax], al ; ret 0x16
0x000000000016ff8e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000170726 : add byte ptr [rax], al ; ret 0x1d5
0x000000000016ef96 : add byte ptr [rax], al ; ret 0x24
0x0000000000010e2e : add byte ptr [rax], al ; ret 0x2d
0x000000000016f486 : add byte ptr [rax], al ; ret 0x33
0x000000000000df7e : add byte ptr [rax], al ; ret 0x3d
0x0000000000005b4e : add byte ptr [rax], al ; ret 0x3f
0x000000000000d7ce : add byte ptr [rax], al ; ret 0x43
0x000000000000fb9e : add byte ptr [rax], al ; ret 0x4a
0x000000000000adb6 : add byte ptr [rax], al ; ret 0x5f
0x000000000000e2c6 : add byte ptr [rax], al ; ret 0xa
0x0000000000172762 : add byte ptr [rax], al ; ret 0xb
0x0000000000172962 : add byte ptr [rax], al ; ret 0xc
0x000000000016d0ee : add byte ptr [rax], al ; ret 0xe
0x0000000000193242 : add byte ptr [rax], al ; ret 0xffed
0x00000000001891ae : add byte ptr [rax], al ; ret 0xffef
0x000000000016c416 : add byte ptr [rax], al ; ret 1
0x0000000000000fba : add byte ptr [rax], al ; ret 2
0x000000000000116a : add byte ptr [rax], al ; ret 3
0x000000000016e5ae : add byte ptr [rax], al ; ret 4
0x0000000000171b62 : add byte ptr [rax], al ; ret 5
0x000000000016c95e : add byte ptr [rax], al ; ret 6
0x0000000000171f62 : add byte ptr [rax], al ; ret 7
0x00000000000019b6 : add byte ptr [rax], al ; ret 8
0x0000000000172362 : add byte ptr [rax], al ; ret 9
0x0000000000000dfe : add byte ptr [rax], al ; retf
0x0000000000004b86 : add byte ptr [rax], al ; retf 0
0x000000000016d64e : add byte ptr [rax], al ; retf 0x12
0x000000000016da4e : add byte ptr [rax], al ; retf 0x15
0x000000000016ffc6 : add byte ptr [rax], al ; retf 0x1d4
0x0000000000170766 : add byte ptr [rax], al ; retf 0x1d5
0x000000000016efd6 : add byte ptr [rax], al ; retf 0x24
0x000000000001127e : add byte ptr [rax], al ; retf 0x25
0x000000000000b7be : add byte ptr [rax], al ; retf 0x29
0x00000000000098b6 : add byte ptr [rax], al ; retf 0x2b
0x0000000000011146 : add byte ptr [rax], al ; retf 0x2c
0x000000000000ecce : add byte ptr [rax], al ; retf 0x30
0x000000000016f4c6 : add byte ptr [rax], al ; retf 0x33
0x00000000000085c6 : add byte ptr [rax], al ; retf 0x35
0x000000000000d13e : add byte ptr [rax], al ; retf 0x39
0x0000000000173887 : add byte ptr [rax], al ; retf 0x3b9a
0x000000000018599e : add byte ptr [rax], al ; retf 0x49f2
0x000000000000dd56 : add byte ptr [rax], al ; retf 0x4c
0x0000000000005d5e : add byte ptr [rax], al ; retf 0x5c
0x0000000000172572 : add byte ptr [rax], al ; retf 0xa
0x000000000016cd8a : add byte ptr [rax], al ; retf 0xb
0x0000000000172972 : add byte ptr [rax], al ; retf 0xc
0x000000000016d24e : add byte ptr [rax], al ; retf 0xf
0x0000000000000df6 : add byte ptr [rax], al ; retf 1
0x000000000000f18e : add byte ptr [rax], al ; retf 2
0x000000000016dfae : add byte ptr [rax], al ; retf 3
0x000000000000c0ee : add byte ptr [rax], al ; retf 4
0x00000000000014ee : add byte ptr [rax], al ; retf 5
0x0000000000171d72 : add byte ptr [rax], al ; retf 6
0x0000000000001832 : add byte ptr [rax], al ; retf 7
0x000000000016cb16 : add byte ptr [rax], al ; retf 8
0x0000000000172372 : add byte ptr [rax], al ; retf 9
0x0000000000001322 : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x000000000017195e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001b0b4a : add byte ptr [rax], al ; rol byte ptr [rcx], cl ; add byte ptr [rax], al ; retf 0
0x00000000001aa906 : add byte ptr [rax], al ; rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*2 - 9], ah ; jmp qword ptr [rax]
0x00000000001a1e86 : add byte ptr [rax], al ; ror byte ptr [rax + 1], 0 ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x000000000017295e : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret 0xc
0x0000000000191e96 : add byte ptr [rax], al ; ror byte ptr [rax], 1 ; add byte ptr [rcx + rax*8 - 0x15], al ; jmp qword ptr [rcx]
0x0000000000196596 : add byte ptr [rax], al ; ror byte ptr [rdi + 0x7f440000], 1 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000197412 : add byte ptr [rax], al ; sahf ; add byte ptr [rax], al ; sub dh, bl ; out dx, al ; call qword ptr [rsi]
0x00000000001a5386 : add byte ptr [rax], al ; sar byte ptr [rbp + 1], 0 ; mov ah, 0xe5 ; cmc ; call qword ptr [rax]
0x0000000000198f96 : add byte ptr [rax], al ; sar byte ptr [rcx - 0x6aec0000], 1 ; out dx, eax ; call qword ptr [rax]
0x0000000000199086 : add byte ptr [rax], al ; sar byte ptr [rdx + 0x47940000], 0xfb ; call qword ptr [rax]
0x0000000000111c49 : add byte ptr [rax], al ; sar rdx, 4 ; add edx, 1 ; syscall
0x000000000019b1de : add byte ptr [rax], al ; sbb ah, bl ; add byte ptr [rax], al ; jl 0x19b183 ; int1 ; call rcx
0x000000000019fde2 : add byte ptr [rax], al ; sbb al, 0x28 ; add dword ptr [rax], eax ; or byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001904e2 : add byte ptr [rax], al ; sbb al, 0x2f ; add byte ptr [rax], al ; call 0x1218ef7e
0x00000000001a18e2 : add byte ptr [rax], al ; sbb al, 0x43 ; add dword ptr [rax], eax ; js 0x1a18c5 ; hlt ; jmp qword ptr [rsi]
0x00000000001a28e2 : add byte ptr [rax], al ; sbb al, 0x53 ; add dword ptr [rax], eax ; clc ; retf 0xfff8
0x00000000001964e2 : add byte ptr [rax], al ; sbb al, 0x8f ; add byte ptr [rax], al ; cwde ; insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x00000000001887ee : add byte ptr [rax], al ; sbb al, 0xab ; out dx, al ; call qword ptr [rax]
0x000000000019ade2 : add byte ptr [rax], al ; sbb al, 0xd8 ; add byte ptr [rax], al ; js 0x19adcb ; sti ; call qword ptr [rbx]
0x0000000000188966 : add byte ptr [rax], al ; sbb al, 0xe1 ; out dx, al ; call qword ptr [rax]
0x000000000018929e : add byte ptr [rax], al ; sbb al, 0xe7 ; out dx, eax ; jmp qword ptr [rax]
0x000000000019b7e2 : add byte ptr [rax], al ; sbb al, 0xf0 ; int1 ; call qword ptr [rax]
0x000000000019f206 : add byte ptr [rax], al ; sbb al, 1 ; add byte ptr [rax + rsi], dl ; hlt ; jmp qword ptr [rax]
0x00000000001ab0de : add byte ptr [rax], al ; sbb bl, bl ; add dword ptr [rax], eax ; cld ; ja 0x1ab0e7 ; call qword ptr [rbx]
0x000000000019edde : add byte ptr [rax], al ; sbb byte ptr [rax], bl ; add dword ptr [rax], eax ; fdivr st(3), st(0) ; call qword ptr [rsi]
0x00000000001982de : add byte ptr [rax], al ; sbb byte ptr [rbp + 0x12bc0000], ch ; out dx, eax ; jmp rcx
0x00000000001a7146 : add byte ptr [rax], al ; sbb byte ptr [rbx - 0x76dbffff], 0xf6 ; call rsi
0x000000000019ee12 : add byte ptr [rax], al ; sbb byte ptr [rcx], r8b ; add al, cl ; call qword ptr [rdx]
0x0000000000197046 : add byte ptr [rax], al ; sbb byte ptr [rdx + 0x62a40000], 0xf9 ; call qword ptr [rcx]
0x00000000001963de : add byte ptr [rax], al ; sbb byte ptr [rsi + 0x7dfc0000], cl ; out dx, al ; jmp qword ptr [rbx]
0x00000000001963f6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0x12], bh ; jmp qword ptr [rbx]
0x000000000019b2de : add byte ptr [rax], al ; sbb ch, bl ; add byte ptr [rax], al ; or al, 0x99 ; int1 ; jmp rbx
0x000000000019b7de : add byte ptr [rax], al ; sbb dl, ah ; add byte ptr [rax], al ; sbb al, 0xf0 ; int1 ; call qword ptr [rax]
0x00000000001ae962 : add byte ptr [rax], al ; sbb dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x00000000000df0c6 : add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x0000000000075e8e : add byte ptr [rax], al ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000075f9e : add byte ptr [rax], al ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000082c9d : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000e62f6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000019d12a : add byte ptr [rax], al ; sti ; add byte ptr [rax], al ; nop ; retf 0xfff2
0x00000000001868bc : add byte ptr [rax], al ; sti ; jmp rax
0x00000000001aa15a : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cwde ; retf
0x000000000019f8f2 : add byte ptr [rax], al ; sub al, 0x23 ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xc], ch ; call qword ptr [rax]
0x0000000000188d9e : add byte ptr [rax], al ; sub al, 0x53 ; out dx, eax ; call qword ptr [rax]
0x00000000001a2af2 : add byte ptr [rax], al ; sub al, 0x55 ; add dword ptr [rax], eax ; cmp byte ptr [rsi], ch ; cmc ; call qword ptr [rax]
0x0000000000196612 : add byte ptr [rax], al ; sub al, 0x80 ; out dx, al ; call qword ptr [rdx]
0x00000000001963f2 : add byte ptr [rax], al ; sub al, 0x8e ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x12], bh ; jmp qword ptr [rbx]
0x0000000000197ff2 : add byte ptr [rax], al ; sub al, 0xaa ; add byte ptr [rax], al ; sub byte ptr [rdi + rbp*8], al ; jmp qword ptr [rcx]
0x00000000001980f2 : add byte ptr [rax], al ; sub al, 0xab ; add byte ptr [rax], al ; call 0x1219700c
0x00000000001888de : add byte ptr [rax], al ; sub al, 0xbe ; out dx, al ; inc dword ptr [rax] ; retf 0
0x0000000000188286 : add byte ptr [rax], al ; sub al, 7 ; in al, dx ; call qword ptr [rax]
0x000000000019acee : add byte ptr [rax], al ; sub bh, dl ; add byte ptr [rax], al ; pushfq ; insd dword ptr [rdi], dx ; int1 ; call qword ptr [rdx]
0x000000000018d6a6 : add byte ptr [rax], al ; sub byte ptr [rax - 0x17], cl ; call qword ptr [rsi]
0x00000000001a9812 : add byte ptr [rax], al ; sub byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 1
0x000000000018edee : add byte ptr [rax], al ; sub byte ptr [rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dl, ch ; call qword ptr [rcx]
0x00000000001962ee : add byte ptr [rax], al ; sub byte ptr [rbp + 0x7aec0000], cl ; out dx, al ; call qword ptr [rdx]
0x00000000001a42ee : add byte ptr [rax], al ; sub byte ptr [rbp + 1], ch ; add ah, cl ; jae 0x1a42f5 ; call qword ptr [rdi]
0x0000000000197ff6 : add byte ptr [rax], al ; sub byte ptr [rdi + rbp*8], al ; jmp qword ptr [rcx]
0x0000000000196586 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x12], bh ; jmp qword ptr [rbx]
0x0000000000197416 : add byte ptr [rax], al ; sub dh, bl ; out dx, al ; call qword ptr [rsi]
0x000000000006e949 : add byte ptr [rax], al ; sub dword ptr [rdi + 4], 1 ; je 0x6e902 ; jmp 0x6e91f
0x0000000000077879 : add byte ptr [rax], al ; sub dword ptr [rdi + 4], 1 ; je 0x77832 ; jmp 0x7784f
0x0000000000102816 : add byte ptr [rax], al ; sub eax, 1 ; leave ; ret
0x000000000015a20c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000349f4 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000b7843 : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ecfa2 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000110100 : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000007cba6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000000a1121 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000d752c : add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xd74ce
0x0000000000042f4c : add byte ptr [rax], al ; sub rsp, 0x10 ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000023ba8 : add byte ptr [rax], al ; syscall
0x00000000001a446e : add byte ptr [rax], al ; test al, 0x6e ; add dword ptr [rax], eax ; sub al, 0x7c ; cmc ; call rbx
0x00000000001963a6 : add byte ptr [rax], al ; test al, 0x7d ; out dx, al ; jmp qword ptr [rbx]
0x000000000019656e : add byte ptr [rax], al ; test al, 0x8f ; add byte ptr [rax], al ; or al, 0x7f ; out dx, al ; jmp qword ptr [rbx]
0x000000000019ae6e : add byte ptr [rax], al ; test al, 0xd8 ; add byte ptr [rax], al ; cmp al, 0xdf ; sti ; jmp rsi
0x000000000019b16e : add byte ptr [rax], al ; test al, 0xdb ; add byte ptr [rax], al ; jl 0x19b112 ; int1 ; jmp qword ptr [rax]
0x00000000001a364a : add byte ptr [rax], al ; test byte ptr [rax + 1], ah ; add byte ptr [rax + 0x3d], dh ; cmc ; jmp qword ptr [rbx]
0x0000000000198fea : add byte ptr [rax], al ; test byte ptr [rbx + rdi*8], ch ; call qword ptr [rax]
0x000000000007ca24 : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7ca58 ; pop rbx ; ret
0x00000000001a2f4a : add byte ptr [rax], al ; test byte ptr [rcx + 1], bl ; add al, dl ; xor esi, ebp ; jmp qword ptr [rcx]
0x00000000001a2a4a : add byte ptr [rax], al ; test byte ptr [rcx + rax], dl ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000198baa : add byte ptr [rax], al ; test byte ptr [rdx - 0x11], bl ; call qword ptr [rax]
0x000000000003ad45 : add byte ptr [rax], al ; test dil, dil ; cmove eax, ecx ; ret
0x000000000003ad6d : add byte ptr [rax], al ; test dil, dil ; cmovne eax, ecx ; ret
0x000000000003ad5a : add byte ptr [rax], al ; test dl, dl ; cmovne eax, ecx ; ret
0x00000000001198bf : add byte ptr [rax], al ; test eax, eax ; je 0x1198d8 ; xor eax, eax ; ret
0x00000000000e79d6 : add byte ptr [rax], al ; test eax, eax ; jne 0xe79f6 ; syscall
0x000000000012607a : add byte ptr [rax], al ; test ebx, ebx ; jle 0x1260c0 ; call 0x122ab8
0x0000000000051d52 : add byte ptr [rax], al ; test edx, edx ; jne 0x51d69 ; sub dword ptr [rdi], 1 ; ret
0x000000000019cd12 : add byte ptr [rax], al ; test qword ptr [rax], -0xd6fd800 ; jmp qword ptr [rcx]
0x00000000000bf867 : add byte ptr [rax], al ; test rax, rax ; je 0xbf8a7 ; call rax
0x00000000000bf8d7 : add byte ptr [rax], al ; test rax, rax ; je 0xbf917 ; call rax
0x00000000000e6eb8 : add byte ptr [rax], al ; test rax, rax ; je 0xe6ef9 ; xor edx, edx ; call rax
0x00000000001234c2 : add byte ptr [rax], al ; test rax, rax ; jne 0x1234b8 ; pop rbx ; ret
0x0000000000163e36 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x163e48 ; ret
0x000000000007afae : add byte ptr [rax], al ; test rdx, rdx ; jne 0x7afc9 ; xor eax, eax ; ret
0x0000000000196922 : add byte ptr [rax], al ; test rsi, r13 ; jmp qword ptr [rsi]
0x0000000000155a90 : add byte ptr [rax], al ; vzeroupper ; ret
0x000000000015074e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000001b0caa : add byte ptr [rax], al ; xchg dword ptr [rax], ecx ; add byte ptr [rax], al ; ret 1
0x00000000001a1d5a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [r8], r8d ; mov al, 0xea ; hlt ; call qword ptr [rdi]
0x00000000001a595a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rcx], 0 ; jo 0x1a595e ; cmc ; call qword ptr [rdi]
0x000000000019655a : add byte ptr [rax], al ; xchg eax, esp ; pop qword ptr [rax] ; add al, dh ; jle 0x19655a ; jmp qword ptr [rbx]
0x00000000001a335a : add byte ptr [rax], al ; xchg eax, esp ; pop rbp ; add dword ptr [rax], eax ; push rax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000019908a : add byte ptr [rax], al ; xchg eax, esp ; sti ; call qword ptr [rax]
0x00000000001ae3ba : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; retf
0x000000000018f6fa : add byte ptr [rax], al ; xor al, 0x21 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x16], bl ; call qword ptr [rdx]
0x0000000000191efa : add byte ptr [rax], al ; xor al, 0x49 ; add byte ptr [rax], al ; adc dl, al ; jmp 0x191f0a
0x000000000019640a : add byte ptr [rax], al ; xor al, 0x7e ; out dx, al ; jmp qword ptr [rbx]
0x00000000001aa2fa : add byte ptr [rax], al ; xor al, 0xcd ; add dword ptr [rax], eax ; adc byte ptr [rbp - 9], al ; jmp rsi
0x000000000019ae4a : add byte ptr [rax], al ; xor al, 0xdd ; sti ; jmp qword ptr [rbx]
0x000000000019d0fa : add byte ptr [rax], al ; xor al, 0xfb ; add byte ptr [rax], al ; push rax ; ret
0x00000000001ad9fa : add byte ptr [rax], al ; xor al, 4 ; add al, byte ptr [rax] ; and byte ptr [rbx - 5], dl ; call qword ptr [rdx]
0x000000000019976e : add byte ptr [rax], al ; xor bl, ah ; sti ; call qword ptr [rbx]
0x0000000000198c1e : add byte ptr [rax], al ; xor byte ptr [rbx - 0x11], bl ; call qword ptr [rbx]
0x00000000001948f6 : add byte ptr [rax], al ; xor byte ptr [rbx], dh ; add byte ptr [rcx], ah ; out dx, al ; call rsp
0x0000000000198746 : add byte ptr [rax], al ; xor byte ptr [rcx + 0x1be40000], 0xef ; call rdi
0x00000000001964f6 : add byte ptr [rax], al ; xor byte ptr [rdi + 0x7e640000], cl ; out dx, al ; jmp qword ptr [rbx]
0x000000000018dc1e : add byte ptr [rax], al ; xor byte ptr [rdi - 3], dl ; jmp qword ptr [rdx]
0x000000000018f6fe : add byte ptr [rax], al ; xor byte ptr [rdx - 0x16], bl ; call qword ptr [rdx]
0x00000000000a072e : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000019798e : add byte ptr [rax], al ; xor dl, 0xee ; jmp qword ptr [rcx]
0x00000000001997f6 : add byte ptr [rax], al ; xor dl, al ; add byte ptr [rax], al ; add al, 0x31 ; cld ; call qword ptr [rbx]
0x00000000000bfcf6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000db43e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000011a13e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000011a0f6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000007853c : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c046a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000515a5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000082c06 : add byte ptr [rax], al ; xor eax, eax ; pop rdx ; pop rbx ; pop rbp ; ret
0x0000000000038376 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ec6be : add byte ptr [rax], al ; xor eax, eax ; syscall
0x00000000001503ae : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000039766 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000005153e : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000000b47a6 : add byte ptr [rax], al ; xor edi, edi ; syscall
0x000000000006a736 : add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x00000000000bf81f : add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x0000000000103c3e : add byte ptr [rax], al ; xor r8d, r8d ; mov rax, r8 ; ret
0x000000000002b23e : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000000b2c2e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a2af7 : add byte ptr [rax], bh ; cmc ; call qword ptr [rax]
0x00000000001a5a47 : add byte ptr [rax], bh ; cmc ; cmc ; call qword ptr [rdi]
0x000000000019c9ff : add byte ptr [rax], bh ; hlt ; add byte ptr [rax], al ; in al, dx ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001a5eff : add byte ptr [rax], bh ; mov dword ptr [rcx], eax ; add byte ptr [rbp + rcx - 0xa], ch ; call rsi
0x00000000001a0297 : add byte ptr [rax], bh ; mov esp, esi ; jmp qword ptr [rcx]
0x0000000000194aa7 : add byte ptr [rax], bh ; out dx, al ; call qword ptr [rdi]
0x00000000001a2fff : add byte ptr [rax], bh ; pop rdx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a25ff : add byte ptr [rax], bh ; push rax ; add dword ptr [rax], eax ; in al, dx ; add al, 0xf5 ; call qword ptr [rdi]
0x0000000000195877 : add byte ptr [rax], bh ; push rdi ; out dx, al ; jmp qword ptr [rsi]
0x0000000000192bff : add byte ptr [rax], bh ; push rsi ; add byte ptr [rax], al ; or al, 0xa4 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000048904 : add byte ptr [rax], bh ; ret 0x2975
0x000000000004092c : add byte ptr [rax], bh ; ret 0x3175
0x00000000001a2907 : add byte ptr [rax], bh ; retf
0x00000000001a7ec7 : add byte ptr [rax], bh ; retf 0xfff6
0x000000000019c917 : add byte ptr [rax], bh ; test dl, dh ; jmp qword ptr [rcx]
0x000000000019ccff : add byte ptr [rax], bh ; test dword ptr [rax], 0xf2900c00 ; jmp qword ptr [rcx]
0x000000000018f5df : add byte ptr [rax], bl ; and byte ptr [rax], al ; add byte ptr [rsi + rdx*2 - 0x16], cl ; call qword ptr [rax]
0x0000000000190fdf : add byte ptr [rax], bl ; cmp al, byte ptr [rax] ; add byte ptr [rbp + rsi*8 - 0x16], ch ; call qword ptr [rdx]
0x00000000001a3337 : add byte ptr [rax], bl ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000019b1df : add byte ptr [rax], bl ; fadd qword ptr [rax] ; add byte ptr [rsp + rdx*4 - 0xf], bh ; call rcx
0x00000000001ab0df : add byte ptr [rax], bl ; fild dword ptr [rcx] ; add ah, bh ; ja 0x1ab0e6 ; call qword ptr [rbx]
0x000000000019b2df : add byte ptr [rax], bl ; fld qword ptr [rax] ; add byte ptr [rcx + rbx*4], cl ; int1 ; jmp rbx
0x00000000001963f7 : add byte ptr [rax], bl ; jle 0x1963ed ; jmp qword ptr [rbx]
0x000000000019b7df : add byte ptr [rax], bl ; loop 0x19b7eb ; add byte ptr [rax + rsi*8], bl ; int1 ; call qword ptr [rax]
0x00000000001963df : add byte ptr [rax], bl ; mov es, word ptr [rax] ; add ah, bh ; jge 0x1963dd ; jmp qword ptr [rbx]
0x00000000001a1f17 : add byte ptr [rax], bl ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x000000000019a0df : add byte ptr [rax], bl ; retf
0x000000000019eddf : add byte ptr [rax], bl ; sbb byte ptr [rcx], al ; add ah, bl ; call qword ptr [rsi]
0x00000000001a6007 : add byte ptr [rax], ch ; adc al, 0xf6 ; call rdx
0x0000000000197ff7 : add byte ptr [rax], ch ; add al, 0xef ; jmp qword ptr [rcx]
0x00000000001aa0cb : add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x0000000000197417 : add byte ptr [rax], ch ; fsubp st(6) ; call qword ptr [rsi]
0x00000000001a1e77 : add byte ptr [rax], ch ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000196587 : add byte ptr [rax], ch ; jg 0x19657d ; jmp qword ptr [rbx]
0x00000000001962ef : add byte ptr [rax], ch ; lea eax, [rax] ; add ah, ch ; jp 0x1962ed ; call qword ptr [rdx]
0x00000000001a04d7 : add byte ptr [rax], ch ; nop ; hlt ; jmp qword ptr [rcx]
0x00000000001aa8ef : add byte ptr [rax], ch ; rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*2 - 9], bl ; jmp qword ptr [rax]
0x000000000019acef : add byte ptr [rax], ch ; xlatb ; add byte ptr [rax], al ; pushfq ; insd dword ptr [rdi], dx ; int1 ; call qword ptr [rdx]
0x000000000018f1c7 : add byte ptr [rax], ch ; xor ch, dl ; call qword ptr [rdx]
0x00000000001a9697 : add byte ptr [rax], cl ; adc dh, bh ; call qword ptr [rdi]
0x000000000015f09d : add byte ptr [rax], cl ; add bh, dh ; fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x0000000000161abc : add byte ptr [rax], cl ; add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x0000000000199903 : add byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000015ee36 : add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x0000000000197ccf : add byte ptr [rax], cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; in al, dx ; imul dh ; call qword ptr [rax]
0x0000000000188437 : add byte ptr [rax], cl ; in al, dx ; jmp rax
0x00000000001ab147 : add byte ptr [rax], cl ; jns 0x1ab146 ; jmp qword ptr [rbx]
0x00000000001a6fd7 : add byte ptr [rax], cl ; jp 0x1a6fd5 ; jmp rcx
0x0000000000194dcf : add byte ptr [rax], cl ; js 0x194ddb ; add byte ptr [rdi + rbp - 0x12], bh ; jmp qword ptr [rbx]
0x000000000019fde7 : add byte ptr [rax], cl ; js 0x19fde3 ; jmp qword ptr [rcx]
0x0000000000198da7 : add byte ptr [rax], cl ; mov ch, bh ; jmp qword ptr [rbx]
0x000000000002eb24 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001964cf : add byte ptr [rax], cl ; pop qword ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], bl ; jmp qword ptr [rbx]
0x00000000001a32cf : add byte ptr [rax], cl ; pop rbp ; add dword ptr [rax], eax ; jl 0x1a3316 ; cmc ; jmp qword ptr [rcx]
0x0000000000196ef7 : add byte ptr [rax], cl ; ret
0x00000000001997cf : add byte ptr [rax], cl ; ret 0
0x0000000000196ec7 : add byte ptr [rax], cl ; ret 0xffee
0x00000000001aa0cf : add byte ptr [rax], cl ; retf
0x00000000001a1507 : add byte ptr [rax], cl ; retf 0xfff4
0x000000000019fdcf : add byte ptr [rax], cl ; sub byte ptr [rcx], al ; add ah, ch ; ja 0x19fdd3 ; jmp qword ptr [rcx]
0x000000000018ecef : add byte ptr [rax], dh ; add dl, ch ; call qword ptr [rbx]
0x00000000000a072f : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001948f7 : add byte ptr [rax], dh ; jae 0x194903 ; add byte ptr [rcx], ah ; out dx, al ; call rsp
0x000000000019976f : add byte ptr [rax], dh ; jrcxz 0x199772 ; call qword ptr [rbx]
0x00000000001a94f7 : add byte ptr [rax], dh ; mov edi, 0xdc40001 ; idiv edi ; retf
0x00000000001a53ef : add byte ptr [rax], dh ; out 0xf5, eax ; call rcx
0x00000000001964f7 : add byte ptr [rax], dh ; pop qword ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], ah ; jmp qword ptr [rbx]
0x0000000000198c1f : add byte ptr [rax], dh ; pop rbx ; out dx, eax ; call qword ptr [rbx]
0x000000000018dc1f : add byte ptr [rax], dh ; push rdi ; std ; jmp qword ptr [rdx]
0x0000000000005287 : add byte ptr [rax], dh ; ret
0x00000000001997f7 : add byte ptr [rax], dh ; ret 0
0x00000000001a10df : add byte ptr [rax], dh ; ret 0xfff4
0x00000000000095d7 : add byte ptr [rax], dh ; retf
0x0000000000006c07 : add byte ptr [rax], dh ; syscall
0x000000000019a09f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, bl ; retf 0
0x00000000001999af : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, ch ; ret
0x00000000001aa08f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, cl ; retf 1
0x00000000001aa0b7 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, dh ; retf 1
0x00000000001aa0a3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, ah ; retf 1
0x000000000019a19b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, bl ; retf
0x000000000019a08b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, cl ; retf 0
0x000000000019a0b3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, dh ; retf 0
0x000000000019a0db : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x00000000001997cb : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0
0x00000000001997f3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0
0x0000000000051598 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000515a3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000019e5c8 : add byte ptr [rax], dl ; add dword ptr [rax], eax ; push rsp ; scasd eax, dword ptr [rdi] ; jmp rdi
0x00000000001a2a50 : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x000000000019ed3f : add byte ptr [rax], dl ; jmp qword ptr [rcx]
0x000000000002ec04 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001a2fd7 : add byte ptr [rax], dl ; pop rdx ; add dword ptr [rax], eax ; je 0x1a301a ; cmc ; jmp qword ptr [rcx]
0x0000000000191eff : add byte ptr [rax], dl ; ret 0xffeb
0x000000000000a447 : add byte ptr [rax], dl ; ret 7
0x0000000000009d6f : add byte ptr [rax], dl ; retf
0x0000000000198faf : add byte ptr [rax], dl ; xchg eax, ebp ; out dx, eax ; jmp qword ptr [rsi]
0x00000000001998b4 : add byte ptr [rax], r8b ; add al, dh ; ret 0
0x000000000019323c : add byte ptr [rax], r8b ; add byte ptr [rax + 0x5c], bh ; add byte ptr [rax], al ; ret 0xffed
0x00000000001a4f1c : add byte ptr [rax], r8b ; add byte ptr [rax + 0x79], bl ; add dword ptr [rax], eax ; ret
0x0000000000191ef8 : add byte ptr [rax], r8b ; add byte ptr [rcx + rcx*2], dh ; add byte ptr [rax], al ; adc dl, al ; jmp 0x191f0c
0x00000000000450ed : add byte ptr [rax], r8b ; add rax, 1 ; pop rbx ; ret
0x00000000000e7e82 : add byte ptr [rax], r8b ; add rsp, 0x68 ; ret
0x00000000000fdc15 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000163345 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000075d8d : add byte ptr [rax], r8b ; and edx, 0xffffffcf ; mov dword ptr [rdi], edx ; ret
0x000000000012cb6d : add byte ptr [rax], r8b ; call r14
0x0000000000034bed : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000083ddd : add byte ptr [rax], r8b ; jmp rax
0x0000000000112605 : add byte ptr [rax], r8b ; mov byte ptr [r10], 0 ; ret
0x00000000000ccfc5 : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000008e35d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000e76dd : add byte ptr [rax], r8b ; mov eax, 0x102 ; syscall
0x00000000000e94cd : add byte ptr [rax], r8b ; mov eax, 0x107 ; syscall
0x00000000000e940d : add byte ptr [rax], r8b ; mov eax, 0x10a ; syscall
0x00000000000f67dd : add byte ptr [rax], r8b ; mov eax, 0x110 ; syscall
0x00000000000f683d : add byte ptr [rax], r8b ; mov eax, 0x11b ; syscall
0x00000000000f64ad : add byte ptr [rax], r8b ; mov eax, 0x123 ; syscall
0x00000000000e824d : add byte ptr [rax], r8b ; mov eax, 0x124 ; syscall
0x00000000000e82ad : add byte ptr [rax], r8b ; mov eax, 0x125 ; syscall
0x00000000000f65cd : add byte ptr [rax], r8b ; mov eax, 0x126 ; syscall
0x00000000000f68cd : add byte ptr [rax], r8b ; mov eax, 0x12c ; syscall
0x00000000000f63ed : add byte ptr [rax], r8b ; mov eax, 0x131 ; syscall
0x00000000000f69ed : add byte ptr [rax], r8b ; mov eax, 0x14a ; syscall
0x00000000000f6a1d : add byte ptr [rax], r8b ; mov eax, 0x14b ; syscall
0x00000000000854fd : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000e827d : add byte ptr [rax], r8b ; mov eax, 0x16 ; syscall
0x00000000000de01d : add byte ptr [rax], r8b ; mov eax, 0x18 ; syscall
0x00000000000f0ccd : add byte ptr [rax], r8b ; mov eax, 0x1b ; syscall
0x00000000000f792d : add byte ptr [rax], r8b ; mov eax, 0x1e ; syscall
0x00000000000f79bd : add byte ptr [rax], r8b ; mov eax, 0x1f ; syscall
0x00000000000e821d : add byte ptr [rax], r8b ; mov eax, 0x21 ; syscall
0x00000000000b6f0d : add byte ptr [rax], r8b ; mov eax, 0x26 ; syscall
0x00000000000f717d : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x00000000000f6c4d : add byte ptr [rax], r8b ; mov eax, 0x33 ; syscall
0x00000000000f781d : add byte ptr [rax], r8b ; mov eax, 0x47 ; syscall
0x00000000000ef3ad : add byte ptr [rax], r8b ; mov eax, 0x4d ; syscall
0x00000000000e839d : add byte ptr [rax], r8b ; mov eax, 0x51 ; syscall
0x00000000000e94fd : add byte ptr [rax], r8b ; mov eax, 0x54 ; syscall
0x00000000000e943d : add byte ptr [rax], r8b ; mov eax, 0x59 ; syscall
0x00000000000e75ed : add byte ptr [rax], r8b ; mov eax, 0x5b ; syscall
0x00000000000e8bfd : add byte ptr [rax], r8b ; mov eax, 0x5d ; syscall
0x00000000000e8c2d : add byte ptr [rax], r8b ; mov eax, 0x5e ; syscall
0x00000000000c4b5d : add byte ptr [rax], r8b ; mov eax, 0x64 ; syscall
0x00000000000f662d : add byte ptr [rax], r8b ; mov eax, 0x67 ; syscall
0x00000000000c5c7d : add byte ptr [rax], r8b ; mov eax, 0x6d ; syscall
0x00000000000c5cad : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall
0x00000000000c5d0d : add byte ptr [rax], r8b ; mov eax, 0x70 ; syscall
0x00000000000c5d3d : add byte ptr [rax], r8b ; mov eax, 0x76 ; syscall
0x00000000000c5d6d : add byte ptr [rax], r8b ; mov eax, 0x78 ; syscall
0x00000000000f5c3d : add byte ptr [rax], r8b ; mov eax, 0x7b ; syscall
0x00000000000c61dd : add byte ptr [rax], r8b ; mov eax, 0x7e ; ret
0x00000000000f63bd : add byte ptr [rax], r8b ; mov eax, 0x7e ; syscall
0x000000000011083d : add byte ptr [rax], r8b ; mov eax, 0x7fffffff ; ret
0x00000000000f680d : add byte ptr [rax], r8b ; mov eax, 0x86 ; syscall
0x00000000000e74dd : add byte ptr [rax], r8b ; mov eax, 0x8a ; syscall
0x00000000000ddf8d : add byte ptr [rax], r8b ; mov eax, 0x8f ; syscall
0x00000000000ddfbd : add byte ptr [rax], r8b ; mov eax, 0x90 ; syscall
0x00000000000ddfed : add byte ptr [rax], r8b ; mov eax, 0x91 ; syscall
0x00000000000de04d : add byte ptr [rax], r8b ; mov eax, 0x92 ; syscall
0x00000000000de07d : add byte ptr [rax], r8b ; mov eax, 0x93 ; syscall
0x00000000000de0ad : add byte ptr [rax], r8b ; mov eax, 0x94 ; syscall
0x00000000000f0d5d : add byte ptr [rax], r8b ; mov eax, 0x96 ; syscall
0x00000000000f0d8d : add byte ptr [rax], r8b ; mov eax, 0x97 ; syscall
0x00000000000f0dbd : add byte ptr [rax], r8b ; mov eax, 0x98 ; syscall
0x00000000000f631d : add byte ptr [rax], r8b ; mov eax, 0x9a ; syscall
0x00000000000f66ed : add byte ptr [rax], r8b ; mov eax, 0x9b ; syscall
0x00000000000f0bcd : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000000edd3d : add byte ptr [rax], r8b ; mov eax, 0xa1 ; syscall
0x00000000000ee1cd : add byte ptr [rax], r8b ; mov eax, 0xa7 ; syscall
0x00000000000ee1fd : add byte ptr [rax], r8b ; mov eax, 0xa8 ; syscall
0x00000000000f5a8d : add byte ptr [rax], r8b ; mov eax, 0xac ; syscall
0x00000000000f641d : add byte ptr [rax], r8b ; mov eax, 0xae ; syscall
0x00000000000f644d : add byte ptr [rax], r8b ; mov eax, 0xb0 ; syscall
0x00000000000f6a4d : add byte ptr [rax], r8b ; mov eax, 0xba ; syscall
0x00000000000f5bdd : add byte ptr [rax], r8b ; mov eax, 0xbb ; syscall
0x00000000000854c5 : add byte ptr [rax], r8b ; mov eax, 0xc ; pop rbx ; ret
0x00000000000f39ed : add byte ptr [rax], r8b ; mov eax, 0xc6 ; syscall
0x00000000000f38cd : add byte ptr [rax], r8b ; mov eax, 0xc7 ; syscall
0x00000000000f647d : add byte ptr [rax], r8b ; mov eax, 0xd5 ; syscall
0x00000000000f634d : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall
0x00000000000f659d : add byte ptr [rax], r8b ; mov eax, 0xfd ; syscall
0x00000000000f65fd : add byte ptr [rax], r8b ; mov eax, 0xff ; syscall
0x000000000007d99d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000c6f85 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000000dbf0d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007d59d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000074ccd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x000000000010fe15 : add byte ptr [rax], r8b ; mov eax, ecx ; ret
0x00000000000707ad : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000fba8d : add byte ptr [rax], r8b ; mov eax, r8d ; ret
0x000000000009c70d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001025d5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000009d97d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000001005cd : add byte ptr [rax], r8b ; mov rdi, r14 ; call 0xfd078
0x000000000009c74d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000122e35 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001187dd : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000c505d : add byte ptr [rax], r8b ; pop rdi ; mov eax, 0x3a ; syscall
0x0000000000125fad : add byte ptr [rax], r8b ; push rbx ; call 0x122ab6
0x00000000000b526d : add byte ptr [rax], r8b ; push rbx ; mov rbx, rdi ; call 0x21499
0x0000000000035bf5 : add byte ptr [rax], r8b ; ret
0x00000000000db43d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000cf635 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee665 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000038375 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000ec6bd : add byte ptr [rax], r8b ; xor eax, eax ; syscall
0x00000000001503ad : add byte ptr [rax], r8b ; xor eax, eax ; vzeroupper ; ret
0x00000000001048cd : add byte ptr [rax], r8b ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000b2c2d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000f78ab : add byte ptr [rbp + 0x12], dh ; mov eax, 0x42 ; syscall
0x000000000015ecfe : add byte ptr [rbp + 0x29], al ; ret
0x0000000000161706 : add byte ptr [rbp + 0x29], al ; retf
0x00000000000897ea : add byte ptr [rbp + 0x29], cl ; ret 0x8948
0x00000000000ae0f5 : add byte ptr [rbp + 0x29d675db], al ; ret
0x00000000000ae027 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000001a2c0b : add byte ptr [rbp + 0x2f], ch ; cmc ; call qword ptr [rax]
0x0000000000079937 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000004e9b3 : add byte ptr [rbp + 0x31], al ; in al, 0x83 ; ret
0x000000000002b23f : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000088bcf : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000bcd24 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f798f : add byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x1d], cl ; syscall
0x000000000010266f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x0000000000100ecb : add byte ptr [rbp + 0x32], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d3b34 : add byte ptr [rbp + 0x38], al ; ret
0x00000000000ae07b : add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000d137e : add byte ptr [rbp + 0x39], al ; retf
0x00000000000d68ba : add byte ptr [rbp + 0x39], al ; retf 0x8f0f
0x0000000000160d42 : add byte ptr [rbp + 0x39], cl ; retf 0xbf41
0x000000000003ad3a : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x00000000000f1d0f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000007ed45 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fb2c0 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000cd6f5 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000005152e : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000077e97 : add byte ptr [rbp + 0x63], cl ; ret 0xc148
0x0000000000177f2b : add byte ptr [rbp + 0xb], ch ; add byte ptr [rax], al ; jmp 0xffffffffc3177f47
0x000000000002f3f2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x18 ; ret
0x000000000012c630 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x00000000000bb4cc : add byte ptr [rbp + 0xf], al ; ret
0x00000000000468cf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000467bf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000df06e : add byte ptr [rbp + 0xf], dh ; mov eax, 2 ; ret
0x000000000008c247 : add byte ptr [rbp + 1], al ; ret 0x14d
0x000000000008c11b : add byte ptr [rbp + 1], al ; retf
0x00000000000e0eeb : add byte ptr [rbp + 1], cl ; stc ; add r8, r15 ; call r14
0x0000000000007287 : add byte ptr [rbp + 2], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000038e2a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00000000000ceab9 : add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x00000000000e63c9 : add byte ptr [rbp + 5], dh ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000ee585 : add byte ptr [rbp + 8], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001aea6f : add byte ptr [rbp + rax + 0x7e90000], al ; add byte ptr [rax], al ; retf
0x000000000018826f : add byte ptr [rbp + rax - 0x14], ch ; call rsp
0x0000000000196923 : add byte ptr [rbp + rax*4 - 0x12], cl ; jmp qword ptr [rsi]
0x000000000018b197 : add byte ptr [rbp + rax*8 - 0xa], bh ; jmp rax
0x000000000018cdff : add byte ptr [rbp + rbp - 6], cl ; jmp rax
0x0000000000194313 : add byte ptr [rbp + rbp*2], cl ; add byte ptr [rax + 0xa], ch ; out dx, al ; jmp rcx
0x00000000001a86a3 : add byte ptr [rbp + rbp*8 - 0xa], bl ; call rdi
0x000000000018a72f : add byte ptr [rbp + rbp*8 - 0xb], ch ; call rsp
0x00000000001a1e8b : add byte ptr [rbp + rbp*8 - 0xc], al ; jmp qword ptr [rcx]
0x000000000018c22f : add byte ptr [rbp + rbp*8 - 8], bl ; call qword ptr [rax]
0x000000000019b693 : add byte ptr [rbp + rbx - 7], bh ; jmp qword ptr [rbx]
0x00000000001a335b : add byte ptr [rbp + rbx*2 + 0x39500001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a3333 : add byte ptr [rbp + rbx*2 + 1], ch ; add byte ptr [rax], bl ; cmp ebp, esi ; jmp qword ptr [rcx]
0x0000000000193363 : add byte ptr [rbp + rbx*2 - 0x35780000], bl ; in eax, dx ; jmp qword ptr [rdi]
0x000000000018bc37 : add byte ptr [rbp + rbx*8 - 9], bl ; jmp rsp
0x00000000001a5f03 : add byte ptr [rbp + rcx - 0xa], ch ; call rsi
0x00000000001a2833 : add byte ptr [rbp + rcx - 0xb], ch ; call rax
0x000000000018d3bf : add byte ptr [rbp + rcx*2 - 3], bl ; jmp qword ptr [rax]
0x000000000018be2f : add byte ptr [rbp + rcx*2 - 8], cl ; call rsp
0x00000000000235b3 : add byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x0000000000160ced : add byte ptr [rbp + rcx*4 + 0x47], al ; add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000118c52 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x0000000000118af7 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x00000000000aeda8 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r12
0x00000000000464ef : add byte ptr [rbp + rcx*4 + 0x64], cl ; retf 0x4df0
0x00000000000cf20f : add byte ptr [rbp + rcx*4 + 0x75], cl ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000063695 : add byte ptr [rbp + rcx*4 + 5], cl ; adc qword ptr [r8], rax ; jmp rax
0x00000000000fc39d : add byte ptr [rbp + rcx*4 + 5], cl ; wait ; retf 0x2b
0x000000000019a32b : add byte ptr [rbp + rcx*8], ah ; add al, al ; ret 0xfff0
0x000000000019a343 : add byte ptr [rbp + rcx*8], bh ; add byte ptr [rax], cl ; ret
0x00000000001a133b : add byte ptr [rbp + rdi + 1], dh ; add byte ptr [rax - 0x39], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001a1383 : add byte ptr [rbp + rdi - 0x3857ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001890df : add byte ptr [rbp + rdi*2 - 0x11], bl ; jmp qword ptr [rax]
0x000000000018ea7b : add byte ptr [rbp + rdi*8 - 0x17], ah ; call qword ptr [rdi]
0x00000000001a90f3 : add byte ptr [rbp + rdi*8 - 0xa], bl ; jmp rdx
0x000000000018a837 : add byte ptr [rbp + rdi*8 - 0xb], bh ; call qword ptr [rax]
0x00000000000ec668 : add byte ptr [rbp + rdx - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000001a307b : add byte ptr [rbp + rsi - 0xb], dl ; jmp qword ptr [rcx]
0x0000000000190fe3 : add byte ptr [rbp + rsi*8 - 0x16], ch ; call qword ptr [rdx]
0x00000000001a5a8b : add byte ptr [rbp + rsi*8 - 0xb], ah ; call qword ptr [rax]
0x00000000001a5a5b : add byte ptr [rbp + rsi*8 - 0xb], al ; call qword ptr [rdi]
0x000000000019f913 : add byte ptr [rbp + rsi*8 - 8], bl ; call qword ptr [rax]
0x0000000000163924 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000c62d3 : add byte ptr [rbp - 0x2f], dh ; mov eax, 0x40 ; ret
0x00000000000c61c8 : add byte ptr [rbp - 0x35], dh ; ret
0x00000000000c640d : add byte ptr [rbp - 0x36], dh ; jmp 0xc63bd
0x0000000000021780 : add byte ptr [rbp - 0x3c], dh ; ret
0x0000000000163bca : add byte ptr [rbp - 0x3d], bl ; nop dword ptr [rax] ; ret
0x00000000000c352f : add byte ptr [rbp - 0x3e], dh ; jmp 0xc34ed
0x00000000000fa44f : add byte ptr [rbp - 0x3e], dh ; jmp 0xfa40d
0x00000000000fc00f : add byte ptr [rbp - 0x3e], dh ; jmp 0xfbfcd
0x0000000000083800 : add byte ptr [rbp - 0x43], dl ; retf 0
0x00000000000e5372 : add byte ptr [rbp - 0x45], dh ; mov rdi, rax ; call 0x21680
0x0000000000046607 : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000000d4af8 : add byte ptr [rbp - 0x76248b40], al ; ret 0xe281
0x0000000000161167 : add byte ptr [rbp - 0x76b33cb5], cl ; retf
0x00000000000d1a7a : add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x0000000000162567 : add byte ptr [rbp - 0x77], al ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000045cf5 : add byte ptr [rbp - 0x77], al ; retf 0x8341
0x00000000000a5f1e : add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x000000000011ba67 : add byte ptr [rbp - 0x77], cl ; ret 0x314c
0x000000000009004d : add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f1549 : add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x0000000000085ce5 : add byte ptr [rbp - 0x7ae98140], al ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000a3990 : add byte ptr [rbp - 0x7b], al ; in al, 0x75 ; ret 0x8945
0x0000000000051bdf : add byte ptr [rbp - 0x7b], al ; sal byte ptr [rbx + 0x49], 0x89 ; retf 0x3cb9
0x00000000000818f4 : add byte ptr [rbp - 0x7b], cl ; in al, 0x74 ; or dword ptr [rcx + 0x39], ecx ; retf
0x00000000000b00df : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; call qword ptr [rdi]
0x000000000008dfaf : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rbp + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x00000000000cd8e7 : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000045107 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000007f8e5 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000024a75 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x0000000000178fe0 : add byte ptr [rbp - 0xe], al ; call qword ptr [rax]
0x0000000000179224 : add byte ptr [rbp - 0xe], bl ; call qword ptr [rax]
0x0000000000179200 : add byte ptr [rbp - 0xe], bl ; jmp qword ptr [rax]
0x000000000018639c : add byte ptr [rbp - 4], 0xff ; push rax ; cld ; jmp qword ptr [rax]
0x00000000001871a4 : add byte ptr [rbp - 5], dl ; call qword ptr [rax + 0x20fffb54]
0x000000000018bd6f : add byte ptr [rbp - 8], ch ; call rsp
0x0000000000006bc7 : add byte ptr [rbp], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000014bee9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000075d8f : add byte ptr [rbx + 0x1789cfe2], al ; ret
0x0000000000084e64 : add byte ptr [rbx + 0x19], dh ; lea rax, [rdx - 8] ; ret
0x0000000000077c9f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000f014f : add byte ptr [rbx + 0x27f01f8], al ; ret
0x00000000000a1e45 : add byte ptr [rbx + 0x2b], 4 ; mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x000000000011a887 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000007e8dd : add byte ptr [rbx + 0x338f1b2d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000007d8a1 : add byte ptr [rbx + 0x339f1b05], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000010e9bf : add byte ptr [rbx + 0x3b83b], cl ; add byte ptr [rax], al ; syscall
0x000000000010e92f : add byte ptr [rbx + 0x3b83f], cl ; add byte ptr [rax], al ; syscall
0x000000000002218f : add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000000c5c40 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000002b5fc : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000000bfbcf : add byte ptr [rbx + 0x43391843], cl ; or al, 0x7c ; ret 0x850f
0x00000000000767ce : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009c71f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000146adf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x0000000000149e8f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x000000000009eb4f : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x000000000008e009 : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x00000000000b526f : add byte ptr [rbx + 0x48], dl ; mov ebx, edi ; call 0x21497
0x0000000000083a45 : add byte ptr [rbx + 0x4c], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001128dc : add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8941
0x000000000011288c : add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x00000000001128b4 : add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8941
0x000000000013967f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000521d5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036b07 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021f66 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000024228 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000078b5f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000009ce09 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000002cf6f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000000e63df : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000006e94a : add byte ptr [rbx + 0x7401046f], al ; test al, 0xeb ; ret
0x0000000000077c6f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000bf7df : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x00000000000885fd : add byte ptr [rbx + 0xf4808e1], al ; ret 0xc3f3
0x000000000004e279 : add byte ptr [rbx + 0xf4841ff], al ; retf 0x894c
0x000000000019f92b : add byte ptr [rbx + 1], ah ; add al, ah ; push -0xc ; call qword ptr [rax]
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000018c2df : add byte ptr [rbx + rax - 7], ch ; call rax
0x000000000015b8fa : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001a18e3 : add byte ptr [rbx + rax*2], bl ; add dword ptr [rax], eax ; js 0x1a18c4 ; hlt ; jmp qword ptr [rsi]
0x0000000000123466 : add byte ptr [rbx + rax*4 + 0x38], ah ; sbb byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000001a595b : add byte ptr [rbx + rax*4 - 0xc8fffff], dl ; cmc ; call qword ptr [rdi]
0x000000000019c873 : add byte ptr [rbx + rax*4 - 0xe], ch ; call qword ptr [rdx]
0x000000000018890f : add byte ptr [rbx + rax*8], bh ; out dx, al ; push qword ptr [rax] ; retf
0x00000000001a016b : add byte ptr [rbx + rbp - 0x7eefffff], ah ; hlt ; jmp qword ptr [rcx]
0x000000000019f8bb : add byte ptr [rbx + rbp*2], al ; hlt ; call qword ptr [rbx]
0x000000000018a5c7 : add byte ptr [rbx + rbp*2], bh ; cmc ; call rax
0x000000000018b027 : add byte ptr [rbx + rbp*4 - 0xa], bl ; call qword ptr [rax]
0x00000000001a7923 : add byte ptr [rbx + rbp*4 - 0xa], bl ; jmp rdx
0x00000000001887ef : add byte ptr [rbx + rbp*4], bl ; out dx, al ; call qword ptr [rax]
0x00000000001980f3 : add byte ptr [rbx + rbp*4], ch ; add byte ptr [rax], al ; call 0x1219700b
0x00000000001a1dc3 : add byte ptr [rbx + rbp*8 - 0xc], bl ; call qword ptr [rdx]
0x00000000001a3153 : add byte ptr [rbx + rbx*2 + 0x36880001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a317b : add byte ptr [rbx + rbx*2 + 0x36c00001], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000199063 : add byte ptr [rbx + rbx*2], cl ; cli ; call qword ptr [rax]
0x00000000001a30db : add byte ptr [rbx + rbx*2], dl ; add dword ptr [rax], eax ; loopne 0x1a311f ; cmc ; jmp qword ptr [rcx]
0x00000000001ac403 : add byte ptr [rbx + rbx*4 - 9], bh ; jmp qword ptr [rcx]
0x00000000001ab143 : add byte ptr [rbx + rbx*8 + 1], bh ; add byte ptr [rax], cl ; jns 0x1ab14a ; jmp qword ptr [rbx]
0x000000000018be17 : add byte ptr [rbx + rcx*2], cl ; clc ; jmp qword ptr [rax]
0x0000000000082187 : add byte ptr [rbx + rcx*4 + 0x40], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000047977 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000046257 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000018ba87 : add byte ptr [rbx + rcx*8 - 9], bl ; jmp qword ptr [rax]
0x000000000019e103 : add byte ptr [rbx + rcx], bh ; add dword ptr [rax], eax ; pop rax ; push rcx ; jmp rdx
0x000000000018bcd7 : add byte ptr [rbx + rcx], cl ; clc ; jmp rsp
0x000000000018b8a7 : add byte ptr [rbx + rdi*2 - 9], bh ; jmp rsp
0x0000000000188a57 : add byte ptr [rbx + rdi*8 - 0x12], bl ; call qword ptr [rax]
0x0000000000178d78 : add byte ptr [rbx + rdi*8 - 0x47a8f01], al ; jmp rax
0x00000000001869a8 : add byte ptr [rbx + rdi*8], 0xff ; add byte ptr [rsi], 0xfb ; call qword ptr [rax]
0x000000000019d0fb : add byte ptr [rbx + rdi*8], dh ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a28e3 : add byte ptr [rbx + rdx*2], bl ; add dword ptr [rax], eax ; clc ; retf 0xfff8
0x0000000000188d9f : add byte ptr [rbx + rdx*2], ch ; out dx, eax ; call qword ptr [rax]
0x000000000019b173 : add byte ptr [rbx + rdx*4 - 0xf], bh ; jmp qword ptr [rax]
0x00000000001a68cb : add byte ptr [rbx + rdx*4], al ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xa], dl ; call qword ptr [rax]
0x0000000000188c9f : add byte ptr [rbx + rsi - 0x11], bh ; call rax
0x000000000019fc2b : add byte ptr [rbx + rsi*2], dl ; hlt ; jmp qword ptr [rsi]
0x0000000000188847 : add byte ptr [rbx + rsi*4 - 0x12], ch ; call qword ptr [rax]
0x000000000019ed53 : add byte ptr [rbx + rsi*8], ch ; jmp qword ptr [rcx]
0x000000000019c913 : add byte ptr [rbx + rsi*8], cl ; add byte ptr [rax], bh ; test dl, dh ; jmp qword ptr [rcx]
0x00000000000730e8 : add byte ptr [rbx - 0x14f3db8c], cl ; ret 0x5590
0x0000000000127aee : add byte ptr [rbx - 0x16efdbac], cl ; ret
0x0000000000125faf : add byte ptr [rbx - 0x18], dl ; cli ; retf 0xffff
0x000000000011440f : add byte ptr [rbx - 0x18], dl ; retf 3
0x0000000000072f1f : add byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a1968 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000a1976 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a196f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a1984 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000a197d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000a1961 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000125c3b : add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x00000000001104fc : add byte ptr [rbx - 0x3d], bl ; nop ; xor eax, eax ; ret
0x000000000011adaf : add byte ptr [rbx - 0x3e7cb7ef], cl ; add al, 0xf ; retf 0x6348
0x00000000000f385b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000114246 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x114259 ; ret
0x0000000000126097 : add byte ptr [rbx - 0x3f7cb7f8], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006a7b7 : add byte ptr [rbx - 0x4b743], al ; call qword ptr [rax]
0x00000000000a1bc4 : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x000000000018754c : add byte ptr [rbx - 0x69060003], bl ; std ; call rax
0x00000000000d6cf6 : add byte ptr [rbx - 0x72bed3af], cl ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000f9cba : add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x0000000000038e84 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000e0070 : add byte ptr [rbx - 0x76b7fd02], al ; ret 0x940f
0x00000000000f622f : add byte ptr [rbx - 0x76be0007], al ; retf 0x3074
0x000000000002ca50 : add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x00000000000a26d8 : add byte ptr [rbx - 0x7768001], al ; ja 0xa26f1 ; ret
0x000000000011016d : add byte ptr [rbx - 0x77], dl ; retf
0x0000000000110101 : add byte ptr [rbx - 0x77bffe12], al ; ja 0x110112 ; ret
0x0000000000066e82 : add byte ptr [rbx - 0x78f0d008], al ; retf
0x0000000000091f04 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x000000000005237d : add byte ptr [rbx - 0x79f0f408], al ; retf 0xfffe
0x00000000000ca21b : add byte ptr [rbx - 0x7bf0c205], al ; ret
0x000000000015e136 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000011e471 : add byte ptr [rbx - 0x7bf0fb08], al ; ret
0x000000000008c0bf : add byte ptr [rbx - 0x7bf0fe1d], al ; retf 1
0x000000000007b1ef : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8310
0x0000000000155043 : add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x00000000000f0edf : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000061c92 : add byte ptr [rbx - 0x90343], al ; call qword ptr [rax]
0x0000000000102807 : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x00000000001873a4 : add byte ptr [rbx - 5], cl ; push qword ptr [rax + 0x4a] ; sti ; jmp rax
0x0000000000036f71 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x48ff
0x000000000019f8f3 : add byte ptr [rbx], ch ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xc], ch ; call qword ptr [rax]
0x0000000000010e27 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2d
0x0000000000199733 : add byte ptr [rbx], cl ; sti ; call qword ptr [rdx]
0x00000000000ecab8 : add byte ptr [rcx + 0x10b8df], cl ; add byte ptr [rax], al ; syscall
0x00000000000f61c7 : add byte ptr [rcx + 0x145], bh ; mov eax, ecx ; syscall
0x00000000001199cb : add byte ptr [rcx + 0x146349c1], cl ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x000000000008e41f : add byte ptr [rcx + 0x146349c2], cl ; nop ; add rdx, r8 ; jmp rdx
0x0000000000160533 : add byte ptr [rcx + 0x21], cl ; ret
0x00000000001610f0 : add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x000000000006aaaa : add byte ptr [rcx + 0x29], al ; retf 0x8948
0x000000000016169d : add byte ptr [rcx + 0x29], cl ; fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x000000000014ade5 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000009c9f1 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x00000000000b4826 : add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000007497f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000000748e3 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000001a2c1f : add byte ptr [rcx + 0x2f], ch ; cmc ; call qword ptr [rcx]
0x000000000011baa1 : add byte ptr [rcx + 0x31], cl ; ret 0x3148
0x000000000014479f : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000d697f : add byte ptr [rcx + 0x39], al ; ret 0x850f
0x0000000000042155 : add byte ptr [rcx + 0x39], cl ; ret
0x000000000007ef92 : add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x000000000012d2cc : add byte ptr [rcx + 0x3eb8c7], cl ; add byte ptr [rax], al ; syscall
0x00000000000e7cc8 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f09c1 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000006d58d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000014477f : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009d6ef : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007f240 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ac9fe : add byte ptr [rcx + 0x48d4c16], cl ; add dword ptr [rbp + 0x39], ecx ; ret
0x0000000000000952 : add byte ptr [rcx + 0x4a2210], cl ; ret 0x68a2
0x000000000007af3c : add byte ptr [rcx + 0x58d4807], cl ; ret 0x3376
0x00000000000dde96 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000f13ca : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00000000001026eb : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000000000013201e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000006376f : add byte ptr [rcx + 0x63], cl ; add al, 0x80 ; add rax, rdi ; jmp rax
0x00000000001594bc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009c598 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000004a5a4 : add byte ptr [rcx + 0x63], cl ; ret
0x00000000000f265f : add byte ptr [rcx + 0x63], cl ; ret 0x8b49
0x00000000000b153b : add byte ptr [rcx + 0x63], cl ; retf
0x00000000000500be : add byte ptr [rcx + 0x63], cl ; ror byte ptr [rax - 0x77], 0x5c ; ret 0x64c0
0x000000000002eccf : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000de14f : add byte ptr [rcx + 0xcb], bh ; mov eax, ecx ; syscall
0x00000000000de14e : add byte ptr [rcx + 0xcb], dil ; mov eax, ecx ; syscall
0x00000000000670ea : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000050397 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf01
0x0000000000067077 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000004e83f : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf01
0x000000000006b3f8 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000162820 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xd231
0x0000000000162195 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff31
0x00000000001605a3 : add byte ptr [rcx + 0xf], cl ; ret
0x00000000001610b8 : add byte ptr [rcx + 0xf], cl ; ret 0x8341
0x0000000000161361 : add byte ptr [rcx + 0xf], cl ; ret 0x8349
0x0000000000127276 : add byte ptr [rcx + 0xf], cl ; ret 0xff85
0x0000000000161db4 : add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000000f807b : add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x00000000000a0f0f : add byte ptr [rcx + 1], cl ; ret
0x00000000000b5b4d : add byte ptr [rcx + 1], cl ; retf 0x8d49
0x000000000015ee46 : add byte ptr [rcx + 9], cl ; fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000160b4f : add byte ptr [rcx + 9], cl ; ret
0x000000000016c40f : add byte ptr [rcx + rax + 0x1bf0000], bh ; add byte ptr [rax], al ; ret 1
0x000000000007f21d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000e67ea : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000001879ff : add byte ptr [rcx + rax*4 - 0x16], cl ; call qword ptr [rax]
0x00000000001a0183 : add byte ptr [rcx + rax*4], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000191e9b : add byte ptr [rcx + rax*8 - 0x15], al ; jmp qword ptr [rcx]
0x000000000019976b : add byte ptr [rcx + rax*8 - 0x1cd00000], ah ; sti ; call qword ptr [rbx]
0x00000000001a1053 : add byte ptr [rcx + rax*8 - 0xc], cl ; jmp qword ptr [rcx]
0x000000000018a56f : add byte ptr [rcx + rbp*2 - 0xb], bl ; call rsp
0x00000000001884bf : add byte ptr [rcx + rbp*4 - 0x14], bl ; jmp rsp
0x00000000001884b7 : add byte ptr [rcx + rbp*4 - 0x14], cl ; call rax
0x0000000000187607 : add byte ptr [rcx + rbp*4 - 0x17], cl ; call qword ptr [rax]
0x00000000001a54cb : add byte ptr [rcx + rbp*8 - 0xb], al ; call qword ptr [rbx]
0x00000000001a5523 : add byte ptr [rcx + rbp*8 - 0xb], bh ; call qword ptr [rbx]
0x000000000018cc9f : add byte ptr [rcx + rbp*8], bh ; stc ; call qword ptr [rax]
0x000000000018cc8f : add byte ptr [rcx + rbp*8], cl ; stc ; jmp rsp
0x00000000001a2f4b : add byte ptr [rcx + rbx*2 + 0x33d00001], al ; cmc ; jmp qword ptr [rcx]
0x000000000018c60f : add byte ptr [rcx + rbx*2 - 7], bl ; jmp qword ptr [rax]
0x00000000001aa90b : add byte ptr [rcx + rbx*2 - 9], ah ; jmp qword ptr [rax]
0x00000000001aa8f3 : add byte ptr [rcx + rbx*2 - 9], bl ; jmp qword ptr [rax]
0x00000000001aa923 : add byte ptr [rcx + rbx*2 - 9], ch ; jmp rsi
0x000000000019b2e3 : add byte ptr [rcx + rbx*4], cl ; int1 ; jmp rbx
0x000000000007c274 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000018c357 : add byte ptr [rcx + rcx - 7], bh ; call rsp
0x00000000001a1f13 : add byte ptr [rcx + rcx*2 + 1], cl ; add byte ptr [rax], bl ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000001a1f3b : add byte ptr [rcx + rcx*2 + 1], dh ; add byte ptr [rax - 0x12], dl ; hlt ; jmp qword ptr [rcx]
0x000000000018d79b : add byte ptr [rcx + rcx*2 - 0x17], al ; call qword ptr [rcx]
0x000000000018c597 : add byte ptr [rcx + rcx*2 - 7], bh ; jmp rax
0x00000000001a1eeb : add byte ptr [rcx + rcx*2], ah ; add dword ptr [rax], eax ; loopne 0x1a1ee7 ; hlt ; jmp qword ptr [rcx]
0x000000000018cf27 : add byte ptr [rcx + rcx*2], bl ; cli ; jmp rsp
0x000000000018cf1f : add byte ptr [rcx + rcx*2], cl ; cli ; call rax
0x0000000000191efb : add byte ptr [rcx + rcx*2], dh ; add byte ptr [rax], al ; adc dl, al ; jmp 0x191f09
0x0000000000122b51 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x307f
0x000000000007b9f6 : add byte ptr [rcx + rcx*4 + 0x25], cl ; retf 0x33bd
0x0000000000081708 : add byte ptr [rcx + rcx*4 + 0x5c], cl ; and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000008e2d7 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000c11df : add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x0000000000038bbb : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, 0xca ; syscall
0x0000000000077f0a : add byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x0000000000024ad3 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x215a6
0x0000000000083f60 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 0xca ; syscall
0x0000000000085b24 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, rcx ; call rax
0x00000000000fd6d0 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e562 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 0xca ; syscall
0x000000000008385e : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000008dec2 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x000000000004fe13 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d2fe : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x0000000000035df0 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000004dfc3 : add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000015499f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000001a02ab : add byte ptr [rcx + rcx*4 - 0xc], dl ; jmp qword ptr [rcx]
0x000000000002f9e2 : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000002df9a : add byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call 0x8a1f9
0x000000000003afec : add byte ptr [rcx + rcx*4 - 6], al ; mov rdi, rbp ; call 0x47ae9
0x000000000010b736 : add byte ptr [rcx + rcx*4 - 9], al ; call 0xe79d6
0x000000000005c94f : add byte ptr [rcx + rcx*4 - 9], al ; call 0xf9436
0x00000000001005cf : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xfd076
0x0000000000100c44 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0xfd6e6
0x00000000000384eb : add byte ptr [rcx + rcx*4 - 9], cl ; mov eax, 0xca ; syscall
0x000000000002353e : add byte ptr [rcx + rcx*4 - 9], cl ; mov rsi, qword ptr [rbp - 0x60] ; call rsi
0x00000000001a14a3 : add byte ptr [rcx + rcx*8 - 0xc], cl ; jmp qword ptr [rcx]
0x00000000001adfb3 : add byte ptr [rcx + rcx], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000018d0c7 : add byte ptr [rcx + rdi*2 - 6], ch ; call rsp
0x0000000000088585 : add byte ptr [rcx + rdi*4 - 0xd], dh ; ret
0x000000000018b97f : add byte ptr [rcx + rdi*4 - 9], bl ; jmp rax
0x0000000000189d4f : add byte ptr [rcx + rdi*8 - 0xe], ch ; call rsp
0x000000000016d4e7 : add byte ptr [rcx + rdx + 0x11bf0000], bh ; add byte ptr [rax], al ; ret 0x11
0x00000000001894af : add byte ptr [rcx + rdx - 0x10], bl ; call qword ptr [rax]
0x000000000019e773 : add byte ptr [rcx + rdx - 0x2c77ffff], ch ; call qword ptr [rax]
0x000000000018ab47 : add byte ptr [rcx + rdx*2 - 0xa], cl ; jmp qword ptr [rax]
0x000000000018cf8f : add byte ptr [rcx + rdx*2], ch ; cli ; jmp qword ptr [rax]
0x00000000001a7323 : add byte ptr [rcx + rdx*4 - 0xa], bh ; jmp qword ptr [rbx]
0x0000000000189e97 : add byte ptr [rcx + rdx*4], bh ; jmp qword ptr [rax]
0x0000000000189217 : add byte ptr [rcx + rdx*8 - 0x11], bh ; jmp rax
0x00000000001884ef : add byte ptr [rcx + rsi*4 - 0x14], ch ; call qword ptr [rax]
0x0000000000178db4 : add byte ptr [rcx + rsi*8 - 0xe59ef01], ah ; jmp qword ptr [rax]
0x000000000018cce7 : add byte ptr [rcx + rsi*8], ch ; stc ; jmp rax
0x00000000001997fb : add byte ptr [rcx + rsi], al ; cld ; call qword ptr [rbx]
0x0000000000197783 : add byte ptr [rcx - 0x13880000], bh ; out dx, al ; jmp rcx
0x0000000000002507 : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00000000001268bc : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000112607 : add byte ptr [rcx - 0x3a], al ; add al, byte ptr [rax] ; ret
0x00000000000e63ef : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000ba0da : add byte ptr [rcx - 0x40], ch ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000651a5 : add byte ptr [rcx - 0x42], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000004203d : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3417 : add byte ptr [rcx - 0x43], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xe33eb
0x00000000000e3416 : add byte ptr [rcx - 0x43], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xe33ec
0x00000000000a805a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000035eff : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000015ed0e : add byte ptr [rcx - 0x48], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000000c63d7 : add byte ptr [rcx - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001107a7 : add byte ptr [rcx - 0x6535ff12], al ; cmp ecx, dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000016049f : add byte ptr [rcx - 0x73], al ; ret
0x0000000000081438 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r9 - 0x7b] ; ret
0x00000000000825bd : add byte ptr [rcx - 0x73], cl ; push rsi ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000006ecaf : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x0000000000066e7f : add byte ptr [rcx - 0x75], al ; add byte ptr [rbx - 0x78f0d008], al ; retf
0x00000000000e11ae : add byte ptr [rcx - 0x75], al ; push rbp ; add al, 0xf7 ; ret 0xfffd
0x00000000000254cf : add byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rdi], cl ; retf 0xd285
0x00000000000313bc : add byte ptr [rcx - 0x75], al ; push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x00000000000313fb : add byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000000c727f : add byte ptr [rcx - 0x75], cl ; jl 0xc726a ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000dc53f : add byte ptr [rcx - 0x75], cl ; jl 0xdc52a ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000004403e : add byte ptr [rcx - 0x75], cl ; ret 0x4440
0x000000000004415c : add byte ptr [rcx - 0x75], cl ; ret 0x8940
0x00000000000446ac : add byte ptr [rcx - 0x75], cl ; ret 0xbe40
0x000000000008e3a7 : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000d0256 : add byte ptr [rcx - 0x77], al ; fld dword ptr [rbp + 0x39] ; retf
0x00000000000277fe : add byte ptr [rcx - 0x77], al ; ret
0x00000000000cd443 : add byte ptr [rcx - 0x77], al ; ret 0x3944
0x0000000000026b1e : add byte ptr [rcx - 0x77], al ; ret 0x5841
0x00000000000b9d50 : add byte ptr [rcx - 0x77], al ; ret 0x8341
0x000000000002a4fa : add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000d8be9 : add byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000000cd3f5 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000ba91f : add byte ptr [rcx - 0x77], al ; ret 0xc4eb
0x0000000000021966 : add byte ptr [rcx - 0x77], al ; ret 0xc5eb
0x00000000000688cd : add byte ptr [rcx - 0x77], al ; retf
0x00000000000ec2af : add byte ptr [rcx - 0x77], al ; retf 0x18b8
0x00000000000e731f : add byte ptr [rcx - 0x77], al ; retf 0x4cb9
0x00000000000c4c9f : add byte ptr [rcx - 0x77], al ; retf 0x8b64
0x00000000000bcd57 : add byte ptr [rcx - 0x77], al ; retf 0xcbeb
0x000000000006de62 : add byte ptr [rcx - 0x77], cl ; clc ; mov rax, r8 ; ret
0x00000000000d28ac : add byte ptr [rcx - 0x77], cl ; dec byte ptr [rax - 0x77] ; retf 0xe183
0x000000000016102f : add byte ptr [rcx - 0x77], cl ; fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x000000000008778a : add byte ptr [rcx - 0x77], cl ; out 0xf7, al ; fucomi st(0) ; retf
0x0000000000045cb7 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a1a7f : add byte ptr [rcx - 0x77], cl ; ret 0x3949
0x000000000015ed14 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000005c55b : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x0000000000062077 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000087d6e : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000160bf7 : add byte ptr [rcx - 0x77], cl ; ret 0x94d
0x000000000015fd55 : add byte ptr [rcx - 0x77], cl ; retf
0x00000000000f686f : add byte ptr [rcx - 0x77], cl ; retf 0x1eb8
0x00000000000f635f : add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000f5def : add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x00000000000f68ff : add byte ptr [rcx - 0x77], cl ; retf 0x2fb8
0x00000000000f71af : add byte ptr [rcx - 0x77], cl ; retf 0x35b8
0x00000000000f695f : add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x00000000000f6c7f : add byte ptr [rcx - 0x77], cl ; retf 0x37b8
0x00000000000e8c5f : add byte ptr [rcx - 0x77], cl ; retf 0x4b8
0x00000000000c4bff : add byte ptr [rcx - 0x77], cl ; retf 0x8b64
0x0000000000051baf : add byte ptr [rcx - 0x77], cl ; retf 0x8b8
0x00000000000e93af : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x00000000000f671f : add byte ptr [rcx - 0x77], cl ; retf 0x9db8
0x00000000000f665f : add byte ptr [rcx - 0x77], cl ; retf 0xa5b8
0x00000000000f653f : add byte ptr [rcx - 0x77], cl ; retf 0xafb8
0x0000000000088ba8 : add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x00000000000e946f : add byte ptr [rcx - 0x77], cl ; retf 0xbb8
0x00000000000f3a7f : add byte ptr [rcx - 0x77], cl ; retf 0xbcb8
0x00000000000f3a1f : add byte ptr [rcx - 0x77], cl ; retf 0xbdb8
0x00000000000f38ff : add byte ptr [rcx - 0x77], cl ; retf 0xbeb8
0x00000000000f398f : add byte ptr [rcx - 0x77], cl ; retf 0xc0b8
0x00000000000f0cff : add byte ptr [rcx - 0x77], cl ; retf 0xd8b8
0x00000000000f78ff : add byte ptr [rcx - 0x77], cl ; retf 0xdcb8
0x00000000000f64df : add byte ptr [rcx - 0x77], cl ; retf 0xe9b8
0x00000000001628ca : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000000a4f6f : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x8b04
0x000000000004ed23 : add byte ptr [rcx - 0x7af0dbfc], cl ; ret
0x00000000001629d9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000000d62cf : add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x000000000005aa87 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000000000021a8e : add byte ptr [rcx - 0x7d], al ; retf
0x0000000000162cdf : add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x0000000000162eaf : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x00000000000b7786 : add byte ptr [rcx - 0x7d], al ; sti ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x0000000000061593 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000088c39 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000008af3f : add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x00000000000d755e : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000006c247 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000d5957 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0x00000000000cca30 : add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x000000000012f66f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000c539b : add byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x000000000008e9ff : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007ef6e : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x00000000001611dc : add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x0000000000160f64 : add byte ptr [rcx - 0xa], al ; ret 0x7407
0x000000000018595f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000003520d : add byte ptr [rcx - 0xd], dh ; ret
0x0000000000178f40 : add byte ptr [rcx - 0xe], al ; jmp qword ptr [rax]
0x00000000001aa1e0 : add byte ptr [rcx - 9], al ; call rdi
0x00000000000920d2 : add byte ptr [rcx - 9], cl ; ret 1
0x00000000000920f8 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000010397c : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001948fb : add byte ptr [rcx], ah ; out dx, al ; call rsp
0x000000000017b90b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000a1f00 : add byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000007ed67 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000ed9f1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000002ee99 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000ecb80 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x0000000000122251 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a111f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000042ffe : add byte ptr [rcx], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003880f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b56d8 : add byte ptr [rcx], al ; add rsp, 8 ; ret
0x000000000012b50b : add byte ptr [rcx], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fba36 : add byte ptr [rcx], al ; mov eax, r8d ; add rsp, 8 ; ret
0x00000000000500d8 : add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x000000000002ebe4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000004fdf5 : add byte ptr [rcx], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000841d5 : add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008383d : add byte ptr [rcx], al ; pop rbx ; pop rbp ; ret
0x000000000003908a : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000125bcf : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000006f73f : add byte ptr [rcx], al ; ret
0x00000000000449ed : add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000443c4 : add byte ptr [rcx], al ; ret 0xf66
0x00000000000aba9f : add byte ptr [rcx], al ; retf
0x0000000000039504 : add byte ptr [rcx], al ; retf 0x8a8d
0x00000000000abcb7 : add byte ptr [rcx], al ; retf 0xc083
0x0000000000034bd2 : add byte ptr [rcx], al ; retf 0xfe0d
0x00000000000382dd : add byte ptr [rcx], al ; xor eax, eax ; pop rbx ; ret
0x0000000000038a84 : add byte ptr [rcx], al ; xor esi, esi ; mov rdi, r9 ; call r8
0x000000000018c8bc : add byte ptr [rcx], bh ; add al, byte ptr [rax] ; sub al, 0xac ; stc ; jmp qword ptr [rax]
0x00000000001879cc : add byte ptr [rcx], bh ; add byte ptr [rsi + rdi*2 - 0x16], bh ; jmp qword ptr [rax]
0x00000000001a0ec8 : add byte ptr [rcx], bh ; add dword ptr [rax], eax ; and al, 0xbe ; hlt ; call qword ptr [rcx]
0x0000000000178ed0 : add byte ptr [rcx], bh ; bnd call qword ptr [rax] ; cmp edx, esi ; jmp qword ptr [rax]
0x000000000015857f : add byte ptr [rcx], bh ; enter 0x2c75, -0x7d ; ret 0x8104
0x0000000000021faa : add byte ptr [rcx], bh ; ret
0x0000000000036950 : add byte ptr [rcx], bh ; ret 0x237f
0x0000000000081680 : add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000111f50 : add byte ptr [rcx], bh ; retf
0x00000000000cdb63 : add byte ptr [rcx], bh ; retf 0x587d
0x00000000000cd7c7 : add byte ptr [rcx], bh ; retf 0x840f
0x0000000000188967 : add byte ptr [rcx], bl ; out dx, al ; call qword ptr [rax]
0x000000000012a616 : add byte ptr [rcx], ch ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000014febf : add byte ptr [rcx], ch ; enter 0x1d75, -0x7d ; ret 0x8101
0x000000000015037f : add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x0000000000087bb6 : add byte ptr [rcx], ch ; ret
0x00000000000ba06f : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bdf1a : add byte ptr [rcx], ch ; ret 0x858b
0x00000000000bde72 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000bae2c : add byte ptr [rcx], ch ; ret 0x894c
0x00000000000bdb7e : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000bc310 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000bee9f : add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000ecfa3 : add byte ptr [rcx], ch ; ret 0xc085
0x000000000004fcb2 : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b4ab2 : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000ba036 : add byte ptr [rcx], ch ; ret 0xe889
0x000000000000d2b7 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 7
0x000000000018f6d3 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; or byte ptr [rdx - 0x16], bl ; jmp qword ptr [rbx]
0x00000000001050c1 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x000000000018984f : add byte ptr [rcx], cl ; int1 ; call qword ptr [rax]
0x000000000018dbb3 : add byte ptr [rcx], cl ; jmp 0x19a6bf
0x00000000000e91e8 : add byte ptr [rcx], cl ; retf 0xea81
0x000000000018f6fb : add byte ptr [rcx], dh ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x16], bl ; call qword ptr [rdx]
0x0000000000162372 : add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x000000000015ee38 : add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000000e0b85 : add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x0000000000048255 : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x000000000012b176 : add byte ptr [rcx], dh ; imul al ; ret 0xfbc9
0x000000000012aa76 : add byte ptr [rcx], dh ; imul al ; ret 0xfbd0
0x00000000000a3e55 : add byte ptr [rcx], dh ; imul cl ; ret 0xfffc
0x00000000000f0b5c : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x00000000000395f5 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000b39d4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000007853d : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000082c07 : add byte ptr [rcx], dh ; rcr byte ptr [rdx + 0x5b], 0x5d ; ret
0x00000000000df5af : add byte ptr [rcx], dh ; retf 0xc031
0x0000000000091a1c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000005a9b1 : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000012d147 : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x000000000002ecdf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000007ebaf : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x000000000012b0a9 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; out dx, al ; call 0xe7b18
0x00000000000399dc : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011068b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a11c2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000157d0f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x000000000010f8c7 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x0000000000186a94 : add byte ptr [rcx], dh ; sti ; call qword ptr [rax + 0x20fffb30]
0x00000000000da4b9 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc1 ; lea rdx, [r10 + rax*8] ; jmp 0xda4e6
0x00000000000ae0ce : add byte ptr [rcx], dil ; ret
0x00000000000116af : add byte ptr [rcx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000cc027 : add byte ptr [rdi + 0x2e3c5c74], bh ; jne 0xcc002 ; jmp 0xcc043
0x00000000001374ca : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000001a53eb : add byte ptr [rdi + 1], al ; add byte ptr [rax], dh ; out 0xf5, eax ; call rcx
0x00000000001a54c8 : add byte ptr [rdi + 1], bh ; add byte ptr [rcx + rbp*8 - 0xb], al ; call qword ptr [rbx]
0x00000000000b2c24 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001af3df : add byte ptr [rdi + 7], bl ; add byte ptr [rax], al ; retf 1
0x000000000015eb24 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000f198e : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000001a1d5b : add byte ptr [rdi + rax*2 - 0x154fffff], dl ; hlt ; call qword ptr [rdi]
0x000000000018836f : add byte ptr [rdi + rax*4 - 0x14], bl ; call rax
0x0000000000188287 : add byte ptr [rdi + rax], ch ; in al, dx ; call qword ptr [rax]
0x0000000000194dd3 : add byte ptr [rdi + rbp - 0x12], bh ; jmp qword ptr [rbx]
0x0000000000188647 : add byte ptr [rdi + rbp*2 - 0x12], bl ; jmp qword ptr [rax]
0x000000000019e5cb : add byte ptr [rdi + rbp*4 - 0xd], dl ; jmp rdi
0x000000000018c8d7 : add byte ptr [rdi + rbp*4 - 7], bh ; jmp rax
0x00000000001a1fab : add byte ptr [rdi + rbp*8], al ; hlt ; jmp qword ptr [rdx]
0x00000000001904e3 : add byte ptr [rdi + rbp], bl ; add byte ptr [rax], al ; call 0x1218ef7d
0x000000000019f16b : add byte ptr [rdi + rbp], dl ; hlt ; call rsi
0x000000000018a477 : add byte ptr [rdi + rbx - 0xb], bh ; jmp qword ptr [rax]
0x00000000001a3563 : add byte ptr [rdi + rbx*2 + 0x3be80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a0693 : add byte ptr [rdi + rbx*4], bh ; hlt ; call rcx
0x0000000000187baf : add byte ptr [rdi + rbx*8 - 0x16], cl ; jmp qword ptr [rax]
0x000000000018a087 : add byte ptr [rdi + rbx*8 - 0xd], ch ; jmp qword ptr [rax]
0x000000000019ae73 : add byte ptr [rdi + rbx*8], bh ; sti ; jmp rsi
0x000000000012ce24 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000006ab61 : add byte ptr [rdi + rcx + 0x48], cl ; fimul dword ptr [rbp + 0x63] ; ret
0x0000000000069799 : add byte ptr [rdi + rcx + 0x48], cl ; fmul dword ptr [rbp + 0x63] ; ret
0x0000000000189497 : add byte ptr [rdi + rcx - 0x10], bh ; call rsp
0x000000000002212f : add byte ptr [rdi + rcx - 0x42], cl ; ret 0x4a8d
0x000000000004af77 : add byte ptr [rdi + rcx - 0x42], cl ; sbb dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x000000000011043f : add byte ptr [rdi + rcx - 0x4a], al ; pop rax ; add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x00000000000b5e20 : add byte ptr [rdi + rcx - 0x4a], al ; sbb cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000019e57b : add byte ptr [rdi + rcx - 0x586fffff], dh ; call qword ptr [rax]
0x00000000001a29eb : add byte ptr [rdi + rcx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019a68b : add byte ptr [rdi + rcx - 0xf], dl ; call qword ptr [rax]
0x00000000001a9543 : add byte ptr [rdi + rcx - 9], cl ; call rsi
0x000000000018cf5f : add byte ptr [rdi + rcx*2 - 6], bh ; jmp rsp
0x000000000018cf57 : add byte ptr [rdi + rcx*2], bh ; cli ; call rax
0x000000000019655b : add byte ptr [rdi + rcx*4 + 0x7ef00000], dl ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196583 : add byte ptr [rdi + rcx*4 + 0x7f280000], bh ; out dx, al ; jmp qword ptr [rbx]
0x00000000001964e3 : add byte ptr [rdi + rcx*4], bl ; add byte ptr [rax], al ; cwde ; insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x0000000000189c9f : add byte ptr [rdi + rcx*8 - 0xe], ch ; jmp rsp
0x000000000018c15f : add byte ptr [rdi + rcx*8], bl ; clc ; jmp rax
0x00000000001a299b : add byte ptr [rdi + rcx], al ; cmc ; jmp qword ptr [rcx]
0x000000000002eae4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000001a550b : add byte ptr [rdi + rdi*2 + 1], al ; add byte ptr [rax - 0x17], dh ; cmc ; call qword ptr [rbx]
0x000000000019659b : add byte ptr [rdi + rdi*2 - 0x12], al ; jmp qword ptr [rbx]
0x00000000001a5563 : add byte ptr [rdi + rdi*2 - 0x1657ffff], bl ; cmc ; call qword ptr [rdi]
0x0000000000196573 : add byte ptr [rdi + rdi*2], cl ; out dx, al ; jmp qword ptr [rbx]
0x000000000018c9c7 : add byte ptr [rdi + rdi*4], ch ; stc ; call qword ptr [rax]
0x00000000001a14db : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; ror cl, 0xf4 ; jmp qword ptr [rcx]
0x000000000019ed13 : add byte ptr [rdi + rdx + 1], cl ; add al, bl ; jmp qword ptr [rcx]
0x000000000019ed3b : add byte ptr [rdi + rdx + 1], dh ; add byte ptr [rax], dl ; jmp qword ptr [rcx]
0x000000000018a46f : add byte ptr [rdi + rdx - 0xb], ch ; call rsp
0x000000000019ed63 : add byte ptr [rdi + rdx - 0xcb7ffff], bl ; jmp qword ptr [rcx]
0x000000000018abe7 : add byte ptr [rdi + rdx*2 - 0xa], cl ; jmp qword ptr [rax]
0x00000000001a31e3 : add byte ptr [rdi + rsi - 0xb], cl ; jmp qword ptr [rcx]
0x00000000001ac61b : add byte ptr [rdi + rsi*2 - 5], dl ; jmp qword ptr [rdx]
0x000000000019405b : add byte ptr [rdi + rsi*8 - 0x13], ah ; call qword ptr [rsi]
0x00000000001a5b7b : add byte ptr [rdi + rsi*8 - 0xb], ah ; call qword ptr [rcx]
0x000000000018a7bf : add byte ptr [rdi + rsi*8 - 0xb], cl ; jmp rax
0x000000000018b727 : add byte ptr [rdi + rsi], cl ; idiv edi ; hlt ; retf
0x00000000001a31bb : add byte ptr [rdi + rsi], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001874cc : add byte ptr [rdi - 0x3f7f0004], bh ; cld ; inc dword ptr [rax] ; ret 0xfffc
0x00000000000c505f : add byte ptr [rdi - 0x48], bl ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001874a4 : add byte ptr [rdi - 0x4faf0004], ch ; cld ; jmp rax
0x0000000000179054 : add byte ptr [rdi - 0xe], al ; call qword ptr [rax]
0x00000000001863c4 : add byte ptr [rdi - 4], cl ; push rax ; cld ; jmp rax
0x0000000000110900 : add byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d4d15 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000018637c : add byte ptr [rdi], bh ; cld ; call rax
0x000000000018929f : add byte ptr [rdi], bl ; out dx, eax ; jmp qword ptr [rax]
0x000000000002218b : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000000221ce : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x0000000000120d18 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], eax ; ret
0x0000000000120ce0 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x000000000011dcd0 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x000000000011dce9 : add byte ptr [rdi], cl ; adc dword ptr [rdx], eax ; ret
0x00000000000e6bfc : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000007e56a : add byte ptr [rdi], cl ; add eax, 0xf390dbeb ; ret
0x00000000000fb6a8 : add byte ptr [rdi], cl ; add eax, 0xfffe8fe9 ; push rbx ; ret
0x0000000000138e46 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000a1837 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000139e7f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000f75f1 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ec7d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2ec0e ; loopne 0x2ec8e ; ret
0x00000000000f8ec4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xf8e55 ; loopne 0xf8ed5 ; ret
0x00000000000e63af : add byte ptr [rdi], cl ; mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000fba05 : add byte ptr [rdi], cl ; mov cl, 0x15 ; call rdx
0x000000000011d173 : add byte ptr [rdi], cl ; mov cl, 0x15 ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000010729d : add byte ptr [rdi], cl ; mov cl, 0x15 ; retf
0x00000000000fc394 : add byte ptr [rdi], cl ; mov cl, 0x15 ; xchg eax, esp ; retf 0x2b
0x000000000006f8b5 : add byte ptr [rdi], cl ; mov cl, 0x35 ; ret
0x0000000000139eef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000015650f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000ba9df : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c93ef : add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e186a : add byte ptr [rdi], cl ; mov dh, 0x9d ; ret
0x00000000000a18ef : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000008fc9f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007b13f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000150dff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000009217f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000091f3f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000091f4f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000091f2f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008e06f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; xor dword ptr [rcx], edi ; ret 0x2d74
0x000000000008e10f : add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x0000000000091a4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000091a7f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000091a6f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000091a5f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000db957 : add byte ptr [rdi], cl ; or dword ptr [rip + 0x4cfffffe], 0x63 ; ret 0x8b49
0x000000000004e1d4 : add byte ptr [rdi], cl ; push rax ; fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xe383
0x00000000000504d7 : add byte ptr [rdi], cl ; push rax ; ret 0xf41
0x0000000000035157 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000da10d : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000b40ba : add byte ptr [rdi], cl ; ret
0x00000000000bd6b1 : add byte ptr [rdi], cl ; ret 0x144
0x00000000000bb016 : add byte ptr [rdi], cl ; ret 0x5841
0x00000000000bf839 : add byte ptr [rdi], cl ; ret 0x66c3
0x00000000000bf9b7 : add byte ptr [rdi], cl ; ret 0x8348
0x000000000011f729 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001001c9 : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000002bd8b : add byte ptr [rdi], cl ; ret 0xc083
0x00000000000d1894 : add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000bdcc5 : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000bc76f : add byte ptr [rdi], cl ; ret 0xf001
0x00000000000ebd77 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000011abb1 : add byte ptr [rdi], cl ; retf 0x1089
0x00000000000254d3 : add byte ptr [rdi], cl ; retf 0xd285
0x000000000014addf : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000000abbee : add byte ptr [rdi], cl ; test byte ptr [rax + 0x14c0000], al ; ret 0x28b
0x000000000007fdf7 : add byte ptr [rdi], cl ; test dword ptr [rbx + rax], esp ; add byte ptr [rax + 0x39], cl ; ret
0x000000000015f37a : add byte ptr [rdi], cl ; test dword ptr [rdi], ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000006758b : add byte ptr [rdi], cl ; xchg dword ptr [rbx], edi ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011b3e3 : add byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x77000000], esp ; retf 0x894c
0x000000000004812d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000d1ffd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000d1781 : add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000014f9ad : add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000d3e56 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000006d56f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3b48
0x00000000000445d0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x7c8b
0x00000000000d6796 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x00000000000515dc : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x0000000000044bb5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xed85
0x000000000004fd25 : add byte ptr [rdi], cl ; xchg esp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000066c75 : add byte ptr [rdi], cl ; xchg esp, esi ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000019bcdb : add byte ptr [rdi], dl ; add byte ptr [rax], al ; adc byte ptr [rdx - 0xe], cl ; call qword ptr [rbx]
0x00000000001b0147 : add byte ptr [rdi], dl ; add eax, 0x5cf0000 ; add byte ptr [rax], al ; ret 0
0x00000000000c3acc : add byte ptr [rdx + 0x2f], cl ; add al, ch ; retf
0x0000000000042760 : add byte ptr [rdx + 0x38a], bh ; call 0x2e9f8
0x0000000000042722 : add byte ptr [rdx + 0x392], bh ; call 0x2e9f8
0x00000000000427ca : add byte ptr [rdx + 0x39e], bh ; call 0x2e9f8
0x00000000000427ab : add byte ptr [rdx + 0x44c], bh ; call 0x2e9f8
0x0000000000146a9f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000014276f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009eb0f : add byte ptr [rdx + 0x48178816], cl ; lea eax, [rdi + 1] ; ret
0x0000000000042703 : add byte ptr [rdx + 0x550], bh ; call 0x2e9f8
0x00000000000c96b6 : add byte ptr [rdx + 0x63], cl ; add al, 0xa2 ; add rax, rdx ; jmp rax
0x0000000000042741 : add byte ptr [rdx + 0x6ac], bh ; call 0x2e9f8
0x000000000004277f : add byte ptr [rdx + 0x6d6], bh ; call 0x2e9f8
0x0000000000196ed0 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa4b0202], al ; ret
0x000000000000a077 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000f5d37 : add byte ptr [rdx + 8], bh ; syscall
0x0000000000072b7b : add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000189757 : add byte ptr [rdx + rax - 0xf], bh ; jmp qword ptr [rax]
0x0000000000195873 : add byte ptr [rdx + rax*4 + 0x57380000], ch ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a587b : add byte ptr [rdx + rax*4 - 0xdbfffff], dh ; cmc ; call qword ptr [rbx]
0x0000000000189dcf : add byte ptr [rdx + rax*4], bh ; jmp qword ptr [rax]
0x00000000001888ff : add byte ptr [rdx + rax*8 - 0x12], bh ; jmp rax
0x0000000000189f9f : add byte ptr [rdx + rax*8 - 0xd], cl ; jmp rsp
0x000000000018d507 : add byte ptr [rdx + rax*8 - 3], bh ; jmp rax
0x00000000001888f7 : add byte ptr [rdx + rax*8], bh ; out dx, al ; inc esp ; retf 0
0x000000000018811f : add byte ptr [rdx + rax*8], cl ; jmp 0x188125
0x00000000001ae7df : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; retf 8
0x00000000001ad7db : add byte ptr [rdx + rax], dl ; add al, byte ptr [rax] ; rcl byte ptr [rbx], 1 ; sti ; call rax
0x00000000001a0063 : add byte ptr [rdx + rbp + 0x7e980001], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000189aef : add byte ptr [rdx + rbp*2 - 0xe], cl ; jmp rax
0x0000000000198053 : add byte ptr [rdx + rbp*4 + 0x4780000], cl ; out dx, eax ; call qword ptr [rax]
0x00000000001887df : add byte ptr [rdx + rbp*4 - 0x12], ch ; jmp rax
0x0000000000197ff3 : add byte ptr [rdx + rbp*4], ch ; add byte ptr [rax], al ; sub byte ptr [rdi + rbp*8], al ; jmp qword ptr [rcx]
0x000000000019daab : add byte ptr [rdx + rbx - 0xd], ah ; jmp rdx
0x00000000001a3063 : add byte ptr [rdx + rbx*2 + 0x35380001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000c6193 : add byte ptr [rdx + rbx*2 - 0x48], dh ; jg 0xc61a1 ; add byte ptr [rax], al ; ret
0x00000000001a2feb : add byte ptr [rdx + rbx*2], ah ; add dword ptr [rax], eax ; nop ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018b8ef : add byte ptr [rdx + rbx*4 - 9], cl ; jmp rax
0x00000000001a6fd3 : add byte ptr [rdx + rbx*4], cl ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bh ; jmp rcx
0x000000000018bbe7 : add byte ptr [rdx + rbx*8 - 9], cl ; jmp rax
0x000000000019b02b : add byte ptr [rdx + rbx*8], ah ; add byte ptr [rax - 0x74], dh ; int1 ; call qword ptr [rcx]
0x000000000008a003 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000019606b : add byte ptr [rdx + rcx*4 + 0x75f00000], ah ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6003 : add byte ptr [rdx + rcx*4], bh ; add dword ptr [rax], eax ; sub byte ptr [rsi + rsi*8], dl ; call rdx
0x00000000001a103b : add byte ptr [rdx + rdi + 1], dh ; add byte ptr [rax - 0x3f], al ; hlt ; call qword ptr [rsi]
0x0000000000198fc3 : add byte ptr [rdx + rdi - 6], bl ; call qword ptr [rax]
0x000000000018c54f : add byte ptr [rdx + rdi - 7], bl ; call rax
0x00000000001a8223 : add byte ptr [rdx + rdi*4 - 5], cl ; jmp qword ptr [rdx]
0x0000000000188897 : add byte ptr [rdx + rdi*4], cl ; out dx, al ; jmp rax
0x00000000000c2c0d : add byte ptr [rdx + rdx*8 - 0x76b7678b], al ; ret
0x000000000018d28f : add byte ptr [rdx + rdx*8 - 4], cl ; jmp rsp
0x000000000017d2a3 : add byte ptr [rdx + rsi + 0x31ccfffa], bl ; cli ; jmp rsp
0x00000000001896cf : add byte ptr [rdx + rsi*2 - 0x10], bh ; call qword ptr [rax]
0x0000000000187867 : add byte ptr [rdx + rsi*2 - 0x16], bl ; jmp rsp
0x00000000001ac87b : add byte ptr [rdx + rsi*8 + 0x75500001], dh ; sti ; jmp qword ptr [rdx]
0x000000000019797b : add byte ptr [rdx + rsi*8 - 0x12], ah ; jmp qword ptr [rdx]
0x00000000001a5893 : add byte ptr [rdx + rsi*8 - 0xb], cl ; call qword ptr [rbx]
0x000000000019ec63 : add byte ptr [rdx + rsi*8 - 0xd], bh ; call qword ptr [rbx]
0x00000000001a586b : add byte ptr [rdx + rsi*8], dh ; cmc ; call qword ptr [rbx]
0x0000000000189d97 : add byte ptr [rdx + rsi], bh ; call qword ptr [rax]
0x0000000000187f2f : add byte ptr [rdx - 0x15], cl ; jmp rax
0x00000000001a4093 : add byte ptr [rdx - 0xb], ch ; call rcx
0x0000000000178f60 : add byte ptr [rdx - 0xe], al ; jmp qword ptr [rax]
0x000000000018d1f7 : add byte ptr [rdx - 4], bh ; jmp rax
0x00000000001a2af3 : add byte ptr [rdx*2 + 0x2e380001], ch ; cmc ; call qword ptr [rax]
0x000000000003af6d : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000019b7cb : add byte ptr [rdx], al ; add byte ptr [rax], al ; and al, dh ; int1 ; call qword ptr [rax]
0x000000000002ec36 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000001ae197 : add byte ptr [rdx], al ; add byte ptr [rax], al ; retf
0x000000000018c04d : add byte ptr [rdx], al ; add byte ptr [rsp - 8], cl ; jmp rsp
0x0000000000024a8e : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000fde0b : add byte ptr [rdx], al ; call rcx
0x000000000002eb44 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000000f8f7 : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000764 : add byte ptr [rdx], dl ; retf
0x000000000017b92b : add byte ptr [rip + 0x10], al ; retf 8
0x00000000000359d7 : add byte ptr [rip + 0x6f0f6600], dl ; ret 0x3de8
0x000000000003594d : add byte ptr [rip + 0x6f0f6600], dl ; ret 0xc7e8
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000000f5925 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x000000000015f226 : add byte ptr [rsi + 0x41], ah ; and eax, 0x21487fff ; ret 0xcae9
0x0000000000160b12 : add byte ptr [rsi + 0x41], ah ; cmp eax, 0x89497fff ; ret
0x0000000000160beb : add byte ptr [rsi + 0x63], cl ; and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x000000000007e627 : add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000122677 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014f9dd : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx + 0x1f] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014faf2 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x00000000001597c4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000035a0e : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000004e200 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x16e8
0x000000000004b7fd : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x19e8
0x000000000004b7d4 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000000359d9 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3de8
0x000000000003594f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xc7e8
0x000000000004b79b : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000091e5c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000091984 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000b304f : add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000019fc13 : add byte ptr [rsi + 1], cl ; add al, bh ; jb 0x19fc17 ; jmp qword ptr [rcx]
0x00000000001aeb53 : add byte ptr [rsi + 2], al ; add byte ptr [rax], al ; retf 4
0x00000000001ae17f : add byte ptr [rsi + 7], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000016c957 : add byte ptr [rsi + rax + 0x6bf0000], bh ; add byte ptr [rax], al ; ret 6
0x0000000000086607 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x000000000018d673 : add byte ptr [rsi + rax*2 - 0x17], ch ; jmp rcx
0x000000000018dc1b : add byte ptr [rsi + rax], dl ; add byte ptr [rax], dh ; push rdi ; std ; jmp qword ptr [rdx]
0x00000000001a0433 : add byte ptr [rsi + rbp + 1], ch ; add byte ptr [rax - 0x71], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a0483 : add byte ptr [rsi + rbp - 0x7047ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a045b : add byte ptr [rsi + rbp - 0x707fffff], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001a1f53 : add byte ptr [rsi + rbp*8 - 0xc], ch ; jmp qword ptr [rcx]
0x000000000018a747 : add byte ptr [rsi + rbp*8], bl ; cmc ; call qword ptr [rax]
0x00000000001a1f2b : add byte ptr [rsi + rbp*8], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000190443 : add byte ptr [rsi + rbp], bh ; add al, bh ; xchg edx, ebp ; call qword ptr [rcx]
0x0000000000197413 : add byte ptr [rsi + rbx*4], cl ; add byte ptr [rax], ch ; fsubp st(6) ; call qword ptr [rsi]
0x00000000001a063b : add byte ptr [rsi + rbx*4], dh ; hlt ; jmp rsi
0x000000000016d0e7 : add byte ptr [rsi + rcx + 0xebf0000], bh ; add byte ptr [rax], al ; ret 0xe
0x00000000001a2443 : add byte ptr [rsi + rcx*2 + 1], bh ; add al, ch ; add dh, ch ; call qword ptr [rdx]
0x000000000019646b : add byte ptr [rsi + rcx*4 + 0x6d800000], ah ; stc ; jmp qword ptr [rbx]
0x000000000018c7df : add byte ptr [rsi + rcx*4 - 7], cl ; call qword ptr [rax]
0x00000000001963cb : add byte ptr [rsi + rcx*4], al ; add byte ptr [rax], al ; loopne 0x196457 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196443 : add byte ptr [rsi + rcx*4], bh ; add byte ptr [rax + 0x6d], bh ; stc ; jmp qword ptr [rbx]
0x00000000001963f3 : add byte ptr [rsi + rcx*4], ch ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x12], bh ; jmp qword ptr [rbx]
0x000000000019641b : add byte ptr [rsi + rcx*4], dl ; add byte ptr [rax + 0x6d], dh ; stc ; jmp qword ptr [rbx]
0x00000000001a1463 : add byte ptr [rsi + rdi - 0x3727ffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001964fb : add byte ptr [rsi + rdi*2 - 0x12], ah ; jmp qword ptr [rbx]
0x000000000019645b : add byte ptr [rsi + rdi*2 - 0x12], al ; jmp qword ptr [rbx]
0x00000000001964d3 : add byte ptr [rsi + rdi*2 - 0x12], bl ; jmp qword ptr [rbx]
0x0000000000196483 : add byte ptr [rsi + rdi*2 - 0x12], cl ; jmp qword ptr [rbx]
0x00000000001964ab : add byte ptr [rsi + rdi*2 - 0x12], dl ; jmp qword ptr [rbx]
0x00000000001879cf : add byte ptr [rsi + rdi*2 - 0x16], bh ; jmp qword ptr [rax]
0x0000000000196433 : add byte ptr [rsi + rdi*2], bh ; out dx, al ; jmp qword ptr [rbx]
0x0000000000198e33 : add byte ptr [rsi + rdi*2], bh ; sti ; call rsp
0x000000000019640b : add byte ptr [rsi + rdi*2], dh ; out dx, al ; jmp qword ptr [rbx]
0x00000000001a0ecb : add byte ptr [rsi + rdi*4], ah ; hlt ; call qword ptr [rcx]
0x00000000001888df : add byte ptr [rsi + rdi*4], ch ; out dx, al ; inc dword ptr [rax] ; retf 0
0x00000000001a2c6b : add byte ptr [rsi + rdx*2 + 0x2fa00001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a2c43 : add byte ptr [rsi + rdx*2 + 1], bh ; add byte ptr [rax + 0x2f], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a2c1b : add byte ptr [rsi + rdx*2 + 1], dl ; add byte ptr [rcx + 0x2f], ch ; cmc ; call qword ptr [rcx]
0x000000000018f5e3 : add byte ptr [rsi + rdx*2 - 0x16], cl ; call qword ptr [rax]
0x000000000018c02f : add byte ptr [rsi + rdx*4 - 8], bh ; call rsp
0x00000000001990b3 : add byte ptr [rsi + rdx*4], cl ; sti ; call qword ptr [rax]
0x00000000001a3143 : add byte ptr [rsi + rsi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000198c1b : add byte ptr [rsi + rsi*4], dl ; add byte ptr [rax], dh ; pop rbx ; out dx, eax ; call qword ptr [rbx]
0x0000000000189337 : add byte ptr [rsi + rsi*8 - 0x11], ch ; jmp rsp
0x000000000018d1c7 : add byte ptr [rsi + rsi*8 - 5], ch ; call rsp
0x000000000018932f : add byte ptr [rsi + rsi*8], bh ; out dx, eax ; call rax
0x0000000000187c27 : add byte ptr [rsi - 0x16], bl ; jmp qword ptr [rax]
0x000000000007f5a6 : add byte ptr [rsi - 0x5d], dh ; add rsp, 8 ; ret
0x00000000000f689d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x00000000000f692d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x134 ; syscall
0x00000000000f69bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x13f ; syscall
0x00000000000f714d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x00000000000f6cad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x00000000000e76ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x53 ; syscall
0x00000000000e949d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x00000000000e93dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x00000000000f67ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000000f638d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x7d ; syscall
0x00000000000f5e1d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x00000000000e74ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x00000000000ecf8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x8c ; syscall
0x00000000000f0d2d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x00000000000ee19d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x00000000000f5a5d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xad ; syscall
0x00000000000f650d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb1 ; syscall
0x00000000000f66bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x00000000000f395d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x00000000000f39bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x00000000000f389d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x00000000000f3a4d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x00000000000f656d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x000000000010502d : add byte ptr [rsi - 0x70], ah ; mov eax, edi ; bswap eax ; ret
0x00000000000358fd : add byte ptr [rsi - 0x70], ah ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x0000000000179008 : add byte ptr [rsi - 0xe], al ; jmp qword ptr [rax]
0x000000000018cc47 : add byte ptr [rsi - 7], ch ; call rsp
0x00000000001869ac : add byte ptr [rsi], 0xfb ; call qword ptr [rax]
0x000000000012025d : add byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001ae193 : add byte ptr [rsi], bh ; or dword ptr [rax], eax ; add byte ptr [rdx], al ; add byte ptr [rax], al ; retf
0x00000000001b050b : add byte ptr [rsi], bl ; add byte ptr [rax], al ; add byte ptr [rax + 2], al ; add byte ptr [rax], al ; ret 3
0x00000000000ecd2e : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000004dfbf : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000019fa73 : add byte ptr [rsp + 0x72580001], ch ; hlt ; call qword ptr [rdx]
0x00000000001b04f7 : add byte ptr [rsp + rax + 0x4d30000], cl ; add byte ptr [rax], al ; retf 5
0x000000000007c6b5 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000018b52f : add byte ptr [rsp + rax - 9], cl ; call qword ptr [rax - 0x3d]
0x00000000001a5a43 : add byte ptr [rsp + rax*4 + 1], bh ; add byte ptr [rax], bh ; cmc ; cmc ; call qword ptr [rdi]
0x0000000000189dff : add byte ptr [rsp + rax*4 - 0xd], bh ; call rsp
0x00000000001959d3 : add byte ptr [rsp + rax*4], cl ; add byte ptr [rax], al ; mov byte ptr [rdi - 0x12], bl ; call qword ptr [rdx]
0x000000000018c777 : add byte ptr [rsp + rax*4], cl ; stc ; call rax
0x00000000001ad9fb : add byte ptr [rsp + rax], dh ; add al, byte ptr [rax] ; and byte ptr [rbx - 5], dl ; call qword ptr [rdx]
0x000000000018ad2f : add byte ptr [rsp + rbp*2 - 0xa], bl ; jmp qword ptr [rax]
0x000000000018990f : add byte ptr [rsp + rbp*4], ch ; int1 ; jmp rsp
0x000000000018c8bf : add byte ptr [rsp + rbp*4], ch ; stc ; jmp qword ptr [rax]
0x00000000001a326b : add byte ptr [rsp + rbx*2 + 0x37f00001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001897c7 : add byte ptr [rsp + rbx*4], ch ; int1 ; call qword ptr [rax]
0x00000000001ab23b : add byte ptr [rsp + rbx*8 + 1], dh ; add al, al ; jp 0x1ab242 ; call rax
0x000000000018a1ef : add byte ptr [rsp + rbx], cl ; hlt ; call rax
0x0000000000078813 : add byte ptr [rsp + rcx + 0x48], dh ; add esp, 0x38 ; ret
0x00000000000eff81 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001a2203 : add byte ptr [rsp + rcx*2], bh ; add dword ptr [rax], eax ; js 0x1a2209 ; hlt ; jmp rcx
0x0000000000196283 : add byte ptr [rsp + rcx*4 + 0x7a680000], bh ; out dx, al ; call qword ptr [rsi]
0x0000000000190683 : add byte ptr [rsp + rcx*4 - 0x16], bh ; jmp rsp
0x000000000019b043 : add byte ptr [rsp + rcx*4 - 0xf], bh ; call qword ptr [rax]
0x000000000019afa3 : add byte ptr [rsp + rcx*4], cl ; int1 ; call qword ptr [rcx]
0x00000000001a15cb : add byte ptr [rsp + rcx*8], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001aa1db : add byte ptr [rsp + rcx*8], dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; call rdi
0x000000000018ae1f : add byte ptr [rsp + rdi*2 - 0xa], cl ; call qword ptr [rax]
0x000000000018d0e7 : add byte ptr [rsp + rdi*2], ch ; cli ; call rsp
0x00000000001a4473 : add byte ptr [rsp + rdi*2], ch ; cmc ; call rbx
0x00000000001a357b : add byte ptr [rsp + rdi], al ; cmc ; jmp qword ptr [rcx]
0x000000000016d8e7 : add byte ptr [rsp + rdx + 0x14bf0000], bh ; add byte ptr [rax], al ; ret 0x14
0x00000000001a2a4b : add byte ptr [rsp + rdx*2 + 0x10000001], al ; cmc ; jmp qword ptr [rcx]
0x000000000019b1e3 : add byte ptr [rsp + rdx*4 - 0xf], bh ; call rcx
0x0000000000187acf : add byte ptr [rsp + rdx*8 - 0x16], bl ; call rsp
0x00000000001a2fdb : add byte ptr [rsp + rsi - 0xb], dh ; jmp qword ptr [rcx]
0x000000000018865f : add byte ptr [rsp + rsi*2 - 0x12], bl ; jmp rax
0x000000000018c6d7 : add byte ptr [rsp + rsi*2], bl ; stc ; jmp rax
0x0000000000193fab : add byte ptr [rsp + rsi*8], ah ; in eax, dx ; jmp rsp
0x00000000001a2f8b : add byte ptr [rsp + rsi], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a2fb3 : add byte ptr [rsp + rsi], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000197a73 : add byte ptr [rsp - 0xc280000], ch ; out dx, al ; jmp rbx
0x000000000018c04f : add byte ptr [rsp - 8], cl ; jmp rsp
0x000000000018987f : add byte ptr [rsp], bh ; int1 ; call qword ptr [rax]
0x0000000000192c03 : add byte ptr [rsp], cl ; in eax, dx ; jmp qword ptr [rax]
0x0000000000193a3b : add byte ptr [rsp], dh ; add byte ptr [rax - 0x1c], dl ; in eax, dx ; call qword ptr [rdi]
0x00000000000c633d : add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x0000000000190445 : add byte ptr cs:[rax], al ; clc ; xchg edx, ebp ; call qword ptr [rcx]
0x00000000000ee817 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x00000000000f198d : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x000000000003676a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000193aa5 : add byte ptr fs:[rax], al ; clc ; in eax, 0xed ; call qword ptr [rdi]
0x0000000000193a3d : add byte ptr fs:[rax], al ; push rax ; in al, 0xed ; call qword ptr [rdi]
0x0000000000122ce8 : add byte ptr gs:[rax - 0x7d], cl ; ret
0x00000000000a398f : add byte ptr gs:[rbp - 0x7b], al ; in al, 0x75 ; ret 0x8945
0x000000000010e623 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d1ffc : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000d1780 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000004d0d0 : add byte ptr ss:[rax + 0x29], cl ; retf 0x8948
0x000000000004df67 : add byte ptr ss:[rax + 0xca], bh ; syscall
0x0000000000047db9 : add byte ptr ss:[rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x29e8
0x00000000000500bd : add byte ptr ss:[rcx + 0x63], cl ; ror byte ptr [rax - 0x77], 0x5c ; ret 0x64c0
0x00000000000500d7 : add byte ptr ss:[rcx], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000014e7 : add ch, al ; add eax, 0x5c70000 ; add byte ptr [rax], al ; retf 5
0x00000000000deaa0 : add ch, al ; ret 0xf42b
0x00000000000750af : add ch, al ; retf
0x000000000015097e : add ch, al ; std ; je 0x1509eb ; and ch, al ; std ; xlatb ; ret
0x0000000000150a6c : add ch, al ; std ; je 0x150ad9 ; and ch, al ; std ; xlatb ; ret
0x0000000000150a12 : add ch, al ; std ; xlatb ; ret
0x0000000000150a1e : add ch, al ; std ; xlatb ; ret 0xc085
0x00000000001545df : add ch, al ; std ; xlatb ; retf 0xc985
0x000000000018d2e9 : add ch, bh ; call rax
0x000000000018d2f1 : add ch, bh ; jmp rsp
0x0000000000039c4b : add ch, bl ; jrcxz 0x39cbc ; nop ; xor eax, eax ; ret
0x00000000000ff840 : add ch, bl ; ret
0x00000000000c81a2 : add ch, bl ; retf
0x0000000000176ffc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000176ffd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x0000000000108f9e : add ch, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000012a3c7 : add ch, byte ptr [rcx] ; add byte ptr [rcx], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a450 : add ch, byte ptr [rcx] ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000000b7819 : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000007327a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000001a810d : add ch, byte ptr [rdx + 0xa] ; ret
0x0000000000067126 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000188934 : add ch, cl ; add byte ptr [rax], al ; mov esi, ss ; out dx, al ; jmp qword ptr [rax]
0x00000000000573bb : add ch, cl ; lodsb al, byte ptr [rsi] ; ret 0xffff
0x0000000000019277 : add ch, cl ; pop rdi ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5f
0x000000000003ed65 : add ch, cl ; ret
0x0000000000104238 : add ch, cl ; ret 0xf1d2
0x0000000000036616 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000186884 : add cl, 0xfa ; call rax
0x00000000000f15df : add cl, bl ; retf 0xc9d9
0x00000000001763ca : add cl, bl ; retf 0xea91
0x000000000009929c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000067919 : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000babcf : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000089594 : add cl, byte ptr [rax + 0x39] ; clc ; jne 0x89587 ; ret
0x000000000010f86b : add cl, byte ptr [rax + 0x39] ; ret 0x1f72
0x000000000010f85d : add cl, byte ptr [rax + 0x39] ; ret 0x2d72
0x0000000000078a3e : add cl, byte ptr [rax + 0x39] ; ret 0x5c76
0x00000000001370ca : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000005673b : add cl, byte ptr [rax + 0x63] ; ror byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000060373 : add cl, byte ptr [rax + 0x63] ; ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000157ba4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000081ef7 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000088560 : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000082819 : add cl, byte ptr [rax + 0xf] ; retf
0x0000000000074748 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000074512 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000008151e : add cl, byte ptr [rax + 9] ; ret
0x0000000000082ab6 : add cl, byte ptr [rax + 9] ; retf 0x8948
0x00000000000828ea : add cl, byte ptr [rax + 9] ; retf 0x8949
0x000000000009929d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000008e39f : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000073a51 : add cl, byte ptr [rax - 0x77] ; ret
0x0000000000069586 : add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000000e0073 : add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x000000000004eb60 : add cl, byte ptr [rax - 0x77] ; retf 0xf748
0x000000000007d582 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000efc0e : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000039413 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000000000009c210 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000c8546 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000009c273 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000001259a5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000accc7 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0xef75
0x00000000000d737e : add cl, byte ptr [rbp + 0x148fe4b] ; retf 0xdeb
0x000000000008c336 : add cl, byte ptr [rbp - 0x77] ; ret 0xc748
0x000000000008bf31 : add cl, byte ptr [rbp - 0x77] ; retf 0x189
0x0000000000139cc2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000196ed6 : add cl, byte ptr [rbx + 0xa] ; ret
0x0000000000069791 : add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000521ba : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x000000000007ecd2 : add cl, byte ptr [rcx - 0x3fcef7b9] ; ret
0x00000000000bf990 : add cl, byte ptr [rcx - 0x77] ; retf 0x440f
0x000000000011109e : add cl, byte ptr [rdi + rcx + 0x44] ; retf 0xc683
0x000000000002eb04 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x0000000000024e20 : add cl, byte ptr [rdi] ; mov dh, 0x70 ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000031ce9 : add cl, byte ptr [rdi] ; retf 0x8b48
0x0000000000100645 : add cl, byte ptr [rdi] ; test byte ptr [rbp + rax], cl ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000014f9e3 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014f8cb : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000001149da : add cl, byte ptr [rdi] ; xchg eax, esp ; sar byte ptr [rcx], 0x4f ; add al, 0xf ; xchg eax, esp ; ret 0xd021
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000fe346 : add cl, byte ptr [rdx] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000197b4d : add cl, byte ptr [rsi + rcx + 8] ; ret
0x000000000005cbb2 : add cl, ch ; cmc ; sar bh, cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e34ea : add cl, ch ; mov ebp, 0x83000001 ; ret
0x00000000000ade47 : add cl, ch ; pmaddwd mm7, mm7 ; dec dword ptr [rax + 1] ; retf 0xfde9
0x00000000000225d2 : add cl, ch ; ret
0x00000000000597d4 : add cl, ch ; ret 0xffd2
0x00000000000dd152 : add cl, ch ; ret 0xfff9
0x000000000004a6c3 : add cl, ch ; ret 0xfffd
0x0000000000032a23 : add cl, ch ; ret 0xfffe
0x000000000002406b : add cl, ch ; retf
0x00000000000aac89 : add cl, ch ; retf 0xffe9
0x000000000003cf56 : add cl, ch ; retf 0xfff2
0x00000000000d515b : add cl, ch ; retf 0xfff6
0x0000000000081803 : add cl, ch ; retf 0xfffc
0x0000000000026500 : add cl, ch ; retf 0xfffd
0x0000000000025283 : add cl, ch ; retf 0xfffe
0x000000000005fbeb : add cl, ch ; scasb al, byte ptr [rdi] ; ret
0x0000000000176283 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000176282 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000000436b3 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x0000000000171b6b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000000445cb : add dh, al ; and al, 0x68 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x7c8b
0x00000000000ccfc7 : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000006782f : add dh, al ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x0000000000061bf2 : add dh, al ; test eax, edi ; idiv bh ; jmp qword ptr [rax]
0x000000000018b4f9 : add dh, bh ; inc esp ; ret 1
0x000000000017b19b : add dh, bh ; jmp rdi
0x00000000001750be : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x0000000000170fb7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000139e73 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000072b7d : add dh, bl ; ret
0x00000000000a076b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000113f10 : add dh, byte ptr [rbp + rax - 0xd] ; ret
0x000000000011f9b2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000186b40 : add dh, byte ptr [rbx] ; sti ; call qword ptr [rdx + 0x22fffb32]
0x0000000000195951 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000d7f17 : add dh, byte ptr [rcx] ; imul al ; jno 0xd7eba ; hlt ; call rcx
0x00000000000c9212 : add dh, byte ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000b4d5f : add dh, byte ptr [rdi + 7] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000197679 : add dh, byte ptr [rsi + 0x4108070c] ; ret
0x00000000000ee43b : add dh, byte ptr [rsi + 2] ; ret
0x000000000011f9b1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a2435 : add dh, ch ; call qword ptr [rdx]
0x0000000000189759 : add dh, cl ; jmp qword ptr [rax]
0x00000000000c165b : add dh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000b9ad4 : add dh, dh ; ret
0x00000000000261e0 : add dh, dh ; ret 0x4801
0x00000000000ec64f : add dh, dh ; ret 0x4840
0x0000000000084838 : add dh, dh ; ret 0x7402
0x00000000000f0b3f : add dh, dh ; ret 0x7404
0x00000000000da7f0 : add dh, dh ; ret 0x7420
0x000000000015cb67 : add dh, dh ; ret 0x7501
0x000000000015cb74 : add dh, dh ; ret 0x7502
0x000000000015cb81 : add dh, dh ; ret 0x7504
0x000000000010f7dd : add dh, dh ; ret 0x7507
0x000000000015cb39 : add dh, dh ; ret 0x7510
0x000000000015cb46 : add dh, dh ; ret 0x7520
0x00000000000d0e14 : add dh, dh ; ret 0x7540
0x00000000000e6790 : add dh, dh ; ret 0xf02
0x00000000000e08a6 : add dh, dh ; ret 0xf04
0x000000000006865f : add dh, dh ; ret 0xf10
0x0000000000097aa2 : add dh, dh ; ret 0xf20
0x000000000004e963 : add dh, dh ; ret 0xf40
0x000000000004e94f : add dh, dh ; ret 0xf50
0x00000000000e6787 : add dh, dh ; ret 0xf80
0x00000000000ffbc6 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000100021 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x0000000000186718 : add dh, dl ; cli ; jmp rax
0x00000000000b1c0b : add dil, r15b ; ret
0x00000000000e708e : add dil, sil ; ret 0xe6ff
0x000000000003aade : add dil, sil ; ret 0xffef
0x000000000018ed18 : add dl, bpl ; call qword ptr [rbx]
0x000000000017a794 : add dl, byte ptr [rdx] ; cmc ; call rax
0x000000000017a790 : add dl, byte ptr [rdx] ; cmc ; inc dword ptr [rdx] ; adc dh, ch ; call rax
0x00000000001ac28d : add dl, byte ptr [rsi + rcx + 8] ; ret
0x000000000018ecf1 : add dl, ch ; call qword ptr [rbx]
0x000000000018edf5 : add dl, ch ; call qword ptr [rcx]
0x000000000018ecdd : add dl, ch ; call qword ptr [rdx]
0x000000000018ec65 : add dl, ch ; call qword ptr [rsi]
0x000000000018ede1 : add dl, ch ; jmp qword ptr [rax]
0x0000000000111f4d : add dword ptr [eax], eax ; add byte ptr [rcx], bh ; retf
0x000000000006ed7f : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000003ba12 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000242bb : add dword ptr [r8 - 0x7d], r9d ; ret
0x00000000000abc2b : add dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000189d95 : add dword ptr [r8], eax ; cmp al, 0x32 ; call qword ptr [rax]
0x0000000000189dcd : add dword ptr [r8], eax ; cmp al, 0x82 ; jmp qword ptr [rax]
0x0000000000189dfd : add dword ptr [r8], eax ; jl 0x189d8c ; call rsp
0x00000000001a18e5 : add dword ptr [r8], eax ; js 0x1a18c2 ; hlt ; jmp qword ptr [rsi]
0x0000000000189e95 : add dword ptr [r8], r8d ; cmp al, 0x91 ; jmp qword ptr [rax]
0x00000000001a1d5d : add dword ptr [r8], r8d ; mov al, 0xea ; hlt ; call qword ptr [rdi]
0x0000000000155966 : add dword ptr [r8], r8d ; vzeroupper ; ret
0x00000000000cd05d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000146aa1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000c4ed0 : add dword ptr [rax + 0x38], edi ; syscall
0x0000000000024c9d : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d738a : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x000000000004ccf7 : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x0000000000114be8 : add dword ptr [rax + 0x39], ecx ; ret 0xd675
0x000000000003a7b3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000007e993 : add dword ptr [rax + 0x39], ecx ; ret 0xd875
0x00000000000d9a0c : add dword ptr [rax + 0x39], ecx ; ret 0xe675
0x000000000007e974 : add dword ptr [rax + 0x39], ecx ; ret 0xe975
0x000000000003a73d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000000ade84 : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x000000000008c2f4 : add dword ptr [rax + 0x39], ecx ; ret 0xee77
0x0000000000045f4b : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x000000000008cd7b : add dword ptr [rax + 0x39], ecx ; ret 0xef77
0x00000000000fd49c : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000a1e30 : add dword ptr [rax + 0x39], ecx ; retf 0x1c74
0x0000000000104343 : add dword ptr [rax + 0x39], ecx ; retf 0xd274
0x00000000000ac07e : add dword ptr [rax + 0x39], ecx ; retf 0xec75
0x00000000000e9fad : add dword ptr [rax + 0x39], ecx ; retf 0xed75
0x00000000000f4897 : add dword ptr [rax + 0x428b1043], ecx ; jo 0xf4830 ; ret 0xe8c1
0x00000000000f491c : add dword ptr [rax + 0x428b1043], ecx ; jo 0xf48b5 ; ret 0xe8c1
0x00000000000f4b69 : add dword ptr [rax + 0x428b1043], ecx ; jo 0xf4b02 ; ret 0xe8c1
0x00000000000f4d6f : add dword ptr [rax + 0x428b1043], ecx ; jo 0xf4d08 ; ret 0xe8c1
0x00000000000f4dff : add dword ptr [rax + 0x428b1043], ecx ; jo 0xf4d98 ; ret 0xe8c1
0x00000000000f118f : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000abcbc : add dword ptr [rax + 0x63], ecx ; retf 0xc283
0x00000000000d6317 : add dword ptr [rax + 0x63], ecx ; ror byte ptr [rax + 0x39], 1 ; retf 0xf072
0x00000000000fe2e7 : add dword ptr [rax + 0xf], eax ; ret 0xfc3
0x000000000015eba0 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000804ba : add dword ptr [rax + 1], 0x89480000 ; retf
0x0000000000124ae7 : add dword ptr [rax + 1], ecx ; ret
0x00000000000e2fde : add dword ptr [rax + 1], ecx ; ret 0x3a80
0x00000000000dd218 : add dword ptr [rax + 1], ecx ; retf 0x8d48
0x000000000012c7e7 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000033e9a : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000cd010 : add dword ptr [rax + 1], edi ; ret
0x00000000000f25c1 : add dword ptr [rax + 9], ecx ; ret 0x8948
0x0000000000082e2a : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000161f42 : add dword ptr [rax + 9], ecx ; ret 0xb941
0x000000000015fa1b : add dword ptr [rax + 9], ecx ; retf 0xb841
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000ca988 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000ec97e : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x000000000006e94e : add dword ptr [rax + rbp*4 - 0x15], esi ; ret
0x0000000000175e7b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x175ee7 ; retf
0x0000000000064058 : add dword ptr [rax - 0x4ef43], eax ; jmp qword ptr [rax]
0x000000000002fe46 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000084e74 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000006ed80 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000000f9cbd : add dword ptr [rax - 0x75], ecx ; push rsp ; retf 0x8b40
0x00000000000b4d20 : add dword ptr [rax - 0x76b3c307], eax ; ret 0xb74
0x0000000000099276 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000007ee30 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x336498 ; ret
0x0000000000142702 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000071d3b : add dword ptr [rax - 0x77], ecx ; jb 0x71d70 ; mov byte ptr [rcx], dil ; ret
0x0000000000078b84 : add dword ptr [rax - 0x77], ecx ; jb 0x78bb9 ; mov byte ptr [rcx], dil ; ret
0x0000000000078c74 : add dword ptr [rax - 0x77], ecx ; jb 0x78ca9 ; mov byte ptr [rcx], dil ; ret
0x00000000000e1e69 : add dword ptr [rax - 0x77], ecx ; or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x000000000006158d : add dword ptr [rax - 0x77], ecx ; push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000078bad : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000003332c : add dword ptr [rax - 0x77], ecx ; ret
0x000000000007a6c6 : add dword ptr [rax - 0x77], ecx ; ret 0x2475
0x00000000000e9f87 : add dword ptr [rax - 0x77], ecx ; ret 0x3948
0x000000000012698b : add dword ptr [rax - 0x77], ecx ; ret 0x6348
0x0000000000162424 : add dword ptr [rax - 0x77], ecx ; ret 0x8949
0x00000000000b38b8 : add dword ptr [rax - 0x77], ecx ; retf
0x000000000006078c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x0000000000115665 : add dword ptr [rax - 0x77], ecx ; xor ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0xf5e9
0x0000000000110104 : add dword ptr [rax - 0x78], eax ; ja 0x11010f ; ret
0x00000000001247fd : add dword ptr [rax - 0x78], eax ; je 0x12485f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001248ed : add dword ptr [rax - 0x78], eax ; je 0x12494f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000087157 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000001486ba : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000008bf36 : add dword ptr [rax - 0x7d], ecx ; jmp 0xffffffffcb420849
0x0000000000023f80 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002754c : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x0000000000037399 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000024e19 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000d6b6a : add dword ptr [rax - 0x7d], ecx ; ret 0x4c10
0x00000000000bfca4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000c7d8e : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000026ace : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000de263 : add dword ptr [rax - 0x7d], ecx ; ret 0x8901
0x00000000000249e5 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000006cb77 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000008150f : add dword ptr [rax - 0x7d], ecx ; retf 0xf01
0x00000000000adb2d : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000ac937 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0xef75
0x00000000000431f5 : add dword ptr [rax - 0x7f], ecx ; ret
0x0000000000032df8 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000008d648 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000019598d : add dword ptr [rax], 0 ; loopne 0x1959f3 ; out dx, al ; call rsp
0x0000000000083f5d : add dword ptr [rax], 0x894c0000 ; out 0xb8, eax ; retf 0
0x0000000000187b95 : add dword ptr [rax], 0xeade9c00 ; jmp rsp
0x00000000000f85f4 : add dword ptr [rax], 1 ; ret
0x000000000019f16a : add dword ptr [rax], eax ; adc al, 0x2f ; hlt ; call rsi
0x000000000019f20a : add dword ptr [rax], eax ; adc al, 0x30 ; hlt ; jmp qword ptr [rax]
0x00000000001a31ba : add dword ptr [rax], eax ; adc al, 0x37 ; cmc ; jmp qword ptr [rcx]
0x000000000019fc2a : add dword ptr [rax], eax ; adc al, 0x73 ; hlt ; jmp qword ptr [rsi]
0x00000000001ac52a : add dword ptr [rax], eax ; adc al, 0x78 ; sti ; jmp qword ptr [rdx]
0x00000000001a577a : add dword ptr [rax], eax ; adc al, 0xf0 ; cmc ; call qword ptr [rdi]
0x000000000019ed3e : add dword ptr [rax], eax ; adc bl, dh ; jmp qword ptr [rcx]
0x00000000001a68ce : add dword ptr [rax], eax ; adc byte ptr [rax - 0xa], dl ; call qword ptr [rax]
0x00000000001aa2fe : add dword ptr [rax], eax ; adc byte ptr [rbp - 9], al ; jmp rsi
0x00000000001a598e : add dword ptr [rax], eax ; add ah, dh ; cmc ; call qword ptr [rdi]
0x00000000001a2f8a : add dword ptr [rax], eax ; add al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x00000000001a357a : add dword ptr [rax], eax ; add al, 0x3c ; cmc ; jmp qword ptr [rcx]
0x000000000019f8ba : add dword ptr [rax], eax ; add al, 0x6b ; hlt ; call qword ptr [rbx]
0x00000000001a1faa : add dword ptr [rax], eax ; add al, 0xef ; hlt ; jmp qword ptr [rdx]
0x00000000001a299a : add dword ptr [rax], eax ; add al, 0xf ; cmc ; jmp qword ptr [rcx]
0x000000000018b52e : add dword ptr [rax], eax ; add al, 0xf7 ; call qword ptr [rax - 0x3d]
0x0000000000021fa3 : add dword ptr [rax], eax ; add al, ch ; and eax, 0x39000ca6 ; ret
0x000000000010b804 : add dword ptr [rax], eax ; add al, ch ; ret 0xfffd
0x000000000014472c : add dword ptr [rax], eax ; add bl, al ; ret
0x00000000000b6f80 : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000ee8ea : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c628e : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x1674
0x000000000008325c : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x4c72
0x000000000015ca11 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x00000000000cd452 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001ae3b9 : add dword ptr [rax], eax ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; retf
0x0000000000126401 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001297a2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000651f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x46273], al ; call qword ptr [rax]
0x000000000012c8ed : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000e2772 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000007822a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d5877 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006f536 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d48d0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000029d82 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb7eb
0x00000000000804bc : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000a139e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000028b47 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x4890
0x00000000000ebf5c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x0000000000083d9d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000022216 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000abc2c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d724f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000014aafd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010bd87 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000082d84 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xb817
0x0000000000087fcf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000015247f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa51 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000033b23 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000022c81 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000170fba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017016a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000016ff92 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016ff8a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000170722 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000016ffca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000016ffc2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000170762 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x0000000000111dae : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007f891 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000085dc3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000015eb21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x15eb38 ; neg eax ; ret
0x00000000000b2c21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xb2c31 ; neg eax ; ret
0x000000000015b8f7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x15b908 ; neg eax ; ret
0x00000000000e341a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xe33e8
0x0000000000063d38 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000c66a3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xc66b7 ; ret
0x000000000011dd63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000008562f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010b733 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, r14d ; call 0xe79d9
0x000000000011b039 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000479f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000011999a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000100c41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0xfd6e9
0x000000000006c6a5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000120d15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x0000000000120cdd : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x000000000011dccd : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000011dce6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000fb2bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e1f4e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007c7c3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024225 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000072bf0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000036859 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e7a7d : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000006a734 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edx, edx ; jmp rax
0x00000000001a2a4e : add dword ptr [rax], eax ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000160d40 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; retf 0xbf41
0x00000000000d4af6 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76248b40], al ; ret 0xe281
0x00000000000d1a78 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x0000000000162565 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000091628 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012cf95 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000072283 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005118b : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004e277 : add dword ptr [rax], eax ; add byte ptr [rbx + 0xf4841ff], al ; retf 0x894c
0x00000000000ca219 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0c205], al ; ret
0x000000000018d799 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*2 - 0x17], al ; call qword ptr [rcx]
0x0000000000085b22 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, rcx ; call rax
0x00000000000313ba : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x00000000000cd441 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3944
0x000000000012c131 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000001611da : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x00000000001aa1de : add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; call rdi
0x0000000000111f4e : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x00000000000b49ca : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000ba0de : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b5e1e : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; sbb cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000f5d35 : add dword ptr [rax], eax ; add byte ptr [rdx + 8], bh ; syscall
0x0000000000150a10 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x0000000000150a1c : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x0000000000044d9e : add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000b9d26 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000da7ee : add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x000000000015cb65 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000015cb72 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000015cb7f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000015cb37 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000015cb44 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000015cb51 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000b4b59 : add dword ptr [rax], eax ; add rcx, rax ; jmp 0xb4b29
0x0000000000050be7 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000001a0eca : add dword ptr [rax], eax ; and al, 0xbe ; hlt ; call qword ptr [rcx]
0x00000000001a578e : add dword ptr [rax], eax ; and al, dh ; cmc ; call rcx
0x00000000001a29ae : add dword ptr [rax], eax ; and byte ptr [rdi], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a2446 : add dword ptr [rax], eax ; call 0x131a1954
0x00000000001a3566 : add dword ptr [rax], eax ; call 0x221a2aad
0x000000000018be2e : add dword ptr [rax], eax ; clc ; call rsp
0x00000000001a31a6 : add dword ptr [rax], eax ; clc ; cmc ; jmp qword ptr [rcx]
0x000000000019fc16 : add dword ptr [rax], eax ; clc ; jb 0x19fc14 ; jmp qword ptr [rcx]
0x00000000001a28e6 : add dword ptr [rax], eax ; clc ; retf 0xfff8
0x00000000001a3322 : add dword ptr [rax], eax ; cld ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ab0e2 : add dword ptr [rax], eax ; cld ; ja 0x1ab0e3 ; call qword ptr [rbx]
0x000000000018d106 : add dword ptr [rax], eax ; cld ; jle 0x18d10a ; jmp rsp
0x00000000001a71a2 : add dword ptr [rax], eax ; cld ; mov dh, dh ; jmp qword ptr [rdx]
0x000000000018b54e : add dword ptr [rax], eax ; cld ; or edi, esi ; dec eax ; ret
0x000000000018b136 : add dword ptr [rax], eax ; cld ; ret 0xfff6
0x000000000018ba8e : add dword ptr [rax], eax ; cld ; retf
0x00000000001895ae : add dword ptr [rax], eax ; cld ; sub esi, eax ; call rax
0x00000000001a587e : add dword ptr [rax], eax ; cmc ; call qword ptr [rbx]
0x00000000001a5a8a : add dword ptr [rax], eax ; cmc ; cmc ; call qword ptr [rax]
0x00000000001a5a5a : add dword ptr [rax], eax ; cmc ; cmc ; call qword ptr [rdi]
0x000000000008843a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000872fe : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000189d96 : add dword ptr [rax], eax ; cmp al, 0x32 ; call qword ptr [rax]
0x00000000001a2fb2 : add dword ptr [rax], eax ; cmp al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x000000000018a5c6 : add dword ptr [rax], eax ; cmp al, 0x6b ; cmc ; call rax
0x0000000000189dce : add dword ptr [rax], eax ; cmp al, 0x82 ; jmp qword ptr [rax]
0x0000000000189e96 : add dword ptr [rax], eax ; cmp al, 0x91 ; jmp qword ptr [rax]
0x00000000001a0692 : add dword ptr [rax], eax ; cmp al, 0x9f ; hlt ; call rcx
0x000000000018987e : add dword ptr [rax], eax ; cmp al, 0xa4 ; int1 ; call qword ptr [rax]
0x000000000018a636 : add dword ptr [rax], eax ; cmp al, 0xa8 ; cmc ; jmp rsp
0x000000000018932e : add dword ptr [rax], eax ; cmp al, 0xf6 ; out dx, eax ; call rax
0x00000000001a0f96 : add dword ptr [rax], eax ; cmp al, al ; hlt ; jmp qword ptr [rcx]
0x00000000001a2af6 : add dword ptr [rax], eax ; cmp byte ptr [rsi], ch ; cmc ; call qword ptr [rax]
0x00000000001a5a46 : add dword ptr [rax], eax ; cmp ch, dh ; cmc ; call qword ptr [rdi]
0x00000000001a54b6 : add dword ptr [rax], eax ; cmp cl, ch ; cmc ; call qword ptr [rbx]
0x00000000001a0066 : add dword ptr [rax], eax ; cwde ; jle 0x1a0064 ; jmp qword ptr [rcx]
0x00000000001a4426 : add dword ptr [rax], eax ; cwde ; jp 0x1a4425 ; call rcx
0x00000000001a1126 : add dword ptr [rax], eax ; cwde ; ret 0xfff4
0x00000000001a5b7a : add dword ptr [rax], eax ; div ebp ; call qword ptr [rcx]
0x000000000018a7be : add dword ptr [rax], eax ; div rbp ; jmp rax
0x00000000001a2432 : add dword ptr [rax], eax ; fadd qword ptr [rdx] ; cmc ; call qword ptr [rdx]
0x0000000000189fc6 : add dword ptr [rax], eax ; fadd st(7), st(0) ; call rax
0x0000000000189fe6 : add dword ptr [rax], eax ; fcom st(0), st(2) ; call qword ptr [rax]
0x00000000001a3246 : add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000019fb06 : add dword ptr [rax], eax ; fdiv dword ptr [rdx - 0xc] ; call qword ptr [rcx]
0x000000000019ed16 : add dword ptr [rax], eax ; fdiv st(2) ; jmp qword ptr [rcx]
0x000000000019df32 : add dword ptr [rax], eax ; fdivr qword ptr [rcx] ; call rcx
0x000000000019ede2 : add dword ptr [rax], eax ; fdivr st(3), st(0) ; call qword ptr [rsi]
0x00000000001a1466 : add dword ptr [rax], eax ; fmul st(0) ; hlt ; jmp qword ptr [rcx]
0x000000000018ad16 : add dword ptr [rax], eax ; fsubr qword ptr [rbx - 0xa] ; jmp rsp
0x00000000001a261a : add dword ptr [rax], eax ; hlt ; add al, 0xf5 ; call qword ptr [rdi]
0x000000000019ed2a : add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001a302a : add dword ptr [rax], eax ; in al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2602 : add dword ptr [rax], eax ; in al, dx ; add al, 0xf5 ; call qword ptr [rdi]
0x000000000018b51e : add dword ptr [rax], eax ; in al, dx ; add esi, edi ; ljmp [rax] ; ret
0x000000000018d1de : add dword ptr [rax], eax ; in al, dx ; cld ; call rsp
0x00000000001893a6 : add dword ptr [rax], eax ; in al, dx ; cld ; out dx, eax ; call rsp
0x00000000001a2ba2 : add dword ptr [rax], eax ; in al, dx ; cmc ; jmp qword ptr [rcx]
0x000000000019fdd2 : add dword ptr [rax], eax ; in al, dx ; ja 0x19fdd0 ; jmp qword ptr [rcx]
0x0000000000189b96 : add dword ptr [rax], eax ; in al, dx ; jp 0x189b91 ; call rsp
0x0000000000189b96 : add dword ptr [rax], eax ; in al, dx ; jp 0x189b92 ; call rsp
0x00000000001a5332 : add dword ptr [rax], eax ; in al, dx ; jrcxz 0x1a5331 ; call qword ptr [rdi]
0x0000000000189786 : add dword ptr [rax], eax ; in al, dx ; movsxd rsi, ecx ; call qword ptr [rax]
0x0000000000189efe : add dword ptr [rax], eax ; in al, dx ; pushfq ; call qword ptr [rax]
0x000000000018b15e : add dword ptr [rax], eax ; in al, dx ; ret
0x000000000018bb0e : add dword ptr [rax], eax ; in al, dx ; sal edi, 1 ; call rax
0x000000000018b5f6 : add dword ptr [rax], eax ; in al, dx ; sbb dh, bh ; jmp rax
0x00000000001a1e8a : add dword ptr [rax], eax ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a3142 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000018a086 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; fcomip st(3) ; jmp qword ptr [rax]
0x000000000018d1c6 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; idiv bl ; call rsp
0x0000000000189336 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; imul bh ; jmp rsp
0x000000000018a72e : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; in eax, dx ; cmc ; call rsp
0x000000000018d0c6 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; jns 0x18d0ca ; call rsp
0x000000000018d08e : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; js 0x18d092 ; call qword ptr [rax]
0x00000000001a1f52 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000001a1562 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; retf
0x000000000018989e : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; test al, 0xf1 ; jmp qword ptr [rax]
0x000000000019eeaa : add dword ptr [rax], eax ; je 0x19eeb3 ; hlt ; jmp rcx
0x00000000001a29ea : add dword ptr [rax], eax ; je 0x1a2a02 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2fda : add dword ptr [rax], eax ; je 0x1a3017 ; cmc ; jmp qword ptr [rcx]
0x0000000000189756 : add dword ptr [rax], eax ; jl 0x189761 ; int1 ; jmp qword ptr [rax]
0x0000000000189dfe : add dword ptr [rax], eax ; jl 0x189d8b ; call rsp
0x0000000000189f3e : add dword ptr [rax], eax ; jl 0x189eef ; call qword ptr [rax]
0x000000000018a476 : add dword ptr [rax], eax ; jl 0x18a49e ; cmc ; jmp qword ptr [rax]
0x000000000018a836 : add dword ptr [rax], eax ; jl 0x18a83c ; cmc ; call qword ptr [rax]
0x000000000018ae1e : add dword ptr [rax], eax ; jl 0x18ae1e ; call qword ptr [rax]
0x000000000018b4e6 : add dword ptr [rax], eax ; jl 0x18b4f3 ; idiv edi ; pushfq ; ret 1
0x000000000018b53e : add dword ptr [rax], eax ; jl 0x18b552 ; idiv edi ; cwde ; ret
0x000000000018c02e : add dword ptr [rax], eax ; jl 0x18bfcd ; clc ; call rsp
0x000000000018d1f6 : add dword ptr [rax], eax ; jl 0x18d261 ; cld ; jmp rax
0x000000000018d2e6 : add dword ptr [rax], eax ; jl 0x18d2ef ; std ; call rax
0x000000000019ec62 : add dword ptr [rax], eax ; jl 0x19ec5d ; call qword ptr [rbx]
0x00000000001a32d2 : add dword ptr [rax], eax ; jl 0x1a3313 ; cmc ; jmp qword ptr [rcx]
0x00000000001a5522 : add dword ptr [rax], eax ; jl 0x1a5514 ; cmc ; call qword ptr [rbx]
0x000000000019ed66 : add dword ptr [rax], eax ; jmp qword ptr [rcx]
0x0000000000045106 : add dword ptr [rax], eax ; jne 0x45105 ; pop rbx ; ret
0x00000000001a02be : add dword ptr [rax], eax ; jo 0x1a0250 ; hlt ; jmp qword ptr [rcx]
0x00000000001a308e : add dword ptr [rax], eax ; jo 0x1a30cc ; cmc ; jmp qword ptr [rcx]
0x00000000001a364e : add dword ptr [rax], eax ; jo 0x1a3694 ; cmc ; jmp qword ptr [rbx]
0x00000000001a550e : add dword ptr [rax], eax ; jo 0x1a5500 ; cmc ; call qword ptr [rbx]
0x00000000001a595e : add dword ptr [rax], eax ; jo 0x1a595a ; cmc ; call qword ptr [rdi]
0x00000000001a18e6 : add dword ptr [rax], eax ; js 0x1a18c1 ; hlt ; jmp qword ptr [rsi]
0x00000000001a2206 : add dword ptr [rax], eax ; js 0x1a2206 ; hlt ; jmp rcx
0x00000000001a14a2 : add dword ptr [rax], eax ; leave ; hlt ; jmp qword ptr [rcx]
0x0000000000189506 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; adc al, 0xf0 ; call qword ptr [rax]
0x000000000018a48e : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; cmc ; call rax
0x000000000018a03e : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; fdiv st(3) ; call rax
0x00000000001a67c2 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; idiv r15b ; ret
0x000000000018b88e : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; js 0x18b88f ; call qword ptr [rax]
0x000000000018a106 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; out 0xf3, al ; jmp rax
0x000000000018a40e : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret
0x000000000018b126 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret 0xfff6
0x00000000001a3002 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000019f92e : add dword ptr [rax], eax ; loopne 0x19f9a1 ; hlt ; call qword ptr [rax]
0x00000000001a1eee : add dword ptr [rax], eax ; loopne 0x1a1ee4 ; hlt ; jmp qword ptr [rcx]
0x00000000001a30de : add dword ptr [rax], eax ; loopne 0x1a311c ; cmc ; jmp qword ptr [rcx]
0x00000000001a2f3a : add dword ptr [rax], eax ; mov ah, 0x33 ; cmc ; jmp qword ptr [rcx]
0x00000000001a538a : add dword ptr [rax], eax ; mov ah, 0xe5 ; cmc ; call qword ptr [rax]
0x00000000001a1d5e : add dword ptr [rax], eax ; mov al, 0xea ; hlt ; call qword ptr [rdi]
0x000000000019e776 : add dword ptr [rax], eax ; mov bl, dl ; call qword ptr [rax]
0x00000000001a3156 : add dword ptr [rax], eax ; mov byte ptr [rsi], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000189a3e : add dword ptr [rax], eax ; mov ebp, cs ; int1 ; call rsp
0x000000000018b516 : add dword ptr [rax], eax ; mov esp, 0x14fff703 ; ret
0x000000000018b546 : add dword ptr [rax], eax ; mov esp, 0xb0fff709 ; ret
0x000000000018b4f6 : add dword ptr [rax], eax ; mov esp, 0xc4fff702 ; ret 1
0x000000000018a0a6 : add dword ptr [rax], eax ; mov esp, fs ; call rax
0x000000000008dec1 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000010c8b2 : add dword ptr [rax], eax ; mov rdi, rbp ; call r12
0x000000000010c9f2 : add dword ptr [rax], eax ; mov rdi, rbp ; call rbx
0x000000000010cbdf : add dword ptr [rax], eax ; mov rdi, rbp ; mov rax, qword ptr [rsp] ; call rax
0x000000000018d2ee : add dword ptr [rax], eax ; mov word ptr [rax], es ; std ; jmp rsp
0x000000000018b68e : add dword ptr [rax], eax ; mov word ptr [rdi + rsi*8], fs ; jmp rax
0x00000000001a316a : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019e57e : add dword ptr [rax], eax ; nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax]
0x00000000001a59be : add dword ptr [rax], eax ; nop ; hlt ; cmc ; call qword ptr [rdi]
0x00000000001a2fee : add dword ptr [rax], eax ; nop ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018a1ee : add dword ptr [rax], eax ; or al, 0x1c ; hlt ; call rax
0x000000000018b726 : add dword ptr [rax], eax ; or al, 0x37 ; idiv edi ; hlt ; retf
0x00000000001a3282 : add dword ptr [rax], eax ; or al, 0x38 ; cmc ; call qword ptr [rsi]
0x000000000018be16 : add dword ptr [rax], eax ; or al, 0x4b ; clc ; jmp qword ptr [rax]
0x00000000001a04c2 : add dword ptr [rax], eax ; or al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x000000000018984e : add dword ptr [rax], eax ; or al, 0xa1 ; int1 ; call qword ptr [rax]
0x000000000018bcd6 : add dword ptr [rax], eax ; or al, 0xb ; clc ; jmp rsp
0x0000000000189a46 : add dword ptr [rax], eax ; or al, 0xd0 ; int1 ; jmp qword ptr [rax]
0x000000000019fde6 : add dword ptr [rax], eax ; or byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x000000000019f8f6 : add dword ptr [rax], eax ; or byte ptr [rbx - 0xc], ch ; call qword ptr [rax]
0x00000000001ab146 : add dword ptr [rax], eax ; or byte ptr [rcx - 9], bh ; jmp qword ptr [rbx]
0x00000000001a6fd6 : add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bh ; jmp rcx
0x00000000001a6ad6 : add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bl ; jmp qword ptr [rsi]
0x00000000001a5e5e : add dword ptr [rax], eax ; or sil, sil ; call rdx
0x00000000001a58a6 : add dword ptr [rax], eax ; pop rax ; cmc ; jmp qword ptr [rdi]
0x00000000001ad136 : add dword ptr [rax], eax ; pop rax ; in al, 0xf7 ; call qword ptr [rdx]
0x000000000019fa76 : add dword ptr [rax], eax ; pop rax ; jb 0x19fa74 ; call qword ptr [rdx]
0x000000000019e106 : add dword ptr [rax], eax ; pop rax ; push rcx ; jmp rdx
0x00000000001a75b6 : add dword ptr [rax], eax ; pop rax ; sahf ; idiv bh ; retf 0
0x00000000001a2fc6 : add dword ptr [rax], eax ; pop rax ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000008e008 : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000331a0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001894ae : add dword ptr [rax], eax ; pop rsp ; adc eax, esi ; call qword ptr [rax]
0x00000000001893f6 : add dword ptr [rax], eax ; pop rsp ; add al, dh ; jmp rax
0x000000000019f912 : add dword ptr [rax], eax ; pop rsp ; cmc ; clc ; call qword ptr [rax]
0x000000000018b146 : add dword ptr [rax], eax ; pop rsp ; ret
0x00000000001a4ed2 : add dword ptr [rax], eax ; pop rsp ; ret 0xfff5
0x000000000018ba86 : add dword ptr [rax], eax ; pop rsp ; retf
0x00000000001a7f22 : add dword ptr [rax], eax ; pop rsp ; retf 0xfff6
0x000000000018d3be : add dword ptr [rax], eax ; pop rsp ; std ; jmp qword ptr [rax]
0x0000000000189aee : add dword ptr [rax], eax ; push -0xe ; jmp rax
0x00000000001a335e : add dword ptr [rax], eax ; push rax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001ac87e : add dword ptr [rax], eax ; push rax ; jne 0x1ac883 ; jmp qword ptr [rdx]
0x00000000001ac87d : add dword ptr [rax], eax ; push rax ; jne 0x1ac884 ; jmp qword ptr [rdx]
0x00000000001a1f3e : add dword ptr [rax], eax ; push rax ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000001ac61a : add dword ptr [rax], eax ; push rsp ; ja 0x1ac61f ; jmp qword ptr [rdx]
0x00000000001a02aa : add dword ptr [rax], eax ; push rsp ; mov esp, esi ; jmp qword ptr [rcx]
0x000000000019e5ca : add dword ptr [rax], eax ; push rsp ; scasd eax, dword ptr [rdi] ; jmp rdi
0x000000000018b58e : add dword ptr [rax], eax ; pushfq ; adc bh, dh ; call qword ptr [rax]
0x000000000018be3e : add dword ptr [rax], eax ; pushfq ; clc ; call qword ptr [rax]
0x000000000018a0ae : add dword ptr [rax], eax ; pushfq ; in al, 0xf3 ; jmp rsp
0x000000000018a306 : add dword ptr [rax], eax ; pushfq ; ja 0x18a304 ; jmp qword ptr [rax]
0x000000000019fd42 : add dword ptr [rax], eax ; pushfq ; ja 0x19fd40 ; jmp qword ptr [rcx]
0x00000000001ac962 : add dword ptr [rax], eax ; pushfq ; je 0x1ac967 ; jmp qword ptr [rdx]
0x00000000001ac961 : add dword ptr [rax], eax ; pushfq ; je 0x1ac968 ; jmp qword ptr [rdx]
0x000000000018b80e : add dword ptr [rax], eax ; pushfq ; movsxd rsi, edi ; jmp rsp
0x000000000018ba0e : add dword ptr [rax], eax ; pushfq ; ret
0x000000000018a1f6 : add dword ptr [rax], eax ; pushfq ; sbb al, 0xf4 ; jmp rsp
0x000000000018995e : add dword ptr [rax], eax ; pushfq ; scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x0000000000189366 : add dword ptr [rax], eax ; pushfq ; stc ; out dx, eax ; call qword ptr [rax]
0x000000000018b6d6 : add dword ptr [rax], eax ; pushfq ; sub bh, dh ; jmp rax
0x000000000018b8c6 : add dword ptr [rax], eax ; pushfq ; test bh, dh ; call qword ptr [rax]
0x000000000019e82e : add dword ptr [rax], eax ; rcl ah, 0xf3 ; jmp qword ptr [rbx]
0x00000000001a4f22 : add dword ptr [rax], eax ; ret
0x0000000000189f9e : add dword ptr [rax], eax ; ret 0xfff3
0x00000000001a14de : add dword ptr [rax], eax ; ror cl, 0xf4 ; jmp qword ptr [rcx]
0x000000000019edce : add dword ptr [rax], eax ; sal bl, 1 ; call qword ptr [rdi]
0x00000000001a2f4e : add dword ptr [rax], eax ; sal byte ptr [rbx], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a317e : add dword ptr [rax], eax ; sal byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x000000000018d28e : add dword ptr [rax], eax ; sar spl, cl ; jmp rsp
0x00000000001a15b6 : add dword ptr [rax], eax ; sbb ah, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a3052 : add dword ptr [rax], eax ; sbb al, 0x35 ; cmc ; jmp qword ptr [rcx]
0x000000000018b716 : add dword ptr [rax], eax ; sbb al, 0x35 ; idiv edi ; cwde ; retf
0x000000000018a746 : add dword ptr [rax], eax ; sbb al, 0xee ; cmc ; call qword ptr [rax]
0x00000000001a3336 : add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001aa966 : add dword ptr [rax], eax ; sbb byte ptr [rdx - 9], bl ; jmp qword ptr [rax]
0x000000000019daaa : add dword ptr [rax], eax ; sbb dh, bl ; jmp rdx
0x00000000001a1f16 : add dword ptr [rax], eax ; sbb dh, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a6c0e : add dword ptr [rax], eax ; shl byte ptr [rax - 0xa], 0xff ; retf 0
0x00000000001a2b8e : add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000018a246 : add dword ptr [rax], eax ; sub al, 0x5d ; hlt ; call qword ptr [rax]
0x000000000018d0e6 : add dword ptr [rax], eax ; sub al, 0x7c ; cli ; call rsp
0x00000000001a4472 : add dword ptr [rax], eax ; sub al, 0x7c ; cmc ; call rbx
0x00000000001a0182 : add dword ptr [rax], eax ; sub al, 0x81 ; hlt ; jmp qword ptr [rcx]
0x00000000001897c6 : add dword ptr [rax], eax ; sub al, 0x9c ; int1 ; call qword ptr [rax]
0x00000000001897ee : add dword ptr [rax], eax ; sub al, 0x9d ; int1 ; jmp rax
0x000000000018990e : add dword ptr [rax], eax ; sub al, 0xac ; int1 ; jmp rsp
0x000000000019ed52 : add dword ptr [rax], eax ; sub al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001a6006 : add dword ptr [rax], eax ; sub byte ptr [rsi + rsi*8], dl ; call rdx
0x00000000001a1e76 : add dword ptr [rax], eax ; sub ch, ch ; hlt ; jmp qword ptr [rcx]
0x000000000019fe36 : add dword ptr [rax], eax ; test al, 0x78 ; hlt ; jmp qword ptr [rcx]
0x00000000001a1386 : add dword ptr [rax], eax ; test al, 0xc7 ; hlt ; jmp qword ptr [rcx]
0x000000000019e9a6 : add dword ptr [rax], eax ; test al, 0xd6 ; jmp qword ptr [rdi]
0x00000000001a5566 : add dword ptr [rax], eax ; test al, 0xe9 ; cmc ; call qword ptr [rdi]
0x00000000001a3aba : add dword ptr [rax], eax ; test byte ptr [rbx - 0xb], cl ; call qword ptr [rdx]
0x000000000019ecda : add dword ptr [rax], eax ; test dl, dh ; jmp qword ptr [rcx]
0x0000000000155967 : add dword ptr [rax], eax ; vzeroupper ; ret
0x00000000001a063a : add dword ptr [rax], eax ; xor al, 0x9e ; hlt ; jmp rsi
0x00000000001a15ca : add dword ptr [rax], eax ; xor al, 0xcc ; hlt ; jmp qword ptr [rcx]
0x00000000001a1f2a : add dword ptr [rax], eax ; xor al, 0xee ; hlt ; jmp qword ptr [rcx]
0x00000000001a586a : add dword ptr [rax], eax ; xor al, 0xf2 ; cmc ; call qword ptr [rbx]
0x000000000019f94a : add dword ptr [rax], eax ; xor al, 0xf5 ; clc ; call qword ptr [rax]
0x00000000001a53ee : add dword ptr [rax], eax ; xor bh, ah ; cmc ; call rcx
0x00000000001a2d0a : add dword ptr [rax], eax ; xor ch, dh ; jmp qword ptr [rcx]
0x000000000019ec9e : add dword ptr [rax], eax ; xor dl, 0xf3 ; call qword ptr [rsi]
0x000000000008e123 : add dword ptr [rax], edi ; adc al, 7 ; je 0x8e127 ; ret
0x00000000000fe35e : add dword ptr [rax], esp ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f1b3a : add dword ptr [rbp + 0x29], eax ; ret
0x000000000007b58c : add dword ptr [rbp + 0x2f0589c0], eax ; ret 0x33
0x000000000008d9ba : add dword ptr [rbp + 0x38], eax ; ret 0x2975
0x000000000008da1a : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x000000000008d452 : add dword ptr [rbp + 0x38], eax ; retf 0x2775
0x000000000008cc42 : add dword ptr [rbp + 0x38], eax ; retf 0x2a75
0x000000000008b29a : add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x000000000008cc9a : add dword ptr [rbp + 0x38], eax ; retf 0x7575
0x000000000008dbca : add dword ptr [rbp + 0x38], eax ; retf 0x7875
0x000000000008d4b2 : add dword ptr [rbp + 0x38], eax ; retf 0x850f
0x000000000008b346 : add dword ptr [rbp + 0x38], eax ; retf 0xec74
0x000000000008b0ae : add dword ptr [rbp + 0x38], eax ; sal dword ptr [rsp + rbp*8 + 0x44], 0x89 ; retf
0x000000000008cad6 : add dword ptr [rbp + 0x38], eax ; sal dword ptr [rsp + rbp*8 + 0x45], 0x89 ; retf
0x00000000000d680b : add dword ptr [rbp + 0x39], eax ; retf 0x8e0f
0x00000000000aca04 : add dword ptr [rbp + 0x39], ecx ; ret
0x00000000000cca34 : add dword ptr [rbp + 0x39], ecx ; retf 0xe775
0x000000000008ba90 : add dword ptr [rbp + 0x40ea75d2], eax ; or byte ptr [rdi], dh ; ret
0x000000000011670c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e764a : add dword ptr [rbp + 0x43], esi ; mov eax, 0x10c ; syscall
0x00000000001763c4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000007c232 : add dword ptr [rbp + 0x738948c9], eax ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000124d12 : add dword ptr [rbp + 0xb], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000f1e92 : add dword ptr [rbp + 0xb], esi ; ret
0x00000000001031e5 : add dword ptr [rbp - 0x18], esi ; mov rax, rdi ; ret
0x00000000000bfe66 : add dword ptr [rbp - 0x19], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045f74 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000ee81c : add dword ptr [rbp - 0x2f], esi ; ret
0x00000000000ae7aa : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000f25f5 : add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000061e37 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000f32b9 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a684 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00000000001767aa : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000139d32 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000017538a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000008af9a : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000027d2 : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000008167a : add dword ptr [rbx + 0x333c2f05], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x000000000003869e : add dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000841d6 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000008383e : add dword ptr [rbx + 0x5d], ebx ; ret
0x00000000000cfe6a : add dword ptr [rbx + rcx - 0xa], esi ; ret
0x0000000000114dcb : add dword ptr [rbx - 0x3d], ebx ; nop ; ret
0x0000000000069806 : add dword ptr [rbx - 0x4ef43], eax ; jmp qword ptr [rax]
0x00000000000a1bb6 : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0xda89
0x00000000000338b6 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000001864dc : add dword ptr [rbx - 3], eax ; call qword ptr [rcx + 0x21fffd43]
0x00000000001a4b0a : add dword ptr [rbx], 0xa ; ret
0x0000000000039411 : add dword ptr [rbx], eax ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000110444 : add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x00000000000d156e : add dword ptr [rcx + 0x39], eax ; ret 0x8e0f
0x0000000000088c1a : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000ce20c : add dword ptr [rcx + 0x39], ecx ; ret 0xe275
0x000000000008c37b : add dword ptr [rcx + 0x39], ecx ; ret 0xef75
0x0000000000045d13 : add dword ptr [rcx + 0x39], ecx ; sal byte ptr [rbp - 0x49], 0x5b ; ret
0x000000000012b50c : add dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x00000000000d3b4e : add dword ptr [rcx + 0x63483846], ecx ; ret
0x00000000000d5982 : add dword ptr [rcx + 0x63], ecx ; ret
0x00000000000d133b : add dword ptr [rcx + 0x63], ecx ; ret 0x634c
0x00000000000cc3ae : add dword ptr [rcx + 0x63], ecx ; ret 0xf41
0x00000000000e67e5 : add dword ptr [rcx + 0x63], ecx ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000d188e : add dword ptr [rcx + 0x80e1], eax ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000001117a5 : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x0000000000100af3 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89480045 ; ret 0xe883
0x00000000000e6b8a : add dword ptr [rcx + 0xf], ecx ; ret
0x00000000000d1335 : add dword ptr [rcx + 1], eax ; fadd qword ptr [rbx + 0x634901eb] ; ret 0x634c
0x00000000000f1eec : add dword ptr [rcx + 9], ecx ; ret 0x894d
0x00000000000f1f6e : add dword ptr [rcx + 9], ecx ; retf 0x894c
0x00000000000c17c2 : add dword ptr [rcx + rax*2 - 0x77], esp ; sbb byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; ret
0x00000000000fba37 : add dword ptr [rcx + rcx*4 - 0x40], eax ; add rsp, 8 ; ret
0x0000000000070dec : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000500d9 : add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000110415 : add dword ptr [rcx + rcx*8 + 0x6348e675], eax ; ret 0xc741
0x0000000000022db3 : add dword ptr [rcx + rdi], esi ; ret
0x00000000000cedea : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x00000000000cee5a : add dword ptr [rcx - 0x6f501431], ecx ; lea eax, [rsi + 1] ; ret
0x00000000000c819e : add dword ptr [rcx - 0x73], ecx ; add r13b, r11b ; retf
0x0000000000082388 : add dword ptr [rcx - 0x75], ecx ; pop rax ; or dh, dh ; ret
0x00000000000992b6 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000008cf22 : add dword ptr [rcx - 0x77], ecx ; ret
0x0000000000029501 : add dword ptr [rcx - 0x77], ecx ; ret 0x8348
0x000000000008dc0f : add dword ptr [rcx - 0x77], ecx ; ret 0xf41
0x000000000002e177 : add dword ptr [rcx - 0x7d], eax ; dec dword ptr [rip - 0x7cb79d8c] ; ret
0x00000000000a46cf : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x00000000001101b3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00000000000fed3f : add dword ptr [rcx - 0x7d], ecx ; ret 0xeb01
0x00000000001a598d : add dword ptr [rcx], 0 ; add ah, dh ; cmc ; call qword ptr [rdi]
0x00000000001a595d : add dword ptr [rcx], 0 ; jo 0x1a595b ; cmc ; call qword ptr [rdi]
0x00000000001a59bd : add dword ptr [rcx], 0 ; nop ; hlt ; cmc ; call qword ptr [rdi]
0x000000000008325b : add dword ptr [rcx], 0x39480000 ; retf 0x4c72
0x00000000001a5779 : add dword ptr [rcx], 0xf5f01400 ; call qword ptr [rdi]
0x00000000000b309b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000e77e2 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000015eb9e : add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x000000000015eb9c : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000001031e4 : add dword ptr [rcx], eax ; jne 0x1031d7 ; mov rax, rdi ; ret
0x000000000012a475 : add dword ptr [rcx], ebp ; add al, ch ; ret
0x00000000000d17bd : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x0000000000028468 : add dword ptr [rcx], ecx ; ret 0x3948
0x0000000000028227 : add dword ptr [rcx], ecx ; retf 0x394c
0x00000000000d6cfd : add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000ad817 : add dword ptr [rcx], edi ; retf
0x00000000000d1e10 : add dword ptr [rcx], edi ; retf 0xeb7f
0x00000000001762d5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000010f883 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000e2052 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000038a85 : add dword ptr [rcx], esi ; test byte ptr [rcx + rcx*4 - 0x31], 0x41 ; call rax
0x00000000000a17f2 : add dword ptr [rdi + 0x15], esi ; jb 0xa1800 ; mov byte ptr [rdi], cl ; ret
0x0000000000125bc0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x0000000000125bd0 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000125c63 : add dword ptr [rdi + 0x28], esi ; ret
0x00000000000f0152 : add dword ptr [rdi + 2], edi ; ret
0x000000000007ef72 : add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000008a1dc : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019b89e : add dword ptr [rdi], 2 ; retf 0xc0a
0x00000000001a4ade : add dword ptr [rdi], 3 ; retf
0x0000000000111c51 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000002ebe5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000011f1f9 : add dword ptr [rdi], ecx ; retf 0xc80f
0x00000000000b778a : add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000000a1bb9 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a1bc7 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x000000000014457e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000001013a3 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000110125 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x000000000010c9fe : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000044b0e : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x00000000000dfe6e : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000e0ba7 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc9e9
0x0000000000044b1b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x0000000000044556 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe0e9
0x0000000000099274 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000000df09d : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x000000000015c17c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000051d00 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000015baad : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000f8362 : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000011490b : add dword ptr [rdx + rcx + 0x48], esi ; mov dword ptr [rdi], eax ; ret
0x0000000000175faf : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000019bc38 : add dword ptr [rdx], 0x4a ; ret
0x0000000000193d98 : add dword ptr [rdx], 0x58 ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000197474 : add dword ptr [rdx], 0x5a ; ret
0x00000000001101be : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000019ca3d : add dword ptr [rdx], eax ; retf
0x00000000001101bd : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007d8a2 : add dword ptr [rip + 0x339f1b], 1 ; pop rbx ; ret
0x0000000000099205 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000099287 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000114479 : add dword ptr [rsp + 0x48], esi ; add esp, 8 ; ret
0x00000000000c9209 : add dword ptr [rsp + rdx - 0x7c], esi ; sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x000000000007c6b9 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000001a04c1 : add dword ptr cs:[rax], eax ; or al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x00000000001a1465 : add dword ptr ds:[rax], eax ; fmul st(0) ; hlt ; jmp qword ptr [rcx]
0x00000000001a14a1 : add dword ptr ds:[rax], eax ; leave ; hlt ; jmp qword ptr [rcx]
0x000000000019fc29 : add dword ptr es:[rax], eax ; adc al, 0x73 ; hlt ; jmp qword ptr [rsi]
0x0000000000153f17 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019fc15 : add dword ptr es:[rax], eax ; clc ; jb 0x19fc15 ; jmp qword ptr [rcx]
0x000000000019fc14 : add dword ptr es:[rax], eax ; clc ; jb 0x19fc16 ; jmp qword ptr [rcx]
0x00000000001a3ab9 : add dword ptr fs:[rax], eax ; test byte ptr [rbx - 0xb], cl ; call qword ptr [rdx]
0x0000000000087fce : add dword ptr gs:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000010f8a6 : add eax, 0x10 ; ret
0x000000000017b92c : add eax, 0x10 ; retf 8
0x00000000000a1efe : add eax, 0x1006d ; cmove rax, rdx ; ret
0x00000000000a208e : add eax, 0x10bad ; cmove rax, rdx ; ret
0x00000000000a216e : add eax, 0x10d5d ; cmove rax, rdx ; ret
0x00000000000a1f24 : add eax, 0x10de7 ; cmovne rax, rdx ; ret
0x00000000000a1ebe : add eax, 0x10e7d ; cmove rax, rdx ; ret
0x00000000000a1ffe : add eax, 0x1143d ; cmove rax, rdx ; ret
0x0000000000063698 : add eax, 0x114943 ; jmp rax
0x00000000000abbf2 : add eax, 0x14c0000 ; ret 0x28b
0x000000000002db51 : add eax, 0x14fcc7 ; ret
0x00000000000354fb : add eax, 0x1504c0 ; por xmm0, xmm1 ; ret
0x0000000000021ef2 : add eax, 0x15b467 ; ret
0x0000000000021f02 : add eax, 0x15d1f9 ; ret
0x00000000000b6f7e : add eax, 0x16d ; ret
0x0000000000088437 : add eax, 0x187b4 ; cmove rax, rdx ; ret
0x00000000000886bb : add eax, 0x18ff0 ; cmovne rax, rdx ; ret
0x0000000000087cc4 : add eax, 0x19507 ; cmovne rax, rdx ; ret
0x0000000000087a14 : add eax, 0x19717 ; cmovne rax, rdx ; ret
0x0000000000087444 : add eax, 0x19c47 ; cmovne rax, rdx ; ret
0x00000000000f8430 : add eax, 0x1bbf002c ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000426e7 : add eax, 0x1e80000 ; ret
0x00000000001506fa : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000001ae7dd : add eax, 0x2040000 ; add byte ptr [rax], al ; retf 8
0x000000000012c699 : add eax, 0x28daea ; call qword ptr [rax]
0x0000000000087bb3 : add eax, 0x29000000 ; ret
0x00000000000b77ca : add eax, 0x2907f9c1 ; ret 0x8944
0x0000000000114312 : add eax, 0x2a0cd9 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011880a : add eax, 0x2a1359 ; add rsp, 8 ; ret
0x0000000000117ef4 : add eax, 0x2a1c07 ; add rsp, 8 ; ret
0x000000000010d66a : add eax, 0x2a9289 ; ret
0x000000000010cc00 : add eax, 0x2a9cdb ; add rsp, 8 ; ret
0x0000000000102769 : add eax, 0x2b670a ; pop rbp ; ret
0x00000000000f8c42 : add eax, 0x2bc219 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000144604 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000f1450 : add eax, 0x2c746b ; add rsp, 0x18 ; ret
0x00000000000f13fc : add eax, 0x2c74ff ; pop rbp ; pop r12 ; ret
0x00000000000f0ec8 : add eax, 0x2c79a3 ; add rsp, 8 ; ret
0x00000000000f0e69 : add eax, 0x2c7a22 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efcbb : add eax, 0x2c8ad0 ; add rsp, 8 ; ret
0x00000000000ee5f5 : add eax, 0x2ca046 ; pop rbx ; ret
0x0000000000086a1b : add eax, 0x32e530 ; call qword ptr [rax]
0x0000000000086956 : add eax, 0x32e5f5 ; call qword ptr [rax]
0x000000000008689b : add eax, 0x32e6b0 ; call qword ptr [rax]
0x0000000000087a79 : add eax, 0x3304ca ; ret
0x0000000000087a5f : add eax, 0x3304e4 ; add rsp, 8 ; ret
0x0000000000083996 : add eax, 0x331545 ; mov qword ptr [rax], rdi ; ret
0x00000000000803dc : add eax, 0x334aff ; mov qword ptr [rax], rdx ; ret
0x000000000007ee65 : add eax, 0x33647e ; ret
0x000000000007ee4d : add eax, 0x33648e ; ret
0x000000000007edf5 : add eax, 0x33649e ; ret
0x000000000007edcf : add eax, 0x3364ac ; ret
0x000000000007ede5 : add eax, 0x3364b6 ; ret
0x000000000007ed9f : add eax, 0x3364e4 ; ret
0x000000000007ed7e : add eax, 0x336529 ; ret
0x000000000007d832 : add eax, 0x338d69 ; ret
0x000000000007edb4 : add eax, 0x3390d3 ; ret
0x000000000007d93d : add eax, 0x339e82 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000128922 : add eax, 0x358d4800 ; retf 0x585
0x000000000011f865 : add eax, 0x358d4800 ; retf 0x654
0x000000000008e50e : add eax, 0x37cd ; cmove rax, rdx ; ret
0x000000000003696c : add eax, 0x37e83b ; mov eax, edx ; ret
0x0000000000036931 : add eax, 0x37e872 ; ret
0x0000000000036921 : add eax, 0x37e886 ; ret
0x0000000000039882 : add eax, 0x380a7f ; add rsp, 8 ; ret
0x000000000002e7cf : add eax, 0x386614 ; mov qword ptr [rax], rdx ; ret
0x000000000002b4d2 : add eax, 0x38b491 ; ret
0x000000000004a0fd : add eax, 0x39490000 ; ret
0x0000000000022dc2 : add eax, 0x3973e1 ; ret
0x0000000000022db2 : add eax, 0x397401 ; ret
0x000000000002175d : add eax, 0x398bc6 ; ret
0x00000000001244e5 : add eax, 0x3d8d4800 ; retf 0x593
0x00000000001201e5 : add eax, 0x3d8d4800 ; retf 0x5d6
0x000000000015071a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x00000000001026e8 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x000000000012ce23 : add eax, 0x440f4c00 ; retf 0x8d48
0x00000000001030cf : add eax, 0x450f4800 ; ret 0x66c3
0x0000000000102ef8 : add eax, 0x450f4800 ; ret 0x90c3
0x0000000000102edc : add eax, 0x450f4800 ; ret 0xfc3
0x0000000000146b38 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000001427e8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000009c7a6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000111c53 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000008b295 : add eax, 0x4eb60f44 ; add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x0000000000146bb9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000142829 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000001030cc : add eax, 0x5498f ; cmovne rax, rdx ; ret
0x00000000000bfe65 : add eax, 0x5be77501 ; pop rbp ; pop r12 ; ret
0x0000000000171b5d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000000014e9 : add eax, 0x5c70000 ; add byte ptr [rax], al ; retf 5
0x0000000000171b6d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000001b0149 : add eax, 0x5cf0000 ; add byte ptr [rax], al ; ret 0
0x00000000000e24fd : add eax, 0x5d000000 ; pop r12 ; ret
0x0000000000150b43 : add eax, 0x60 ; add rax, rdi ; ret
0x000000000015073a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000018dbb1 : add eax, 0x610c0000 ; jmp 0x19a6c1
0x00000000000f732d : add eax, 0x74000000 ; retf
0x0000000000186949 : add eax, 0x740fffb ; sti ; call rax
0x0000000000089c9e : add eax, 0x7e3d ; cmove rax, rdx ; ret
0x00000000001aea71 : add eax, 0x7e90000 ; add byte ptr [rax], al ; retf
0x000000000009cfae : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x000000000005a24a : add eax, 0x83480000 ; ret 0x4504
0x000000000014a6ed : add eax, 0x83480000 ; ret 0x4910
0x000000000014d241 : add eax, 0x83480000 ; ret 0xe910
0x000000000014a641 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000100649 : add eax, 0x83490000 ; ret
0x00000000000605c7 : add eax, 0x83ffff9a ; retf
0x0000000000146b3b : add eax, 0x8428d48 ; ret
0x00000000000b00dd : add eax, 0x854d0000 ; test byte ptr [rdi], 0x85 ; call qword ptr [rdi]
0x00000000000283a9 : add eax, 0x89440000 ; retf 0x4bb
0x0000000000162086 : add eax, 0x89480000 ; ret 0x8949
0x00000000001155fe : add eax, 0x89483077 ; ret
0x00000000000911a8 : add eax, 0x894d0000 ; retf
0x00000000000f376a : add eax, 0x8bb59 ; pop rbx ; ret
0x000000000008850e : add eax, 0x929d ; cmove rax, rdx ; ret
0x000000000009e662 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00000000000a2411 : add eax, 0xb57ca ; je 0xa23d9 ; ret
0x000000000015a4fa : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x0000000000146bbd : add eax, 0xc428d48 ; ret
0x000000000009dded : add eax, 0xc478d48 ; ret
0x0000000000088581 : add eax, 0xc86ea ; je 0x88549 ; ret
0x000000000008869c : add eax, 0xcf3cf ; cmovne rax, rdx ; ret
0x0000000000089cde : add eax, 0xd27d ; cmove rax, rdx ; ret
0x000000000009ec3d : add eax, 0xd478d48 ; ret
0x00000000001869ed : add eax, 0xdfa0fffb ; cli ; jmp rax
0x0000000000042706 : add eax, 0xe2e80000 ; ret 0xfffe
0x0000000000082714 : add eax, 0xe4e80010 ; retf
0x0000000000024ad2 : add eax, 0xe7894c00 ; call 0x215a7
0x000000000012b175 : add eax, 0xe8f63100 ; ret 0xfbc9
0x000000000012aa75 : add eax, 0xe8f63100 ; ret 0xfbd0
0x000000000004f7bb : add eax, 0xe9d6460f ; retf 0xffec
0x000000000016336a : add eax, 0xebe308e9 ; push rbx ; ret
0x000000000007e56c : add eax, 0xf390dbeb ; ret
0x00000000000872fd : add eax, 0xf480001 ; ret 0xc3f3
0x00000000000879ee : add eax, 0xf77d ; cmove rax, rdx ; ret
0x0000000000139d23 : add eax, 0xf7f0ff3 ; ret
0x00000000000a239e : add eax, 0xf89d ; cmove rax, rdx ; ret
0x000000000008784e : add eax, 0xfc0d ; cmove rax, rdx ; ret
0x000000000008788e : add eax, 0xfd6d ; cmove rax, rdx ; ret
0x00000000001030eb : add eax, 0xfff9e5b0 ; cmovne rax, rdx ; ret
0x00000000000fb6aa : add eax, 0xfffe8fe9 ; push rbx ; ret
0x00000000000b472b : add eax, 0xfffffef0 ; ret
0x00000000000b460b : add eax, 0xffffff00 ; ret
0x00000000000e6dd4 : add eax, 0xffffff47 ; cmove rax, rdx ; ret
0x000000000008e121 : add eax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0x8e129 ; ret
0x0000000000045d11 : add eax, 1 ; cmp r8, rax ; jne 0x45cd9 ; pop rbx ; ret
0x00000000000f859b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000f85da : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000450f1 : add eax, 1 ; pop rbx ; ret
0x0000000000022c65 : add eax, 1 ; push rax ; call rbx
0x00000000000887db : add eax, 1 ; ret
0x00000000000b3638 : add eax, 2 ; ret
0x00000000000b3651 : add eax, 3 ; ret
0x00000000000d17c3 : add eax, 8 ; ret
0x00000000000220e9 : add eax, dword ptr [0] ; ret
0x00000000000aba0b : add eax, dword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010302b : add eax, dword ptr [r8] ; and ecx, 8 ; cmovne rax, rdx ; ret
0x0000000000042725 : add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000000b1826 : add eax, dword ptr [rax] ; add al, ch ; ret 0xf7d1
0x00000000000a8c26 : add eax, dword ptr [rax] ; add al, ch ; ret 0xf85d
0x00000000000b191e : add eax, dword ptr [rax] ; add al, ch ; retf 0xf7d0
0x00000000000c711e : add eax, dword ptr [rax] ; add al, ch ; retf 0xff95
0x0000000000027343 : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x0000000000025339 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000deada : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xd289
0x00000000001290f8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x3f], cl ; cli ; adc cl, byte ptr [rax + 0x29] ; retf 0x148
0x00000000000e391c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x41f0d806], al ; retf 0x3174
0x00000000000bfe41 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000109f38 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x9066
0x00000000000aba0c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014a88d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d3e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a8b1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012cf81 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; call rsi
0x000000000011ea5e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011b591 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f7f86 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000bf836 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000f1d0c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000000b3693 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e817d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000004e9b1 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x31], al ; in al, 0x83 ; ret
0x000000000014b888 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000042df1 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000e006e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x76b7fd02], al ; ret 0x940f
0x0000000000122b4f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x307f
0x00000000000825bb : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; push rsi ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007e585 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000021964 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xc5eb
0x00000000000d2e48 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000162370 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x000000000007e625 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x00000000001aeb51 : add eax, dword ptr [rax] ; add byte ptr [rsi + 2], al ; add byte ptr [rax], al ; retf 4
0x00000000000e678e : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf02
0x00000000000e677c : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf20
0x00000000000e6785 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf80
0x0000000000102eac : add eax, dword ptr [rax] ; and ecx, 8 ; cmovne rax, rdx ; ret
0x00000000000ee247 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000c696f : add eax, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a18c0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001066ea : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000001445c9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000000f96aa : add eax, dword ptr [rcx + rdx] ; ret
0x00000000000ed06a : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e740b : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000189335 : add eax, dword ptr [rcx] ; add byte ptr [rsi + rsi*8 - 0x11], ch ; jmp rsp
0x000000000018932d : add eax, dword ptr [rcx] ; add byte ptr [rsi + rsi*8], bh ; out dx, eax ; call rax
0x000000000012c734 : add eax, dword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x000000000012c851 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000000f9486 : add eax, dword ptr [rdx + rcx] ; ret
0x00000000001446c9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000199fd3 : add eax, dword ptr [rdx] ; retf
0x0000000000191f62 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a4b06 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rbx], 0xa ; ret
0x0000000000153d0f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007fdfa : add eax, dword ptr fs:[rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000d1785 : add eax, eax ; ret
0x0000000000150c11 : add eax, eax ; vzeroupper ; ret
0x00000000000e67ec : add eax, ebp ; jmp rax
0x00000000000c0baf : add eax, ebp ; ret
0x00000000001278ec : add eax, ebp ; sahf ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000103167 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000154318 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000007f366 : add eax, ecx ; cmp rax, rdx ; jne 0x7f377 ; ret
0x0000000000052138 : add eax, ecx ; jmp rax
0x000000000006a136 : add eax, ecx ; mov ecx, 1 ; jmp rax
0x000000000004b2bd : add eax, ecx ; ret
0x00000000001546ad : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000150576 : add eax, ecx ; vzeroupper ; ret
0x0000000000150c0e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x0000000000091836 : add eax, edi ; add rax, rcx ; ret
0x0000000000150573 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000009205a : add eax, edi ; add rax, rsi ; ret
0x00000000000e0ef0 : add eax, edi ; call r14
0x000000000011082b : add eax, edi ; cmovs eax, edx ; ret
0x00000000000530a2 : add eax, edi ; jmp rax
0x000000000008e2a6 : add eax, edi ; mov qword ptr [rdi], rdx ; ret
0x000000000008e294 : add eax, edi ; ret
0x000000000014fb30 : add eax, edi ; sub rax, r8 ; ret
0x0000000000154765 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000014f8da : add eax, edi ; sub rax, rsi ; ret
0x00000000001506ea : add eax, edi ; vzeroupper ; ret
0x00000000000e6d3d : add eax, edx ; cmp rdi, rsi ; ja 0xe6d38 ; ret
0x00000000000d69f5 : add eax, edx ; jmp r8
0x00000000000224b2 : add eax, edx ; jmp rax
0x0000000000064806 : add eax, edx ; mov edx, 1 ; jmp rax
0x000000000011a91e : add eax, edx ; ret
0x00000000000975f6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000b339b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x0000000000064861 : add eax, edx ; xor edx, edx ; jmp rax
0x00000000000ee245 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000052c2f : add eax, esi ; jmp rax
0x0000000000069ae4 : add eax, esi ; mov edx, 1 ; jmp rax
0x000000000009205d : add eax, esi ; ret
0x000000000004b408 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000377fb : add ebp, 8 ; mov qword ptr [r15], rax ; jmp 0x377cd
0x00000000000bd5d8 : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012a261 : add ebp, dword ptr [rcx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000012a327 : add ebp, dword ptr [rcx] ; add byte ptr [rcx], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a2a0 : add ebp, dword ptr [rcx] ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x00000000000b3d77 : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000deca0 : add ebp, eax ; ret 0xf429
0x0000000000174f17 : add ebp, ebp ; retf
0x000000000003ba0d : add ebp, ebx ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000100b92 : add ebp, ecx ; retf 0xfff8
0x00000000000032d6 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000012c8f2 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007c2b1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000de216 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000f860d : add ebx, eax ; nop ; ret
0x000000000010262c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000462a1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000150dcb : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000110108 : add ebx, eax ; nop word ptr [rax + rax] ; ret
0x00000000000f5b77 : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000040dbd : add ebx, ebp ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001868c1 : add ebx, edi ; jmp rax
0x0000000000139ee3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f8d7f : add ebx, esi ; ret
0x00000000000a17d7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xa17cc ; ret
0x000000000009930a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000080b61 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000008af9d : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000089fef : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000088352 : add ecx, dword ptr [rax + 0x29] ; ret 0xb60f
0x0000000000089afe : add ecx, dword ptr [rax + 0x29] ; retf 0xb60f
0x000000000016239f : add ecx, dword ptr [rax + 0x39] ; retf 0x1f77
0x00000000001056f9 : add ecx, dword ptr [rax + 9] ; ret 0x850f
0x000000000015fef5 : add ecx, dword ptr [rax + 9] ; retf
0x0000000000163a52 : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x000000000003b218 : add ecx, dword ptr [rax - 0x73] ; lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ef484 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009930e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000029d5e : add ecx, dword ptr [rax - 0x77] ; retf
0x0000000000025e14 : add ecx, dword ptr [rax - 0x77] ; retf 0x2948
0x0000000000027d11 : add ecx, dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000138d04 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000000493db : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000081d6f : add ecx, dword ptr [rax - 0x7d] ; ret 0x4e10
0x0000000000160cf1 : add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000161337 : add ecx, dword ptr [rbp - 0x77] ; retf 0x2148
0x0000000000139c52 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000df2c5 : add ecx, dword ptr [rbx + 0x39080374] ; retf 0x850f
0x000000000011f37d : add ecx, dword ptr [rbx + 0xf042454] ; retf 0x5089
0x000000000009c744 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000009930b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000bd2c8 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000034118 : add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000009cf70 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000ae7b0 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000ae7f5 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000000bd809 : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012cb3d : add ecx, dword ptr [rsp] ; call rax
0x00000000000b4b5c : add ecx, eax ; jmp 0xb4b26
0x000000000004b6e9 : add ecx, eax ; mov eax, r9d ; ret
0x00000000000b4b3c : add ecx, eax ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000c2cdf : add ecx, ebp ; ret
0x0000000000026b8a : add ecx, ebp ; ret 0xfffb
0x000000000002b8de : add ecx, ebp ; retf
0x0000000000057145 : add ecx, ebp ; retf 0xffeb
0x0000000000131eeb : add ecx, ebx ; jmp r9
0x00000000001594c2 : add ecx, ebx ; jmp rcx
0x00000000000f18f4 : add ecx, ebx ; ret
0x00000000000f15f8 : add ecx, ebx ; ret 0x3941
0x000000000008e282 : add ecx, ecx ; jmp rcx
0x000000000010281a : add ecx, ecx ; ret
0x00000000000e0eed : add ecx, edi ; add r8, r15 ; call r14
0x00000000000a1894 : add ecx, esi ; jmp rcx
0x000000000011e77d : add edi, 0x10 ; jmp rcx
0x000000000011a13a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000120c84 : add edi, 0x58 ; jmp rcx
0x00000000001203d4 : add edi, 0x68 ; jmp rcx
0x000000000011dc17 : add edi, 0xc8 ; jmp rcx
0x0000000000100440 : add edi, dword ptr [rcx] ; ret 0x830f
0x00000000000dda0c : add edi, dword ptr [rcx] ; retf 0x840f
0x000000000003705f : add edi, dword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x0000000000110425 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000021e7f : add edi, ebp ; call rax
0x00000000000f629d : add edi, ebp ; xor eax, eax ; ret
0x00000000001868c5 : add edi, ebx ; jmp rax
0x000000000018c2e1 : add edi, ecx ; call rax
0x000000000017a624 : add edi, ecx ; hlt ; call rax
0x000000000017a620 : add edi, ecx ; hlt ; inc dword ptr [rbx] ; stc ; hlt ; call rax
0x0000000000131ee8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000003393c : add edi, edx ; jmp rdi
0x0000000000036462 : add edi, esi ; ret 0
0x0000000000155086 : add edx, 0x20 ; sub edx, ecx ; jmp 0x15502d
0x00000000001557a6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x15574d
0x0000000000155e26 : add edx, 0x20 ; sub edx, ecx ; jmp 0x155dcd
0x0000000000156276 : add edx, 0x20 ; sub edx, ecx ; jmp 0x15620d
0x0000000000156b16 : add edx, 0x20 ; sub edx, ecx ; jmp 0x156abd
0x0000000000156f96 : add edx, 0x20 ; sub edx, ecx ; jmp 0x156f22
0x000000000010fe09 : add edx, 0xc ; cmp rdx, r8 ; jne 0x10fdfa ; ret
0x0000000000111c4f : add edx, 1 ; syscall
0x0000000000091f68 : add edx, eax ; jl 0x91fd7 ; add rax, rdi ; ret
0x0000000000091f78 : add edx, eax ; jl 0x91fd9 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000091f98 : add edx, eax ; jl 0x91fd9 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000091fb8 : add edx, eax ; jl 0x91fd9 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000008e356 : add edx, eax ; jmp rdx
0x0000000000046df2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000d6399 : add edx, ebx ; jmp rdx
0x00000000000346ef : add edx, ecx ; jmp 0x34702
0x000000000004472c : add edx, ecx ; jmp 0x4473a
0x0000000000044a3c : add edx, ecx ; jmp 0x44a4a
0x00000000000d7383 : add edx, ecx ; jmp 0xd7395
0x00000000000d7532 : add edx, ecx ; jmp 0xd74c8
0x00000000000b3c15 : add edx, ecx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000033670 : add edx, edi ; jmp rdx
0x0000000000045cdc : add edx, esi ; cmp r9d, 0x2f ; jmp rdx
0x0000000000052a01 : add edx, esi ; jmp rdx
0x0000000000160bf1 : add edx, esp ; jmp rdx
0x000000000011f7a5 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010f881 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000a07c9 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000103324 : add esi, dword ptr [rbp - 0x6b] ; mov rax, rdi ; ret
0x000000000003997c : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012a8bc : add esi, dword ptr [rdi + 0x11] ; cmp dx, cx ; sete al ; ret
0x000000000002bc06 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x00000000000ce52f : add esi, dword ptr [rsi + rax - 0xd] ; ret
0x00000000001104f8 : add esi, eax ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000221cc : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x000000000008e006 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004427b : add esi, eax ; jmp qword ptr [rax]
0x000000000002cf75 : add esi, eax ; jmp rsi
0x00000000000318f5 : add esi, eax ; mov eax, dword ptr [r15 + 4] ; jmp 0x318c7
0x00000000001258e3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000d11d4 : add esi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000139e03 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a131a : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000012bf03 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000e6fbc : add esi, ebx ; ret
0x0000000000082ca1 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000036619 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000155084 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x15502f
0x00000000001557a4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x15574f
0x0000000000155e24 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x155dcf
0x0000000000156274 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x15620f
0x0000000000156b14 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156abf
0x0000000000156f94 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156f24
0x000000000018b519 : add esi, edi ; call qword ptr [rbx + rax*8]
0x000000000015b8fc : add esi, edi ; fadd st(3) ; ret
0x000000000018b511 : add esi, edi ; inc dword ptr [rax] ; ret
0x00000000000a199e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000018b521 : add esi, edi ; ljmp [rax] ; ret
0x00000000001102cb : add esi, edi ; mov eax, r8d ; ret
0x0000000000131ee5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000d1866 : add esi, esi ; ret
0x00000000000df314 : add esi, esi ; ret 0xf01
0x00000000000e6e6b : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000011a6a7 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000085d07 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000ece4c : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125e66 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000045a16 : add esp, 0x10 ; mov eax, r8d ; pop rbx ; ret
0x0000000000078c36 : add esp, 0x10 ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000007bfc1 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000002b726 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000361ce : add esp, 0x10 ; pop rbx ; ret
0x0000000000036069 : add esp, 0x10 ; ret
0x000000000002b6f7 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003955e : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000a111d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000051596 : add esp, 0x1000 ; pop rbx ; ret
0x00000000000515a1 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003629c : add esp, 0x108 ; ret
0x00000000000e8b7e : add esp, 0x120 ; pop rbx ; ret
0x000000000012cf92 : add esp, 0x128 ; pop rbx ; pop r14 ; ret
0x000000000003648f : add esp, 0x140 ; pop rbx ; ret
0x0000000000035cce : add esp, 0x148 ; ret
0x0000000000122702 : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000004def8 : add esp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000003912d : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000858c6 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000006fe78 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000051b36 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000001254cc : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000125ddc : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000060b57 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118bd3 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000369da : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002f3f6 : add esp, 0x18 ; ret
0x0000000000045188 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012a87b : add esp, 0x180 ; pop rbx ; ret
0x00000000000e72ee : add esp, 0x190 ; mov eax, edx ; pop rbx ; ret
0x00000000000e8007 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000011f41d : add esp, 0x20 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010c773 : add esp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x00000000000c2057 : add esp, 0x20 ; mov eax, r9d ; pop rbx ; ret
0x000000000007c73d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000035984 : add esp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000007c4ed : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000007c776 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000002395c : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d5 : add esp, 0x20 ; pop rbx ; ret
0x00000000000e7faa : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002208e : add esp, 0x28 ; jmp rax
0x000000000006d0ac : add esp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000000514e1 : add esp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000033e64 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000112334 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000429d5 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000350d3 : add esp, 0x28 ; ret
0x000000000010e1cf : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f896 : add esp, 0x30 ; pop rbx ; ret
0x000000000010e185 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000162be4 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000006f63f : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078817 : add esp, 0x38 ; ret
0x0000000000121f6e : add esp, 0x38 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000118b10 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036502 : add esp, 0x40 ; pop rbx ; ret
0x00000000000f8d08 : add esp, 0x40 ; ret
0x0000000000118a68 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2c78 : add esp, 0x408 ; ret
0x000000000004b17c : add esp, 0x440 ; pop rbx ; ret
0x00000000000e9372 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000011b4b5 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000111c55 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000ee33a : add esp, 0x48 ; ret
0x00000000000a25c4 : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec5cb : add esp, 0x50 ; ret
0x00000000000b45f0 : add esp, 0x58 ; ret
0x00000000000ecd3b : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000dcbd7 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e778c : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e7e7b : add esp, 0x68 ; ret
0x0000000000121e16 : add esp, 0x78 ; ret
0x0000000000036352 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000001233b8 : add esp, 0x88 ; ret
0x00000000000ecf3b : add esp, 0x90 ; pop rbx ; ret
0x000000000007971a : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000515e3 : add esp, 0x98 ; ret
0x000000000002b5f7 : add esp, 0xa8 ; pop rbx ; pop r12 ; ret
0x0000000000121b30 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036c13 : add esp, 0xa8 ; ret
0x00000000000b48dd : add esp, 0xd0 ; pop rbx ; ret
0x0000000000035faf : add esp, 0xd0 ; ret
0x0000000000043847 : add esp, 0xd8 ; ret
0x00000000000f305f : add esp, 0xe8 ; ret
0x00000000000e4904 : add esp, 1 ; call 0x213e5
0x0000000000087ab0 : add esp, 8 ; jmp rax
0x000000000011036d : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004b3a8 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000022618 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x00000000000729df : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006da92 : add esp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000006e8c9 : add esp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000087b62 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000032b31 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000072daf : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000011ea23 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x00000000000f5db6 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000011b2e7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000430b6 : add esp, 8 ; movzx eax, al ; ret
0x000000000011432a : add esp, 8 ; movzx eax, ax ; ret
0x000000000011a919 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000124b8c : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000245d9 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022da1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000024a91 : add esp, 8 ; ret
0x000000000012ef21 : add esp, 8 ; sar eax, 0x1f ; ret
0x0000000000125ed4 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000024214 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000017660b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000015efe3 : add esp, dword ptr [rsi + 0x41] ; and eax, 0x21487fff ; ret 0x8949
0x00000000000c9208 : add qword ptr [r12 + r10 - 0x7c], r14 ; sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x00000000000ba9e2 : add qword ptr [r8 - 0x7d], rcx ; ret
0x0000000000189f9d : add qword ptr [r8], r8 ; ret 0xfff3
0x00000000001a1fa9 : add qword ptr [r8], rax ; add al, 0xef ; hlt ; jmp qword ptr [rdx]
0x0000000000189efd : add qword ptr [r8], rax ; in al, dx ; pushfq ; call qword ptr [rax]
0x00000000001a1f51 : add qword ptr [r8], rax ; insb byte ptr [rdi], dx ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x0000000000189f3d : add qword ptr [r8], rax ; jl 0x189ef0 ; call qword ptr [rax]
0x00000000001a1eed : add qword ptr [r8], rax ; loopne 0x1a1ee5 ; hlt ; jmp qword ptr [rcx]
0x00000000001a1f3d : add qword ptr [r8], rax ; push rax ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000001a1f15 : add qword ptr [r8], rax ; sbb dh, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a1f29 : add qword ptr [r8], rax ; xor al, 0xee ; hlt ; jmp qword ptr [rcx]
0x00000000000e9f86 : add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000000e1e68 : add qword ptr [rax - 0x77], rcx ; or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x00000000000249e4 : add qword ptr [rax - 0x7d], r9 ; ret 0x8b01
0x00000000001a2445 : add qword ptr [rax], r8 ; call 0x131a1955
0x00000000001a2431 : add qword ptr [rax], r8 ; fadd qword ptr [rdx] ; cmc ; call qword ptr [rdx]
0x00000000001a2205 : add qword ptr [rax], r8 ; js 0x1a2207 ; hlt ; jmp rcx
0x00000000001a1e89 : add qword ptr [rax], rax ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a1e75 : add qword ptr [rax], rax ; sub ch, ch ; hlt ; jmp qword ptr [rcx]
0x000000000008b299 : add qword ptr [rbp + 0x38], r8 ; retf 0x3775
0x00000000001031e3 : add qword ptr [rcx], r8 ; jne 0x1031d8 ; mov rax, rdi ; ret
0x000000000014457d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000139ee2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e4903 : add r12, 1 ; call 0x213e6
0x00000000000c81a1 : add r13b, r11b ; retf
0x00000000000318f4 : add r14, rax ; mov eax, dword ptr [r15 + 4] ; jmp 0x318c8
0x0000000000139e72 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139e02 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000003705e : add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x000000000014f470 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b904 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d69f4 : add r8, r10 ; jmp r8
0x00000000000e0eef : add r8, r15 ; call r14
0x000000000018cc9d : add r8b, byte ptr [r8] ; cmp al, 0xe9 ; stc ; call qword ptr [rax]
0x000000000018cc8d : add r8b, byte ptr [r8] ; or al, 0xe9 ; stc ; jmp rsp
0x000000000018cce5 : add r8b, byte ptr [r8] ; sub al, 0xf1 ; stc ; jmp rax
0x00000000001550f7 : add r8b, byte ptr [r8] ; vzeroupper ; ret
0x000000000018cc45 : add r8b, byte ptr [rax] ; insb byte ptr [rdi], dx ; out 0xf9, al ; call rsp
0x00000000000e6784 : add r8d, dword ptr [r8] ; add dh, dh ; ret 0xf80
0x0000000000102eab : add r8d, dword ptr [r8] ; and ecx, 8 ; cmovne rax, rdx ; ret
0x000000000012cb3c : add r9, qword ptr [rsp] ; call rax
0x0000000000131eea : add r9, r11 ; jmp r9
0x00000000000e0eec : add r9, r15 ; add r8, r15 ; call r14
0x00000000001763c9 : add r9b, bl ; retf 0xea91
0x000000000008e39e : add r9b, byte ptr [r8 - 0x77] ; clc ; ret
0x000000000010f85c : add r9b, byte ptr [rax + 0x39] ; ret 0x2d72
0x0000000000160cf0 : add r9d, dword ptr [r13 - 0x77] ; retf
0x000000000004b6e8 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000100648 : add rax, -0x7cb70000 ; ret
0x0000000000153af2 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000144603 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000001030ce : add rax, 0x450f4800 ; ret 0x66c3
0x00000000000450f0 : add rax, 1 ; pop rbx ; ret
0x00000000000b3640 : add rax, 1 ; ret
0x00000000000b3637 : add rax, 2 ; ret
0x00000000000b3650 : add rax, 3 ; ret
0x00000000000220e8 : add rax, qword ptr [0] ; ret
0x000000000012c733 : add rax, qword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x000000000012c850 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000000220e7 : add rax, qword ptr fs:[0] ; ret
0x00000000000e67eb : add rax, r13 ; jmp rax
0x0000000000150c10 : add rax, r8 ; vzeroupper ; ret
0x000000000004b2bc : add rax, r9 ; ret
0x0000000000103166 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000154317 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000007f365 : add rax, rcx ; cmp rax, rdx ; jne 0x7f378 ; ret
0x0000000000052137 : add rax, rcx ; jmp rax
0x000000000006a135 : add rax, rcx ; mov ecx, 1 ; jmp rax
0x0000000000091838 : add rax, rcx ; ret
0x00000000001546ac : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000150575 : add rax, rcx ; vzeroupper ; ret
0x0000000000150c0d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x0000000000091835 : add rax, rdi ; add rax, rcx ; ret
0x0000000000150572 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x0000000000092059 : add rax, rdi ; add rax, rsi ; ret
0x00000000000530a1 : add rax, rdi ; jmp rax
0x000000000008e2a5 : add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000008e293 : add rax, rdi ; ret
0x000000000014fb2f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000154764 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000014f8d9 : add rax, rdi ; sub rax, rsi ; ret
0x00000000001506e9 : add rax, rdi ; vzeroupper ; ret
0x00000000000224b1 : add rax, rdx ; jmp rax
0x0000000000064805 : add rax, rdx ; mov edx, 1 ; jmp rax
0x00000000000975f5 : add rax, rdx ; sub rax, rdi ; ret
0x0000000000064860 : add rax, rdx ; xor edx, edx ; jmp rax
0x0000000000052c2e : add rax, rsi ; jmp rax
0x0000000000069ae3 : add rax, rsi ; mov edx, 1 ; jmp rax
0x000000000009205c : add rax, rsi ; ret
0x00000000000377fa : add rbp, 8 ; mov qword ptr [r15], rax ; jmp 0x377ce
0x0000000000034117 : add rcx, qword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x00000000001594c1 : add rcx, r11 ; jmp rcx
0x000000000008e281 : add rcx, r9 ; jmp rcx
0x00000000000b4b5b : add rcx, rax ; jmp 0xb4b27
0x00000000000b4b3b : add rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000a1893 : add rcx, rsi ; jmp rcx
0x000000000011e77c : add rdi, 0x10 ; jmp rcx
0x000000000011a139 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000120c83 : add rdi, 0x58 ; jmp rcx
0x00000000001203d3 : add rdi, 0x68 ; jmp rcx
0x000000000011dc16 : add rdi, 0xc8 ; jmp rcx
0x000000000003393b : add rdi, r10 ; jmp rdi
0x0000000000021e7e : add rdi, r13 ; call rax
0x0000000000110424 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000131ee7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000160bf0 : add rdx, r12 ; jmp rdx
0x000000000008e426 : add rdx, r8 ; jmp rdx
0x0000000000046df1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000091f67 : add rdx, rax ; jl 0x91fd8 ; add rax, rdi ; ret
0x0000000000091f66 : add rdx, rax ; jl 0x91fd9 ; add rax, rdi ; ret
0x000000000008e355 : add rdx, rax ; jmp rdx
0x00000000000d6398 : add rdx, rbx ; jmp rdx
0x00000000000346ee : add rdx, rcx ; jmp 0x34703
0x000000000004472b : add rdx, rcx ; jmp 0x4473b
0x0000000000044a3b : add rdx, rcx ; jmp 0x44a4b
0x00000000000d7382 : add rdx, rcx ; jmp 0xd7396
0x00000000000d7531 : add rdx, rcx ; jmp 0xd74c9
0x000000000003366f : add rdx, rdi ; jmp rdx
0x0000000000045cdb : add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x0000000000052a00 : add rdx, rsi ; jmp rdx
0x000000000011f7a4 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010f880 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000103323 : add rsi, qword ptr [rbp - 0x6b] ; mov rax, rdi ; ret
0x000000000002cf74 : add rsi, r8 ; jmp rsi
0x00000000001258e2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000155083 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x155030
0x00000000001557a3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x155750
0x0000000000155e23 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x155dd0
0x0000000000156273 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156210
0x0000000000156b13 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156ac0
0x0000000000156f93 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156f25
0x0000000000085d06 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000125e65 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000045a15 : add rsp, 0x10 ; mov eax, r8d ; pop rbx ; ret
0x000000000007bfc0 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000002b725 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000361cd : add rsp, 0x10 ; pop rbx ; ret
0x0000000000036068 : add rsp, 0x10 ; ret
0x000000000003955d : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000051595 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003629b : add rsp, 0x108 ; ret
0x00000000000e8b7d : add rsp, 0x120 ; pop rbx ; ret
0x000000000003648e : add rsp, 0x140 ; pop rbx ; ret
0x0000000000035ccd : add rsp, 0x148 ; ret
0x0000000000122701 : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000004def7 : add rsp, 0x18 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000003912c : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000858c5 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000006fe77 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000051b35 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000001254cb : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000125ddb : add rsp, 0x18 ; movzx eax, al ; ret
0x00000000000369d9 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002f3f5 : add rsp, 0x18 ; ret
0x0000000000045187 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012a87a : add rsp, 0x180 ; pop rbx ; ret
0x000000000010c772 : add rsp, 0x20 ; mov eax, r8d ; pop rbx ; ret
0x00000000000c2056 : add rsp, 0x20 ; mov eax, r9d ; pop rbx ; ret
0x000000000007c73c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000035983 : add rsp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000007c4ec : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007c775 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000002395b : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d4 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000e7fa9 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000002208d : add rsp, 0x28 ; jmp rax
0x000000000006d0ab : add rsp, 0x28 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x00000000000514e0 : add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000429d4 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000350d2 : add rsp, 0x28 ; ret
0x000000000010e1ce : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f895 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000162be3 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000078816 : add rsp, 0x38 ; ret
0x0000000000121f6d : add rsp, 0x38 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000118b0f : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036501 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000f8d07 : add rsp, 0x40 ; ret
0x00000000000f2c77 : add rsp, 0x408 ; ret
0x000000000004b17b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000e9371 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000111c54 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000ee339 : add rsp, 0x48 ; ret
0x00000000000a25c3 : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec5ca : add rsp, 0x50 ; ret
0x00000000000b45ef : add rsp, 0x58 ; ret
0x00000000000ecd3a : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000dcbd6 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e778b : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e7e7a : add rsp, 0x68 ; ret
0x0000000000121e15 : add rsp, 0x78 ; ret
0x0000000000036351 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000001233b7 : add rsp, 0x88 ; ret
0x00000000000ecf3a : add rsp, 0x90 ; pop rbx ; ret
0x0000000000079719 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000515e2 : add rsp, 0x98 ; ret
0x0000000000121b2f : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036c12 : add rsp, 0xa8 ; ret
0x00000000000b48dc : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035fae : add rsp, 0xd0 ; ret
0x0000000000043846 : add rsp, 0xd8 ; ret
0x00000000000f305e : add rsp, 0xe8 ; ret
0x0000000000087aaf : add rsp, 8 ; jmp rax
0x000000000011036c : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004b3a7 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000022617 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x00000000000729de : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006da91 : add rsp, 8 ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x000000000006e8c8 : add rsp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x0000000000087b61 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000032b30 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000072dae : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000f5db5 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000011b2e6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000430b5 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000114329 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000011a918 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000124b8b : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000022da0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000024a90 : add rsp, 8 ; ret
0x000000000012ef20 : add rsp, 8 ; sar eax, 0x1f ; ret
0x0000000000125ed3 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000024213 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000006782e : add sil, al ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x00000000000f85f3 : add word ptr [rax], 1 ; ret
0x00000000000f8361 : add word ptr [rdx + rax*2], 1 ; ret
0x000000000003508b : addps xmm0, xmm0 ; ret
0x000000000003508a : addsd xmm0, xmm0 ; ret
0x00000000000353a8 : addss xmm0, xmm0 ; ret
0x0000000000085d9a : and ah, byte ptr [rcx] ; xor eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000186d54 : and ah, byte ptr [rdi] ; sti ; jmp qword ptr [rdx + 0x22fffb26]
0x0000000000186d5c : and ah, byte ptr [rsi] ; sti ; jmp qword ptr [rdx + 0x12fffb25]
0x0000000000099ac1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000015ff03 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret
0x00000000000a2246 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e0a1f : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000004fcae : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000eda80 : and al, 0 ; add byte ptr [rax], al ; jmp 0xeda56
0x0000000000074c0b : and al, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000019250 : and al, 0 ; add byte ptr [rax], al ; ret 0x5f
0x00000000000b6ee1 : and al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000948b5 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000044d9c : and al, 0 ; add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000008a002 : and al, 0 ; je 0x8a018 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b014 : and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e546a : and al, 0x10 ; call 0xe1eb4
0x0000000000118700 : and al, 0x10 ; call qword ptr [rax]
0x0000000000034a27 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000001157c4 : and al, 0x10 ; mov eax, 0x81 ; syscall
0x00000000000fde06 : and al, 0x10 ; mov edi, 0x2000004 ; call rcx
0x000000000008e373 : and al, 0x10 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000081b50 : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rdx
0x0000000000081afd : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rsi
0x000000000007c500 : and al, 0x10 ; mov qword ptr [rsp + 8], rdi ; call 0x787c9
0x00000000000f201b : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000b426b : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000075726 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000037450 : and al, 0x10 ; mov rdi, rbp ; call r12
0x00000000000fdcf5 : and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x00000000000e548e : and al, 0x10 ; xor esi, esi ; call 0xe1eb6
0x000000000006fa30 : and al, 0x14 ; mov edi, dword ptr [rsp + rax*4 + 0x28] ; call 0xec518
0x000000000006fa2f : and al, 0x14 ; mov edi, dword ptr [rsp + rax*4 + 0x28] ; call 0xec519
0x000000000008e325 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000001013a1 : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000008e2a3 : and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x00000000000840c3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000012c6be : and al, 0x18 ; add rsp, 0x28 ; ret
0x0000000000118baa : and al, 0x18 ; call qword ptr [rax]
0x0000000000021dc9 : and al, 0x18 ; call rax
0x000000000011900f : and al, 0x18 ; lea r9, [rsp + 0x30] ; call qword ptr [rax]
0x0000000000101fe6 : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000022be8 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000012cfd4 : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x20] ; call rcx
0x00000000000a2e3f : and al, 0x18 ; mov rdi, r12 ; mov r9, r14 ; call rbx
0x0000000000118322 : and al, 0x18 ; mov rdi, rbp ; call r14
0x00000000000a30a7 : and al, 0x18 ; mov rdx, r14 ; mov rdi, r12 ; call rbx
0x00000000001186fb : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000083af3 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001189eb : and al, 0x1c ; call qword ptr [rax]
0x000000000002a4f8 : and al, 0x20 ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000e4a0a : and al, 0x20 ; call 0x21454
0x00000000000e4a09 : and al, 0x20 ; call 0x21455
0x0000000000024d34 : and al, 0x20 ; call rax
0x00000000000a2b10 : and al, 0x20 ; call rbx
0x000000000011e0f3 : and al, 0x20 ; call rcx
0x00000000000a279a : and al, 0x20 ; lea rcx, [rax + 4] ; call rbx
0x00000000000c1365 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001948fc : and al, 0x21 ; out dx, al ; call rsp
0x0000000000175144 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000012c62e : and al, 0x28 ; add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x00000000000d6794 : and al, 0x28 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x000000000002b123 : and al, 0x28 ; call r14
0x0000000000025835 : and al, 0x28 ; call rax
0x000000000011df1d : and al, 0x28 ; call rcx
0x00000000000a2668 : and al, 0x28 ; lea rcx, [rax + 1] ; call rbx
0x00000000000a2fd7 : and al, 0x28 ; mov rdi, r12 ; call rbx
0x0000000000084993 : and al, 0x28 ; mov rdi, rbx ; call rdx
0x0000000000125d89 : and al, 0x28 ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000106b06 : and al, 0x2b ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000189a3c : and al, 0x2c ; add dword ptr [rax], eax ; mov ebp, cs ; int1 ; call rsp
0x00000000000d5875 : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d48ce : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000119014 : and al, 0x30 ; call qword ptr [rax]
0x00000000000a2946 : and al, 0x30 ; call r12
0x0000000000125d69 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000002b11e : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000008368a : and al, 0x33 ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000010b66a : and al, 0x34 ; mov r12, qword ptr [rsp + 0x38] ; call 0xe8179
0x00000000000d3cec : and al, 0x38 ; add rax, rcx ; jmp rax
0x000000000010b66f : and al, 0x38 ; call 0xe8174
0x000000000010b66e : and al, 0x38 ; call 0xe8175
0x00000000000276a2 : and al, 0x38 ; call r15
0x00000000000db912 : and al, 0x38 ; mov eax, 0xca ; syscall
0x00000000000ee335 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000027280 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000b3dfd : and al, 0x38 ; pop rbx ; pop rbp ; pop r12 ; sub rax, rdx ; ret
0x00000000001227fd : and al, 0x3a ; call qword ptr [rax]
0x0000000000026557 : and al, 0x40 ; call r14
0x00000000000282dd : and al, 0x40 ; call r15
0x0000000000029e16 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026338 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002769d : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000007bfe8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000002b724 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c4dc2 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e6d08 : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000003558c : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d3 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000000000003575b : and al, 0x48 ; add esp, 0x28 ; ret
0x000000000016304f : and al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x0000000000162cfa : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000000f8ca5 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000f8d06 : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000011447b : and al, 0x48 ; add esp, 8 ; ret
0x0000000000024f85 : and al, 0x48 ; call r14
0x0000000000029339 : and al, 0x48 ; call r15
0x00000000000259c6 : and al, 0x48 ; call rbx
0x000000000011496e : and al, 0x48 ; mov dword ptr [rbp + 0x18], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c4cd : and al, 0x48 ; mov eax, dword ptr [rax + 0x1d8] ; jmp rax
0x00000000000a2214 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000120fab : and al, 0x48 ; mov edi, ebp ; call rbx
0x0000000000024d2f : and al, 0x48 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000025830 : and al, 0x48 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000026552 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x00000000000282d8 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000001a1eec : and al, 0x49 ; add dword ptr [rax], eax ; loopne 0x1a1ee6 ; hlt ; jmp qword ptr [rcx]
0x000000000010c563 : and al, 0x4c ; mov edi, ebp ; call r12
0x000000000007463c : and al, 0x4c ; mov edi, edi ; call rax
0x000000000010b802 : and al, 0x50 ; add dword ptr [rax], eax ; add al, ch ; ret 0xfffd
0x000000000004fc96 : and al, 0x50 ; call 0x7bf84
0x000000000004fc95 : and al, 0x50 ; call 0x7bf85
0x0000000000026821 : and al, 0x50 ; call r14
0x000000000002a5a3 : and al, 0x50 ; call r15
0x0000000000024f80 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000029334 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000259c1 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002557c : and al, 0x58 ; call r14
0x0000000000025244 : and al, 0x58 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002681c : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x50] ; call r14
0x000000000002a59e : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x50] ; call r15
0x00000000000b3e3a : and al, 0x58 ; mov rdi, rbp ; call rbx
0x00000000000b3eb1 : and al, 0x58 ; mov rsi, r15 ; mov rdi, rbp ; call rbx
0x00000000001a2fec : and al, 0x5a ; add dword ptr [rax], eax ; nop ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x00000000000859e4 : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000ced9f : and al, 0x5d ; pop r12 ; ret
0x00000000000d4b24 : and al, 0x60 ; call 0x215c4
0x0000000000101f61 : and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000004fc91 : and al, 0x60 ; mov qword ptr [rsp + 0x50], r8 ; call 0x7bf89
0x0000000000025577 : and al, 0x60 ; mov rdi, qword ptr [rsp + 0x58] ; call r14
0x00000000000c10eb : and al, 0x60 ; mov rdi, qword ptr [rsp + 8] ; call r12
0x00000000000445ce : and al, 0x68 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x7c8b
0x00000000000a2cfc : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000fb3eb : and al, 0x74 ; adc bl, byte ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000859cf : and al, 0x74 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000004365d : and al, 0x75 ; fcomi st(3) ; ret
0x00000000000d94d3 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000113520 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000044158 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8940
0x000000000003cc33 : and al, 0x80 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000f7bdb : and al, 0x83 ; ret 0x4901
0x000000000007c6bb : and al, 0x83 ; retf 0x4c01
0x00000000000d9d48 : and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c42c2 : and al, 0x85 ; ror byte ptr [rdi], 0x85 ; retf 2
0x000000000002b213 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000abb3b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000a5f1a : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x00000000000da109 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000a89be : and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000007f243 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000006fa73 : and al, 0x8b ; jl 0x6fa02 ; sub al, ch ; xchg eax, ebx ; retf 7
0x000000000003c5ce : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ac23a : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000e53c7 : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff3
0x00000000000e8e63 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000002b23b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000443c0 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf66
0x00000000000ac32f : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001230b5 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000000975 : and al, 0xa0 ; add byte ptr [rax], al ; ret
0x0000000000160bee : and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x00000000000ee451 : and al, 0xb0 ; ret
0x00000000000bf9f9 : and al, 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x00000000000ee423 : and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001a0ecc : and al, 0xbe ; hlt ; call qword ptr [rcx]
0x000000000012cb3a : and al, 0xc ; add r9, qword ptr [rsp] ; call rax
0x00000000000361cb : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cf4b4 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000392a3 : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000012c65f : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000e77fe : and al, 0xc ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000125433 : and al, 0xc ; call 0x2166c
0x0000000000051adf : and al, 0xc ; mov esi, 4 ; call 0x6e509
0x000000000008e304 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000e5b85 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000449e9 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000e1e6f : and al, 0xc2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000002241 : and al, 0xc7 ; jno 0x2292 ; ret 0x1dd4
0x00000000000f78df : and al, 0xc8 ; jmp 0xf78b1
0x00000000000f78de : and al, 0xc8 ; jmp 0xf78b2
0x00000000000ec97b : and al, 0xc8 ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000000daa14 : and al, 0xd0 ; add byte ptr [rax], al ; add al, ch ; ret 0xff6c
0x00000000000f78da : and al, 0xd0 ; mov qword ptr [rsp - 0x38], rax ; jmp 0xf78b6
0x00000000000f78d9 : and al, 0xd0 ; mov qword ptr [rsp - 0x38], rax ; jmp 0xf78b7
0x00000000000f5b00 : and al, 0xd0 ; syscall
0x0000000000002e46 : and al, 0xd7 ; cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x0000000000044977 : and al, 0xd8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001631c8 : and al, 0xd8 ; ret
0x000000000004e854 : and al, 0xd9 ; in eax, 0xdf ; loopne 0x4e7e9 ; ret
0x000000000008e3f2 : and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x000000000008e4d7 : and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000d5157 : and al, 0xe0 ; add byte ptr [rax], al ; add cl, ch ; retf 0xfff6
0x00000000000f5afb : and al, 0xe4 ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x0000000000044a03 : and al, 0xe8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000004ee7b : and al, 0xe8 ; call rax
0x0000000000034b3c : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000104f02 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x000000000004acbc : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x0000000000034a8a : and al, 0xe8 ; ret
0x0000000000044f88 : and al, 0xe8 ; ret 0xfdc4
0x000000000007b8c3 : and al, 0xe9 ; ret 0xfffd
0x00000000000ec921 : and al, 0xeb ; mov eax, 0x10 ; syscall
0x000000000012ac36 : and al, 0xeb ; retf 0x1f0f
0x0000000000047b8c : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000008e3d1 : and al, 0xec ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000008e4b6 : and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b9266 : and al, 0xf ; ret 0x4c80
0x0000000000036a2f : and al, 0xf ; xchg eax, ebp ; ret 0xd521
0x00000000000ca3ec : and al, 0xf ; xchg eax, esp ; ret 0xd009
0x000000000010adc4 : and al, 0xf0 ; add byte ptr [rax], al ; add al, ch ; ret 0xf166
0x0000000000034af6 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000034a84 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000162afd : and al, 0xf0 ; movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x00000000000b3c86 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000b3c8c : and al, 0xf0 ; ret
0x00000000000ec553 : and al, 0xf3 ; ret
0x0000000000193fac : and al, 0xf4 ; in eax, dx ; jmp rsp
0x000000000008e3b9 : and al, 0xf4 ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000008e2ec : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b9f22 : and al, 0xf6 ; ret
0x000000000018b691 : and al, 0xf7 ; jmp rax
0x0000000000051141 : and al, 0xf8 ; add byte ptr [rax], al ; add al, ch ; cmc ; retf
0x0000000000034dad : and al, 0xf8 ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000034ea0 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000034db3 : and al, 0xf8 ; ret
0x000000000008e39b : and al, 0xfa ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000008e2ce : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000186e29 : and al, 0xfb ; call rsp
0x0000000000186ce9 : and al, 0xfb ; jmp qword ptr [rax]
0x00000000000ec597 : and al, 0xfc ; jne 0xec55a ; neg eax ; ret
0x00000000000ec596 : and al, 0xfc ; jne 0xec55b ; neg eax ; ret
0x00000000001121c0 : and al, 0xfc ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000351a1 : and al, 0xfc ; movd xmm0, dword ptr [rsp - 4] ; ret
0x000000000003526c : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000351a7 : and al, 0xfc ; ret
0x0000000000035a37 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000035a3b : and al, 0xfe ; ret
0x000000000019fa75 : and al, 1 ; add byte ptr [rax + 0x72], bl ; hlt ; call qword ptr [rdx]
0x000000000018989d : and al, 1 ; add byte ptr [rax + rbp*4 - 0xf], ch ; jmp qword ptr [rax]
0x00000000000e8251 : and al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000cfe68 : and al, 4 ; add dword ptr [rbx + rcx - 0xa], esi ; ret
0x0000000000111dfe : and al, 4 ; mov eax, edx ; add rsp, 0x18 ; ret
0x000000000009d0b8 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000ee59d : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002f40f : and al, 8 ; add rsp, 0x18 ; ret
0x000000000007c51d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007c505 : and al, 8 ; call 0x787c4
0x000000000012f401 : and al, 8 ; call 0xdbe24
0x000000000012f400 : and al, 8 ; call 0xdbe25
0x0000000000081967 : and al, 8 ; call qword ptr [rax]
0x000000000003715e : and al, 8 ; call r12
0x000000000003766b : and al, 8 ; call rax
0x0000000000081b55 : and al, 8 ; call rdx
0x0000000000081b02 : and al, 8 ; call rsi
0x0000000000034bf2 : and al, 8 ; fadd st(0) ; ret
0x0000000000034b7a : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034ac6 : and al, 8 ; fsubrp st(1) ; ret
0x00000000001053c7 : and al, 8 ; jne 0x105369 ; mov rdi, r13 ; call 0x21681
0x0000000000116343 : and al, 8 ; jne 0x116338 ; add rsp, 0x18 ; ret
0x00000000000f5b68 : and al, 8 ; mov eax, 0x38 ; syscall
0x00000000000e7eae : and al, 8 ; mov eax, 0x48 ; syscall
0x00000000000c09ec : and al, 8 ; mov eax, 0xca ; syscall
0x00000000000375f0 : and al, 8 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000001195fc : and al, 8 ; mov rcx, qword ptr [rsp] ; call rcx
0x000000000006e135 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000008170c : and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000010c954 : and al, 8 ; mov rdi, rbp ; call r12
0x0000000000110a97 : and al, 8 ; mov rdi, rbp ; call rax
0x0000000000124e11 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000079ba1 : and al, 8 ; mov rdi, rbx ; call rax
0x0000000000037061 : and al, 8 ; mov rsi, r15 ; call r14
0x0000000000034a2b : and al, 8 ; ret
0x00000000000f0955 : and al, 8 ; syscall
0x0000000000125d6e : and al, 8 ; xor eax, eax ; call rdx
0x0000000000081988 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000018ba8c : and al, ah ; add dword ptr [rax], eax ; cld ; retf
0x000000000018f8b1 : and al, byte ptr [rax] ; add byte ptr [rax - 0x16], bl ; call qword ptr [rax]
0x000000000005717b : and al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000035a16 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000350ce : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000034ca4 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c4ddd : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000094a5e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f5d71 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000019f8b9 : and al, byte ptr [rcx] ; add byte ptr [rbx + rbp*2], al ; hlt ; call qword ptr [rbx]
0x000000000018987d : and al, byte ptr [rcx] ; add byte ptr [rsp], bh ; int1 ; call qword ptr [rax]
0x000000000009c28a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000ca44b : and al, ch ; call rsi
0x00000000000b98c7 : and al, ch ; ret
0x00000000000b4140 : and al, ch ; retf 0xfffc
0x00000000001a5790 : and al, dh ; cmc ; call rcx
0x000000000019b7d0 : and al, dh ; int1 ; call qword ptr [rax]
0x000000000002ebe2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ec02 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002eb42 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002ebc2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002eae2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002eb82 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002eb22 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002eb62 : and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000067124 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000000030c4 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000f0e6a : and bh, byte ptr [rdx + 0x2c] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000009d697 : and bl, al ; nop dword ptr [rax] ; ret
0x000000000007fb2b : and bl, bpl ; retf
0x000000000007fb2c : and bl, ch ; retf
0x000000000006c923 : and bl, ch ; retf 0x2e66
0x000000000007e64f : and bl, dh ; ret
0x00000000000748b9 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000000748e6 : and byte ptr [r8 + 1], r9b ; ret
0x0000000000112ccf : and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000a0ae6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007484e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000000f597d : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x0000000000150586 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000000858a5 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000825c1 : and byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000259ec : and byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000000373d8 : and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000015422a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000120d24 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000001506fc : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000060c9c : and byte ptr [rax + 1], cl ; ret
0x0000000000150b76 : and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000091f96 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000974c8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000975ed : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000977ae : and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000000c1366 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000007337a : and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x000000000006e2ee : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f278f : and byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x00000000000d5054 : and byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; retf
0x00000000000fd420 : and byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000086bcb : and byte ptr [rax - 0x77], cl ; jae 0x86be1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec3c9 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000088eae : and byte ptr [rax - 0x77], cl ; ret 0x14c
0x00000000000fd347 : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000444df : and byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000d8891 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010528e : and byte ptr [rax - 0x77], cl ; ret 0xec75
0x00000000000de4eb : and byte ptr [rax - 0x77], cl ; retf 0x1a74
0x000000000003b550 : and byte ptr [rax - 0x77], cl ; retf 0xea75
0x00000000000de505 : and byte ptr [rax - 0x77], cl ; retf 0xed75
0x00000000000c2dbc : and byte ptr [rax - 0x77], cl ; retf 0xee75
0x000000000002d3f4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2d408 ; call rax
0x0000000000024106 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000150937 : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000eec06 : and byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000186444 : and byte ptr [rax - 0x7dff0004], al ; cld ; jmp rax
0x0000000000002e35 : and byte ptr [rax - 0xc0713e4], bh ; ret
0x0000000000079692 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000002e25 : and byte ptr [rax], ah ; or edx, ebp ; clc ; ret
0x00000000001278ef : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000066c79 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000c6383 : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000699fe : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000a197a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c62a8 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e81f1 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000094cae : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016281e : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xd231
0x0000000000162193 : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff31
0x000000000018f5e1 : and byte ptr [rax], al ; add byte ptr [rsi + rdx*2 - 0x16], cl ; call qword ptr [rax]
0x000000000009e7dc : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a0ae7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000015827d : and byte ptr [rbp - 0x1f], dh ; vzeroupper ; ret
0x0000000000187518 : and byte ptr [rbp - 0x75120003], cl ; std ; jmp rax
0x00000000001863bc : and byte ptr [rbp - 4], cl ; call qword ptr [rax]
0x0000000000176ee8 : and byte ptr [rbx + 0x3d], bh ; retf
0x000000000012abe1 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002395e : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000748ba : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000001ada00 : and byte ptr [rbx - 5], dl ; call qword ptr [rdx]
0x0000000000003f31 : and byte ptr [rbx], al ; retf 0x8aca
0x0000000000158d3a : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000000416f4 : and byte ptr [rcx + 0x39], cl ; ret
0x0000000000024fa7 : and byte ptr [rcx + 0x39], cl ; retf
0x000000000011f41f : and byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000001db0 : and byte ptr [rcx + 0x72b02084], bh ; retf
0x00000000000eec17 : and byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x5c3c
0x00000000001a11e8 : and byte ptr [rcx + rax], bh ; add ah, ah ; ret
0x00000000001a29e8 : and byte ptr [rcx + rax], dl ; je 0x1a2a04 ; cmc ; jmp qword ptr [rcx]
0x00000000000c2059 : and byte ptr [rcx + rcx*4 - 0x38], al ; pop rbx ; ret
0x000000000010c775 : and byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000047b89 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000007c73f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000038df8 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x0000000000070b4b : and byte ptr [rcx - 0x3b7cb7d7], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000000222b : and byte ptr [rcx - 0x4273d1ae], ah ; out dx, al ; nop ; retf 0x3844
0x000000000003c60d : and byte ptr [rcx - 0x77], cl ; ret
0x000000000007484f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000187374 : and byte ptr [rcx - 5], dl ; jmp qword ptr [rax + 0x10fffb50]
0x00000000000e8b80 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f7400 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000018984d : and byte ptr [rcx], al ; add byte ptr [rcx], cl ; int1 ; call qword ptr [rax]
0x00000000000c4ecf : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x0000000000155828 : and byte ptr [rcx], ch ; retf 0x3944
0x00000000000774c3 : and byte ptr [rcx], ch ; retf 0x54e9
0x0000000000156f98 : and byte ptr [rcx], ch ; retf 0x81eb
0x0000000000156278 : and byte ptr [rcx], ch ; retf 0x8ceb
0x0000000000155088 : and byte ptr [rcx], ch ; retf 0x9ceb
0x00000000001015b6 : and byte ptr [rdi + rax + 0x5b], dh ; ret
0x000000000019c4c0 : and byte ptr [rdi - 0xe], ch ; call rcx
0x00000000001863a4 : and byte ptr [rdi - 4], al ; push rax ; cld ; call qword ptr [rax]
0x00000000000e5f90 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000a1581 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000001a29b0 : and byte ptr [rdi], cl ; cmc ; jmp qword ptr [rcx]
0x000000000002ebc5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000119caf : and byte ptr [rdi], cl ; retf 0x5089
0x0000000000034943 : and byte ptr [rdi], cl ; retf 0xd289
0x000000000009d389 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000015cb40 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000eebe4 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8040
0x0000000000198fe8 : and byte ptr [rdx + 0x2c840000], bh ; sti ; call qword ptr [rax]
0x0000000000195b3d : and byte ptr [rdx], al ; push 0x44180e0a ; ret
0x000000000000031b : and byte ptr [rdx], bl ; adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x00000000000872fc : and byte ptr [rip + 0xf480001], al ; ret 0xc3f3
0x000000000015955a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000035986 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000050298 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x7ee8
0x0000000000191f65 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000004b80 : and byte ptr [rsi], bl ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000006320 : and byte ptr [rsi], dl ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000ef559 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000b3632 : and ch, 0xf ; je 0xb3659 ; add rax, 2 ; ret
0x00000000000a1938 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000008855e : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000015455b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000150983 : and ch, al ; std ; xlatb ; ret
0x00000000001554b4 : and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x0000000000187f41 : and ch, bl ; call qword ptr [rax]
0x0000000000187f31 : and ch, bl ; jmp rax
0x0000000000186d4c : and ch, byte ptr [rax] ; sti ; jmp qword ptr [rdx + 0x22fffb27]
0x0000000000106e0a : and ch, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000186d44 : and ch, byte ptr [rcx] ; sti ; jmp qword ptr [rdx + 0x22fffb28]
0x0000000000186d3c : and ch, byte ptr [rdx] ; sti ; jmp qword ptr [rdx + 0x22fffb29]
0x00000000001867b8 : and ch, dl ; cli ; inc dword ptr [rax] ; xlatb ; cli ; jmp rax
0x00000000000b361d : and cl, 0xf ; je 0xb3645 ; ret
0x0000000000003b02 : and cl, ah ; ret
0x0000000000080b5e : and cl, byte ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000024967 : and cl, byte ptr [rax - 0x77] ; retf 0x8b48
0x000000000012b814 : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000fdb33 : and cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x0000000000088c22 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009218d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000010524d : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x00000000000d9d72 : and cl, byte ptr [rdi] ; mov dh, 0x56 ; cmp dh, dh ; ret 0xf08
0x0000000000000955 : and cl, byte ptr [rdx] ; ret 0x68a2
0x00000000000c265e : and cl, ch ; ret 0
0x00000000001869fc : and dh, 0xfa ; call rax
0x00000000000c50bd : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000001868b8 : and dh, bh ; cli ; inc dword ptr [rax] ; add bl, bh ; jmp rax
0x000000000018aa29 : and dh, dh ; call rsp
0x000000000018681c : and dh, dl ; cli ; call qword ptr [rax]
0x0000000000067123 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000186750 : and dl, dl ; cli ; jmp rax
0x0000000000142899 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000000df78 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x00000000000e8221 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000013eede : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000176c62 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000fec65 : and dword ptr [rbp - 0x77], ecx ; ret
0x0000000000114bc3 : and dword ptr [rbx - 0x43c63ec4], ecx ; ret
0x00000000000730bc : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073118 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000162c6e : and dword ptr [rcx + 0x39], ecx ; retf
0x0000000000038869 : and dword ptr [rcx - 1], 0xffffffff ; xor eax, eax ; ret
0x00000000000f5d34 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edx, 8 ; syscall
0x00000000000cd303 : and dword ptr [rcx], esi ; rol byte ptr [rbp + 0x39], 0xc2 ; je 0xcd329 ; ret
0x000000000007ec79 : and dword ptr [rdi + 8], 0xfffffffe ; xor eax, eax ; ret
0x000000000012d0d6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000186480 : and dword ptr [rdi*8 - 0x2c30f01], edi ; jmp rax
0x0000000000078b40 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000036700 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000007d97e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000157cab : and dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000173d19 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009d1bb : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000176c61 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000142898 : and dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x00000000000220eb : and eax, 0 ; ret
0x000000000007eb94 : and eax, 0x10 ; ret
0x00000000000ec753 : and eax, 0x100f ; ret
0x00000000000e79d3 : and eax, 0x18 ; test eax, eax ; jne 0xe79f9 ; syscall
0x0000000000034c3a : and eax, 0x200 ; ret
0x000000000015efe6 : and eax, 0x21487fff ; ret 0x8949
0x000000000015f229 : and eax, 0x21487fff ; ret 0xcae9
0x00000000001619fd : and eax, 0x21487fff ; retf 0x8948
0x0000000000186ce5 : and eax, 0x24b0fffb ; sti ; jmp qword ptr [rax]
0x0000000000186edd : and eax, 0x2560fffb ; sti ; call rax
0x0000000000186e9d : and eax, 0x2570fffb ; sti ; jmp rax
0x000000000007558a : and eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x0000000000022088 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x0000000000087aaa : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021de3 : and eax, 0x30 ; call rax
0x0000000000038402 : and eax, 0x30 ; call rdx
0x0000000000024a67 : and eax, 0x30 ; jmp rax
0x000000000003849e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000002f9de : and eax, 0x30 ; mov rdi, r15 ; call rax
0x0000000000080f43 : and eax, 0x336f ; add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000021fa7 : and eax, 0x39000ca6 ; ret
0x00000000000a18bd : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000021962 : and eax, 0x3ff ; mov r10d, eax ; jmp 0x21938
0x00000000000a1908 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000018c595 : and eax, 0x497c0002 ; stc ; jmp rax
0x0000000000163923 : and eax, 0x5be17500 ; ret
0x000000000019fb05 : and eax, 0x72d80001 ; hlt ; call qword ptr [rcx]
0x000000000002ecd2 : and eax, 0x7f ; ret
0x00000000000a19b3 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000000a1957 : and eax, 0x7ff80000 ; ret
0x0000000000035054 : and eax, 0x80 ; ret
0x0000000000077c72 : and eax, 0x804 ; ret
0x00000000001143aa : and eax, 0x8348d889 ; ret
0x000000000008360c : and eax, 0x840f0033 ; retf 0xfffe
0x00000000001634ec : and eax, 0x8b486400 ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000189905 : and eax, 0xabdc0001 ; int1 ; call rax
0x000000000018990d : and eax, 0xac2c0001 ; int1 ; jmp rsp
0x000000000007e607 : and eax, 0xc ; cmp eax, 4 ; je 0x7e618 ; ret
0x000000000007e767 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001639df : and eax, 0xcab800 ; add byte ptr [rax], al ; syscall
0x0000000000077df5 : and eax, 0xe8000000 ; ret 0xfa95
0x00000000000df0b4 : and eax, 0xf ; ret
0x00000000000f5926 : and eax, 0xfffff000 ; or eax, edx ; ret
0x00000000001050bd : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000105058 : and eax, 0xffffff ; ret
0x000000000010f8a3 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000007ecc1 : and eax, 0xfffffffd ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000007ec63 : and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000002ec82 : and eax, 1 ; ret
0x00000000000d17c0 : and eax, 2 ; add eax, 8 ; ret
0x000000000002eb02 : and eax, 2 ; movzx eax, ax ; ret
0x000000000004629c : and eax, 2 ; sub eax, 1 ; ret
0x00000000000f62cf : and eax, 3 ; ret
0x000000000002eba2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002eac2 : and eax, 8 ; movzx eax, ax ; ret
0x00000000000353b4 : and eax, 8 ; ret
0x000000000013ed35 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a3daf : and eax, dword ptr [rbp - 0x7b] ; in al, 0x75 ; ret
0x000000000019f92d : and eax, dword ptr [rcx] ; add al, ah ; push -0xc ; call qword ptr [rax]
0x00000000000f64b1 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000019f911 : and eax, dword ptr [rcx] ; add byte ptr [rbp + rsi*8 - 8], bl ; call qword ptr [rax]
0x00000000001446a9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000018c54d : and eax, dword ptr [rdx] ; add byte ptr [rdx + rdi - 7], bl ; call rax
0x000000000019f92c : and eax, dword ptr fs:[rcx] ; add al, ah ; push -0xc ; call qword ptr [rax]
0x0000000000002e0f : and eax, ebp ; clc ; ret
0x00000000000349af : and eax, ecx ; ret
0x00000000000f597f : and eax, edi ; or rax, rsi ; ret
0x0000000000034ce2 : and eax, edx ; ret
0x0000000000034d30 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002ee9d : and eax, esi ; ret
0x0000000000106c56 : and ebp, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000730bd : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073119 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e5a2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x7e5b5 ; ret
0x0000000000175414 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x0000000000039762 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000000d188f : and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x000000000015aad5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000015a208 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000885fe : and ecx, 8 ; cmovne rax, rdx ; ret
0x00000000000f31ea : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x00000000000fd233 : and ecx, dword ptr [rcx + 0x39] ; ret 0x870f
0x0000000000051be4 : and ecx, dword ptr [rcx - 0x77] ; retf 0x3cb9
0x0000000000113bf1 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000efb7a : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x00000000000efb89 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000007fde8 : and ecx, ebp ; ret
0x000000000002ece2 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000351d0 : and edx, 0x80000000 ; mov dword ptr [rdi], edx ; ret
0x0000000000075d90 : and edx, 0xffffffcf ; mov dword ptr [rdi], edx ; ret
0x0000000000034e33 : and edx, eax ; mov qword ptr [rdi], rdx ; ret
0x00000000001044ea : and edx, ecx ; cmp rdx, rsi ; je 0x104500 ; ret
0x00000000000a246a : and edx, ecx ; cmp rdx, rsi ; je 0xa2480 ; ret
0x0000000000002ced : and edx, esp ; bswap ebx ; clc ; ret
0x0000000000161601 : and esi, 0x9487fff ; ret 0x8b48
0x00000000000837fe : and esi, dword ptr [rbx] ; add byte ptr [rbp - 0x43], dl ; retf 0
0x000000000004541e : and esi, dword ptr [rdi] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001948fd : and esi, ebp ; call rsp
0x00000000001a9ba1 : and esi, edi ; call qword ptr [rsi]
0x000000000010f90e : and esi, esi ; ret
0x0000000000106e09 : and esp, dword ptr [rdx] ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000012d0d5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000366ff : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000187f30 : and r13b, bl ; jmp rax
0x000000000015efe5 : and r8d, 0x21487fff ; ret 0x8949
0x000000000015f228 : and r8d, 0x21487fff ; ret 0xcae9
0x000000000019f910 : and rax, qword ptr [rcx] ; add byte ptr [rbp + rsi*8 - 8], bl ; call qword ptr [rax]
0x00000000000f597e : and rax, rdi ; or rax, rsi ; ret
0x0000000000034e32 : and rdx, rax ; mov qword ptr [rdi], rdx ; ret
0x00000000001044e9 : and rdx, rcx ; cmp rdx, rsi ; je 0x104501 ; ret
0x00000000000a2469 : and rdx, rcx ; cmp rdx, rsi ; je 0xa2481 ; ret
0x000000000003515b : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000035158 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000178f0e : bnd call qword ptr [rax - 0x4f000dc6] ; cmp dh, dl ; call rax
0x0000000000178eee : bnd call qword ptr [rax - 0x4f000dc7] ; cmp edx, esi ; call rax
0x0000000000178ed2 : bnd call qword ptr [rax] ; cmp edx, esi ; jmp qword ptr [rax]
0x000000000017948a : bnd call qword ptr [rip + 0xefff285] ; test edx, esi ; jmp qword ptr [rbx]
0x0000000000178ec2 : bnd call rax ; cmp dl, dh ; jmp rax
0x0000000000178ef6 : bnd call rax ; cmp edx, esi ; push rax ; cmp edx, esi ; call qword ptr [rax]
0x00000000001103a7 : bnd jb 0x11039c ; mov eax, 0xffffffff ; ret
0x00000000001258a7 : bnd jbe 0x1258b6 ; xor eax, eax ; ret
0x00000000001044ee : bnd je 0x1044fc ; ret
0x00000000000a246e : bnd je 0xa247c ; ret
0x00000000000a34c7 : bnd je 0xa34d6 ; test edx, edx ; jne 0xa34c8 ; ret
0x00000000000896aa : bnd jne 0x896a4 ; ret
0x0000000000091b3a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000091a60 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000150761 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x0000000000091a70 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000091a80 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000091a50 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000000919af : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000096fa3 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000887d5 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000097496 : bsf eax, edx ; ret
0x00000000000b3287 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000000975f2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000970c0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x00000000000974e2 : bsf rax, rdx ; ret
0x00000000000b3286 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000150b40 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x0000000000092056 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x0000000000091e86 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000150a2f : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x0000000000091f30 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000091f40 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000091f50 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x000000000009744b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000097359 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000097255 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000000971c6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000009744a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000097358 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000097254 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x0000000000120d8d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000105032 : bswap eax ; ret
0x0000000000002cef : bswap ebx ; clc ; ret
0x00000000000faee3 : call 0x117992
0x000000000011b125 : call 0x117b92
0x000000000011f22c : call 0x11b502
0x00000000001904e8 : call 0x1218ef78
0x00000000001980f8 : call 0x12197006
0x0000000000125fb1 : call 0x122ab2
0x0000000000126008 : call 0x122ab3
0x0000000000125ff9 : call 0x122ae2
0x000000000010ca4a : call 0x128ce2
0x00000000001a2448 : call 0x131a1952
0x00000000000e4907 : call 0x213e2
0x00000000000e4a0c : call 0x21452
0x000000000005527a : call 0x21492
0x0000000000024ad7 : call 0x215a2
0x0000000000045378 : call 0x215c2
0x0000000000105450 : call 0x2166a
0x00000000000b53cc : call 0x2167a
0x00000000001a3568 : call 0x221a2aab
0x0000000000042709 : call 0x2e9f2
0x000000000003a2f3 : call 0x36dc2
0x000000000003aff3 : call 0x47ae2
0x000000000005d2c5 : call 0x59ce2
0x0000000000051ae6 : call 0x6e502
0x0000000000062928 : call 0x6f372
0x0000000000109d1e : call 0x76012
0x000000000007c507 : call 0x787c2
0x000000000006dfe4 : call 0x7aaa2
0x000000000004fc98 : call 0x7bf82
0x00000000000ef6c4 : call 0x7c102
0x0000000000071ab4 : call 0x7e542
0x000000000002dfa1 : call 0x8a1f2
0x00000000000b72aa : call 0xb3cc2
0x000000000003858e : call 0xc5092
0x00000000000d0c9d : call 0xcd762
0x00000000000d2063 : call 0xce2a2
0x000000000012f403 : call 0xdbe22
0x00000000000e546c : call 0xe1eb2
0x000000000010b73a : call 0xe79d2
0x000000000010b774 : call 0xe7a72
0x000000000012b0af : call 0xe7b12
0x000000000010b671 : call 0xe8172
0x00000000000eb90b : call 0xe83a2
0x000000000006fa28 : call 0xec512
0x00000000000efe24 : call 0xec8a2
0x0000000000034178 : call 0xf0ba2
0x000000000010a8c2 : call 0xf6b82
0x000000000005c953 : call 0xf9432
0x00000000000bd22f : call 0xf9d02
0x0000000000100d7f : call 0xfd072
0x0000000000100c48 : call 0xfd6e2
0x00000000001765ba : call 0xffffffffab2530b0
0x000000000009cff4 : call 0xffffffffc309d004
0x00000000000f3061 : call 0xffffffffc30f306a
0x00000000000f62ce : call 0xffffffffc313435a
0x0000000000042ba9 : call 0xffffffffc33d73ba
0x00000000000450aa : call 0xffffffffc33d98b4
0x00000000000450bc : call 0xffffffffc33d98c6
0x00000000000450d8 : call 0xffffffffc33d98e2
0x00000000000ee902 : call 0xffffffffc348310c
0x00000000000f36f8 : call 0xffffffffc3487f02
0x00000000000a2b3a : call 0xffffffffc3666ca0
0x0000000000062ad3 : call 0xffffffffc38a2adb
0x0000000000068626 : call 0xffffffffc38a862e
0x0000000000147465 : call 0xffffffffc39a837e
0x00000000001484e5 : call 0xffffffffc39a93fe
0x000000000009c377 : call 0xffffffffc3da4cc8
0x000000000009c297 : call 0xffffffffc4024be8
0x000000000009f367 : call 0xffffffffc4027cb8
0x00000000001031e7 : call 0xffffffffc408bb38
0x00000000000b7838 : call 0xffffffffeacd3a40
0x00000000001001bf : call 0xffffffffead1c44f
0x0000000000121cca : call qword ptr [r10]
0x0000000000187397 : call qword ptr [rax + 0x10fffb4c]
0x000000000018738f : call qword ptr [rax + 0x10fffb4d]
0x0000000000187387 : call qword ptr [rax + 0x10fffb4e]
0x000000000018737f : call qword ptr [rax + 0x10fffb4f]
0x0000000000186583 : call qword ptr [rax + 0x10fffd3f]
0x000000000018658b : call qword ptr [rax + 0x10fffd40]
0x000000000018674b : call qword ptr [rax + 0x20fffadf]
0x0000000000186a97 : call qword ptr [rax + 0x20fffb30]
0x00000000001871a7 : call qword ptr [rax + 0x20fffb54]
0x0000000000186f8f : call qword ptr [rax + 0x20fffb57]
0x0000000000186593 : call qword ptr [rax + 0x20fffd41]
0x0000000000187477 : call qword ptr [rax - 0x1f000360]
0x0000000000186a43 : call qword ptr [rax - 0x1f000517]
0x0000000000186863 : call qword ptr [rax - 0x1f000535]
0x0000000000186877 : call qword ptr [rax - 0x1f000543]
0x0000000000178e37 : call qword ptr [rax - 0x1f000e37]
0x000000000018742f : call qword ptr [rax - 0x2f0004d4]
0x000000000018682f : call qword ptr [rax - 0x2f000549]
0x0000000000034e6e : call qword ptr [rax - 0x3d]
0x000000000000319b : call qword ptr [rax]
0x000000000018b51b : call qword ptr [rbx + rax*8]
0x0000000000003706 : call qword ptr [rbx]
0x00000000001864df : call qword ptr [rcx + 0x21fffd43]
0x00000000000099b1 : call qword ptr [rcx]
0x00000000000811ad : call qword ptr [rdi]
0x0000000000186b43 : call qword ptr [rdx + 0x22fffb32]
0x000000000018703b : call qword ptr [rdx + 0x22fffb59]
0x00000000000c6fe3 : call qword ptr [rdx]
0x0000000000186adf : call qword ptr [rsi + 0x26fffb2f]
0x0000000000186fd7 : call qword ptr [rsi + 0x26fffb56]
0x00000000000955d2 : call qword ptr [rsi]
0x000000000002b49d : call r12
0x0000000000024f87 : call r14
0x0000000000022f86 : call r15
0x0000000000038a8b : call r8
0x0000000000021dcb : call rax
0x0000000000022bed : call rbx
0x000000000002c5ba : call rcx
0x0000000000022f87 : call rdi
0x0000000000038407 : call rdx
0x0000000000023546 : call rsi
0x000000000002b49e : call rsp
0x0000000000130be7 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004a0fc : cdq ; add eax, 0x39490000 ; ret
0x000000000017ac19 : cdq ; cmc ; call rsp
0x00000000000ae923 : cdq ; cmp eax, 0x39480030 ; ret
0x0000000000179eb4 : cdq ; hlt ; inc edi ; hlt ; jmp rdx
0x0000000000038e04 : cdq ; idiv rsi ; ret
0x00000000001883d9 : cdq ; in al, dx ; call rax
0x00000000001883e1 : cdq ; in al, dx ; jmp rsp
0x00000000001764c0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000178da1 : cdq ; int1 ; inc eax ; wait ; int1 ; call rax
0x000000000019b2e5 : cdq ; int1 ; jmp rbx
0x0000000000139f8b : cdq ; mov bl, 0x27 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000007d923 : cdq ; sahf ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000007ec50 : cdqe ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000e6777 : clc ; adc byte ptr [rdi], cl ; test byte ptr [rbp - 0x9fffffd], ah ; ret 0xf20
0x0000000000160f99 : clc ; add al, 0x74 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x000000000012117b : clc ; add al, 0x74 ; retf
0x00000000000e0b89 : clc ; add al, 0xf ; xchg eax, esp ; ret
0x000000000006793f : clc ; add al, byte ptr [rcx + 0x29] ; ret
0x000000000003ad36 : clc ; add byte ptr [rax + rax], cl ; add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x00000000001027fc : clc ; add byte ptr [rax + rbx - 0x37], dh ; ret
0x0000000000051142 : clc ; add byte ptr [rax], al ; add al, ch ; cmc ; retf
0x000000000008994f : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000e6bf9 : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000a23a0 : clc ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d8be8 : clc ; add byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000067918 : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x0000000000081ef6 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000073a50 : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000069585 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x0000000000069790 : clc ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000ee43a : clc ; add dh, byte ptr [rsi + 2] ; ret
0x00000000000895c5 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000018be14 : clc ; add dword ptr [rax], eax ; or al, 0x4b ; clc ; jmp qword ptr [rax]
0x0000000000124d11 : clc ; add dword ptr [rbp + 0xb], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000338b5 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000f0151 : clc ; add dword ptr [rdi + 2], edi ; ret
0x000000000007ef71 : clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000008a1db : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a04c0 : clc ; add dword ptr cs:[rax], eax ; or al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x000000000010f8a5 : clc ; add eax, 0x10 ; ret
0x00000000000b77c9 : clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x00000000000ce52e : clc ; add esi, dword ptr [rsi + rax - 0xd] ; ret
0x000000000018cc9c : clc ; add r8b, byte ptr [r8] ; cmp al, 0xe9 ; stc ; call qword ptr [rax]
0x0000000000150c0f : clc ; add rax, r8 ; vzeroupper ; ret
0x0000000000091837 : clc ; add rax, rcx ; ret
0x0000000000150574 : clc ; add rax, rcx ; vzeroupper ; ret
0x000000000009205b : clc ; add rax, rsi ; ret
0x000000000002ecd1 : clc ; and eax, 0x7f ; ret
0x0000000000105057 : clc ; and eax, 0xffffff ; ret
0x000000000007eca4 : clc ; and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000105031 : clc ; bswap eax ; ret
0x000000000018be42 : clc ; call qword ptr [rax]
0x00000000000e0ef1 : clc ; call r14
0x000000000018c122 : clc ; call rax
0x000000000018bd72 : clc ; call rsp
0x00000000000368b2 : clc ; clc ; jne 0x368a6 ; xor eax, eax ; ret
0x0000000000036902 : clc ; clc ; jne 0x368f6 ; xor eax, eax ; ret
0x000000000017acb9 : clc ; cmc ; call rsp
0x000000000010f6e1 : clc ; cmc ; je 0x10f6dd ; pop rbx ; ret
0x00000000001a31a8 : clc ; cmc ; jmp qword ptr [rcx]
0x00000000000f1485 : clc ; cmc ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000004b040 : clc ; cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000084e78 : clc ; cmovne rax, rcx ; ret
0x000000000011082c : clc ; cmovs eax, edx ; ret
0x0000000000003cb2 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000015aa79 : clc ; cmp rcx, rax ; jne 0x15aaab ; xor eax, eax ; ret
0x000000000015aa78 : clc ; cmp rcx, rax ; jne 0x15aaac ; xor eax, eax ; ret
0x000000000015b8b9 : clc ; cmp rcx, rax ; jne 0x15b8eb ; xor eax, eax ; ret
0x000000000015b8b8 : clc ; cmp rcx, rax ; jne 0x15b8ec ; xor eax, eax ; ret
0x0000000000038e02 : clc ; cqo ; idiv rsi ; ret
0x0000000000085530 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000018c04a : clc ; dec dword ptr [rax + rax - 0x5bb3fffe] ; clc ; jmp rsp
0x000000000018c1ea : clc ; dec dword ptr [rax - 0x23fffdf6] ; fdiv st(0), st(0) ; call rsp
0x000000000002e97a : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000068444 : clc ; dec dword ptr [rdi] ; test byte ptr [rdx - 0x7c000016], bh ; ret
0x00000000000369c7 : clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000012d14b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x0000000000061bf5 : clc ; idiv bh ; jmp qword ptr [rax]
0x0000000000193aa8 : clc ; in eax, 0xed ; call qword ptr [rdi]
0x00000000000f7329 : clc ; inc dword ptr [rcx - 0x42] ; add eax, 0x74000000 ; retf
0x000000000002ca52 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000018c22a : clc ; inc esp ; or al, 2 ; add byte ptr [rbp + rbp*8 - 8], bl ; call qword ptr [rax]
0x000000000015731d : clc ; ja 0x1572eb ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000a26dd : clc ; ja 0xa26ec ; ret
0x000000000019fc18 : clc ; jb 0x19fc12 ; jmp qword ptr [rcx]
0x00000000000a195a : clc ; jg 0xa1929 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a19b6 : clc ; jg 0xa19b6 ; int1 ; mov eax, eax ; ret
0x000000000018be1a : clc ; jmp qword ptr [rax]
0x00000000000530a3 : clc ; jmp rax
0x000000000018bcda : clc ; jmp rsp
0x000000000015ea1a : clc ; jne 0x15eb27 ; ret
0x000000000015ea19 : clc ; jne 0x15eb28 ; ret
0x00000000000368b3 : clc ; jne 0x368a5 ; xor eax, eax ; ret
0x0000000000036903 : clc ; jne 0x368f5 ; xor eax, eax ; ret
0x0000000000089597 : clc ; jne 0x89584 ; ret
0x000000000018c02a : clc ; lcall [rdi + rdi*8 + 1] ; add byte ptr [rsi + rdx*4 - 8], bh ; call rsp
0x00000000001572af : clc ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x000000000012f3fd : clc ; lea rcx, [rsp + 8] ; call 0xdbe28
0x00000000000c54d8 : clc ; leave ; ret
0x000000000018be2a : clc ; ljmp [rsp + rsi*8 + 0x4d4c0001] ; clc ; call rsp
0x00000000000ef574 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001559cf : clc ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000175122 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000071114 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198fc0 : clc ; mov ecx, 0x3a5c0000 ; cli ; call qword ptr [rax]
0x00000000000039c0 : clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x0000000000133937 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001342a7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001391f7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001344a7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000139167 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001346a7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001390d7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000133953 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a17fe : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000157bbd : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000008e2a7 : clc ; mov qword ptr [rdi], rdx ; ret
0x000000000015ba7c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a13ca : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000006de65 : clc ; mov rax, r8 ; ret
0x0000000000034dae : clc ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000034e18 : clc ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034ea1 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000002261c : clc ; neg eax ; ret
0x00000000000e15bf : clc ; or byte ptr [rax - 0x77], cl ; ret 0x830f
0x000000000007112f : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5980 : clc ; or rax, rsi ; ret
0x000000000007f6b9 : clc ; pop rbp ; pop r12 ; ret
0x000000000008e816 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d4261 : clc ; push qword ptr [rax + rcx + 0x39] ; ret
0x0000000000072b94 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000018c27a : clc ; push qword ptr [rax - 0x3fffdf1] ; idiv al ; call qword ptr [rax]
0x000000000012b86f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000462f5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000102809 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000122bb1 : clc ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x000000000006d800 : clc ; push qword ptr [rbx - 0x77] ; ret 0xe283
0x0000000000051bfd : clc ; push qword ptr [rdi + rcx - 0xd] ; ret
0x00000000000c0af0 : clc ; push qword ptr [rdx + rdi - 0x77] ; ret 0xe283
0x000000000018be3a : clc ; push rsp ; hlt ; add dword ptr [rax], eax ; pushfq ; clc ; call qword ptr [rax]
0x0000000000188124 : clc ; pushfq ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xffeb
0x0000000000002cc5 : clc ; ret
0x0000000000185962 : clc ; ret 0x6e1f
0x00000000000e5364 : clc ; retf
0x00000000001a28e8 : clc ; retf 0xfff8
0x0000000000102244 : clc ; retf 7
0x0000000000105041 : clc ; rol ax, 8 ; ret
0x0000000000151294 : clc ; rol ch, 1 ; jns 0x151275 ; retf 0xead3
0x00000000001513e4 : clc ; rol ch, 1 ; jns 0x1513c5 ; retf 0xead3
0x0000000000151534 : clc ; rol ch, 1 ; jns 0x151515 ; retf 0xead3
0x0000000000151684 : clc ; rol ch, 1 ; jns 0x151665 ; retf 0xead3
0x00000000001517d4 : clc ; rol ch, 1 ; jns 0x1517b5 ; retf 0xead3
0x0000000000151924 : clc ; rol ch, 1 ; jns 0x151905 ; retf 0xead3
0x0000000000151a74 : clc ; rol ch, 1 ; jns 0x151a55 ; retf 0xead3
0x0000000000151bc4 : clc ; rol ch, 1 ; jns 0x151ba5 ; retf 0xead3
0x0000000000151d14 : clc ; rol ch, 1 ; jns 0x151cf5 ; retf 0xead3
0x0000000000151e64 : clc ; rol ch, 1 ; jns 0x151e45 ; retf 0xead3
0x0000000000151fb4 : clc ; rol ch, 1 ; jns 0x151f95 ; retf 0xead3
0x0000000000152104 : clc ; rol ch, 1 ; jns 0x1520e5 ; retf 0xead3
0x0000000000152254 : clc ; rol ch, 1 ; jns 0x152235 ; retf 0xead3
0x00000000001523a4 : clc ; rol ch, 1 ; jns 0x152385 ; retf 0xead3
0x00000000001524f4 : clc ; rol ch, 1 ; jns 0x1524d5 ; retf 0xead3
0x0000000000152964 : clc ; rol ch, 1 ; jns 0x152945 ; retf 0xead3
0x0000000000152ae4 : clc ; rol ch, 1 ; jns 0x152ac5 ; retf 0xead3
0x0000000000152c64 : clc ; rol ch, 1 ; jns 0x152c45 ; retf 0xead3
0x0000000000152de4 : clc ; rol ch, 1 ; jns 0x152dc5 ; retf 0xead3
0x0000000000152f64 : clc ; rol ch, 1 ; jns 0x152f45 ; retf 0xead3
0x00000000001530e4 : clc ; rol ch, 1 ; jns 0x1530c5 ; retf 0xead3
0x0000000000153264 : clc ; rol ch, 1 ; jns 0x153245 ; retf 0xead3
0x00000000001533e4 : clc ; rol ch, 1 ; jns 0x1533c5 ; retf 0xead3
0x0000000000153564 : clc ; rol ch, 1 ; jns 0x153545 ; retf 0xead3
0x00000000001536e4 : clc ; rol ch, 1 ; jns 0x1536c5 ; retf 0xead3
0x0000000000153864 : clc ; rol ch, 1 ; jns 0x153845 ; retf 0xead3
0x00000000001539e4 : clc ; rol ch, 1 ; jns 0x1539c5 ; retf 0xead3
0x0000000000153b64 : clc ; rol ch, 1 ; jns 0x153b45 ; retf 0xead3
0x0000000000153ce4 : clc ; rol ch, 1 ; jns 0x153cc5 ; retf 0xead3
0x0000000000153e64 : clc ; rol ch, 1 ; jns 0x153e45 ; retf 0xead3
0x0000000000038da3 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000104f6b : clc ; sar rax, 6 ; ret
0x00000000000cc606 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000004680a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000001050d7 : clc ; shr eax, 0x18 ; ret
0x00000000000b339f : clc ; shr rax, 2 ; ret
0x0000000000003e9c : clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x000000000014fb31 : clc ; sub rax, r8 ; ret
0x0000000000154766 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000014f8db : clc ; sub rax, rsi ; ret
0x000000000017940c : clc ; test dl, dh ; call qword ptr [rax]
0x000000000007e645 : clc ; test edx, edx ; je 0x7e659 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001506eb : clc ; vzeroupper ; ret
0x0000000000187f3c : clc ; xchg eax, ecx ; add byte ptr [rax], al ; pushfq ; and ch, bl ; call qword ptr [rax]
0x00000000001a67c0 : clc ; xchg eax, ecx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; idiv r15b ; ret
0x0000000000190448 : clc ; xchg edx, ebp ; call qword ptr [rcx]
0x000000000002db53 : cld ; adc al, 0 ; ret
0x0000000000087850 : cld ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000189215 : cld ; add byte ptr [rax], al ; jl 0x1891f1 ; out dx, eax ; jmp rax
0x00000000000c6252 : cld ; add byte ptr [rax], al ; ret
0x000000000010c8b1 : cld ; add dword ptr [rax], eax ; mov rdi, rbp ; call r12
0x00000000000a18bf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000018984c : cld ; and byte ptr [rcx], al ; add byte ptr [rcx], cl ; int1 ; call qword ptr [rax]
0x0000000000187476 : cld ; call qword ptr [rax - 0x1f000360]
0x000000000018638e : cld ; call qword ptr [rax]
0x00000000001997fe : cld ; call qword ptr [rbx]
0x000000000019762e : cld ; call qword ptr [rdx]
0x000000000018637e : cld ; call rax
0x000000000018d1e2 : cld ; call rsp
0x00000000001868d5 : cld ; cli ; call qword ptr [rax]
0x0000000000186999 : cld ; cli ; call rax
0x00000000001868b5 : cld ; cli ; jmp qword ptr [rax]
0x00000000001868f5 : cld ; cli ; push rax ; std ; cli ; call rax
0x00000000001a3324 : cld ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000015eb12 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x15eb28 ; xor eax, eax ; ret
0x000000000015eb11 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x15eb29 ; xor eax, eax ; ret
0x00000000000cef8c : cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xcef87 ; ret
0x000000000004afac : cld ; cmp rdi, r8 ; jbe 0x4af48 ; pop rbx ; pop rbp ; ret
0x000000000004afab : cld ; cmp rdi, r8 ; jbe 0x4af49 ; pop rbx ; pop rbp ; ret
0x0000000000196ec4 : cld ; cwde ; add byte ptr [rax], al ; or dl, al ; out dx, al ; jmp qword ptr [rsi]
0x0000000000060986 : cld ; dec dword ptr [rax + 0x29] ; ret
0x00000000000b611e : cld ; dec dword ptr [rax + 0x39] ; ret
0x000000000011a8d9 : cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000012942f : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000034b77 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000018c280 : cld ; idiv al ; call qword ptr [rax]
0x0000000000061c95 : cld ; idiv bh ; call qword ptr [rax]
0x0000000000188d44 : cld ; in eax, 0 ; add ah, cl ; out dx, eax ; jmp qword ptr [rax]
0x0000000000188f04 : cld ; in eax, dx ; add byte ptr [rax], al ; fsubr qword ptr [rbx - 0x11] ; call qword ptr [rax]
0x000000000018638a : cld ; inc dword ptr [rax + 0x42] ; cld ; call qword ptr [rax]
0x00000000001863b2 : cld ; inc dword ptr [rax + 0x4b] ; cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x000000000018639a : cld ; inc dword ptr [rax + 0x50fffc45] ; cld ; jmp qword ptr [rax]
0x000000000018643e : cld ; inc dword ptr [rax + 0x7e] ; cld ; jmp qword ptr [rax]
0x00000000001874ce : cld ; inc dword ptr [rax + 0xfffcc0] ; ret 0xfffc
0x0000000000187482 : cld ; inc dword ptr [rax - 0x2f00035c] ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000187472 : cld ; inc dword ptr [rax - 0x61] ; cld ; call qword ptr [rax - 0x1f000360]
0x000000000018645e : cld ; inc dword ptr [rax - 0x73] ; cld ; jmp qword ptr [rax]
0x00000000001863c2 : cld ; inc dword ptr [rax] ; cld ; push rax ; cld ; jmp rax
0x00000000001874d2 : cld ; inc dword ptr [rax] ; ret 0xfffc
0x00000000000a199c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a190a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000010efa9 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000018d1da : cld ; inc dword ptr [rdi + rdx + 0x36ec0001] ; cld ; call rsp
0x00000000001ab0e4 : cld ; ja 0x1ab0e1 ; call qword ptr [rbx]
0x00000000001963e4 : cld ; jge 0x1963d8 ; jmp qword ptr [rbx]
0x000000000018d108 : cld ; jle 0x18d108 ; jmp rsp
0x00000000001863ea : cld ; jmp qword ptr [rax + 0x10fffc49]
0x000000000018642a : cld ; jmp qword ptr [rax - 0x2f0003a7]
0x00000000001863a2 : cld ; jmp qword ptr [rax]
0x000000000019ad4a : cld ; jmp qword ptr [rbx]
0x0000000000178de2 : cld ; jmp rax
0x000000000018d292 : cld ; jmp rsp
0x000000000015b6c6 : cld ; jne 0x15b8ff ; xor eax, eax ; ret
0x000000000015eb15 : cld ; jne 0x15eb25 ; xor eax, eax ; ret
0x000000000015eb14 : cld ; jne 0x15eb26 ; xor eax, eax ; ret
0x000000000015ea35 : cld ; jne 0x15eb27 ; ret
0x000000000015ea34 : cld ; jne 0x15eb28 ; ret
0x00000000000ec598 : cld ; jne 0xec559 ; neg eax ; ret
0x0000000000196324 : cld ; jp 0x196318 ; call qword ptr [rdx]
0x000000000015728d : cld ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000001891e0 : cld ; leave ; out dx, eax ; dec dword ptr [rax + 0x5c0000fb] ; retf 0xffef
0x0000000000175ea5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x175e74 ; retf
0x00000000001559ad : cld ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x00000000001a71a4 : cld ; mov dh, dh ; jmp qword ptr [rdx]
0x00000000001340c2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001342c5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001344c5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001346c5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000035397 : cld ; mov dword ptr [rdi], eax ; movd xmm0, dword ptr [rsp - 4] ; ret
0x00000000000a1806 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000157bc8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000015ba8e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a13d8 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000001121c1 : cld ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001961c4 : cld ; mov eax, dword ptr [rax] ; add byte ptr [rax + 0x77], ch ; out dx, al ; call qword ptr [rdi]
0x000000000018c798 : cld ; mov ecx, edi ; jmp rsp
0x00000000000a13d2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000133cf6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139386 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133ed6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139306 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001340b6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139286 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133b16 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139406 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000e8447 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000000351a2 : cld ; movd xmm0, dword ptr [rsp - 4] ; ret
0x00000000000351bd : cld ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000003526d : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001894ac : cld ; or al, byte ptr [rcx] ; add byte ptr [rcx + rdx - 0x10], bl ; call qword ptr [rax]
0x000000000018b550 : cld ; or edi, esi ; dec eax ; ret
0x0000000000188d9c : cld ; out 0, eax ; add byte ptr [rbx + rdx*2], ch ; out dx, eax ; call qword ptr [rax]
0x00000000001893a9 : cld ; out dx, eax ; call rsp
0x00000000001a2fc4 : cld ; pop rcx ; add dword ptr [rax], eax ; pop rax ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018d514 : cld ; popfq ; add byte ptr [rax], al ; in al, dx ; ret 0xfffd
0x0000000000186386 : cld ; push qword ptr [rax + 0x41] ; cld ; inc dword ptr [rax + 0x42] ; cld ; call qword ptr [rax]
0x00000000001863e6 : cld ; push qword ptr [rax + 0x57] ; cld ; jmp qword ptr [rax + 0x10fffc49]
0x000000000018640a : cld ; push qword ptr [rax + 0x66] ; cld ; call qword ptr [rax]
0x00000000001863b6 : cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x0000000000186422 : cld ; push qword ptr [rax] ; jo 0x186428 ; call rax
0x0000000000186402 : cld ; push qword ptr [rax] ; movsxd rdi, esp ; call rax
0x00000000001863a6 : cld ; push rax ; cld ; call qword ptr [rax]
0x00000000001863c6 : cld ; push rax ; cld ; jmp rax
0x00000000000351a8 : cld ; ret
0x000000000018b138 : cld ; ret 0xfff6
0x00000000001147cb : cld ; ret 6
0x00000000000382b0 : cld ; retf
0x0000000000189784 : cld ; sbb al, 1 ; add ah, ch ; movsxd rsi, ecx ; call qword ptr [rax]
0x000000000018f1c4 : cld ; sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; xor ch, dl ; call qword ptr [rdx]
0x00000000001745c3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000188a80 : cld ; std ; out dx, al ; jmp qword ptr [rax]
0x00000000001095d6 : cld ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000188c58 : cld ; sub edi, ebp ; jmp rsp
0x00000000001895b0 : cld ; sub esi, eax ; call rax
0x00000000001745d6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001a7ec4 : cld ; test al, 1 ; add byte ptr [rax], bh ; retf 0xfff6
0x000000000015655d : cld ; vzeroupper ; ret
0x0000000000189158 : cld ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x000000000018c828 : cld ; xchg eax, esi ; stc ; call rax
0x000000000018c7dc : cld ; xor eax, dword ptr [rdx] ; add byte ptr [rsi + rcx*4 - 7], cl ; call qword ptr [rax]
0x00000000000394ed : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000001180c9 : cli ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000b4811 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000001290fd : cli ; adc cl, byte ptr [rax + 0x29] ; retf 0x148
0x00000000001290bb : cli ; adc cl, byte ptr [rax + 0x29] ; retf 0x149
0x00000000000b6fed : cli ; adc cl, byte ptr [rax + 0x29] ; retf 0x8966
0x00000000000e6cd3 : cli ; add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000258f2 : cli ; add al, 0x74 ; retf 0x8348
0x00000000000b9c56 : cli ; add al, 0x75 ; ret 0x8948
0x0000000000111c4d : cli ; add al, 0x83 ; ret 0xf01
0x00000000001891c5 : cli ; add byte ptr [rax], al ; cld ; ret
0x00000000001891bd : cli ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000001891ad : cli ; add byte ptr [rax], al ; ret 0xffef
0x00000000000750ae : cli ; add ch, al ; retf
0x00000000000b7818 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000babce : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000074511 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000010c9f1 : cli ; add dword ptr [rax], eax ; mov rdi, rbp ; call rbx
0x00000000000a17f1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xa1801 ; mov byte ptr [rdi], cl ; ret
0x000000000015c17b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000015baac : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000b3d76 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000ae7af : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000ae7f4 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000004472a : cli ; add rdx, rcx ; jmp 0x4473c
0x0000000000044a3a : cli ; add rdx, rcx ; jmp 0x44a4c
0x00000000000ef558 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000efb79 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x8440
0x00000000001765b9 : cli ; call 0xffffffffab2530b1
0x000000000018674a : cli ; call qword ptr [rax + 0x20fffadf]
0x0000000000186a42 : cli ; call qword ptr [rax - 0x1f000517]
0x0000000000186862 : cli ; call qword ptr [rax - 0x1f000535]
0x0000000000186876 : cli ; call qword ptr [rax - 0x1f000543]
0x000000000018682e : cli ; call qword ptr [rax - 0x2f000549]
0x00000000001866f6 : cli ; call qword ptr [rax]
0x000000000017ce96 : cli ; call rax
0x000000000018d0ca : cli ; call rsp
0x00000000001868f1 : cli ; cli ; call qword ptr [rax]
0x00000000001868b1 : cli ; cli ; inc dword ptr [rax - 4] ; cli ; jmp qword ptr [rax]
0x00000000001868d1 : cli ; cli ; push qword ptr [rax] ; cld ; cli ; call qword ptr [rax]
0x0000000000186911 : cli ; cli ; push rax ; sti ; cli ; call rax
0x000000000017d2a6 : cli ; dec esp ; xor edx, edi ; jmp rsp
0x00000000001867ae : cli ; inc dword ptr [rax + 0x40fffad1] ; sar edx, cl ; jmp qword ptr [rax]
0x0000000000186a3e : cli ; inc dword ptr [rax - 0x18] ; cli ; call qword ptr [rax - 0x1f000517]
0x000000000018679a : cli ; inc dword ptr [rax - 0x29] ; cli ; jmp qword ptr [rax]
0x0000000000186816 : cli ; inc dword ptr [rax - 0x2c] ; cli ; jmp qword ptr [rax]
0x00000000001867b2 : cli ; inc dword ptr [rax - 0x2d] ; cli ; jmp qword ptr [rax]
0x0000000000186a4e : cli ; inc dword ptr [rax - 0x2f000513] ; out dx, al ; cli ; jmp qword ptr [rax]
0x00000000001869fa : cli ; inc dword ptr [rax - 0x2f00051a] ; out 0xfa, eax ; jmp qword ptr [rax]
0x0000000000186882 : cli ; inc dword ptr [rax - 0x2f00053f] ; ret 0xfffa
0x00000000001867ce : cli ; inc dword ptr [rax - 0x2f] ; cli ; inc dword ptr [rax] ; sar edx, cl ; jmp rax
0x000000000018685e : cli ; inc dword ptr [rax - 0x36] ; cli ; call qword ptr [rax - 0x1f000535]
0x0000000000186872 : cli ; inc dword ptr [rax - 0x44] ; cli ; call qword ptr [rax - 0x1f000543]
0x00000000001868b2 : cli ; inc dword ptr [rax - 4] ; cli ; jmp qword ptr [rax]
0x00000000001868ba : cli ; inc dword ptr [rax] ; add bl, bh ; jmp rax
0x00000000001867d2 : cli ; inc dword ptr [rax] ; sar edx, cl ; jmp rax
0x00000000001867ba : cli ; inc dword ptr [rax] ; xlatb ; cli ; jmp rax
0x00000000001117cb : cli ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3b44
0x0000000000186a5e : cli ; inc eax ; cli ; call qword ptr [rax]
0x000000000018d0c2 : cli ; inc eax ; test dword ptr [rcx], eax ; add byte ptr [rcx + rdi*2 - 6], ch ; call rsp
0x00000000000369d6 : cli ; je 0x369e9 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001576c9 : cli ; jg 0x1576dc ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000157bb2 : cli ; jg 0x157bc2 ; vzeroupper ; ret
0x000000000015ba67 : cli ; jg 0x15ba7a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000015c146 : cli ; jg 0x15c158 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000015c441 : cli ; jg 0x15c454 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015ca58 : cli ; jg 0x15ca68 ; vzeroupper ; ret
0x0000000000186712 : cli ; jmp qword ptr [rax]
0x000000000017ce9e : cli ; jmp rax
0x0000000000033671 : cli ; jmp rdx
0x000000000017d2aa : cli ; jmp rsp
0x000000000018d102 : cli ; lcall [rbx + rsi*4 + 1] ; add ah, bh ; jle 0x18d10e ; jmp rsp
0x000000000008e39c : cli ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000008e2cf : cli ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001344c8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003afef : cli ; mov rdi, rbp ; call 0x47ae6
0x000000000010ca46 : cli ; mov rsi, r14 ; call 0x128ce6
0x00000000001098a0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000033936 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000000921a8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000014b156 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e11bd : cli ; or cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xd320
0x00000000000874c8 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x0000000000087470 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x0000000000112e74 : cli ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x0000000000176a41 : cli ; push 0x6e ; ja 0x1769ce ; ret 0x48f
0x0000000000186812 : cli ; push qword ptr [rax - 0x2e] ; cli ; inc dword ptr [rax - 0x2c] ; cli ; jmp qword ptr [rax]
0x0000000000186a5a : cli ; push qword ptr [rax - 0xf] ; cli ; inc eax ; cli ; call qword ptr [rax]
0x00000000001868d2 : cli ; push qword ptr [rax] ; cld ; cli ; call qword ptr [rax]
0x000000000018687e : cli ; push qword ptr [rax] ; sar dl, 0xff ; add cl, 0xfa ; call rax
0x0000000000186976 : cli ; push qword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x0000000000186996 : cli ; push rax ; cld ; cli ; call rax
0x000000000018685a : cli ; push rax ; enter -6, 0x40 ; retf 0xfffa
0x00000000001868f6 : cli ; push rax ; std ; cli ; call rax
0x0000000000186912 : cli ; push rax ; sti ; cli ; call rax
0x00000000001866fa : cli ; push rax ; xlatb ; cli ; call rax
0x00000000000a1712 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000002db80 : cli ; ret
0x00000000001754e5 : cli ; ret 0xac65
0x000000000010b672 : cli ; retf 0xfffd
0x0000000000125fb2 : cli ; retf 0xffff
0x00000000000cc603 : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000007e14b : cli ; setae al ; ret
0x0000000000177944 : cli ; shr ebp, 0xff ; adc al, dl ; in eax, dx ; call qword ptr [rdx]
0x000000000010bf8a : cli ; std ; jbe 0x10bf95 ; ret
0x000000000011380c : cli ; sub al, 0xf ; xchg eax, ebp ; ret 0xd184
0x00000000000ceb7a : cli ; sub dh, ch ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000175390 : cli ; test bh, dl ; retf 0xdf7f
0x000000000017412a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000014f6c8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017aa2a : cmc ; call qword ptr [rax]
0x00000000001a54ba : cmc ; call qword ptr [rbx]
0x00000000001a2c22 : cmc ; call qword ptr [rcx]
0x000000000017ab9a : cmc ; call qword ptr [rdi]
0x000000000017acb2 : cmc ; call qword ptr [rdx]
0x000000000017ab7e : cmc ; call qword ptr [rsi]
0x000000000017a756 : cmc ; call rax
0x00000000001a4476 : cmc ; call rbx
0x00000000001a4096 : cmc ; call rcx
0x000000000017ac1a : cmc ; call rsp
0x000000000019f915 : cmc ; clc ; call qword ptr [rax]
0x00000000001a5a8d : cmc ; cmc ; call qword ptr [rax]
0x00000000001a5a49 : cmc ; cmc ; call qword ptr [rdi]
0x000000000017acb5 : cmc ; cmc ; jmp rsp
0x00000000001139aa : cmc ; dec dword ptr [rax - 0x75] ; jl 0x1139dc ; or al, ch ; ret 0xf0dc
0x00000000000c6710 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c354b : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000c587a : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000c8dc0 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000ceb7c : cmc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000017ab92 : cmc ; dec dword ptr [rdx + rdx*4] ; cmc ; inc dword ptr [rdx - 0x54] ; cmc ; call qword ptr [rdi]
0x000000000017a8e6 : cmc ; dec dword ptr [rsi - 0x74] ; cmc ; dec dword ptr [rsi - 0x74] ; cmc ; jmp rax
0x000000000017a8ea : cmc ; dec dword ptr [rsi - 0x74] ; cmc ; jmp rax
0x000000000018a7ba : cmc ; dec esp ; test byte ptr [rcx], al ; add byte ptr [rdi + rsi*8 - 0xb], cl ; jmp rax
0x000000000017a575 : cmc ; hlt ; jmp rdi
0x00000000000ceab4 : cmc ; inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000017ab96 : cmc ; inc dword ptr [rdx - 0x54] ; cmc ; call qword ptr [rdi]
0x000000000017ac02 : cmc ; inc dword ptr [rdx - 0x54] ; cmc ; inc dword ptr [rdx - 0x54] ; cmc ; jmp rsi
0x000000000017ac06 : cmc ; inc dword ptr [rdx - 0x54] ; cmc ; jmp rsi
0x000000000017a792 : cmc ; inc dword ptr [rdx] ; adc dh, ch ; call rax
0x000000000017a78e : cmc ; inc dword ptr [rdx] ; adc dh, ch ; inc dword ptr [rdx] ; adc dh, ch ; call rax
0x000000000010f6e2 : cmc ; je 0x10f6dc ; pop rbx ; ret
0x0000000000056a5f : cmc ; jmp 0x52ce3
0x000000000018a47a : cmc ; jmp qword ptr [rax]
0x00000000001a3652 : cmc ; jmp qword ptr [rbx]
0x00000000001a299e : cmc ; jmp qword ptr [rcx]
0x00000000001a58aa : cmc ; jmp qword ptr [rdi]
0x000000000017aa8a : cmc ; jmp qword ptr [rdx]
0x000000000017a8ee : cmc ; jmp rax
0x000000000017ac0a : cmc ; jmp rsi
0x000000000017aa9a : cmc ; jmp rsp
0x00000000000f1486 : cmc ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000018a86a : cmc ; ljmp [rdi + rax*4 - 0x43ffff] ; cmc ; jmp rax
0x0000000000176e69 : cmc ; mov ch, 0xab ; ret
0x000000000013930a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133d4e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000104165 : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000015e023 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000000ffbc3 : cmc ; or eax, dword ptr [rax] ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000173d17 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000018a48a : cmc ; push qword ptr [rax - 0x53fffe90] ; cmc ; call rax
0x000000000017acae : cmc ; push qword ptr [rcx + rdi*8 - 0xb] ; call qword ptr [rdx]
0x000000000017acaa : cmc ; push qword ptr [rcx + rdi*8 - 0xb] ; push qword ptr [rcx + rdi*8 - 0xb] ; call qword ptr [rdx]
0x00000000000cfae3 : cmc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018a632 : cmc ; push qword ptr [rdx + rdi*2 - 0x57c3ffff] ; cmc ; jmp rsp
0x0000000000051147 : cmc ; retf
0x000000000005cbb4 : cmc ; sar bh, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000015e027 : cmc ; sub eax, edx ; ret
0x00000000001764a5 : cmc ; xlatb ; ret 0x4e27
0x00000000000bf9b8 : cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000ebd78 : cmova eax, edx ; ret
0x00000000000c06ad : cmova edx, eax ; mov eax, 0xd9 ; syscall
0x00000000000c06ac : cmova rdx, rax ; mov eax, 0xd9 ; syscall
0x000000000007de29 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000001104b2 : cmovae eax, edi ; ret
0x000000000007de28 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004b042 : cmovb eax, edi ; pop rbx ; pop rbp ; ret
0x000000000004b0c9 : cmovb eax, edi ; ret
0x00000000000f763c : cmovb eax, edx ; ret
0x000000000004b041 : cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x000000000004b0c8 : cmovb rax, rdi ; ret
0x00000000000f763b : cmovb rax, rdx ; ret
0x0000000000087558 : cmovbe eax, edx ; ret
0x00000000000de0fa : cmovbe esi, ecx ; syscall
0x00000000000de0f9 : cmovbe rsi, r9 ; syscall
0x00000000000ee27a : cmove eax, ebx ; pop rbx ; ret
0x00000000000a18e4 : cmove eax, ecx ; pop rbx ; ret
0x000000000003ad4a : cmove eax, ecx ; ret
0x00000000000887d8 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000b45ec : cmove eax, edx ; add rsp, 0x58 ; ret
0x0000000000085533 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000a18ac : cmove eax, edx ; pop rbx ; ret
0x000000000002e6eb : cmove eax, edx ; ret
0x000000000007a8af : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077d6c : cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000007588f : cmove r8, rcx ; ret
0x00000000000ee279 : cmove rax, rbx ; pop rbx ; ret
0x00000000000a18e3 : cmove rax, rcx ; pop rbx ; ret
0x00000000000887e9 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000b45eb : cmove rax, rdx ; add rsp, 0x58 ; ret
0x0000000000085532 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000a18ab : cmove rax, rdx ; pop rbx ; ret
0x000000000002e6ea : cmove rax, rdx ; ret
0x000000000007264b : cmovg eax, ecx ; test rdx, rdx ; jne 0x72649 ; ret
0x000000000007bc4b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7bc49 ; ret
0x00000000000b2d02 : cmovg eax, edx ; ret
0x0000000000126a8b : cmovl eax, dword ptr [rcx] ; fmul dword ptr [rcx + 0x39] ; ret 0x820f
0x000000000008804b : cmovl edi, dword ptr [rcx] ; ret
0x00000000000c3771 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ad5e : cmovne eax, ecx ; ret
0x0000000000089faf : cmovne eax, edi ; ret
0x00000000000b3427 : cmovne eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000122aa2 : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000008a6d6 : cmovne eax, edx ; pop rbx ; ret
0x0000000000087301 : cmovne eax, edx ; ret
0x00000000001540f4 : cmovne eax, edx ; vzeroupper ; ret
0x00000000000ff61b : cmovne eax, esi ; ret
0x00000000000c4b82 : cmovne edx, eax ; mov rax, rdx ; ret
0x0000000000084e79 : cmovne rax, rcx ; ret
0x0000000000089fae : cmovne rax, rdi ; ret
0x0000000000122aa1 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000008a6d5 : cmovne rax, rdx ; pop rbx ; ret
0x0000000000087300 : cmovne rax, rdx ; ret
0x00000000001540f3 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000000c4b81 : cmovne rdx, rax ; mov rax, rdx ; ret
0x00000000000fd9e2 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000069bdb : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret
0x00000000000ecfa8 : cmovns eax, edx ; ret
0x00000000000fd9e1 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000917f8 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x0000000000122700 : cmovs eax, dword ptr [rbx - 0x2776e73c] ; pop rbx ; pop rbp ; ret
0x0000000000127319 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000038e56 : cmovs eax, edx ; pop rbx ; ret
0x0000000000024b8c : cmovs eax, edx ; ret
0x0000000000080e08 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x00000000000731a8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x731a9 ; lea eax, [rdx + rdi] ; ret
0x00000000000a188e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000a1920 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000034fe6 : cmovs esp, dword ptr [rcx] ; ret 0xb848
0x000000000014fd88 : cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000014f9e0 : cmp ah, byte ptr [rbx + 0x1f] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014f8c8 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000019ca00 : cmp ah, dh ; add byte ptr [rax], al ; in al, dx ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000000f5b83 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000cefa8 : cmp al, 0x11 ; je 0xcefb6 ; xor eax, eax ; ret
0x000000000008a001 : cmp al, 0x24 ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000044b19 : cmp al, 0x24 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x000000000007bfe7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000bf9f8 : cmp al, 0x24 ; mov eax, 0xe6 ; syscall
0x0000000000036a16 : cmp al, 0x24 ; mov eax, ecx ; syscall
0x000000000012c4cc : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x1d8] ; jmp rax
0x000000000019fb04 : cmp al, 0x25 ; add dword ptr [rax], eax ; fdiv dword ptr [rdx - 0xc] ; call qword ptr [rcx]
0x0000000000115e35 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cc02c : cmp al, 0x2e ; jne 0xcbffd ; jmp 0xcc03e
0x0000000000186b2c : cmp al, 0x2e ; sti ; jmp rdx
0x000000000007ef35 : cmp al, 0x30 ; ret
0x0000000000189d98 : cmp al, 0x32 ; call qword ptr [rax]
0x0000000000084236 : cmp al, 0x33 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000841d3 : cmp al, 0x33 ; add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008167e : cmp al, 0x33 ; add byte ptr [rcx], bh ; ret 0xa7e
0x00000000001a2fb4 : cmp al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x00000000000cc028 : cmp al, 0x3d ; je 0xcc08f ; cmp al, 0x2e ; jne 0xcc001 ; jmp 0xcc042
0x00000000000c91ec : cmp al, 0x3f ; jne 0xc91d9 ; mov eax, 1 ; ret
0x0000000000175120 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001a2204 : cmp al, 0x4c ; add dword ptr [rax], eax ; js 0x1a2208 ; hlt ; jmp rcx
0x000000000018cf58 : cmp al, 0x4f ; cli ; call rax
0x000000000018d5a4 : cmp al, 0x51 ; add al, byte ptr [rax] ; sub al, 0xc8 ; std ; call rsp
0x0000000000174023 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000018a5c8 : cmp al, 0x6b ; cmc ; call rax
0x00000000000eb908 : cmp al, 0x75 ; adc al, ch ; nop ; retf 0xffff
0x0000000000196434 : cmp al, 0x7e ; out dx, al ; jmp qword ptr [rbx]
0x0000000000198e34 : cmp al, 0x7e ; sti ; call rsp
0x0000000000199014 : cmp al, 0x80 ; sti ; call qword ptr [rax]
0x0000000000189dd0 : cmp al, 0x82 ; jmp qword ptr [rax]
0x00000000001a6004 : cmp al, 0x8a ; add dword ptr [rax], eax ; sub byte ptr [rsi + rsi*8], dl ; call rdx
0x000000000018d0e4 : cmp al, 0x8d ; add dword ptr [rax], eax ; sub al, 0x7c ; cli ; call rsp
0x0000000000189e98 : cmp al, 0x91 ; jmp qword ptr [rax]
0x0000000000176b0b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000001a0694 : cmp al, 0x9f ; hlt ; call rcx
0x0000000000189880 : cmp al, 0xa4 ; int1 ; call qword ptr [rax]
0x000000000018a638 : cmp al, 0xa8 ; cmc ; jmp rsp
0x00000000000bd22a : cmp al, 0xac ; mov rsi, r15 ; call 0xf9d07
0x000000000019e104 : cmp al, 0xb ; add dword ptr [rax], eax ; pop rax ; push rcx ; jmp rdx
0x000000000018c930 : cmp al, 0xb5 ; stc ; jmp rsp
0x0000000000033939 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x0000000000051843 : cmp al, 0xc ; ret 0x4489
0x00000000001888f8 : cmp al, 0xc2 ; out dx, al ; inc esp ; retf 0
0x000000000018b52c : cmp al, 0xc3 ; add dword ptr [rax], eax ; add al, 0xf7 ; call qword ptr [rax - 0x3d]
0x0000000000188910 : cmp al, 0xc3 ; out dx, al ; push qword ptr [rax] ; retf
0x000000000019ae74 : cmp al, 0xdf ; sti ; jmp rsi
0x000000000018cca0 : cmp al, 0xe9 ; stc ; call qword ptr [rax]
0x00000000000d6538 : cmp al, 0xf ; test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; retf 0x840f
0x00000000000fd87f : cmp al, 0xf2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a357d : cmp al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000189330 : cmp al, 0xf6 ; out dx, eax ; call rax
0x000000000018741d : cmp al, 0xfb ; call rax
0x0000000000186575 : cmp al, 0xfd ; call qword ptr [rax]
0x0000000000186485 : cmp al, 0xfd ; jmp rax
0x0000000000186481 : cmp al, 0xfd ; push rax ; cmp al, 0xfd ; jmp rax
0x00000000001a11e9 : cmp al, 1 ; add ah, ah ; ret
0x0000000000051be9 : cmp al, 1 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000018c94d : cmp al, 2 ; add byte ptr [rax + rdi*4], ch ; stc ; jmp rax
0x000000000015b6a3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009d2a0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000001a0f98 : cmp al, al ; hlt ; jmp qword ptr [rcx]
0x00000000000c5062 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000190fe1 : cmp al, byte ptr [rax] ; add byte ptr [rbp + rsi*8 - 0x16], ch ; call qword ptr [rdx]
0x00000000001a103d : cmp al, byte ptr [rcx] ; add byte ptr [rax - 0x3f], al ; hlt ; call qword ptr [rsi]
0x00000000001a1051 : cmp al, byte ptr [rcx] ; add byte ptr [rcx + rax*8 - 0xc], cl ; jmp qword ptr [rcx]
0x0000000000157172 : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000015e4e6 : cmp al, byte ptr [rsi - 1] ; jne 0x15e50c ; xor eax, eax ; ret
0x000000000010b670 : cmp al, ch ; cli ; retf 0xfffd
0x0000000000086847 : cmp al, ch ; ret
0x00000000000f2f00 : cmp al, ch ; retf 0xf7aa
0x0000000000091a56 : cmp al, dh ; ret
0x0000000000091a55 : cmp al, r14b ; ret
0x000000000008a6aa : cmp bh, 0x3d ; jne 0x8a672 ; pop rbx ; ret
0x0000000000034a06 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x000000000018c551 : cmp bh, cl ; call rax
0x00000000000ff619 : cmp bh, cl ; cmovne eax, esi ; ret
0x000000000018c559 : cmp bh, cl ; jmp rsp
0x0000000000198fc5 : cmp bh, dl ; call qword ptr [rax]
0x00000000000ff5a4 : cmp bh, dl ; cmovne eax, ecx ; ret
0x00000000000f8aac : cmp bl, 0xff ; dec dword ptr [rax + 0xf] ; ret 0xc748
0x0000000000078819 : cmp bl, al ; nop dword ptr [rax + rax] ; ret
0x0000000000187451 : cmp bl, bh ; call rax
0x0000000000076069 : cmp bl, byte ptr [rbx + 0x44] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f1f06 : cmp bl, byte ptr [rbx + 0x5d] ; ret
0x0000000000002da5 : cmp bl, byte ptr [rip - 0x165c2f47] ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x000000000008bde6 : cmp bl, dl ; jb 0x8bdcc ; mov rdx, rax ; jmp 0x8bd83
0x00000000000303f7 : cmp byte ptr [eax], al ; mov eax, 0xca ; syscall
0x00000000000b2c06 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000d925a : cmp byte ptr [r13 - 0x77], r9b ; retf 0xc149
0x0000000000074195 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000032a72 : cmp byte ptr [r8], al ; mov eax, 0xca ; syscall
0x00000000000db519 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076ecb : cmp byte ptr [rax + 0x29], cl ; ret
0x000000000006fc9f : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000079669 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000079563 : cmp byte ptr [rax + 0x39], cl ; ret 0x4f74
0x00000000000d3b51 : cmp byte ptr [rax + 0x63], cl ; ret
0x00000000000d3b50 : cmp byte ptr [rax + 0x63], r9b ; ret
0x00000000000db913 : cmp byte ptr [rax + 0xca], bh ; syscall
0x0000000000045104 : cmp byte ptr [rax + 1], 0 ; jne 0x45107 ; pop rbx ; ret
0x0000000000091a97 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000006f3f5 : cmp byte ptr [rax + 1], cl ; ret
0x000000000006ed88 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000001a2600 : cmp byte ptr [rax + 1], dl ; add ah, ch ; add al, 0xf5 ; call qword ptr [rdi]
0x00000000000d888c : cmp byte ptr [rax - 0x73], cl ; jl 0xd88bd ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000027281 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000001015a7 : cmp byte ptr [rax - 0x75], cl ; jp 0x101604 ; mov rsi, rdx ; call rax
0x0000000000074196 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000011df2c : cmp byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x00000000001202a4 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001004b8 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000008a533 : cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000012f0cd : cmp byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000d0c99 : cmp byte ptr [rax - 0x77], cl ; xlatb ; call 0xcd766
0x00000000001004b7 : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000118525 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000119eee : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011f92e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000053aa8 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000f36de : cmp byte ptr [rax - 1], 0x2f ; jne 0xf3716 ; mov rdx, rax ; jmp 0xf36fe
0x00000000000f36dd : cmp byte ptr [rax - 1], 0x2f ; jne 0xf3717 ; mov rdx, rax ; jmp 0xf36ff
0x0000000000121f37 : cmp byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001486b8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000091a86 : cmp byte ptr [rax], ah ; ret
0x000000000000e2c0 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xa
0x00000000000c4ed2 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000039885 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007c273 : cmp byte ptr [rax], al ; je 0x7c285 ; ret
0x000000000002db26 : cmp byte ptr [rax], al ; mov byte ptr [rip + 0x388fcf], dl ; ret
0x00000000000302fa : cmp byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000002e7d2 : cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x000000000002ef49 : cmp byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002b4d5 : cmp byte ptr [rax], al ; ret
0x000000000014f862 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000123469 : cmp byte ptr [rax], bl ; je 0x123475 ; ret
0x00000000000db51a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096d90 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000091f56 : cmp byte ptr [rax], dh ; ret
0x0000000000091a76 : cmp byte ptr [rax], dl ; ret
0x0000000000091a75 : cmp byte ptr [rax], r10b ; ret
0x0000000000091a85 : cmp byte ptr [rax], r12b ; ret
0x0000000000091f55 : cmp byte ptr [rax], r14b ; ret
0x0000000000096d8f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000b2c0a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000b2c09 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000008b32a : cmp byte ptr [rbp + 0x31], al ; fild dword ptr [rbp + 0x38] ; retf 0x1975
0x0000000000083938 : cmp byte ptr [rbp + 0x33], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000f385e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000008b39d : cmp byte ptr [rbp - 0x77], al ; retf
0x00000000000d925b : cmp byte ptr [rbp - 0x77], cl ; retf 0xc149
0x00000000000cda49 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000162be6 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000070d89 : cmp byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000006f641 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000b3dfe : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; sub rax, rdx ; ret
0x00000000000ceab6 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xceac7 ; pop rbx ; ret
0x00000000000b2c07 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000ee336 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000313e4 : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x00000000001284dc : cmp byte ptr [rcx - 0x77], cl ; ret
0x0000000000002cec : cmp byte ptr [rcx], ah ; loop 0x2d03 ; retf
0x00000000001486b9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000009e6c4 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x000000000010e5b1 : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000d177e : cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x000000000008e124 : cmp byte ptr [rdi + rax], dl ; je 0x8e126 ; ret
0x0000000000195878 : cmp byte ptr [rdi - 0x12], dl ; jmp qword ptr [rsi]
0x00000000000020ac : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000002f3f0 : cmp byte ptr [rdi], 0 ; jne 0x2f409 ; add rsp, 0x18 ; ret
0x000000000002f430 : cmp byte ptr [rdi], 0 ; jne 0x2f449 ; add rsp, 0x18 ; ret
0x0000000000038e28 : cmp byte ptr [rdi], 0 ; jne 0x38e36 ; pop rbx ; ret
0x000000000007c238 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000cfe5a : cmp byte ptr [rdi], cl ; test byte ptr [rdi - 0xa000000], bh ; ret
0x000000000004214f : cmp byte ptr [rdi], cl ; test byte ptr [rdi], ah ; add al, 0 ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000057177 : cmp byte ptr [rdi], cl ; test dword ptr [rdx - 0x7cb80000], ecx ; ret 0x4801
0x00000000000fdd15 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5422
0x0000000000159f4d : cmp byte ptr [rdi], dl ; ret
0x000000000015aa60 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000015aa49 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015aa32 : cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001594ee : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000088aeb : cmp byte ptr [rip + 0x450f4800], cl ; ret 0xfc3
0x00000000000cd090 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xcd0a8 ; xor eax, eax ; ret
0x000000000002db7a : cmp byte ptr [rsi - 0x27], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000194aa8 : cmp byte ptr [rsi], ah ; out dx, al ; call qword ptr [rdi]
0x00000000001a2af8 : cmp byte ptr [rsi], ch ; cmc ; call qword ptr [rax]
0x00000000000d18a6 : cmp byte ptr [rsi], cl ; je 0xd1845 ; ret
0x0000000000192c00 : cmp byte ptr [rsi], dl ; add byte ptr [rsp], cl ; in eax, dx ; jmp qword ptr [rax]
0x0000000000105496 : cmp ch, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001160b5 : cmp ch, byte ptr [rdx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001a3285 : cmp ch, dh ; call qword ptr [rsi]
0x00000000001a5a48 : cmp ch, dh ; cmc ; call qword ptr [rdi]
0x00000000001a32d5 : cmp ch, dh ; jmp qword ptr [rcx]
0x000000000007f332 : cmp cl, byte ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7502
0x000000000004e2a6 : cmp cl, byte ptr [rax - 0x77] ; ret 0x894c
0x0000000000112001 : cmp cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000001324f1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000132641 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000132791 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x00000000001328e1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000132a31 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000132b81 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000132cd1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000132e21 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000132f71 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x00000000001330c1 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000133211 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000133361 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x00000000001334b1 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x0000000000133601 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000133751 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000013772a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x00000000001378aa : cmp cl, byte ptr [rdi] ; retf 0xf02
0x0000000000137a2a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x0000000000137baa : cmp cl, byte ptr [rdi] ; retf 0xf04
0x0000000000137d2a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x0000000000137eaa : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000013802a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x00000000001381aa : cmp cl, byte ptr [rdi] ; retf 0xf08
0x000000000013832a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x00000000001384aa : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000013862a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x00000000001387aa : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000013892a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x0000000000138aaa : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x0000000000138c2a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x0000000000176ee6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000001a54b8 : cmp cl, ch ; cmc ; call qword ptr [rbx]
0x00000000000dfc30 : cmp dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xabf
0x00000000000e0557 : cmp dh, 0xff ; dec dword ptr [rax - 0x77] ; retf 0xabf
0x00000000000fe344 : cmp dh, al ; add cl, byte ptr [rdx] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fe35c : cmp dh, al ; add dword ptr [rax], esp ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001540f1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000038e25 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000015ca3a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000177e59 : cmp dh, ch ; call rbx
0x0000000000177e55 : cmp dh, ch ; inc dword ptr [rbp + 0x38] ; out dx, al ; call rbx
0x00000000000ff648 : cmp dh, cl ; cmovne eax, edx ; ret
0x0000000000097a85 : cmp dh, dh ; ret 0x7501
0x00000000000d9d76 : cmp dh, dh ; ret 0xf08
0x0000000000178f15 : cmp dh, dl ; call rax
0x00000000000ff5de : cmp dh, dl ; cmovne eax, ecx ; ret
0x000000000008a6a9 : cmp dil, 0x3d ; jne 0x8a673 ; pop rbx ; ret
0x00000000000ff618 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000ff5a3 : cmp dil, dl ; cmovne eax, ecx ; ret
0x00000000000a17f0 : cmp dl, 1 ; ja 0xa1813 ; jb 0xa1802 ; mov byte ptr [rdi], cl ; ret
0x000000000015baab : cmp dl, 1 ; jb 0x15babd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015c17a : cmp dl, 1 ; jb 0x15c188 ; mov byte ptr [rdi], cl ; ret
0x0000000000087515 : cmp dl, 3 ; je 0x87541 ; movsx eax, dl ; ret
0x0000000000084eed : cmp dl, al ; jne 0x84ee0 ; sub rax, 0x10 ; ret
0x0000000000002c72 : cmp dl, byte ptr [rdi] ; ret
0x0000000000178ec1 : cmp dl, dh ; call rax
0x0000000000178ecd : cmp dl, dh ; inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x0000000000178ebd : cmp dl, dh ; inc eax ; cmp dl, dh ; call rax
0x0000000000178ec5 : cmp dl, dh ; jmp rax
0x0000000000178eb9 : cmp dl, dh ; push qword ptr [rax - 0x3f000dc8] ; cmp dl, dh ; call rax
0x0000000000178ec9 : cmp dl, dh ; push rax ; cmp dl, dh ; inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x0000000000084eec : cmp dl, r8b ; jne 0x84ee1 ; sub rax, 0x10 ; ret
0x00000000000c62a6 : cmp dword ptr [rax + 0x20], edi ; ret
0x00000000000d1f64 : cmp dword ptr [rax + 0x63], ecx ; retf 0xeeb
0x0000000000131a47 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014b017 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000123468 : cmp dword ptr [rax], 0x18 ; je 0x123476 ; ret
0x0000000000023ba3 : cmp dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x00000000000216ff : cmp dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000021760 : cmp dword ptr [rax], eax ; ret
0x0000000000024a74 : cmp dword ptr [rax], eax ; test eax, eax ; je 0x24a87 ; ret
0x00000000000f0293 : cmp dword ptr [rbp + 0x5f6fff8], ecx ; ret 0x2c85
0x00000000000f2ccf : cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000801f1 : cmp dword ptr [rbx + rsi], -0x48 ; retf 0
0x0000000000138e48 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000001027f9 : cmp dword ptr [rcx + rdx*8 - 8], 0 ; je 0x102820 ; leave ; ret
0x00000000000279ed : cmp dword ptr [rcx - 0xa], eax ; ret 0xf08
0x00000000001a0ec9 : cmp dword ptr [rcx], eax ; add byte ptr [rsi + rdi*4], ah ; hlt ; call qword ptr [rcx]
0x00000000000fe4a1 : cmp dword ptr [rdi + 0x10], 0 ; je 0xfe4b8 ; xor eax, eax ; ret
0x0000000000113f0d : cmp dword ptr [rdi + 0x10], 2 ; je 0x113f1f ; ret
0x0000000000077c54 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000001149be : cmp dword ptr [rdi + 0x18], eax ; sete al ; ret
0x000000000007c271 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7c287 ; ret
0x00000000001149de : cmp dword ptr [rdi + 4], ecx ; sete dl ; and eax, edx ; ret
0x00000000000b1c34 : cmp dword ptr [rdi + 8], edx ; jne 0xb1c0a ; ret
0x000000000010264a : cmp dword ptr [rdi], 0 ; je 0x10265e ; ret
0x000000000002177b : cmp dword ptr [rdx + 0xd8], eax ; jne 0x2174f ; ret
0x000000000018c8d5 : cmp dword ptr [rdx], eax ; add byte ptr [rdi + rbp*4 - 7], bh ; jmp rax
0x000000000018c8bd : cmp dword ptr [rdx], eax ; add byte ptr [rsp + rbp*4], ch ; stc ; jmp qword ptr [rax]
0x00000000000fc009 : cmp dword ptr [rip + 0x2ba850], 0 ; jne 0xfbfdc ; jmp 0xfbfd3
0x00000000000fa449 : cmp dword ptr [rip + 0x2bc3f8], 0 ; jne 0xfa41c ; jmp 0xfa413
0x00000000000c3529 : cmp dword ptr [rip + 0x2f32c0], 0 ; jne 0xc34fc ; jmp 0xc34f3
0x000000000011f0c0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x11f0d8 ; xor eax, eax ; ret
0x0000000000072b78 : cmp dword ptr [rsi + 0x30], 0 ; je 0x72b87 ; ret
0x000000000008383a : cmp dword ptr [rsi + 0x33], eax ; add byte ptr [rcx], al ; pop rbx ; pop rbp ; ret
0x00000000000f198c : cmp dword ptr [rsi], 0 ; je 0xf199e ; ret
0x00000000000039d2 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x0000000000123467 : cmp dword ptr fs:[rax], 0x18 ; je 0x123477 ; ret
0x0000000000023d7e : cmp dword ptr fs:[rax], eax ; mov eax, 0xca ; syscall
0x0000000000023c72 : cmp dword ptr gs:[rax], eax ; mov eax, 0xca ; syscall
0x000000000012a8bf : cmp dx, cx ; sete al ; ret
0x0000000000114985 : cmp dx, word ptr [rsi] ; je 0x114996 ; ret
0x00000000000ebf6d : cmp eax, -0x5f ; je 0xebf90 ; neg eax ; pop rbx ; ret
0x00000000000ec18d : cmp eax, -0x5f ; je 0xec1b0 ; neg eax ; pop rbx ; ret
0x000000000010f6e0 : cmp eax, -0xb ; je 0x10f6de ; pop rbx ; ret
0x000000000012b86e : cmp eax, -1 ; je 0x12b889 ; add rsp, 8 ; ret
0x0000000000051bfc : cmp eax, -1 ; je 0x51c16 ; ret
0x0000000000072b93 : cmp eax, -1 ; je 0x72ba6 ; pop rbx ; ret
0x0000000000102808 : cmp eax, -1 ; jne 0x102808 ; xor eax, eax ; leave ; ret
0x00000000000462f4 : cmp eax, -1 ; jne 0x462e8 ; mov rax, rdx ; ret
0x000000000012d14a : cmp eax, -1 ; sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000368b1 : cmp eax, -8 ; jne 0x368a7 ; xor eax, eax ; ret
0x0000000000036901 : cmp eax, -8 ; jne 0x368f7 ; xor eax, eax ; ret
0x0000000000003d73 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000fc00a : cmp eax, 0x2ba850 ; add byte ptr [rbp - 0x3e], dh ; jmp 0xfbfd2
0x00000000000fa44a : cmp eax, 0x2bc3f8 ; add byte ptr [rbp - 0x3e], dh ; jmp 0xfa412
0x00000000000f092b : cmp eax, 0x2c4a18 ; ret
0x00000000000cc029 : cmp eax, 0x2e3c5c74 ; jne 0xcc000 ; jmp 0xcc041
0x00000000000c352a : cmp eax, 0x2f32c0 ; add byte ptr [rbp - 0x3e], dh ; jmp 0xc34f2
0x00000000000c1b27 : cmp eax, 0x2f683c ; call 0x7e547
0x00000000000b53c7 : cmp eax, 0x302d64 ; call 0x2167f
0x0000000000086602 : cmp eax, 0x331908 ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000000ae924 : cmp eax, 0x39480030 ; ret
0x0000000000186579 : cmp eax, 0x3e10fffd ; std ; call qword ptr [rax]
0x0000000000186499 : cmp eax, 0x3e72fffd ; std ; call qword ptr [rax]
0x0000000000186479 : cmp eax, 0x3ef0fffd ; std ; jmp qword ptr [rcx]
0x0000000000187421 : cmp eax, 0x3f50fffb ; sti ; call rax
0x00000000000c6409 : cmp eax, 0x414a53 ; jne 0xc63e0 ; jmp 0xc63c1
0x0000000000089c9f : cmp eax, 0x4800007e ; cmove eax, edx ; ret
0x00000000000a1fff : cmp eax, 0x48000114 ; cmove eax, edx ; ret
0x000000000008734f : cmp eax, 0x48000d57 ; cmovne eax, edx ; ret
0x00000000000f0eff : cmp eax, 0x48fff5fe ; mov eax, ebx ; pop rbx ; ret
0x00000000000c63b4 : cmp eax, 0x5346544e ; jne 0xc63e3 ; xor eax, eax ; ret
0x000000000012942e : cmp eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001544e4 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000053651 : cmp eax, 0x89000063 ; retf 0x348
0x0000000000160b15 : cmp eax, 0x89497fff ; ret
0x000000000017440b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000008a6cf : cmp eax, 0xba ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000001a133d : cmp eax, 0xc7500001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a1385 : cmp eax, 0xc7a80001 ; hlt ; jmp qword ptr [rcx]
0x00000000000d18ff : cmp eax, 0xf3ffffff ; ret
0x000000000008862b : cmp eax, 0xf48000d ; ret 0xfc3
0x0000000000001cc3 : cmp eax, 0xf9a7750 ; retf
0x00000000000ab655 : cmp eax, 0xff ; je 0xab666 ; ret
0x0000000000103dba : cmp eax, 0xfffff000 ; ja 0x103dd0 ; ret
0x000000000003613d : cmp eax, 0xfffff000 ; ja 0x36158 ; ret
0x0000000000036189 : cmp eax, 0xfffff000 ; ja 0x361e0 ; ret
0x0000000000039b54 : cmp eax, 0xfffff000 ; ja 0x39bb8 ; ret
0x0000000000051b88 : cmp eax, 0xfffff000 ; ja 0x51ba0 ; ret
0x0000000000051bbb : cmp eax, 0xfffff000 ; ja 0x51bd0 ; ret
0x00000000000b4518 : cmp eax, 0xfffff000 ; ja 0xb4530 ; ret
0x00000000000b462d : cmp eax, 0xfffff000 ; ja 0xb4648 ; ret
0x00000000000b47ad : cmp eax, 0xfffff000 ; ja 0xb47c8 ; ret
0x00000000000bf942 : cmp eax, 0xfffff000 ; ja 0xbf958 ; ret
0x00000000000c06b8 : cmp eax, 0xfffff000 ; ja 0xc06d0 ; ret
0x00000000000c1702 : cmp eax, 0xfffff000 ; ja 0xc1750 ; ret
0x00000000000c4c17 : cmp eax, 0xfffff000 ; ja 0xc4c80 ; ret
0x00000000000c4cba : cmp eax, 0xfffff000 ; ja 0xc4d28 ; ret
0x00000000000c4de4 : cmp eax, 0xfffff000 ; ja 0xc4e28 ; ret
0x00000000000c5af2 : cmp eax, 0xfffff000 ; ja 0xc5b38 ; ret
0x00000000000c5b62 : cmp eax, 0xfffff000 ; ja 0xc5ba8 ; ret
0x00000000000c5db2 : cmp eax, 0xfffff000 ; ja 0xc5e08 ; ret
0x00000000000c5e32 : cmp eax, 0xfffff000 ; ja 0xc5e88 ; ret
0x00000000000e5de7 : cmp eax, 0xfffff000 ; ja 0xe5e50 ; ret
0x00000000000e5e97 : cmp eax, 0xfffff000 ; ja 0xe5f00 ; ret
0x00000000000e6fb6 : cmp eax, 0xfffff000 ; ja 0xe6fc8 ; ret
0x00000000000e7004 : cmp eax, 0xfffff000 ; ja 0xe7018 ; ret
0x00000000000e7056 : cmp eax, 0xfffff000 ; ja 0xe7068 ; ret
0x00000000000e73ae : cmp eax, 0xfffff000 ; ja 0xe73c8 ; ret
0x00000000000e7412 : cmp eax, 0xfffff000 ; ja 0xe7428 ; ret
0x00000000000e746a : cmp eax, 0xfffff000 ; ja 0xe7480 ; ret
0x00000000000e7655 : cmp eax, 0xfffff000 ; ja 0xe7668 ; ret
0x00000000000e79df : cmp eax, 0xfffff000 ; ja 0xe7a48 ; ret
0x00000000000e7a84 : cmp eax, 0xfffff000 ; ja 0xe7ae8 ; ret
0x00000000000e7b18 : cmp eax, 0xfffff000 ; ja 0xe7b30 ; ret
0x00000000000e7b48 : cmp eax, 0xfffff000 ; ja 0xe7b60 ; ret
0x00000000000e8184 : cmp eax, 0xfffff000 ; ja 0xe81d0 ; ret
0x00000000000e82f4 : cmp eax, 0xfffff000 ; ja 0xe8348 ; ret
0x00000000000ebc04 : cmp eax, 0xfffff000 ; ja 0xebc68 ; ret
0x00000000000ec207 : cmp eax, 0xfffff000 ; ja 0xec288 ; ret
0x00000000000ec2bb : cmp eax, 0xfffff000 ; ja 0xec2d0 ; ret
0x00000000000ec2f0 : cmp eax, 0xfffff000 ; ja 0xec308 ; ret
0x00000000000ec3e7 : cmp eax, 0xfffff000 ; ja 0xec450 ; ret
0x00000000000ec487 : cmp eax, 0xfffff000 ; ja 0xec4e8 ; ret
0x00000000000ec518 : cmp eax, 0xfffff000 ; ja 0xec530 ; ret
0x00000000000ec54d : cmp eax, 0xfffff000 ; ja 0xec580 ; ret
0x00000000000ec5fe : cmp eax, 0xfffff000 ; ja 0xec640 ; ret
0x00000000000ec673 : cmp eax, 0xfffff000 ; ja 0xec6b0 ; ret
0x00000000000ec6c5 : cmp eax, 0xfffff000 ; ja 0xec6d8 ; ret
0x00000000000ec6fb : cmp eax, 0xfffff000 ; ja 0xec710 ; ret
0x00000000000ec728 : cmp eax, 0xfffff000 ; ja 0xec740 ; ret
0x00000000000ec92b : cmp eax, 0xfffff000 ; ja 0xec958 ; ret
0x00000000000eca8e : cmp eax, 0xfffff000 ; ja 0xecae8 ; ret
0x00000000000ecc51 : cmp eax, 0xfffff000 ; ja 0xecc68 ; ret
0x00000000000ecc92 : cmp eax, 0xfffff000 ; ja 0xecca8 ; ret
0x00000000000ed1e4 : cmp eax, 0xfffff000 ; ja 0xed248 ; ret
0x00000000000ed284 : cmp eax, 0xfffff000 ; ja 0xed2e8 ; ret
0x00000000000ed32a : cmp eax, 0xfffff000 ; ja 0xed398 ; ret
0x00000000000ed3da : cmp eax, 0xfffff000 ; ja 0xed448 ; ret
0x00000000000ed742 : cmp eax, 0xfffff000 ; ja 0xed798 ; ret
0x00000000000ed7c2 : cmp eax, 0xfffff000 ; ja 0xed818 ; ret
0x00000000000ed854 : cmp eax, 0xfffff000 ; ja 0xed8b0 ; ret
0x00000000000ed904 : cmp eax, 0xfffff000 ; ja 0xed960 ; ret
0x00000000000edb77 : cmp eax, 0xfffff000 ; ja 0xedbe8 ; ret
0x00000000000edd84 : cmp eax, 0xfffff000 ; ja 0xeddd0 ; ret
0x00000000000ede34 : cmp eax, 0xfffff000 ; ja 0xede80 ; ret
0x00000000000edee4 : cmp eax, 0xfffff000 ; ja 0xedef8 ; ret
0x00000000000ef1c8 : cmp eax, 0xfffff000 ; ja 0xef1e0 ; ret
0x00000000000ef252 : cmp eax, 0xfffff000 ; ja 0xef270 ; ret
0x00000000000ef2f9 : cmp eax, 0xfffff000 ; ja 0xef318 ; ret
0x00000000000ef34d : cmp eax, 0xfffff000 ; ja 0xef368 ; ret
0x00000000000ef388 : cmp eax, 0xfffff000 ; ja 0xef3a0 ; ret
0x00000000000ef3b8 : cmp eax, 0xfffff000 ; ja 0xef3d0 ; ret
0x00000000000f0c14 : cmp eax, 0xfffff000 ; ja 0xf0c78 ; ret
0x00000000000f307f : cmp eax, 0xfffff000 ; ja 0xf3098 ; ret
0x00000000000f5b05 : cmp eax, 0xfffff000 ; ja 0xf5b18 ; ret
0x00000000000f5be8 : cmp eax, 0xfffff000 ; ja 0xf5c00 ; ret
0x00000000000f5c8d : cmp eax, 0xfffff000 ; ja 0xf5d10 ; ret
0x00000000000f5d40 : cmp eax, 0xfffff000 ; ja 0xf5d58 ; ret
0x00000000000f5e67 : cmp eax, 0xfffff000 ; ja 0xf5ed0 ; ret
0x00000000000f5f07 : cmp eax, 0xfffff000 ; ja 0xf5f70 ; ret
0x00000000000f5fb7 : cmp eax, 0xfffff000 ; ja 0xf6020 ; ret
0x00000000000f6067 : cmp eax, 0xfffff000 ; ja 0xf60e8 ; ret
0x00000000000f6124 : cmp eax, 0xfffff000 ; ja 0xf6188 ; ret
0x00000000000f61bc : cmp eax, 0xfffff000 ; ja 0xf6220 ; ret
0x00000000000f6240 : cmp eax, 0xfffff000 ; ja 0xf6258 ; ret
0x00000000000f6ac4 : cmp eax, 0xfffff000 ; ja 0xf6b28 ; ret
0x00000000000f6b94 : cmp eax, 0xfffff000 ; ja 0xf6bf8 ; ret
0x00000000000f6cfd : cmp eax, 0xfffff000 ; ja 0xf6d78 ; ret
0x00000000000f6db7 : cmp eax, 0xfffff000 ; ja 0xf6e38 ; ret
0x00000000000f6e74 : cmp eax, 0xfffff000 ; ja 0xf6ed8 ; ret
0x00000000000f6f1d : cmp eax, 0xfffff000 ; ja 0xf6f98 ; ret
0x00000000000f6fd4 : cmp eax, 0xfffff000 ; ja 0xf7038 ; ret
0x00000000000f7077 : cmp eax, 0xfffff000 ; ja 0xf70f8 ; ret
0x00000000000f7407 : cmp eax, 0xfffff000 ; ja 0xf7470 ; ret
0x00000000000f74a7 : cmp eax, 0xfffff000 ; ja 0xf7518 ; ret
0x00000000000f7557 : cmp eax, 0xfffff000 ; ja 0xf75c0 ; ret
0x00000000000f76b7 : cmp eax, 0xfffff000 ; ja 0xf7720 ; ret
0x00000000000f7757 : cmp eax, 0xfffff000 ; ja 0xf77c8 ; ret
0x00000000000f77f8 : cmp eax, 0xfffff000 ; ja 0xf7810 ; ret
0x00000000000f7828 : cmp eax, 0xfffff000 ; ja 0xf7840 ; ret
0x00000000000f7868 : cmp eax, 0xfffff000 ; ja 0xf7880 ; ret
0x00000000000f78b6 : cmp eax, 0xfffff000 ; ja 0xf78f0 ; ret
0x00000000000f790b : cmp eax, 0xfffff000 ; ja 0xf7920 ; ret
0x00000000000f7938 : cmp eax, 0xfffff000 ; ja 0xf7950 ; ret
0x00000000000f7968 : cmp eax, 0xfffff000 ; ja 0xf7980 ; ret
0x00000000000f799b : cmp eax, 0xfffff000 ; ja 0xf79b0 ; ret
0x00000000000f79c8 : cmp eax, 0xfffff000 ; ja 0xf79e0 ; ret
0x0000000000036108 : cmp eax, 0xfffff001 ; jae 0x36117 ; ret
0x0000000000036518 : cmp eax, 0xfffff001 ; jae 0x36527 ; ret
0x0000000000045b52 : cmp eax, 0xfffff001 ; jae 0x45b65 ; xor eax, eax ; ret
0x00000000000b6ee8 : cmp eax, 0xfffff001 ; jae 0xb6ef7 ; ret
0x00000000000b6f18 : cmp eax, 0xfffff001 ; jae 0xb6f27 ; ret
0x00000000000c4b38 : cmp eax, 0xfffff001 ; jae 0xc4b47 ; ret
0x00000000000c4d58 : cmp eax, 0xfffff001 ; jae 0xc4d67 ; ret
0x00000000000c5069 : cmp eax, 0xfffff001 ; jae 0xc5078 ; ret
0x00000000000c50f8 : cmp eax, 0xfffff001 ; jae 0xc5107 ; ret
0x00000000000c5ab8 : cmp eax, 0xfffff001 ; jae 0xc5ac7 ; ret
0x00000000000c5c58 : cmp eax, 0xfffff001 ; jae 0xc5c67 ; ret
0x00000000000c5c88 : cmp eax, 0xfffff001 ; jae 0xc5c97 ; ret
0x00000000000c5ce8 : cmp eax, 0xfffff001 ; jae 0xc5cf7 ; ret
0x00000000000c5d18 : cmp eax, 0xfffff001 ; jae 0xc5d27 ; ret
0x00000000000c5d48 : cmp eax, 0xfffff001 ; jae 0xc5d57 ; ret
0x00000000000c5d78 : cmp eax, 0xfffff001 ; jae 0xc5d87 ; ret
0x00000000000ddf68 : cmp eax, 0xfffff001 ; jae 0xddf77 ; ret
0x00000000000ddf98 : cmp eax, 0xfffff001 ; jae 0xddfa7 ; ret
0x00000000000ddfc8 : cmp eax, 0xfffff001 ; jae 0xddfd7 ; ret
0x00000000000ddff8 : cmp eax, 0xfffff001 ; jae 0xde007 ; ret
0x00000000000de028 : cmp eax, 0xfffff001 ; jae 0xde037 ; ret
0x00000000000de058 : cmp eax, 0xfffff001 ; jae 0xde067 ; ret
0x00000000000de088 : cmp eax, 0xfffff001 ; jae 0xde097 ; ret
0x00000000000de0b8 : cmp eax, 0xfffff001 ; jae 0xde0c7 ; ret
0x00000000000e6f18 : cmp eax, 0xfffff001 ; jae 0xe6f27 ; ret
0x00000000000e74b8 : cmp eax, 0xfffff001 ; jae 0xe74c7 ; ret
0x00000000000e74e8 : cmp eax, 0xfffff001 ; jae 0xe74f7 ; ret
0x00000000000e75c8 : cmp eax, 0xfffff001 ; jae 0xe75d7 ; ret
0x00000000000e75f8 : cmp eax, 0xfffff001 ; jae 0xe7607 ; ret
0x00000000000e76b8 : cmp eax, 0xfffff001 ; jae 0xe76c7 ; ret
0x00000000000e76e8 : cmp eax, 0xfffff001 ; jae 0xe76f7 ; ret
0x00000000000e7f08 : cmp eax, 0xfffff001 ; jae 0xe7f17 ; ret
0x00000000000e81f8 : cmp eax, 0xfffff001 ; jae 0xe8207 ; ret
0x00000000000e8228 : cmp eax, 0xfffff001 ; jae 0xe8237 ; ret
0x00000000000e8258 : cmp eax, 0xfffff001 ; jae 0xe8267 ; ret
0x00000000000e8288 : cmp eax, 0xfffff001 ; jae 0xe8297 ; ret
0x00000000000e82b8 : cmp eax, 0xfffff001 ; jae 0xe82c7 ; ret
0x00000000000e8378 : cmp eax, 0xfffff001 ; jae 0xe8387 ; ret
0x00000000000e83a8 : cmp eax, 0xfffff001 ; jae 0xe83b7 ; ret
0x00000000000e8bd8 : cmp eax, 0xfffff001 ; jae 0xe8be7 ; ret
0x00000000000e8c08 : cmp eax, 0xfffff001 ; jae 0xe8c17 ; ret
0x00000000000e8c38 : cmp eax, 0xfffff001 ; jae 0xe8c47 ; ret
0x00000000000e8c6b : cmp eax, 0xfffff001 ; jae 0xe8c7a ; ret
0x00000000000e9388 : cmp eax, 0xfffff001 ; jae 0xe9397 ; ret
0x00000000000e93bb : cmp eax, 0xfffff001 ; jae 0xe93ca ; ret
0x00000000000e93e8 : cmp eax, 0xfffff001 ; jae 0xe93f7 ; ret
0x00000000000e9418 : cmp eax, 0xfffff001 ; jae 0xe9427 ; ret
0x00000000000e9448 : cmp eax, 0xfffff001 ; jae 0xe9457 ; ret
0x00000000000e947b : cmp eax, 0xfffff001 ; jae 0xe948a ; ret
0x00000000000e94a8 : cmp eax, 0xfffff001 ; jae 0xe94b7 ; ret
0x00000000000e94d8 : cmp eax, 0xfffff001 ; jae 0xe94e7 ; ret
0x00000000000e9508 : cmp eax, 0xfffff001 ; jae 0xe9517 ; ret
0x00000000000ec1cb : cmp eax, 0xfffff001 ; jae 0xec1da ; ret
0x00000000000eccc8 : cmp eax, 0xfffff001 ; jae 0xeccd7 ; ret
0x00000000000ecfd8 : cmp eax, 0xfffff001 ; jae 0xecfe7 ; ret
0x00000000000ed1a8 : cmp eax, 0xfffff001 ; jae 0xed1b7 ; ret
0x00000000000eda98 : cmp eax, 0xfffff001 ; jae 0xedaa7 ; ret
0x00000000000edb38 : cmp eax, 0xfffff001 ; jae 0xedb47 ; ret
0x00000000000edd18 : cmp eax, 0xfffff001 ; jae 0xedd27 ; ret
0x00000000000edd48 : cmp eax, 0xfffff001 ; jae 0xedd57 ; ret
0x00000000000eddf8 : cmp eax, 0xfffff001 ; jae 0xede07 ; ret
0x00000000000edea8 : cmp eax, 0xfffff001 ; jae 0xedeb7 ; ret
0x00000000000ee1a8 : cmp eax, 0xfffff001 ; jae 0xee1b7 ; ret
0x00000000000ee1d8 : cmp eax, 0xfffff001 ; jae 0xee1e7 ; ret
0x00000000000ee208 : cmp eax, 0xfffff001 ; jae 0xee217 ; ret
0x00000000000f095a : cmp eax, 0xfffff001 ; jae 0xf0969 ; ret
0x00000000000f0ba8 : cmp eax, 0xfffff001 ; jae 0xf0bb7 ; ret
0x00000000000f0bd8 : cmp eax, 0xfffff001 ; jae 0xf0be7 ; ret
0x00000000000f0ca8 : cmp eax, 0xfffff001 ; jae 0xf0cb7 ; ret
0x00000000000f0cd8 : cmp eax, 0xfffff001 ; jae 0xf0ce7 ; ret
0x00000000000f0d0b : cmp eax, 0xfffff001 ; jae 0xf0d1a ; ret
0x00000000000f0d38 : cmp eax, 0xfffff001 ; jae 0xf0d47 ; ret
0x00000000000f0d68 : cmp eax, 0xfffff001 ; jae 0xf0d77 ; ret
0x00000000000f0d98 : cmp eax, 0xfffff001 ; jae 0xf0da7 ; ret
0x00000000000f0dc8 : cmp eax, 0xfffff001 ; jae 0xf0dd7 ; ret
0x00000000000f387b : cmp eax, 0xfffff001 ; jae 0xf388a ; ret
0x00000000000f38a8 : cmp eax, 0xfffff001 ; jae 0xf38b7 ; ret
0x00000000000f38d8 : cmp eax, 0xfffff001 ; jae 0xf38e7 ; ret
0x00000000000f390b : cmp eax, 0xfffff001 ; jae 0xf391a ; ret
0x00000000000f393b : cmp eax, 0xfffff001 ; jae 0xf394a ; ret
0x00000000000f3968 : cmp eax, 0xfffff001 ; jae 0xf3977 ; ret
0x00000000000f399b : cmp eax, 0xfffff001 ; jae 0xf39aa ; ret
0x00000000000f39c8 : cmp eax, 0xfffff001 ; jae 0xf39d7 ; ret
0x00000000000f39f8 : cmp eax, 0xfffff001 ; jae 0xf3a07 ; ret
0x00000000000f3a2b : cmp eax, 0xfffff001 ; jae 0xf3a3a ; ret
0x00000000000f3a58 : cmp eax, 0xfffff001 ; jae 0xf3a67 ; ret
0x00000000000f3a8b : cmp eax, 0xfffff001 ; jae 0xf3a9a ; ret
0x00000000000f5a68 : cmp eax, 0xfffff001 ; jae 0xf5a77 ; ret
0x00000000000f5a98 : cmp eax, 0xfffff001 ; jae 0xf5aa7 ; ret
0x00000000000f5bb8 : cmp eax, 0xfffff001 ; jae 0xf5bc7 ; ret
0x00000000000f5c18 : cmp eax, 0xfffff001 ; jae 0xf5c27 ; ret
0x00000000000f5c48 : cmp eax, 0xfffff001 ; jae 0xf5c57 ; ret
0x00000000000f5d78 : cmp eax, 0xfffff001 ; jae 0xf5d87 ; ret
0x00000000000f5dfb : cmp eax, 0xfffff001 ; jae 0xf5e0a ; ret
0x00000000000f5e28 : cmp eax, 0xfffff001 ; jae 0xf5e37 ; ret
0x00000000000f62f8 : cmp eax, 0xfffff001 ; jae 0xf6307 ; ret
0x00000000000f6328 : cmp eax, 0xfffff001 ; jae 0xf6337 ; ret
0x00000000000f636b : cmp eax, 0xfffff001 ; jae 0xf637a ; ret
0x00000000000f6398 : cmp eax, 0xfffff001 ; jae 0xf63a7 ; ret
0x00000000000f63c8 : cmp eax, 0xfffff001 ; jae 0xf63d7 ; ret
0x00000000000f63f8 : cmp eax, 0xfffff001 ; jae 0xf6407 ; ret
0x00000000000f6428 : cmp eax, 0xfffff001 ; jae 0xf6437 ; ret
0x00000000000f6458 : cmp eax, 0xfffff001 ; jae 0xf6467 ; ret
0x00000000000f6488 : cmp eax, 0xfffff001 ; jae 0xf6497 ; ret
0x00000000000f64b8 : cmp eax, 0xfffff001 ; jae 0xf64c7 ; ret
0x00000000000f64eb : cmp eax, 0xfffff001 ; jae 0xf64fa ; ret
0x00000000000f6518 : cmp eax, 0xfffff001 ; jae 0xf6527 ; ret
0x00000000000f654b : cmp eax, 0xfffff001 ; jae 0xf655a ; ret
0x00000000000f6578 : cmp eax, 0xfffff001 ; jae 0xf6587 ; ret
0x00000000000f65a8 : cmp eax, 0xfffff001 ; jae 0xf65b7 ; ret
0x00000000000f65d8 : cmp eax, 0xfffff001 ; jae 0xf65e7 ; ret
0x00000000000f6608 : cmp eax, 0xfffff001 ; jae 0xf6617 ; ret
0x00000000000f6638 : cmp eax, 0xfffff001 ; jae 0xf6647 ; ret
0x00000000000f666b : cmp eax, 0xfffff001 ; jae 0xf667a ; ret
0x00000000000f669b : cmp eax, 0xfffff001 ; jae 0xf66aa ; ret
0x00000000000f66c8 : cmp eax, 0xfffff001 ; jae 0xf66d7 ; ret
0x00000000000f66f8 : cmp eax, 0xfffff001 ; jae 0xf6707 ; ret
0x00000000000f672b : cmp eax, 0xfffff001 ; jae 0xf673a ; ret
0x00000000000f675b : cmp eax, 0xfffff001 ; jae 0xf676a ; ret
0x00000000000f678b : cmp eax, 0xfffff001 ; jae 0xf679a ; ret
0x00000000000f67b8 : cmp eax, 0xfffff001 ; jae 0xf67c7 ; ret
0x00000000000f67e8 : cmp eax, 0xfffff001 ; jae 0xf67f7 ; ret
0x00000000000f6818 : cmp eax, 0xfffff001 ; jae 0xf6827 ; ret
0x00000000000f6848 : cmp eax, 0xfffff001 ; jae 0xf6857 ; ret
0x00000000000f687b : cmp eax, 0xfffff001 ; jae 0xf688a ; ret
0x00000000000f68a8 : cmp eax, 0xfffff001 ; jae 0xf68b7 ; ret
0x00000000000f68d8 : cmp eax, 0xfffff001 ; jae 0xf68e7 ; ret
0x00000000000f690b : cmp eax, 0xfffff001 ; jae 0xf691a ; ret
0x00000000000f6938 : cmp eax, 0xfffff001 ; jae 0xf6947 ; ret
0x00000000000f696b : cmp eax, 0xfffff001 ; jae 0xf697a ; ret
0x00000000000f699b : cmp eax, 0xfffff001 ; jae 0xf69aa ; ret
0x00000000000f69c8 : cmp eax, 0xfffff001 ; jae 0xf69d7 ; ret
0x00000000000f69f8 : cmp eax, 0xfffff001 ; jae 0xf6a07 ; ret
0x00000000000f6a28 : cmp eax, 0xfffff001 ; jae 0xf6a37 ; ret
0x00000000000f6a68 : cmp eax, 0xfffff001 ; jae 0xf6a77 ; ret
0x00000000000f6b58 : cmp eax, 0xfffff001 ; jae 0xf6b67 ; ret
0x00000000000f6c28 : cmp eax, 0xfffff001 ; jae 0xf6c37 ; ret
0x00000000000f6c58 : cmp eax, 0xfffff001 ; jae 0xf6c67 ; ret
0x00000000000f6c8b : cmp eax, 0xfffff001 ; jae 0xf6c9a ; ret
0x00000000000f6cb8 : cmp eax, 0xfffff001 ; jae 0xf6cc7 ; ret
0x00000000000f712b : cmp eax, 0xfffff001 ; jae 0xf713a ; ret
0x00000000000f7158 : cmp eax, 0xfffff001 ; jae 0xf7167 ; ret
0x00000000000f7188 : cmp eax, 0xfffff001 ; jae 0xf7197 ; ret
0x00000000000f71bb : cmp eax, 0xfffff001 ; jae 0xf71ca ; ret
0x0000000000064533 : cmp eax, 0xfffff770 ; add rax, rdi ; jmp rax
0x00000000001027e2 : cmp eax, 0xfffffe99 ; call rax
0x000000000008a1da : cmp eax, 1 ; ja 0x8a1c1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114840 : cmp eax, 1 ; jg 0x11484d ; ret
0x00000000000f0150 : cmp eax, 1 ; jg 0xf015d ; ret
0x0000000000124d10 : cmp eax, 1 ; jne 0x124d29 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000ee439 : cmp eax, 2 ; jbe 0xee446 ; ret
0x00000000000a1db2 : cmp eax, 2 ; je 0xa1dc7 ; xor eax, eax ; ret
0x0000000000124d20 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000ce52d : cmp eax, 3 ; je 0xce53e ; ret
0x000000000007e60a : cmp eax, 4 ; je 0x7e615 ; ret
0x00000000000e0cb4 : cmp eax, 4 ; sete bl ; jmp 0xe0c8e
0x00000000000c50f1 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001a116d : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000001a10dd : cmp eax, dword ptr [rcx] ; add byte ptr [rax], dh ; ret 0xfff4
0x0000000000189c9d : cmp eax, dword ptr [rcx] ; add byte ptr [rdi + rcx*8 - 0xe], ch ; jmp rsp
0x00000000000ce3c9 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000007a475 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x7a488 ; movzx eax, byte ptr [rax] ; ret
0x00000000000b2b2e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xb2c29 ; ret
0x00000000000b2b43 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xb2c29 ; ret
0x00000000000b2b58 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xb2c29 ; ret
0x00000000000b2b73 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xb2c29 ; ret
0x00000000000b2b8e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xb2c29 ; ret
0x00000000000b2ba3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xb2c25 ; ret
0x00000000000b2bb8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xb2c25 ; ret
0x00000000000b2bc3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xb2c25 ; ret
0x00000000000b2bde : cmp eax, dword ptr [rsi + 0x30] ; jne 0xb2c25 ; ret
0x00000000000b2bf3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xb2c25 ; ret
0x00000000000b2c08 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xb2c25 ; ret
0x00000000000b2c13 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xb2c25 ; ret
0x00000000000b2b13 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xb2c29 ; ret
0x00000000000b2ae3 : cmp eax, dword ptr [rsi + 4] ; jne 0xb2c29 ; ret
0x00000000000b2af8 : cmp eax, dword ptr [rsi + 8] ; jne 0xb2c29 ; ret
0x000000000015e9ea : cmp eax, dword ptr [rsi - 0x10] ; jne 0x15eb29 ; ret
0x000000000015ea03 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x15eb29 ; ret
0x000000000015eb13 : cmp eax, dword ptr [rsi - 4] ; jne 0x15eb27 ; xor eax, eax ; ret
0x000000000015ea33 : cmp eax, dword ptr [rsi - 4] ; jne 0x15eb29 ; ret
0x000000000015ea18 : cmp eax, dword ptr [rsi - 8] ; jne 0x15eb29 ; ret
0x00000000000b2acd : cmp eax, dword ptr [rsi] ; jne 0xb2c28 ; ret
0x00000000001762d7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000045d15 : cmp eax, eax ; jne 0x45cd5 ; pop rbx ; ret
0x000000000008e1ad : cmp eax, ecx ; je 0x8e195 ; ret
0x000000000014f87f : cmp eax, ecx ; jle 0x14f8bf ; movsxd rax, ecx ; ret
0x000000000004af6a : cmp eax, ecx ; jne 0x4af66 ; pop rbx ; pop rbp ; ret
0x0000000000003cb3 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000015e503 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000004b03f : cmp eax, edi ; cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000089596 : cmp eax, edi ; jne 0x89585 ; ret
0x000000000007d97b : cmp eax, edx ; jae 0x7d9a7 ; movzx eax, byte ptr [rax] ; ret
0x00000000001025cb : cmp eax, edx ; jb 0x1025c6 ; xor eax, eax ; ret
0x00000000000d1f61 : cmp eax, edx ; jle 0xd1fa4 ; movsxd rcx, edx ; jmp 0xd1f7e
0x000000000007f369 : cmp eax, edx ; jne 0x7f374 ; ret
0x00000000000b2ce5 : cmp eax, edx ; jne 0xb2cd6 ; xor eax, eax ; ret
0x00000000000ef6bd : cmp eax, esi ; jb 0xef6b1 ; mov rdi, rdx ; call 0x7c109
0x00000000000fd6e9 : cmp eax, esi ; jb 0xfd701 ; mov eax, 1 ; ret
0x00000000001012ee : cmp ebp, dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000001201e3 : cmp ebp, ecx ; add eax, 0x3d8d4800 ; retf 0x5d6
0x00000000001a3339 : cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000007e5a6 : cmp ebx, 0xa ; je 0x7e5b1 ; ret
0x00000000000450db : cmp ebx, eax ; jne 0x450d5 ; pop rbx ; ret
0x00000000000e61d8 : cmp ebx, eax ; setl al ; pop rbx ; ret
0x00000000000837a4 : cmp ebx, ebp ; jne 0x83790 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187415 : cmp ebx, edi ; call rax
0x0000000000114a08 : cmp ebx, edx ; je 0x114a15 ; ret
0x0000000000114ab9 : cmp ebx, edx ; je 0x114a29 ; ret
0x000000000019df35 : cmp ebx, esi ; call rcx
0x000000000004695c : cmp ecx, -1 ; jne 0x46958 ; mov rax, rdx ; ret
0x000000000004365b : cmp ecx, 0x24 ; jne 0x43641 ; ret
0x0000000000045cdf : cmp ecx, 0x2f ; jmp rdx
0x00000000000de210 : cmp ecx, 0xa ; mov eax, edx ; je 0xde223 ; pop rbx ; pop rbp ; ret
0x00000000000a2494 : cmp ecx, 4 ; cmove rax, rdx ; ret
0x0000000000059c8d : cmp ecx, 9 ; jbe 0x59c6b ; mov qword ptr [rdi], rsi ; ret
0x00000000000663dd : cmp ecx, 9 ; jbe 0x663bb ; mov qword ptr [rdi], rsi ; ret
0x000000000006c81d : cmp ecx, 9 ; jbe 0x6c7fb ; mov qword ptr [rdi], rsi ; ret
0x00000000000111c9 : cmp ecx, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000118d74 : cmp ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012cf28 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xfe8
0x0000000000022d42 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d01bc : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000001107ad : cmp ecx, dword ptr [rax - 0x7d] ; ret 0xeb01
0x00000000000df04c : cmp ecx, dword ptr [rax - 0xc] ; jne 0xdf048 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000114420 : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x114439 ; pop rbx ; ret
0x00000000001730d0 : cmp ecx, dword ptr [rbx] ; in al, dx ; ljmp [rbx] ; or al, 0xec ; call rsi
0x0000000000119ed6 : cmp ecx, dword ptr [rdi] ; retf 0xfa81
0x000000000007588d : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000008879b : cmp ecx, dword ptr [rip + 0x450f4800] ; ret 0xfc3
0x0000000000002e48 : cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x000000000015827a : cmp ecx, dword ptr [rsi + rdx + 0x20] ; jne 0x15826a ; vzeroupper ; ret
0x000000000015829a : cmp ecx, dword ptr [rsi + rdx + 0x40] ; jne 0x15826a ; vzeroupper ; ret
0x00000000001582ba : cmp ecx, dword ptr [rsi + rdx + 0x60] ; jne 0x15826a ; vzeroupper ; ret
0x00000000001586f6 : cmp ecx, dword ptr [rsi + rdx] ; jne 0x1586cd ; vzeroupper ; ret
0x00000000000b2d00 : cmp ecx, eax ; cmovg eax, edx ; ret
0x000000000015aa7b : cmp ecx, eax ; jne 0x15aaa9 ; xor eax, eax ; ret
0x000000000015b8bb : cmp ecx, eax ; jne 0x15b8e9 ; xor eax, eax ; ret
0x000000000015b8ef : cmp ecx, eax ; jne 0x15b8fc ; xor eax, eax ; ret
0x00000000001259c3 : cmp ecx, edx ; jae 0x1259d6 ; xor eax, eax ; ret
0x0000000000125a03 : cmp ecx, edx ; jae 0x125a16 ; xor eax, eax ; ret
0x000000000008e158 : cmp ecx, edx ; je 0x8e159 ; cmp ecx, esi ; je 0x8e159 ; ret
0x00000000000e9550 : cmp ecx, edx ; seta al ; sbb eax, 0 ; ret
0x000000000008e15c : cmp ecx, esi ; je 0x8e155 ; ret
0x00000000000731aa : cmp ecx, esi ; jne 0x731a7 ; lea eax, [rdx + rdi] ; ret
0x00000000000b2cff : cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000a26d9 : cmp edi, 0x7f ; mov eax, edi ; ja 0xa26f0 ; ret
0x00000000000d1d7b : cmp edi, 0x83486475 ; ret 0xeb04
0x00000000000f8fdd : cmp edi, 9 ; setbe al ; ret
0x000000000010e9c1 : cmp edi, dword ptr [rax + 3] ; syscall
0x000000000004b6d0 : cmp edi, eax ; ja 0x4b6b7 ; mov eax, r9d ; ret
0x000000000004afae : cmp edi, eax ; jbe 0x4af46 ; pop rbx ; pop rbp ; ret
0x00000000000f3073 : cmp edi, eax ; jne 0xf30b1 ; mov eax, 0x88 ; syscall
0x0000000000187459 : cmp edi, ebx ; call rax
0x000000000011bf42 : cmp edi, ecx ; jne 0x11bf35 ; ret
0x00000000000ed0a1 : cmp edi, edx ; ja 0xed0d5 ; ret
0x00000000000a1317 : cmp edi, edx ; jb 0xa1324 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f3ae5 : cmp edi, edx ; jne 0xf3ae0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e6d40 : cmp edi, esi ; ja 0xe6d35 ; ret
0x000000000007ebb3 : cmp edi, esi ; sete al ; ret
0x000000000004b6cf : cmp edi, r8d ; ja 0x4b6b8 ; mov eax, r9d ; ret
0x000000000010bf89 : cmp edx, -3 ; jbe 0x10bf96 ; ret
0x000000000010506f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000c9215 : cmp edx, 1 ; sete al ; ret
0x00000000000cee3f : cmp edx, dword ptr [r8 + rcx*4] ; je 0xcee67 ; ret
0x00000000000cee40 : cmp edx, dword ptr [rax + rcx*4] ; je 0xcee66 ; ret
0x000000000017abd4 : cmp edx, dword ptr [rdx - 0x6dc4000b] ; cmc ; call qword ptr [rsi]
0x00000000000cedb5 : cmp edx, dword ptr [rsi + 4] ; je 0xcedc6 ; ret
0x00000000000fc029 : cmp edx, dword ptr [rsi - 0xe] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000114986 : cmp edx, dword ptr [rsi] ; je 0x114995 ; ret
0x0000000000157d14 : cmp edx, dword ptr [rsi] ; jne 0x157d00 ; ret
0x000000000012d39b : cmp edx, eax ; ja 0x12d396 ; xor eax, eax ; ret
0x000000000010f86d : cmp edx, eax ; jb 0x10f899 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000cd307 : cmp edx, eax ; je 0xcd325 ; ret
0x000000000010fe0d : cmp edx, eax ; jne 0x10fdf6 ; ret
0x0000000000045f4d : cmp edx, eax ; jne 0x45f46 ; xor eax, eax ; ret
0x000000000004602d : cmp edx, eax ; jne 0x46026 ; xor eax, eax ; ret
0x00000000000d542e : cmp edx, eax ; jne 0xd5428 ; mov rdi, r14 ; call 0x21681
0x0000000000103db1 : cmp edx, ecx ; ja 0x103de2 ; xor eax, eax ; syscall
0x0000000000157b82 : cmp edx, ecx ; jne 0x157b6e ; vzeroupper ; ret
0x000000000015ca15 : cmp edx, ecx ; jne 0x15c9f9 ; vzeroupper ; ret
0x00000000000a17db : cmp edx, ecx ; jne 0xa17c8 ; ret
0x000000000012a8c0 : cmp edx, ecx ; sete al ; ret
0x000000000007e14a : cmp edx, edi ; setae al ; ret
0x0000000000178ed1 : cmp edx, esi ; call qword ptr [rax]
0x0000000000178ef5 : cmp edx, esi ; call rax
0x00000000001103a6 : cmp edx, esi ; jb 0x11039d ; mov eax, 0xffffffff ; ret
0x00000000001258a6 : cmp edx, esi ; jbe 0x1258b7 ; xor eax, eax ; ret
0x00000000001044ed : cmp edx, esi ; je 0x1044fd ; ret
0x00000000000a246d : cmp edx, esi ; je 0xa247d ; ret
0x00000000000a34c6 : cmp edx, esi ; je 0xa34d7 ; test edx, edx ; jne 0xa34c9 ; ret
0x0000000000178ed5 : cmp edx, esi ; jmp qword ptr [rax]
0x00000000000896a9 : cmp edx, esi ; jne 0x896a5 ; ret
0x0000000000178ef9 : cmp edx, esi ; push rax ; cmp edx, esi ; call qword ptr [rax]
0x00000000000733d9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000001104ac : cmp esi, 0x80 ; cmovae eax, edi ; ret
0x000000000012157b : cmp esi, 0x8348ffff ; ret 0x4807
0x00000000000bf7e0 : cmp esi, 1 ; je 0xbf7f7 ; xor eax, eax ; ret
0x0000000000077d69 : cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000002bc04 : cmp esi, 3 ; je 0x2bc16 ; ret
0x0000000000158c00 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000000bf937 : cmp esi, dword ptr [rdi + 0x2e] ; mov eax, 0xe3 ; syscall
0x00000000000cef8d : cmp esi, dword ptr [rdi + 4] ; jl 0xcef86 ; ret
0x000000000011a7ea : cmp esi, dword ptr [rdx + 0x28] ; ja 0x11a7e1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001576b5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001a3569 : cmp esi, ebp ; jmp qword ptr [rcx]
0x00000000001764a4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000007ef2f : cmp esi, ecx ; jb 0x7ef19 ; mov byte ptr [rax + rsi], dil ; ret
0x000000000007cb9a : cmp esi, ecx ; jne 0x7cb97 ; lea eax, [rdx + rdi] ; ret
0x000000000004b0c6 : cmp esi, edi ; cmovb rax, rdi ; ret
0x00000000000bfcc1 : cmp esi, edi ; jge 0xbfca8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000023c71 : cmp esp, dword ptr [rbp + 0x39] ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000038588 : cmp esp, ebp ; jne 0x38588 ; mov edi, ebx ; call 0xc5098
0x00000000001027f8 : cmp qword ptr [rcx + rdx*8 - 8], 0 ; je 0x102821 ; leave ; ret
0x00000000000fe4a0 : cmp qword ptr [rdi + 0x10], 0 ; je 0xfe4b9 ; xor eax, eax ; ret
0x0000000000077c53 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007c270 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7c288 ; ret
0x0000000000102649 : cmp qword ptr [rdi], 0 ; je 0x10265f ; ret
0x000000000002177a : cmp qword ptr [rdx + 0xd8], rax ; jne 0x21750 ; ret
0x00000000000fc008 : cmp qword ptr [rip + 0x2ba850], 0 ; jne 0xfbfdd ; jmp 0xfbfd4
0x00000000000fa448 : cmp qword ptr [rip + 0x2bc3f8], 0 ; jne 0xfa41d ; jmp 0xfa414
0x00000000000c3528 : cmp qword ptr [rip + 0x2f32c0], 0 ; jne 0xc34fd ; jmp 0xc34f4
0x0000000000072b77 : cmp qword ptr [rsi + 0x30], 0 ; je 0x72b88 ; ret
0x00000000000f198b : cmp qword ptr [rsi], 0 ; je 0xf199f ; ret
0x00000000000cd306 : cmp r10d, r8d ; je 0xcd326 ; ret
0x0000000000114a07 : cmp r11, rdx ; je 0x114a16 ; ret
0x000000000008bde5 : cmp r11b, r10b ; jb 0x8bdcd ; mov rdx, rax ; jmp 0x8bd84
0x000000000007e5a5 : cmp r11d, 0xa ; je 0x7e5b2 ; ret
0x0000000000038587 : cmp r12, rbp ; jne 0x38589 ; mov edi, ebx ; call 0xc5099
0x0000000000177e58 : cmp r14b, r13b ; call rbx
0x0000000000177e54 : cmp r14b, r13b ; inc dword ptr [rbp + 0x38] ; out dx, al ; call rbx
0x00000000000462f3 : cmp r8, -1 ; jne 0x462e9 ; mov rax, rdx ; ret
0x000000000004af69 : cmp r8, r9 ; jne 0x4af67 ; pop rbx ; pop rbp ; ret
0x0000000000045d14 : cmp r8, rax ; jne 0x45cd6 ; pop rbx ; ret
0x0000000000160b14 : cmp r8d, 0x89497fff ; ret
0x00000000000ee438 : cmp r8d, 2 ; jbe 0xee447 ; ret
0x000000000008e1ac : cmp r8d, ecx ; je 0x8e196 ; ret
0x0000000000045cde : cmp r9d, 0x2f ; jmp rdx
0x0000000000103db9 : cmp rax, -0x1000 ; ja 0x103dd1 ; ret
0x000000000003613c : cmp rax, -0x1000 ; ja 0x36159 ; ret
0x0000000000036188 : cmp rax, -0x1000 ; ja 0x361e1 ; ret
0x0000000000039b53 : cmp rax, -0x1000 ; ja 0x39bb9 ; ret
0x0000000000051b87 : cmp rax, -0x1000 ; ja 0x51ba1 ; ret
0x0000000000051bba : cmp rax, -0x1000 ; ja 0x51bd1 ; ret
0x00000000000b4517 : cmp rax, -0x1000 ; ja 0xb4531 ; ret
0x00000000000b462c : cmp rax, -0x1000 ; ja 0xb4649 ; ret
0x00000000000b47ac : cmp rax, -0x1000 ; ja 0xb47c9 ; ret
0x00000000000bf941 : cmp rax, -0x1000 ; ja 0xbf959 ; ret
0x00000000000c06b7 : cmp rax, -0x1000 ; ja 0xc06d1 ; ret
0x00000000000c1701 : cmp rax, -0x1000 ; ja 0xc1751 ; ret
0x00000000000c4c16 : cmp rax, -0x1000 ; ja 0xc4c81 ; ret
0x00000000000c4cb9 : cmp rax, -0x1000 ; ja 0xc4d29 ; ret
0x00000000000c4de3 : cmp rax, -0x1000 ; ja 0xc4e29 ; ret
0x00000000000c5af1 : cmp rax, -0x1000 ; ja 0xc5b39 ; ret
0x00000000000c5b61 : cmp rax, -0x1000 ; ja 0xc5ba9 ; ret
0x00000000000c5db1 : cmp rax, -0x1000 ; ja 0xc5e09 ; ret
0x00000000000c5e31 : cmp rax, -0x1000 ; ja 0xc5e89 ; ret
0x00000000000e5de6 : cmp rax, -0x1000 ; ja 0xe5e51 ; ret
0x00000000000e5e96 : cmp rax, -0x1000 ; ja 0xe5f01 ; ret
0x00000000000e6fb5 : cmp rax, -0x1000 ; ja 0xe6fc9 ; ret
0x00000000000e7003 : cmp rax, -0x1000 ; ja 0xe7019 ; ret
0x00000000000e7055 : cmp rax, -0x1000 ; ja 0xe7069 ; ret
0x00000000000e73ad : cmp rax, -0x1000 ; ja 0xe73c9 ; ret
0x00000000000e7411 : cmp rax, -0x1000 ; ja 0xe7429 ; ret
0x00000000000e7469 : cmp rax, -0x1000 ; ja 0xe7481 ; ret
0x00000000000e7654 : cmp rax, -0x1000 ; ja 0xe7669 ; ret
0x00000000000e79de : cmp rax, -0x1000 ; ja 0xe7a49 ; ret
0x00000000000e7a83 : cmp rax, -0x1000 ; ja 0xe7ae9 ; ret
0x00000000000e7b17 : cmp rax, -0x1000 ; ja 0xe7b31 ; ret
0x00000000000e7b47 : cmp rax, -0x1000 ; ja 0xe7b61 ; ret
0x00000000000e8183 : cmp rax, -0x1000 ; ja 0xe81d1 ; ret
0x00000000000e82f3 : cmp rax, -0x1000 ; ja 0xe8349 ; ret
0x00000000000ebc03 : cmp rax, -0x1000 ; ja 0xebc69 ; ret
0x00000000000ec206 : cmp rax, -0x1000 ; ja 0xec289 ; ret
0x00000000000ec2ba : cmp rax, -0x1000 ; ja 0xec2d1 ; ret
0x00000000000ec2ef : cmp rax, -0x1000 ; ja 0xec309 ; ret
0x00000000000ec3e6 : cmp rax, -0x1000 ; ja 0xec451 ; ret
0x00000000000ec486 : cmp rax, -0x1000 ; ja 0xec4e9 ; ret
0x00000000000ec517 : cmp rax, -0x1000 ; ja 0xec531 ; ret
0x00000000000ec54c : cmp rax, -0x1000 ; ja 0xec581 ; ret
0x00000000000ec5fd : cmp rax, -0x1000 ; ja 0xec641 ; ret
0x00000000000ec672 : cmp rax, -0x1000 ; ja 0xec6b1 ; ret
0x00000000000ec6c4 : cmp rax, -0x1000 ; ja 0xec6d9 ; ret
0x00000000000ec6fa : cmp rax, -0x1000 ; ja 0xec711 ; ret
0x00000000000ec727 : cmp rax, -0x1000 ; ja 0xec741 ; ret
0x00000000000ec92a : cmp rax, -0x1000 ; ja 0xec959 ; ret
0x00000000000eca8d : cmp rax, -0x1000 ; ja 0xecae9 ; ret
0x00000000000ecc50 : cmp rax, -0x1000 ; ja 0xecc69 ; ret
0x00000000000ecc91 : cmp rax, -0x1000 ; ja 0xecca9 ; ret
0x00000000000ed1e3 : cmp rax, -0x1000 ; ja 0xed249 ; ret
0x00000000000ed283 : cmp rax, -0x1000 ; ja 0xed2e9 ; ret
0x00000000000ed329 : cmp rax, -0x1000 ; ja 0xed399 ; ret
0x00000000000ed3d9 : cmp rax, -0x1000 ; ja 0xed449 ; ret
0x00000000000ed741 : cmp rax, -0x1000 ; ja 0xed799 ; ret
0x00000000000ed7c1 : cmp rax, -0x1000 ; ja 0xed819 ; ret
0x00000000000ed853 : cmp rax, -0x1000 ; ja 0xed8b1 ; ret
0x00000000000ed903 : cmp rax, -0x1000 ; ja 0xed961 ; ret
0x00000000000edb76 : cmp rax, -0x1000 ; ja 0xedbe9 ; ret
0x00000000000edd83 : cmp rax, -0x1000 ; ja 0xeddd1 ; ret
0x00000000000ede33 : cmp rax, -0x1000 ; ja 0xede81 ; ret
0x00000000000edee3 : cmp rax, -0x1000 ; ja 0xedef9 ; ret
0x00000000000ef1c7 : cmp rax, -0x1000 ; ja 0xef1e1 ; ret
0x00000000000ef251 : cmp rax, -0x1000 ; ja 0xef271 ; ret
0x00000000000ef2f8 : cmp rax, -0x1000 ; ja 0xef319 ; ret
0x00000000000ef34c : cmp rax, -0x1000 ; ja 0xef369 ; ret
0x00000000000ef387 : cmp rax, -0x1000 ; ja 0xef3a1 ; ret
0x00000000000ef3b7 : cmp rax, -0x1000 ; ja 0xef3d1 ; ret
0x00000000000f0c13 : cmp rax, -0x1000 ; ja 0xf0c79 ; ret
0x00000000000f307e : cmp rax, -0x1000 ; ja 0xf3099 ; ret
0x00000000000f5b04 : cmp rax, -0x1000 ; ja 0xf5b19 ; ret
0x00000000000f5be7 : cmp rax, -0x1000 ; ja 0xf5c01 ; ret
0x00000000000f5c8c : cmp rax, -0x1000 ; ja 0xf5d11 ; ret
0x00000000000f5d3f : cmp rax, -0x1000 ; ja 0xf5d59 ; ret
0x00000000000f5e66 : cmp rax, -0x1000 ; ja 0xf5ed1 ; ret
0x00000000000f5f06 : cmp rax, -0x1000 ; ja 0xf5f71 ; ret
0x00000000000f5fb6 : cmp rax, -0x1000 ; ja 0xf6021 ; ret
0x00000000000f6066 : cmp rax, -0x1000 ; ja 0xf60e9 ; ret
0x00000000000f6123 : cmp rax, -0x1000 ; ja 0xf6189 ; ret
0x00000000000f61bb : cmp rax, -0x1000 ; ja 0xf6221 ; ret
0x00000000000f623f : cmp rax, -0x1000 ; ja 0xf6259 ; ret
0x00000000000f6ac3 : cmp rax, -0x1000 ; ja 0xf6b29 ; ret
0x00000000000f6b93 : cmp rax, -0x1000 ; ja 0xf6bf9 ; ret
0x00000000000f6cfc : cmp rax, -0x1000 ; ja 0xf6d79 ; ret
0x00000000000f6db6 : cmp rax, -0x1000 ; ja 0xf6e39 ; ret
0x00000000000f6e73 : cmp rax, -0x1000 ; ja 0xf6ed9 ; ret
0x00000000000f6f1c : cmp rax, -0x1000 ; ja 0xf6f99 ; ret
0x00000000000f6fd3 : cmp rax, -0x1000 ; ja 0xf7039 ; ret
0x00000000000f7076 : cmp rax, -0x1000 ; ja 0xf70f9 ; ret
0x00000000000f7406 : cmp rax, -0x1000 ; ja 0xf7471 ; ret
0x00000000000f74a6 : cmp rax, -0x1000 ; ja 0xf7519 ; ret
0x00000000000f7556 : cmp rax, -0x1000 ; ja 0xf75c1 ; ret
0x00000000000f76b6 : cmp rax, -0x1000 ; ja 0xf7721 ; ret
0x00000000000f7756 : cmp rax, -0x1000 ; ja 0xf77c9 ; ret
0x00000000000f77f7 : cmp rax, -0x1000 ; ja 0xf7811 ; ret
0x00000000000f7827 : cmp rax, -0x1000 ; ja 0xf7841 ; ret
0x00000000000f7867 : cmp rax, -0x1000 ; ja 0xf7881 ; ret
0x00000000000f78b5 : cmp rax, -0x1000 ; ja 0xf78f1 ; ret
0x00000000000f790a : cmp rax, -0x1000 ; ja 0xf7921 ; ret
0x00000000000f7937 : cmp rax, -0x1000 ; ja 0xf7951 ; ret
0x00000000000f7967 : cmp rax, -0x1000 ; ja 0xf7981 ; ret
0x00000000000f799a : cmp rax, -0x1000 ; ja 0xf79b1 ; ret
0x00000000000f79c7 : cmp rax, -0x1000 ; ja 0xf79e1 ; ret
0x0000000000036107 : cmp rax, -0xfff ; jae 0x36118 ; ret
0x0000000000036517 : cmp rax, -0xfff ; jae 0x36528 ; ret
0x00000000000b6ee7 : cmp rax, -0xfff ; jae 0xb6ef8 ; ret
0x00000000000b6f17 : cmp rax, -0xfff ; jae 0xb6f28 ; ret
0x00000000000c4b37 : cmp rax, -0xfff ; jae 0xc4b48 ; ret
0x00000000000c4d57 : cmp rax, -0xfff ; jae 0xc4d68 ; ret
0x00000000000c50f7 : cmp rax, -0xfff ; jae 0xc5108 ; ret
0x00000000000c5ab7 : cmp rax, -0xfff ; jae 0xc5ac8 ; ret
0x00000000000c5c57 : cmp rax, -0xfff ; jae 0xc5c68 ; ret
0x00000000000c5c87 : cmp rax, -0xfff ; jae 0xc5c98 ; ret
0x00000000000c5ce7 : cmp rax, -0xfff ; jae 0xc5cf8 ; ret
0x00000000000c5d17 : cmp rax, -0xfff ; jae 0xc5d28 ; ret
0x00000000000c5d47 : cmp rax, -0xfff ; jae 0xc5d58 ; ret
0x00000000000c5d77 : cmp rax, -0xfff ; jae 0xc5d88 ; ret
0x00000000000ddf67 : cmp rax, -0xfff ; jae 0xddf78 ; ret
0x00000000000ddf97 : cmp rax, -0xfff ; jae 0xddfa8 ; ret
0x00000000000ddfc7 : cmp rax, -0xfff ; jae 0xddfd8 ; ret
0x00000000000ddff7 : cmp rax, -0xfff ; jae 0xde008 ; ret
0x00000000000de027 : cmp rax, -0xfff ; jae 0xde038 ; ret
0x00000000000de057 : cmp rax, -0xfff ; jae 0xde068 ; ret
0x00000000000de087 : cmp rax, -0xfff ; jae 0xde098 ; ret
0x00000000000de0b7 : cmp rax, -0xfff ; jae 0xde0c8 ; ret
0x00000000000e6f17 : cmp rax, -0xfff ; jae 0xe6f28 ; ret
0x00000000000e74b7 : cmp rax, -0xfff ; jae 0xe74c8 ; ret
0x00000000000e74e7 : cmp rax, -0xfff ; jae 0xe74f8 ; ret
0x00000000000e75c7 : cmp rax, -0xfff ; jae 0xe75d8 ; ret
0x00000000000e75f7 : cmp rax, -0xfff ; jae 0xe7608 ; ret
0x00000000000e76b7 : cmp rax, -0xfff ; jae 0xe76c8 ; ret
0x00000000000e76e7 : cmp rax, -0xfff ; jae 0xe76f8 ; ret
0x00000000000e7f07 : cmp rax, -0xfff ; jae 0xe7f18 ; ret
0x00000000000e81f7 : cmp rax, -0xfff ; jae 0xe8208 ; ret
0x00000000000e8227 : cmp rax, -0xfff ; jae 0xe8238 ; ret
0x00000000000e8257 : cmp rax, -0xfff ; jae 0xe8268 ; ret
0x00000000000e8287 : cmp rax, -0xfff ; jae 0xe8298 ; ret
0x00000000000e82b7 : cmp rax, -0xfff ; jae 0xe82c8 ; ret
0x00000000000e8377 : cmp rax, -0xfff ; jae 0xe8388 ; ret
0x00000000000e83a7 : cmp rax, -0xfff ; jae 0xe83b8 ; ret
0x00000000000e8bd7 : cmp rax, -0xfff ; jae 0xe8be8 ; ret
0x00000000000e8c07 : cmp rax, -0xfff ; jae 0xe8c18 ; ret
0x00000000000e8c37 : cmp rax, -0xfff ; jae 0xe8c48 ; ret
0x00000000000e8c6a : cmp rax, -0xfff ; jae 0xe8c7b ; ret
0x00000000000e9387 : cmp rax, -0xfff ; jae 0xe9398 ; ret
0x00000000000e93ba : cmp rax, -0xfff ; jae 0xe93cb ; ret
0x00000000000e93e7 : cmp rax, -0xfff ; jae 0xe93f8 ; ret
0x00000000000e9417 : cmp rax, -0xfff ; jae 0xe9428 ; ret
0x00000000000e9447 : cmp rax, -0xfff ; jae 0xe9458 ; ret
0x00000000000e947a : cmp rax, -0xfff ; jae 0xe948b ; ret
0x00000000000e94a7 : cmp rax, -0xfff ; jae 0xe94b8 ; ret
0x00000000000e94d7 : cmp rax, -0xfff ; jae 0xe94e8 ; ret
0x00000000000e9507 : cmp rax, -0xfff ; jae 0xe9518 ; ret
0x00000000000ec1ca : cmp rax, -0xfff ; jae 0xec1db ; ret
0x00000000000eccc7 : cmp rax, -0xfff ; jae 0xeccd8 ; ret
0x00000000000ecfd7 : cmp rax, -0xfff ; jae 0xecfe8 ; ret
0x00000000000ed1a7 : cmp rax, -0xfff ; jae 0xed1b8 ; ret
0x00000000000eda97 : cmp rax, -0xfff ; jae 0xedaa8 ; ret
0x00000000000edb37 : cmp rax, -0xfff ; jae 0xedb48 ; ret
0x00000000000edd17 : cmp rax, -0xfff ; jae 0xedd28 ; ret
0x00000000000edd47 : cmp rax, -0xfff ; jae 0xedd58 ; ret
0x00000000000eddf7 : cmp rax, -0xfff ; jae 0xede08 ; ret
0x00000000000edea7 : cmp rax, -0xfff ; jae 0xedeb8 ; ret
0x00000000000ee1a7 : cmp rax, -0xfff ; jae 0xee1b8 ; ret
0x00000000000ee1d7 : cmp rax, -0xfff ; jae 0xee1e8 ; ret
0x00000000000ee207 : cmp rax, -0xfff ; jae 0xee218 ; ret
0x00000000000f0959 : cmp rax, -0xfff ; jae 0xf096a ; ret
0x00000000000f0ba7 : cmp rax, -0xfff ; jae 0xf0bb8 ; ret
0x00000000000f0bd7 : cmp rax, -0xfff ; jae 0xf0be8 ; ret
0x00000000000f0ca7 : cmp rax, -0xfff ; jae 0xf0cb8 ; ret
0x00000000000f0cd7 : cmp rax, -0xfff ; jae 0xf0ce8 ; ret
0x00000000000f0d0a : cmp rax, -0xfff ; jae 0xf0d1b ; ret
0x00000000000f0d37 : cmp rax, -0xfff ; jae 0xf0d48 ; ret
0x00000000000f0d67 : cmp rax, -0xfff ; jae 0xf0d78 ; ret
0x00000000000f0d97 : cmp rax, -0xfff ; jae 0xf0da8 ; ret
0x00000000000f0dc7 : cmp rax, -0xfff ; jae 0xf0dd8 ; ret
0x00000000000f387a : cmp rax, -0xfff ; jae 0xf388b ; ret
0x00000000000f38a7 : cmp rax, -0xfff ; jae 0xf38b8 ; ret
0x00000000000f38d7 : cmp rax, -0xfff ; jae 0xf38e8 ; ret
0x00000000000f390a : cmp rax, -0xfff ; jae 0xf391b ; ret
0x00000000000f393a : cmp rax, -0xfff ; jae 0xf394b ; ret
0x00000000000f3967 : cmp rax, -0xfff ; jae 0xf3978 ; ret
0x00000000000f399a : cmp rax, -0xfff ; jae 0xf39ab ; ret
0x00000000000f39c7 : cmp rax, -0xfff ; jae 0xf39d8 ; ret
0x00000000000f39f7 : cmp rax, -0xfff ; jae 0xf3a08 ; ret
0x00000000000f3a2a : cmp rax, -0xfff ; jae 0xf3a3b ; ret
0x00000000000f3a57 : cmp rax, -0xfff ; jae 0xf3a68 ; ret
0x00000000000f3a8a : cmp rax, -0xfff ; jae 0xf3a9b ; ret
0x00000000000f5a67 : cmp rax, -0xfff ; jae 0xf5a78 ; ret
0x00000000000f5a97 : cmp rax, -0xfff ; jae 0xf5aa8 ; ret
0x00000000000f5bb7 : cmp rax, -0xfff ; jae 0xf5bc8 ; ret
0x00000000000f5c17 : cmp rax, -0xfff ; jae 0xf5c28 ; ret
0x00000000000f5c47 : cmp rax, -0xfff ; jae 0xf5c58 ; ret
0x00000000000f5d77 : cmp rax, -0xfff ; jae 0xf5d88 ; ret
0x00000000000f5dfa : cmp rax, -0xfff ; jae 0xf5e0b ; ret
0x00000000000f5e27 : cmp rax, -0xfff ; jae 0xf5e38 ; ret
0x00000000000f62f7 : cmp rax, -0xfff ; jae 0xf6308 ; ret
0x00000000000f6327 : cmp rax, -0xfff ; jae 0xf6338 ; ret
0x00000000000f636a : cmp rax, -0xfff ; jae 0xf637b ; ret
0x00000000000f6397 : cmp rax, -0xfff ; jae 0xf63a8 ; ret
0x00000000000f63c7 : cmp rax, -0xfff ; jae 0xf63d8 ; ret
0x00000000000f63f7 : cmp rax, -0xfff ; jae 0xf6408 ; ret
0x00000000000f6427 : cmp rax, -0xfff ; jae 0xf6438 ; ret
0x00000000000f6457 : cmp rax, -0xfff ; jae 0xf6468 ; ret
0x00000000000f6487 : cmp rax, -0xfff ; jae 0xf6498 ; ret
0x00000000000f64b7 : cmp rax, -0xfff ; jae 0xf64c8 ; ret
0x00000000000f64ea : cmp rax, -0xfff ; jae 0xf64fb ; ret
0x00000000000f6517 : cmp rax, -0xfff ; jae 0xf6528 ; ret
0x00000000000f654a : cmp rax, -0xfff ; jae 0xf655b ; ret
0x00000000000f6577 : cmp rax, -0xfff ; jae 0xf6588 ; ret
0x00000000000f65a7 : cmp rax, -0xfff ; jae 0xf65b8 ; ret
0x00000000000f65d7 : cmp rax, -0xfff ; jae 0xf65e8 ; ret
0x00000000000f6607 : cmp rax, -0xfff ; jae 0xf6618 ; ret
0x00000000000f6637 : cmp rax, -0xfff ; jae 0xf6648 ; ret
0x00000000000f666a : cmp rax, -0xfff ; jae 0xf667b ; ret
0x00000000000f669a : cmp rax, -0xfff ; jae 0xf66ab ; ret
0x00000000000f66c7 : cmp rax, -0xfff ; jae 0xf66d8 ; ret
0x00000000000f66f7 : cmp rax, -0xfff ; jae 0xf6708 ; ret
0x00000000000f672a : cmp rax, -0xfff ; jae 0xf673b ; ret
0x00000000000f675a : cmp rax, -0xfff ; jae 0xf676b ; ret
0x00000000000f678a : cmp rax, -0xfff ; jae 0xf679b ; ret
0x00000000000f67b7 : cmp rax, -0xfff ; jae 0xf67c8 ; ret
0x00000000000f67e7 : cmp rax, -0xfff ; jae 0xf67f8 ; ret
0x00000000000f6817 : cmp rax, -0xfff ; jae 0xf6828 ; ret
0x00000000000f6847 : cmp rax, -0xfff ; jae 0xf6858 ; ret
0x00000000000f687a : cmp rax, -0xfff ; jae 0xf688b ; ret
0x00000000000f68a7 : cmp rax, -0xfff ; jae 0xf68b8 ; ret
0x00000000000f68d7 : cmp rax, -0xfff ; jae 0xf68e8 ; ret
0x00000000000f690a : cmp rax, -0xfff ; jae 0xf691b ; ret
0x00000000000f6937 : cmp rax, -0xfff ; jae 0xf6948 ; ret
0x00000000000f696a : cmp rax, -0xfff ; jae 0xf697b ; ret
0x00000000000f699a : cmp rax, -0xfff ; jae 0xf69ab ; ret
0x00000000000f69c7 : cmp rax, -0xfff ; jae 0xf69d8 ; ret
0x00000000000f69f7 : cmp rax, -0xfff ; jae 0xf6a08 ; ret
0x00000000000f6a27 : cmp rax, -0xfff ; jae 0xf6a38 ; ret
0x00000000000f6a67 : cmp rax, -0xfff ; jae 0xf6a78 ; ret
0x00000000000f6b57 : cmp rax, -0xfff ; jae 0xf6b68 ; ret
0x00000000000f6c27 : cmp rax, -0xfff ; jae 0xf6c38 ; ret
0x00000000000f6c57 : cmp rax, -0xfff ; jae 0xf6c68 ; ret
0x00000000000f6c8a : cmp rax, -0xfff ; jae 0xf6c9b ; ret
0x00000000000f6cb7 : cmp rax, -0xfff ; jae 0xf6cc8 ; ret
0x00000000000f712a : cmp rax, -0xfff ; jae 0xf713b ; ret
0x00000000000f7157 : cmp rax, -0xfff ; jae 0xf7168 ; ret
0x00000000000f7187 : cmp rax, -0xfff ; jae 0xf7198 ; ret
0x00000000000f71ba : cmp rax, -0xfff ; jae 0xf71cb ; ret
0x00000000000368b0 : cmp rax, -8 ; jne 0x368a8 ; xor eax, eax ; ret
0x0000000000036900 : cmp rax, -8 ; jne 0x368f8 ; xor eax, eax ; ret
0x00000000000c6408 : cmp rax, 0x414a53 ; jne 0xc63e1 ; jmp 0xc63c2
0x000000000007a474 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x7a489 ; movzx eax, byte ptr [rax] ; ret
0x000000000004b03e : cmp rax, rdi ; cmovb rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000089595 : cmp rax, rdi ; jne 0x89586 ; ret
0x000000000007d97a : cmp rax, rdx ; jae 0x7d9a8 ; movzx eax, byte ptr [rax] ; ret
0x00000000001025ca : cmp rax, rdx ; jb 0x1025c7 ; xor eax, eax ; ret
0x00000000001025c9 : cmp rax, rdx ; jb 0x1025c8 ; xor eax, eax ; ret
0x000000000007f368 : cmp rax, rdx ; jne 0x7f375 ; ret
0x00000000000b2ce4 : cmp rax, rdx ; jne 0xb2cd7 ; xor eax, eax ; ret
0x00000000000450da : cmp rbx, rax ; jne 0x450d6 ; pop rbx ; ret
0x00000000000e61d7 : cmp rbx, rax ; setl al ; pop rbx ; ret
0x00000000000837a3 : cmp rbx, rbp ; jne 0x83791 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004695b : cmp rcx, -1 ; jne 0x46959 ; mov rax, rdx ; ret
0x00000000000a2493 : cmp rcx, 4 ; cmove rax, rdx ; ret
0x000000000007588c : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000015aa7a : cmp rcx, rax ; jne 0x15aaaa ; xor eax, eax ; ret
0x000000000015b8ba : cmp rcx, rax ; jne 0x15b8ea ; xor eax, eax ; ret
0x00000000000731a9 : cmp rcx, rsi ; jne 0x731a8 ; lea eax, [rdx + rdi] ; ret
0x000000000004afad : cmp rdi, r8 ; jbe 0x4af47 ; pop rbx ; pop rbp ; ret
0x000000000011bf41 : cmp rdi, rcx ; jne 0x11bf36 ; ret
0x00000000000ed0a0 : cmp rdi, rdx ; ja 0xed0d6 ; ret
0x00000000000a1316 : cmp rdi, rdx ; jb 0xa1325 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f3ae4 : cmp rdi, rdx ; jne 0xf3ae1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e6d3f : cmp rdi, rsi ; ja 0xe6d36 ; ret
0x000000000007ebb2 : cmp rdi, rsi ; sete al ; ret
0x000000000010bf88 : cmp rdx, -3 ; jbe 0x10bf97 ; ret
0x000000000010fe0c : cmp rdx, r8 ; jne 0x10fdf7 ; ret
0x000000000012d39a : cmp rdx, rax ; ja 0x12d397 ; xor eax, eax ; ret
0x0000000000045f4c : cmp rdx, rax ; jne 0x45f47 ; xor eax, eax ; ret
0x000000000004602c : cmp rdx, rax ; jne 0x46027 ; xor eax, eax ; ret
0x0000000000103db0 : cmp rdx, rcx ; ja 0x103de3 ; xor eax, eax ; syscall
0x0000000000157b81 : cmp rdx, rcx ; jne 0x157b6f ; vzeroupper ; ret
0x000000000015ca14 : cmp rdx, rcx ; jne 0x15c9fa ; vzeroupper ; ret
0x00000000000a17da : cmp rdx, rcx ; jne 0xa17c9 ; ret
0x00000000000a17d9 : cmp rdx, rcx ; jne 0xa17ca ; ret
0x000000000007e149 : cmp rdx, rdi ; setae al ; ret
0x00000000001258a5 : cmp rdx, rsi ; jbe 0x1258b8 ; xor eax, eax ; ret
0x00000000001044ec : cmp rdx, rsi ; je 0x1044fe ; ret
0x00000000000a246c : cmp rdx, rsi ; je 0xa247e ; ret
0x00000000000896a8 : cmp rdx, rsi ; jne 0x896a6 ; ret
0x000000000007cb99 : cmp rsi, rcx ; jne 0x7cb98 ; lea eax, [rdx + rdi] ; ret
0x000000000004b0c5 : cmp rsi, rdi ; cmovb rax, rdi ; ret
0x00000000000ff647 : cmp sil, cl ; cmovne eax, edx ; ret
0x00000000000ff5dd : cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000023ba2 : cmp word ptr [rax], ax ; mov eax, 0xca ; syscall
0x0000000000152b97 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000152e97 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153d97 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000103076 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x450f4800 ; ret 0x90c3
0x0000000000153a97 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000015a4f9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000178db9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x00000000001744d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1744a2 ; mov ecx, 0x5b92ac50 ; retf
0x000000000014ccf6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153797 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153497 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001765f1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000000023ba : cmpsb byte ptr [rsi], byte ptr [rdi] ; rcl bh, 1 ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x00000000000b1767 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xc
0x00000000001153be : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff0
0x0000000000177774 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x00000000000dde94 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000007d14c : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000006cefa : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c13a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000197cd1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; in al, dx ; imul dh ; call qword ptr [rax]
0x0000000000108f9d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add ch, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000d4af5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x76248b40], al ; ret 0xe281
0x0000000000099ac0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000019e581 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax]
0x000000000007afc5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; loop 0x7afcd ; dec dword ptr [rax + 0x39] ; ret
0x0000000000173fbf : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x0000000000082f75 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000003a9a : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000e53cd : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff3
0x00000000000b53cd : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff6
0x000000000008655d : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb dword ptr [rbx], esi ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000010951d : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000003a99 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000038e03 : cqo ; idiv rsi ; ret
0x000000000018c314 : cwde ; adc eax, 0x6ec0002 ; stc ; jmp qword ptr [rax]
0x00000000000e53c8 : cwde ; add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff3
0x00000000000c6fdb : cwde ; add byte ptr [rax], al ; add bl, al ; mov rsi, rsp ; call qword ptr [rdx]
0x0000000000120a0f : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e8e64 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000002b23c : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000007971c : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000061c8f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx - 0x90343], al ; call qword ptr [rax]
0x00000000000443c1 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf66
0x0000000000196ec5 : cwde ; add byte ptr [rax], al ; or dl, al ; out dx, al ; jmp qword ptr [rsi]
0x00000000001ac960 : cwde ; add dword ptr [rax], eax ; pushfq ; je 0x1ac969 ; jmp qword ptr [rdx]
0x000000000010311b : cwde ; add eax, 0x450f4800 ; ret 0x66c3
0x000000000017a6dc : cwde ; div ah ; call qword ptr [rax]
0x00000000001964e8 : cwde ; insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x0000000000178ddd : cwde ; int1 ; jmp rax
0x00000000001a0068 : cwde ; jle 0x1a0062 ; jmp qword ptr [rcx]
0x00000000001a4428 : cwde ; jp 0x1a4423 ; call rcx
0x00000000001995b8 : cwde ; loopne 0x1995b9 ; call rsp
0x0000000000164590 : cwde ; mov ch, ah ; ljmp [rax - 0x77] ; in al, dx ; call rax
0x000000000018863c : cwde ; mov ecx, 0x6d9c0000 ; out dx, al ; jmp rax
0x0000000000199060 : cwde ; mov edx, 0x5b0c0000 ; cli ; call qword ptr [rax]
0x000000000007ec51 : cwde ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000109812 : cwde ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000a24c7 : cwde ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000003cb9 : cwde ; ret
0x00000000001a1128 : cwde ; ret 0xfff4
0x0000000000003dd9 : cwde ; retf
0x000000000011d284 : cwde ; retf 0x29
0x0000000000002406 : cwde ; retf 0x7e0c
0x00000000001005d4 : cwde ; retf 0xffff
0x000000000018c839 : cwde ; stc ; call qword ptr [rax]
0x000000000018c831 : cwde ; stc ; jmp rsp
0x000000000012d3f4 : cwde ; stosb byte ptr [rdi], al ; sub byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007ee34 : cwde ; xor eax, dword ptr fs:[rax] ; ret
0x00000000000b4a00 : dec byte ptr [r13 - 0x77] ; retf 0x694d
0x000000000009b009 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x0000000000098ff1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000d7380 : dec byte ptr [r8 + 1] ; retf 0xdeb
0x000000000009b00a : dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000098ff2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000008598e : dec byte ptr [rax + 0x31] ; retf 0x8948
0x00000000000f239f : dec byte ptr [rax + 0x39] ; retf 0x8948
0x000000000014f967 : dec byte ptr [rax + 0x63] ; ret 0x8348
0x000000000015c50d : dec byte ptr [rax + 0x7f] ; jl 0x15c532 ; cld ; vzeroupper ; ret
0x00000000000d7381 : dec byte ptr [rax + 1] ; retf 0xdeb
0x00000000000f1f1e : dec byte ptr [rax + 9] ; ret
0x0000000000037142 : dec byte ptr [rax - 0x73] ; sub al, 7 ; mov rdi, rbp ; call r12
0x00000000000858a1 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000b3eb5 : dec byte ptr [rax - 0x77] ; out dx, eax ; call rbx
0x0000000000087740 : dec byte ptr [rax - 0x77] ; ret
0x0000000000085f3f : dec byte ptr [rax - 0x77] ; ret 0x88e8
0x0000000000085eca : dec byte ptr [rax - 0x77] ; ret 0xfde8
0x00000000000de666 : dec byte ptr [rax - 0x77] ; retf 0xb70f
0x00000000000d28af : dec byte ptr [rax - 0x77] ; retf 0xe183
0x00000000000bed34 : dec byte ptr [rax - 0x7d] ; ret
0x000000000011beea : dec byte ptr [rbp - 0x77] ; ret 0xb60f
0x00000000000b4a01 : dec byte ptr [rbp - 0x77] ; retf 0x694d
0x00000000000c32e0 : dec byte ptr [rbx + rcx*4 + 0x2c] ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000002df9d : dec byte ptr [rcx + rcx*4 - 0x11] ; call 0x8a1f6
0x00000000001169fb : dec byte ptr [rcx + rcx*4 - 0x3b] ; mov rdi, rbx ; call rax
0x00000000000ec541 : dec byte ptr [rcx] ; je 0xec569 ; mov eax, 0x48 ; syscall
0x00000000000eaecd : dec byte ptr [rdi] ; retf 0xc985
0x0000000000157271 : dec byte ptr [rdx - 0x73] ; add al, 7 ; vzeroupper ; ret
0x000000000008143b : dec dword ptr [r9 - 0x7b] ; ret
0x000000000015f3dc : dec dword ptr [rax + 0x21] ; ret 0x7be9
0x000000000015ee7e : dec dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000079502 : dec dword ptr [rax + 0x21] ; retf 0x2148
0x00000000000a2468 : dec dword ptr [rax + 0x21] ; retf 0x3948
0x0000000000044ac3 : dec dword ptr [rax + 0x29] ; ret
0x000000000009b18a : dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000099132 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000c8157 : dec dword ptr [rax + 0x29] ; ret 0x8348
0x000000000003d0c1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x0000000000024efe : dec dword ptr [rax + 0x29] ; retf
0x000000000005ce88 : dec dword ptr [rax + 0x29] ; retf 0x8948
0x00000000000d73c8 : dec dword ptr [rax + 0x29] ; retf 0xd285
0x0000000000177b27 : dec dword ptr [rax + 0x2a] ; out dx, al ; dec dword ptr [rax + 0x2a] ; out dx, al ; jmp rax
0x0000000000177b2b : dec dword ptr [rax + 0x2a] ; out dx, al ; jmp rax
0x0000000000177b73 : dec dword ptr [rax + 0x2a] ; out dx, al ; push qword ptr [rax + 0x27] ; out dx, al ; call qword ptr [rsi]
0x000000000003ce33 : dec dword ptr [rax + 0x39] ; ret
0x000000000005b305 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007993a : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000005b384 : dec dword ptr [rax + 0x39] ; ret 0x8948
0x0000000000127fad : dec dword ptr [rax + 0x39] ; ret 0xc789
0x00000000000471fa : dec dword ptr [rax + 0x39] ; ret 0xe075
0x00000000000898c2 : dec dword ptr [rax + 0x39] ; retf
0x0000000000024f09 : dec dword ptr [rax + 0x39] ; retf 0x850f
0x00000000000c858c : dec dword ptr [rax + 0x39] ; retf 0x8948
0x00000000000c46b3 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00000000000c46e8 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000c2beb : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000fb351 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x00000000001104f5 : dec dword ptr [rax + 0x40c60158] ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000004b1de : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x00000000001891e3 : dec dword ptr [rax + 0x5c0000fb] ; retf 0xffef
0x000000000005a454 : dec dword ptr [rax + 0x63] ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000616fd : dec dword ptr [rax + 0x63] ; add al, 0x81 ; add rax, rdx ; jmp rax
0x0000000000063e76 : dec dword ptr [rax + 0x63] ; add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000495f4 : dec dword ptr [rax + 0x63] ; ret 0x2e9
0x0000000000102048 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000ddae4 : dec dword ptr [rax + 0x63] ; ret 0xcf89
0x000000000006243d : dec dword ptr [rax + 0x63] ; retf
0x000000000005234f : dec dword ptr [rax + 0x63] ; retf 0x3948
0x00000000000f7bc9 : dec dword ptr [rax + 0x63] ; retf 0x8b41
0x0000000000097449 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000000887e4 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000e6dd8 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000085531 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000012baad : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002e6e9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000001030ef : dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000000ea002 : dec dword ptr [rax + 0xf] ; ret 0xc3f6
0x00000000000f8aaf : dec dword ptr [rax + 0xf] ; ret 0xc748
0x00000000000370c8 : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000064537 : dec dword ptr [rax + 1] ; clc ; jmp rax
0x0000000000043226 : dec dword ptr [rax + 1] ; ret
0x00000000000ade2a : dec dword ptr [rax + 1] ; retf
0x000000000005a0a5 : dec dword ptr [rax + 1] ; retf 0x8948
0x00000000000ade4c : dec dword ptr [rax + 1] ; retf 0xfde9
0x0000000000064804 : dec dword ptr [rax + 1] ; sar byte ptr [rdx + 1], 1 ; jmp rax
0x0000000000162374 : dec dword ptr [rax + 9] ; ret
0x000000000004ac63 : dec dword ptr [rax + 9] ; ret 0xb848
0x000000000010410c : dec dword ptr [rax + 9] ; retf 0x8348
0x000000000011bc1f : dec dword ptr [rax + 9] ; retf 0x894c
0x000000000011bc06 : dec dword ptr [rax + 9] ; retf 0xc149
0x000000000015f0a3 : dec dword ptr [rax + 9] ; retf 0xf883
0x0000000000161ac2 : dec dword ptr [rax + 9] ; retf 0xfe83
0x0000000000160bc2 : dec dword ptr [rax + 9] ; ror dword ptr [rbp + 0x39], cl ; retf 0x930f
0x000000000018c04b : dec dword ptr [rax + rax - 0x5bb3fffe] ; clc ; jmp rsp
0x000000000018c1eb : dec dword ptr [rax - 0x23fffdf6] ; fdiv st(0), st(0) ; call rsp
0x00000000000366fb : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000003b182 : dec dword ptr [rax - 0x39] ; ret
0x000000000008c302 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000069582 : dec dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x00000000000eeb14 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000a24c3 : dec dword ptr [rax - 0x73] ; add al, 0x98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b1752 : dec dword ptr [rax - 0x73] ; je 0xb1782 ; js 0xb1749 ; retf
0x00000000000a24b1 : dec dword ptr [rax - 0x73] ; push rax ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000000ff69f : dec dword ptr [rax - 0x75] ; adc eax, dword ptr [rcx - 0x77] ; ret
0x0000000000059097 : dec dword ptr [rax - 0x75] ; adc ecx, ebp ; retf 0xffa5
0x000000000010f749 : dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000125fb5 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001070a2 : dec dword ptr [rax - 0x75] ; jl 0x1070d2 ; xor al, ch ; retf
0x00000000001139ab : dec dword ptr [rax - 0x75] ; jl 0x1139db ; or al, ch ; ret 0xf0dc
0x00000000000e88aa : dec dword ptr [rax - 0x75] ; jl 0xe88da ; sub al, ch ; ret
0x0000000000066d7b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff750 ; call rax
0x0000000000061180 : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff768 ; call rax
0x000000000010f7d9 : dec dword ptr [rax - 0x75] ; push rbp ; add dh, dh ; ret 0x7507
0x000000000008d3ac : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000008d546 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x000000000008d902 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000e0c10 : dec dword ptr [rax - 0x77] ; adc dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8548
0x00000000000a2283 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000015759f : dec dword ptr [rax - 0x77] ; clc ; vzeroupper ; ret
0x00000000000ed149 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000045dbc : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000125a8c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000c54d1 : dec dword ptr [rax - 0x77] ; fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x0000000000045339 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x0000000000071ab0 : dec dword ptr [rax - 0x77] ; iretd ; call 0x7e546
0x00000000001249b9 : dec dword ptr [rax - 0x77] ; out dx, eax ; call r14
0x000000000002e97b : dec dword ptr [rax - 0x77] ; ret
0x00000000000ed08e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000448c9 : dec dword ptr [rax - 0x77] ; ret 0x1f0f
0x00000000000de15e : dec dword ptr [rax - 0x77] ; ret 0x2477
0x00000000000b3415 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000036a21 : dec dword ptr [rax - 0x77] ; ret 0x2c77
0x00000000000e7340 : dec dword ptr [rax - 0x77] ; ret 0x3277
0x0000000000051bf6 : dec dword ptr [rax - 0x77] ; ret 0x3477
0x00000000000eac84 : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000044f73 : dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x00000000000c4b6c : dec dword ptr [rax - 0x77] ; ret 0x676
0x00000000000ec98b : dec dword ptr [rax - 0x77] ; ret 0x6f77
0x00000000000369c0 : dec dword ptr [rax - 0x77] ; ret 0x7a77
0x00000000000ea059 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000035f0f : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000005ec9d : dec dword ptr [rax - 0x77] ; ret 0x8944
0x00000000000ae5eb : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000c587b : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000c8dc1 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000089327 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000128d13 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000000f0b6c : dec dword ptr [rax - 0x77] ; ret 0x9976
0x000000000012163b : dec dword ptr [rax - 0x77] ; ret 0xa0eb
0x00000000000dfc33 : dec dword ptr [rax - 0x77] ; ret 0xabf
0x00000000000d544e : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x0000000000069b6e : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000b74c6 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000bf8b1 : dec dword ptr [rax - 0x77] ; ret 0xcb77
0x00000000000e6e8b : dec dword ptr [rax - 0x77] ; ret 0xcd77
0x000000000006b57c : dec dword ptr [rax - 0x77] ; ret 0xede9
0x0000000000032caf : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000011079c : dec dword ptr [rax - 0x77] ; ret 0xfc3
0x00000000000dd416 : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000ae776 : dec dword ptr [rax - 0x77] ; retf
0x000000000005a50e : dec dword ptr [rax - 0x77] ; retf 0x26e9
0x00000000001275ef : dec dword ptr [rax - 0x77] ; retf 0x3145
0x000000000004a728 : dec dword ptr [rax - 0x77] ; retf 0x6ce9
0x00000000000811a1 : dec dword ptr [rax - 0x77] ; retf 0x6e9
0x00000000000890d6 : dec dword ptr [rax - 0x77] ; retf 0x8349
0x00000000000655b8 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000162861 : dec dword ptr [rax - 0x77] ; retf 0x8949
0x0000000000057ae0 : dec dword ptr [rax - 0x77] ; retf 0x89e9
0x00000000000e055a : dec dword ptr [rax - 0x77] ; retf 0xabf
0x000000000006af1f : dec dword ptr [rax - 0x77] ; retf 0xbd8b
0x000000000006ab52 : dec dword ptr [rax - 0x77] ; retf 0xc148
0x000000000003fd7b : dec dword ptr [rax - 0x77] ; retf 0xe9e9
0x000000000003d385 : dec dword ptr [rax - 0x77] ; retf 0xefe9
0x000000000004260d : dec dword ptr [rax - 0x77] ; retf 0xfe9
0x00000000000c7b90 : dec dword ptr [rax - 0x77] ; ror byte ptr [rax + 0x39], 1 ; retf 0x2576
0x0000000000044724 : dec dword ptr [rax - 0x77] ; sub rdx, rdi ; add rdx, rcx ; jmp 0x44742
0x0000000000044a34 : dec dword ptr [rax - 0x77] ; sub rdx, rdi ; add rdx, rcx ; jmp 0x44a52
0x000000000005662b : dec dword ptr [rax - 0x77] ; xchg eax, ebp ; mov eax, 0x1fffff9 ; retf
0x000000000007f579 : dec dword ptr [rax - 0x7b] ; ret 0x3175
0x000000000007f62d : dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000010275f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000001140f6 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; jmp qword ptr [rdi]
0x00000000000d57ee : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000148f7c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x00000000000ef116 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x000000000012b8e5 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rcx*2 + 0x48], 0x89 ; ret
0x00000000000f36cd : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdi*2 + 0x48], 0x39 ; ret
0x00000000000f7a2f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000895c2 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000129371 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000258ef : dec dword ptr [rax - 0x7d] ; cli ; add al, 0x74 ; retf 0x8348
0x000000000010bf87 : dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x10bf98 ; ret
0x0000000000062072 : dec dword ptr [rax - 0x7d] ; jge 0x620af ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000026f5e : dec dword ptr [rax - 0x7d] ; ret
0x0000000000025aad : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000012157e : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x00000000000db025 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000003316b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000033d19 : dec dword ptr [rax - 0x7d] ; retf 0x480b
0x0000000000033d40 : dec dword ptr [rax - 0x7d] ; retf 0xeb0a
0x00000000000cdb8d : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x39 ; ret 0xf175
0x000000000002c338 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000138e4c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000001788ab : dec dword ptr [rax] ; out dx, eax ; dec dword ptr [rax] ; out dx, eax ; jmp qword ptr [rax]
0x00000000001788af : dec dword ptr [rax] ; out dx, eax ; jmp qword ptr [rax]
0x000000000006af3a : dec dword ptr [rbp + 0x63] ; ret
0x00000000001600af : dec dword ptr [rbp + 9] ; retf
0x00000000000e98f3 : dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000018a0a3 : dec dword ptr [rbp + rdx*2 - 0x1b73ffff] ; call rax
0x0000000000056a5c : dec dword ptr [rbp - 0x77] ; cmc ; jmp 0x52ce6
0x00000000000cc0d5 : dec dword ptr [rbp - 0x77] ; ret
0x00000000000372e9 : dec dword ptr [rbp - 0x77] ; retf
0x0000000000037d37 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000008a978 : dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x00000000000c4e12 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x18 ; ret
0x000000000012c65c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000084d2a : dec dword ptr [rbx + 0x9102454] ; ret 0x65e9
0x000000000018879b : dec dword ptr [rbx + rax*8 - 0x5a640000] ; out dx, al ; jmp rax
0x00000000000ca523 : dec dword ptr [rbx - 0x76dfdbac] ; ret
0x000000000005099c : dec dword ptr [rbx - 0x76e3dbb4] ; ret 0x2944
0x000000000002ba98 : dec dword ptr [rbx - 0x76f7dbbc] ; ret
0x0000000000044bee : dec dword ptr [rbx - 0x7adfdbbc] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000031b14 : dec dword ptr [rbx - 0x7af0fbbd] ; retf
0x0000000000061d9e : dec dword ptr [rbx - 0x8b77b] ; inc dword ptr [rcx] ; ret
0x0000000000179ef3 : dec dword ptr [rbx] ; hlt ; inc dword ptr [rbx + rcx*2] ; hlt ; call qword ptr [rdx]
0x000000000010859d : dec dword ptr [rbx] ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000c4df8 : dec dword ptr [rcx + 0x22b8c7] ; add byte ptr [rax], al ; syscall
0x0000000000024e24 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000065357 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000162efa : dec dword ptr [rcx + 0x39] ; retf
0x00000000000fb953 : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d617 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000006475a : dec dword ptr [rcx + 0x63] ; add al, 0x80 ; add rax, rdi ; jmp rax
0x0000000000068e8c : dec dword ptr [rcx + 0x63] ; ret
0x000000000006b279 : dec dword ptr [rcx + 0x63] ; retf
0x000000000016262f : dec dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x000000000015ee3a : dec dword ptr [rcx + 9] ; retf 0xf883
0x0000000000081963 : dec dword ptr [rcx + rcx*4 + 0x7c] ; and al, 8 ; call qword ptr [rax]
0x00000000000e4c44 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x2167e
0x00000000000e4c43 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x2167f
0x000000000004d0f4 : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, rbx ; call rax
0x0000000000037255 : dec dword ptr [rcx + rcx*4 - 0x16] ; call r12
0x0000000000074bc3 : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x2167e
0x00000000000e4c39 : dec dword ptr [rcx + rcx*4 - 1] ; mov qword ptr [rbx], rax ; call 0x21681
0x00000000000d4be1 : dec dword ptr [rcx + rcx*4 - 9] ; call 0x2167e
0x00000000001005bd : dec dword ptr [rcx + rcx*4 - 9] ; call 0xfd076
0x000000000018c773 : dec dword ptr [rcx + rsi - 0x7bf3fffe] ; stc ; call rax
0x00000000000d6b64 : dec dword ptr [rcx - 0x3e7cb63d] ; add dword ptr [rax - 0x7d], ecx ; ret 0x4c10
0x00000000000e9f83 : dec dword ptr [rcx - 0x73] ; add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000001004b4 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000e148b : dec dword ptr [rcx - 0x75] ; push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000feadb : dec dword ptr [rcx - 0x75] ; push rsi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000859e0 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045db0 : dec dword ptr [rcx - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000160c1f : dec dword ptr [rcx - 0x77] ; fisttp dword ptr [rbp - 0x77] ; retf 0x894d
0x0000000000069b22 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000620e9 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000620b4 : dec dword ptr [rcx - 0x77] ; ret 0xbd83
0x000000000008a0fe : dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x000000000008143c : dec dword ptr [rcx - 0x7b] ; ret
0x000000000016145e : dec dword ptr [rcx - 0x7d] ; ret 0x4904
0x0000000000161388 : dec dword ptr [rcx - 0x7d] ; ret 0x4908
0x000000000007f126 : dec dword ptr [rcx - 9] ; ret
0x000000000006e24f : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100790 : dec dword ptr [rcx] ; ret
0x00000000000f8fde : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000189e93 : dec dword ptr [rdi + rax*2] ; add dword ptr [rax], eax ; cmp al, 0x91 ; jmp qword ptr [rax]
0x0000000000034df7 : dec dword ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ret 0xd574
0x000000000018995b : dec dword ptr [rdi] ; add dword ptr [rax], eax ; pushfq ; scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x0000000000053c0f : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x000000000002ecf6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ec87 ; loopne 0x2ed07 ; ret
0x00000000000f981d : dec dword ptr [rdi] ; mov bh, 4 ; js 0xf97ae ; loopne 0xf982e ; ret
0x00000000000ace6c : dec dword ptr [rdi] ; mov byte ptr [rdi - 0x76fffffb], dh ; ret
0x00000000000e1c5f : dec dword ptr [rdi] ; mov dh, 0x9d ; ret
0x00000000000e1c7f : dec dword ptr [rdi] ; mov dh, 0x9d ; ret 0xfffa
0x00000000000e0702 : dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2d9e
0x000000000005a59d : dec dword ptr [rdi] ; ret
0x0000000000024b8b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000087557 : dec dword ptr [rdi] ; ret 0xfc3
0x000000000002f979 : dec dword ptr [rdi] ; retf 0xc089
0x000000000002da00 : dec dword ptr [rdi] ; retf 0xd88
0x00000000001263fd : dec dword ptr [rdi] ; test ah, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000010ee34 : dec dword ptr [rdi] ; test bl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000002733f : dec dword ptr [rdi] ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x0000000000068445 : dec dword ptr [rdi] ; test byte ptr [rdx - 0x7c000016], bh ; ret
0x000000000007452f : dec dword ptr [rdi] ; test byte ptr [rdx], bl ; add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000010ec64 : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x3904
0x000000000010bd83 : dec dword ptr [rdi] ; test ch, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000015e390 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e11b8 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000369c8 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x00000000000733db : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000012d14c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x00000000000803dd : dec dword ptr [rdx + 0x33] ; add byte ptr [rax - 0x77], cl ; adc bl, dh ; ret
0x0000000000187bab : dec dword ptr [rdx + rax*4] ; add byte ptr [rax], al ; fucomip st(2) ; jmp qword ptr [rax]
0x00000000001891ab : dec dword ptr [rdx + rdi*8] ; add byte ptr [rax], al ; ret 0xffef
0x000000000017ab93 : dec dword ptr [rdx + rdx*4] ; cmc ; inc dword ptr [rdx - 0x54] ; cmc ; call qword ptr [rdi]
0x000000000018987b : dec dword ptr [rdx - 0x5bc3ffff] ; int1 ; call qword ptr [rax]
0x00000000000f88f8 : dec dword ptr [rdx - 0x73] ; ret
0x00000000001778af : dec dword ptr [rip - 0x59001235] ; retf
0x000000000002e17a : dec dword ptr [rip - 0x7cb79d8c] ; ret
0x00000000001893a3 : dec dword ptr [rsi + rax - 0x313ffff] ; out dx, eax ; call rsp
0x000000000017a8e7 : dec dword ptr [rsi - 0x74] ; cmc ; dec dword ptr [rsi - 0x74] ; cmc ; jmp rax
0x000000000017a8eb : dec dword ptr [rsi - 0x74] ; cmc ; jmp rax
0x000000000017948f : dec dword ptr [rsi] ; test edx, esi ; jmp qword ptr [rbx]
0x0000000000187c23 : dec dword ptr [rsp + rax*4] ; add byte ptr [rax], al ; pop rsp ; out 0xea, al ; jmp qword ptr [rax]
0x000000000017a133 : dec dword ptr [rsp + rax*8 - 0xc] ; dec ecx ; ret
0x000000000018989b : dec dword ptr [rsp] ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; test al, 0xf1 ; jmp qword ptr [rax]
0x0000000000189c9b : dec eax ; cmp eax, dword ptr [rcx] ; add byte ptr [rdi + rcx*8 - 0xe], ch ; jmp rsp
0x000000000018b12b : dec eax ; mov bl, 1 ; add ah, cl ; ret 0xfff6
0x000000000018b553 : dec eax ; ret
0x0000000000187f2b : dec eax ; xchg eax, ecx ; add byte ptr [rax], al ; and r13b, bl ; jmp rax
0x00000000000477ad : dec ecx ; ret
0x0000000000187b93 : dec esp ; add dword ptr [rax], 0xeade9c00 ; jmp rsp
0x000000000018b68b : dec esp ; enter 1, -0x74 ; and al, 0xf7 ; jmp rax
0x000000000018b97b : dec esp ; fild dword ptr [rcx] ; add byte ptr [rcx + rdi*4 - 9], bl ; jmp rax
0x000000000018b6d3 : dec esp ; leave ; add dword ptr [rax], eax ; pushfq ; sub bh, dh ; jmp rax
0x000000000018b193 : dec esp ; mov ah, 1 ; add byte ptr [rbp + rax*8 - 0xa], bh ; jmp rax
0x000000000018b5f3 : dec esp ; mov byte ptr [rcx], 0 ; in al, dx ; sbb dh, bh ; jmp rax
0x000000000018a7bb : dec esp ; test byte ptr [rcx], al ; add byte ptr [rdi + rsi*8 - 0xb], cl ; jmp rax
0x000000000017d2a7 : dec esp ; xor edx, edi ; jmp rsp
0x00000000000372e8 : dec qword ptr [r13 - 0x77] ; retf
0x000000000009b189 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x0000000000099131 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000000898c1 : dec qword ptr [r8 + 0x39] ; retf
0x0000000000027442 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000017a6dd : div ah ; call qword ptr [rax]
0x000000000007ec76 : div byte ptr [rbp + 0x17] ; and dword ptr [rdi + 8], 0xfffffffe ; xor eax, eax ; ret
0x0000000000075588 : div byte ptr [rbp + 0x25] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b4622 : div byte ptr [rbp + 0x33] ; mov eax, 0x60 ; syscall
0x0000000000097602 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000008deb1 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000100e99 : div byte ptr [rdx + rsi - 0x80] ; retf 0xa880
0x000000000002bc01 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x2bc19 ; ret
0x00000000000e6d41 : div dword ptr [rdi - 0x14] ; ret
0x0000000000002f09 : div dword ptr [rsi + 0x10] ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000004b6e6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000018a7d1 : div ebp ; call qword ptr [rax]
0x00000000001a5b7d : div ebp ; call qword ptr [rcx]
0x000000000018a7c1 : div ebp ; jmp rax
0x000000000008e128 : div ebx ; ret
0x00000000000a19b8 : div ecx ; mov eax, eax ; ret
0x00000000000a199f : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000001a8e09 : div esi ; call rsi
0x00000000001a2209 : div esp ; jmp rcx
0x000000000004b6e5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000018a7c0 : div rbp ; jmp rax
0x00000000001778a9 : enter -0x13, -0x5a ; retf
0x000000000011bc00 : enter -0x1e7f, 0 ; add bh, bh ; dec dword ptr [rax + 9] ; retf 0xc149
0x0000000000002768 : enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000008e1ae : enter -0x208c, -0xd ; ret
0x0000000000150797 : enter -0x23b, -0x29 ; ret 0xc085
0x0000000000097a81 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000b7834 : enter -0x2fd7, -0x2f ; call 0xffffffffeacd3a44
0x00000000000ef507 : enter -0x39bf, 0x40 ; inc dword ptr [rax] ; ret
0x000000000011b823 : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x000000000008d0cd : enter -0x3eb8, -0x20 ; or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x000000000006978d : enter -0x3eb8, -8 ; add cl, byte ptr [rcx + 0x29] ; ret
0x000000000015e504 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000002ce4 : enter -0x7042, -0x15 ; retf
0x000000000009b006 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000098fee : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000009b186 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009912e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000007f575 : enter -0x72b8, 0x50 ; dec dword ptr [rax - 0x7b] ; ret 0x3175
0x00000000000d3b2e : enter -0x72f1, -0x15 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; ret
0x000000000014fee0 : enter -0x73b, 0x77 ; ret
0x00000000000350fa : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000f0951 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x000000000002f972 : enter -0x74bc, -0x6b ; push 0xfffffff ; retf 0xc089
0x0000000000077008 : enter -0x76bc, 4 ; and al, 0xe8 ; ret
0x0000000000050b52 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x000000000004af6b : enter -0xd8b, 0x5b ; pop rbp ; ret
0x0000000000150eb4 : enter -2, -1 ; ret
0x000000000018685d : enter -6, 0x40 ; retf 0xfffa
0x000000000008583c : enter 0, 0 ; call rax
0x000000000011dc19 : enter 0, 0 ; jmp rcx
0x000000000016c2d8 : enter 0, 0 ; retf
0x0000000000171170 : enter 0, 0 ; retf 0
0x000000000016d4f8 : enter 0x11, 0 ; retf
0x00000000001a0690 : enter 0x130, 0 ; cmp al, 0x9f ; hlt ; call rcx
0x000000000016d8f8 : enter 0x14, 0 ; retf
0x0000000000154319 : enter 0x148, -8 ; vzeroupper ; ret
0x00000000001a5890 : enter 0x182, 0 ; cmc ; call qword ptr [rbx]
0x000000000006a137 : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000000ec97c : enter 0x1be, 0x54 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000014fec1 : enter 0x1d75, -0x7d ; ret 0x8101
0x0000000000150381 : enter 0x2275, -0x7d ; ret 0x8101
0x0000000000047a91 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000011d466 : enter 0x29, -0x48 ; retf 0
0x00000000001546ae : enter 0x2948, -0x30 ; vzeroupper ; ret
0x00000000000fc626 : enter 0x2b, -0x48 ; retf 0
0x0000000000158581 : enter 0x2c75, -0x7d ; ret 0x8104
0x000000000008fc8d : enter 0x31c3, -0x40 ; ret
0x000000000014f880 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000000ff5dc : enter 0x3840, -0x2a ; cmovne eax, ecx ; ret
0x00000000000ff646 : enter 0x3840, -0x32 ; cmovne eax, edx ; ret
0x000000000007f367 : enter 0x3948, -0x30 ; jne 0x7f376 ; ret
0x00000000000e60f7 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000066508 : enter 0x415d, 0x5c ; pop r13 ; ret
0x0000000000120dcb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000120ccb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000029a8 : enter 0x42bc, 0x27 ; mov al, 0x1f ; retf
0x00000000001204f7 : enter 0x4789, 0x48 ; mov eax, 1 ; ret
0x0000000000120464 : enter 0x4789, 0x54 ; mov eax, 1 ; ret
0x0000000000120524 : enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x0000000000082387 : enter 0x4901, -0x75 ; pop rax ; or dh, dh ; ret
0x000000000011e44c : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006644d : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000176c5c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000187f2c : enter 0x91, 0 ; and r13b, bl ; jmp rax
0x0000000000172570 : enter 0xa, 0 ; retf 0xa
0x0000000000172770 : enter 0xb, 0 ; retf 0xb
0x0000000000199290 : enter 0xbc, 0 ; in al, dx ; xor al, dh ; jmp qword ptr [rbx]
0x0000000000172970 : enter 0xc, 0 ; retf 0xc
0x0000000000199690 : enter 0xc0, 0 ; in al, dx ; jg 0x19968e ; call qword ptr [rdx]
0x000000000016d0f8 : enter 0xe, 0 ; retf
0x000000000019b690 : enter 0xe0, 0 ; jl 0x19b6ba ; stc ; jmp qword ptr [rbx]
0x000000000011bbed : enter 0xf44, -0x49 ; retf 0xc148
0x00000000000de0f8 : enter 0xf49, 0x46 ; int1 ; syscall
0x000000000015a5a6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000096de1 : enter 0xf66, -0x15 ; ret
0x000000000018b68d : enter 1, -0x74 ; and al, 0xf7 ; jmp rax
0x00000000000f3af3 : enter 1, 0 ; ret
0x000000000016c420 : enter 1, 0 ; retf
0x0000000000171370 : enter 1, 0 ; retf 1
0x000000000016dd00 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000171570 : enter 2, 0 ; retf 2
0x0000000000171770 : enter 3, 0 ; retf 3
0x0000000000171970 : enter 4, 0 ; retf 4
0x000000000009ea34 : enter 5, 0 ; ret
0x0000000000171b70 : enter 5, 0 ; retf 5
0x0000000000171d70 : enter 6, 0 ; retf 6
0x0000000000001830 : enter 7, 0 ; retf 7
0x0000000000172170 : enter 8, 0 ; retf 8
0x0000000000172370 : enter 9, 0 ; retf 9
0x000000000019ade5 : fadd dword ptr [rax] ; add byte ptr [rax - 0x28], bh ; sti ; call qword ptr [rbx]
0x000000000002177d : fadd dword ptr [rax] ; add byte ptr [rax], al ; jne 0x2174d ; ret
0x0000000000043849 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f0d04 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000019ae71 : fadd dword ptr [rax] ; add byte ptr [rdi + rbx*8], bh ; sti ; jmp rsi
0x00000000000e9556 : fadd dword ptr [rax] ; ret
0x000000000012712c : fadd dword ptr [rbx + 0x14807e0] ; retf 0x148
0x00000000000cd2c5 : fadd dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x0000000000066c0f : fadd dword ptr [rcx + 0xf] ; ret
0x000000000011c6b5 : fadd dword ptr [rcx + 0xf] ; retf 0xc80f
0x0000000000161e85 : fadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000b2cfe : fadd dword ptr [rcx + rdi - 0x3f] ; cmovg eax, edx ; ret
0x000000000006af58 : fadd dword ptr [rcx - 0x77] ; ret
0x000000000012c4d1 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; jmp rax
0x000000000018b8ed : fadd dword ptr [rcx] ; add byte ptr [rdx + rbx*4 - 9], cl ; jmp rax
0x00000000001ae960 : fadd dword ptr [rsi] ; add byte ptr [rax], al ; sbb dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x000000000018d6a4 : fadd qword ptr [rax] ; add byte ptr [rax], al ; sub byte ptr [rax - 0x17], cl ; call qword ptr [rsi]
0x00000000000f7904 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000019b1e1 : fadd qword ptr [rax] ; add byte ptr [rsp + rdx*4 - 0xf], bh ; call rcx
0x0000000000081800 : fadd qword ptr [rbx + 0x33] ; add cl, ch ; retf 0xfffc
0x00000000000d1338 : fadd qword ptr [rbx + 0x634901eb] ; ret 0x634c
0x000000000004b6d3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x00000000001ab23d : fadd qword ptr [rcx] ; add al, al ; jp 0x1ab240 ; call rax
0x00000000001a58a4 : fadd qword ptr [rdx - 0xda7ffff] ; cmc ; jmp qword ptr [rdi]
0x00000000001a2434 : fadd qword ptr [rdx] ; cmc ; call qword ptr [rdx]
0x0000000000034c64 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000034bf4 : fadd st(0) ; ret
0x000000000018b120 : fadd st(1), st(0) ; idiv bh ; jl 0x18b0e2 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret 0xfff6
0x000000000015eb28 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000015b8fe : fadd st(3) ; ret
0x00000000000f1576 : fadd st(6), st(0) ; sbb eax, 0x9f0f30ff ; ret 0x8545
0x0000000000189fc8 : fadd st(7), st(0) ; call rax
0x000000000014fc5d : faddp st(5) ; in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x00000000001582de : faddp st(5) ; in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x00000000000f0ff6 : faddp st(6) ; sbb eax, 0x9f0f30ff ; ret 0x8545
0x0000000000106b05 : fbld tbyte ptr [rbx + rbp] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000015a0f1 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011480e : fbstp tbyte ptr [rbp - 0x11] ; pop rbx ; ret
0x000000000016387b : fbstp tbyte ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000001636ec : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000700c5 : fbstp tbyte ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; jmp rax
0x0000000000176298 : fcmovb st(0), st(3) ; ret
0x0000000000003643 : fcmove st(0), st(5) ; retf
0x00000000001547cb : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x00000000000681da : fcmovnb st(0), st(6) ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x0000000000062040 : fcmovnb st(0), st(6) ; test eax, edi ; idiv bh ; jmp qword ptr [rax]
0x00000000001a2ba0 : fcom dword ptr [rbp + 1] ; add ah, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018eda0 : fcom dword ptr [rdi] ; add byte ptr [rax], al ; pushfq ; add dl, ch ; call qword ptr [rbx]
0x000000000019e9a4 : fcom qword ptr [rbx] ; add dword ptr [rax], eax ; test al, 0xd6 ; jmp qword ptr [rdi]
0x0000000000189fe8 : fcom st(0), st(2) ; call qword ptr [rax]
0x000000000004365f : fcomi st(3) ; ret
0x000000000018a089 : fcomip st(3) ; jmp qword ptr [rax]
0x000000000008e1b0 : fcomip st(3) ; ret
0x0000000000100120 : fcomip st(6) ; ret 0x7508
0x00000000000ee6b7 : fcomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000eff08 : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000008a9b7 : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edx ; ret
0x000000000006fd07 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f261 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002bd9b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000032b36 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000177019 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000000f148b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001a31a4 : fcomp qword ptr [rbx + 1] ; add al, bh ; cmc ; jmp qword ptr [rcx]
0x0000000000175280 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000018c1f0 : fcomp st(0), st(4) ; clc ; call rsp
0x000000000019afa0 : fcomp st(1) ; add byte ptr [rax], al ; or al, 0x8c ; int1 ; call qword ptr [rcx]
0x000000000019b1a0 : fcomp st(3) ; add byte ptr [rax], al ; pushfq ; xchg eax, ebx ; int1 ; call rcx
0x00000000001884ec : fdiv dword ptr [rax - 0x4e940000] ; in al, dx ; call qword ptr [rax]
0x000000000015f0a1 : fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x00000000000e2522 : fdiv dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019ad48 : fdiv dword ptr [rdi] ; cld ; jmp qword ptr [rbx]
0x00000000001a3248 : fdiv dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000019fb08 : fdiv dword ptr [rdx - 0xc] ; call qword ptr [rcx]
0x0000000000194aa4 : fdiv qword ptr [rax + rax] ; cmp byte ptr [rsi], ah ; out dx, al ; call qword ptr [rdi]
0x0000000000198da4 : fdiv qword ptr [rdi - 0x75f80000] ; out dx, eax ; jmp qword ptr [rbx]
0x000000000018c1f1 : fdiv st(0), st(0) ; call rsp
0x000000000017bded : fdiv st(1), st(0) ; jmp qword ptr [rax]
0x000000000017bde9 : fdiv st(1), st(0) ; push qword ptr [rax] ; fdiv st(1), st(0) ; jmp qword ptr [rax]
0x000000000019ed18 : fdiv st(2) ; jmp qword ptr [rcx]
0x000000000018a041 : fdiv st(3) ; call rax
0x0000000000197a78 : fdiv st(3) ; out dx, al ; jmp rbx
0x00000000000de1b4 : fdiv st(3) ; ret
0x000000000018c2a8 : fdiv st(7), st(0) ; clc ; call rax
0x00000000000edc58 : fdivr dword ptr [rax + 0x10e] ; syscall
0x000000000007e6b0 : fdivr dword ptr [rbp + 0x10033] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001a15a0 : fdivr dword ptr [rdi] ; add dword ptr [rax], eax ; cld ; retf
0x00000000001a14a0 : fdivr dword ptr [rsi] ; add dword ptr [rax], eax ; leave ; hlt ; jmp qword ptr [rcx]
0x00000000001992a4 : fdivr qword ptr [rax + rax - 0xfc8f800] ; call rsp
0x000000000019df34 : fdivr qword ptr [rcx] ; call rcx
0x000000000018c248 : fdivr st(0), st(0) ; clc ; call rsp
0x0000000000178e59 : fdivr st(1), st(0) ; call qword ptr [rax]
0x0000000000186821 : fdivr st(2) ; jmp rax
0x000000000019ade9 : fdivr st(3) ; call qword ptr [rbx]
0x000000000019ede4 : fdivr st(3), st(0) ; call qword ptr [rsi]
0x00000000000a1e4b : fdivr st(3), st(0) ; ret
0x00000000001745d5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001a8271 : fdivr st(6), st(0) ; call qword ptr [rcx]
0x00000000001486bd : fdivr st(7) ; ret
0x000000000009bebe : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000014fc61 : ffreep st(5) ; std ; xlatb ; retf
0x0000000000061965 : fiadd dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019afe5 : fiadd dword ptr [rax] ; add byte ptr [rax - 0x74], bl ; int1 ; jmp qword ptr [rcx]
0x000000000019b02d : fiadd dword ptr [rax] ; add byte ptr [rax - 0x74], dh ; int1 ; call qword ptr [rcx]
0x000000000019b041 : fiadd dword ptr [rax] ; add byte ptr [rsp + rcx*4 - 0xf], bh ; call qword ptr [rax]
0x000000000000379c : fiadd dword ptr [rax] ; pop rsp ; ret 0xf84d
0x000000000008cd14 : fiadd dword ptr [rbp + 0x38] ; retf 0xdc72
0x00000000000dd190 : fiadd dword ptr [rbp + 0x39] ; ret 0x597e
0x000000000003aa28 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000000a523e : fiadd dword ptr [rbp + 0x450f48f6] ; ret 0x8948
0x000000000003c28f : fiadd dword ptr [rbp - 0x7b] ; fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x00000000001ae7ec : fiadd dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x000000000015f425 : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000001571d2 : fiadd dword ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000019b02c : fiadd dword ptr fs:[rax] ; add byte ptr [rax - 0x74], dh ; int1 ; call qword ptr [rcx]
0x00000000000a22a3 : fiadd word ptr [rcx + 0x39] ; sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x0000000000036aee : fiadd word ptr [rcx + rcx*4 - 0x19] ; mov eax, 0x81 ; syscall
0x000000000010b78a : fiadd word ptr [rcx + rcx*4 - 9] ; call 0xe79d6
0x000000000015649e : fiadd word ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000688cb : ficom dword ptr [rcx] ; add byte ptr [rcx - 0x77], al ; retf
0x0000000000087211 : ficomp dword ptr [rbx + 0x5d] ; ret
0x0000000000176e66 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000024a72 : ficomp word ptr [rsi] ; cmp dword ptr [rax], eax ; test eax, eax ; je 0x24a89 ; ret
0x0000000000001ad0 : fidiv word ptr [rbx] ; retf
0x0000000000161ac0 : fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x00000000000ebcc6 : fidivr dword ptr [rax + 0x10f] ; syscall
0x0000000000035dc0 : fidivr dword ptr [rax + 0xea] ; syscall
0x000000000012c4a5 : fidivr dword ptr [rax + 1] ; ret
0x00000000001277c0 : fidivr dword ptr [rax - 1] ; ret
0x0000000000062021 : fidivr dword ptr [rcx] ; ret 0x830f
0x000000000010b76e : fidivr word ptr [rdi + 2] ; call 0xe7a78
0x0000000000002ef4 : fild dword ptr [rax + 0x2d37b741] ; retf 0x4a9a
0x000000000019b171 : fild dword ptr [rax] ; add byte ptr [rbx + rdx*4 - 0xf], bh ; jmp qword ptr [rax]
0x00000000000ba8e5 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000008b32d : fild dword ptr [rbp + 0x38] ; retf 0x1975
0x00000000000e0b87 : fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x0000000000086ed6 : fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x000000000015eefe : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000010c9fa : fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000010139d : fild dword ptr [rcx - 0xa] ; and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000000001ab0e1 : fild dword ptr [rcx] ; add ah, bh ; ja 0x1ab0e4 ; call qword ptr [rbx]
0x00000000001ab0cd : fild dword ptr [rcx] ; add al, dh ; ja 0x1ab0d0 ; call qword ptr [rcx]
0x00000000001ab145 : fild dword ptr [rcx] ; add byte ptr [rax], cl ; jns 0x1ab148 ; jmp qword ptr [rbx]
0x000000000018b97d : fild dword ptr [rcx] ; add byte ptr [rcx + rdi*4 - 9], bl ; jmp rax
0x0000000000188c55 : fild word ptr [rax] ; add ah, bh ; sub edi, ebp ; jmp rsp
0x0000000000083895 : fild word ptr [rbp + 0x33] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000ca3f6 : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xd008
0x00000000000f7d65 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000000b9d80 : fild word ptr [rcx - 0x77] ; retf
0x00000000001ab531 : fild word ptr [rcx] ; add byte ptr [rax + rax*4 - 9], cl ; jmp rsi
0x000000000018ba3d : fild word ptr [rcx] ; add byte ptr [rax + rcx*8 - 9], ch ; jmp qword ptr [rax]
0x000000000018ba85 : fild word ptr [rcx] ; add byte ptr [rbx + rcx*8 - 9], bl ; jmp qword ptr [rax]
0x000000000002532e : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000003c50f : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000871ae : fimul dword ptr [rax + 1] ; ret 0x772
0x00000000000354a4 : fimul dword ptr [rax + 9] ; ret 0xb848
0x000000000014af76 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016253d : fimul dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000045db3 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000000828f4 : fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x00000000000a52ea : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000006ab65 : fimul dword ptr [rbp + 0x63] ; ret
0x00000000000bd076 : fimul dword ptr [rbp - 0x7b] ; fisttp dword ptr [rdi] ; ret 0x8348
0x000000000016153a : fimul dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x00000000000babe6 : fimul dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x48 ; ret 0x8348
0x00000000000862a4 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x0000000000086019 : fimul dword ptr [rcx + rcx*4 - 0xa] ; call rax
0x000000000011b0c7 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x0000000000045371 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call 0x215c9
0x0000000000147462 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a8381
0x00000000001484e2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a9401
0x00000000000349e2 : fimul dword ptr [rcx] ; ret 0xc889
0x00000000000bd419 : fimul dword ptr [rdi] ; ret 0x144
0x000000000015ee49 : fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000038495 : fimul word ptr [rax - 0x3f] ; retf 0x6411
0x0000000000036a13 : fimul word ptr [rax - 0x75] ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000000dbd77 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x6de8
0x00000000000ed164 : fimul word ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000049d7d : fimul word ptr [rax - 0x77] ; fucomip st(0) ; ret
0x00000000000371a0 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x0000000000125a8f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000dfb2e : fimul word ptr [rax - 0x77] ; ret
0x00000000000a559a : fimul word ptr [rax - 0x77] ; ret 0x894c
0x00000000000461fc : fimul word ptr [rbp + 0x11] ; retf
0x00000000000f2792 : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000086163 : fimul word ptr [rcx + rcx*4 - 9] ; call rax
0x00000000000d8696 : fimul word ptr [rcx - 0x76b7ebad] ; ret 0x2ee8
0x0000000000028ad0 : fimul word ptr [rcx - 0x77] ; ret
0x00000000000d2e5d : fimul word ptr [rcx - 0x7d] ; ret
0x0000000000045cb5 : fist dword ptr [rdx] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000ecaba : fistp qword ptr [rax + 0x10] ; syscall
0x00000000000f60aa : fistp qword ptr [rax + 0x113] ; syscall
0x00000000000f5f35 : fistp qword ptr [rax + 0x114] ; syscall
0x00000000000ec417 : fistp qword ptr [rax + 0x115] ; syscall
0x00000000000f5fe7 : fistp qword ptr [rax + 0x116] ; syscall
0x00000000000f5cd6 : fistp qword ptr [rax + 0x119] ; syscall
0x00000000000e5e17 : fistp qword ptr [rax + 0x11] ; syscall
0x00000000000ec4b5 : fistp qword ptr [rax + 0x11d] ; syscall
0x00000000000f7437 : fistp qword ptr [rax + 0x120] ; syscall
0x00000000000ed362 : fistp qword ptr [rax + 0x127] ; syscall
0x00000000000ed412 : fistp qword ptr [rax + 0x128] ; syscall
0x00000000000e5ec7 : fistp qword ptr [rax + 0x12] ; syscall
0x00000000000f74df : fistp qword ptr [rax + 0x12b] ; syscall
0x00000000000f614f : fistp qword ptr [rax + 0x130] ; syscall
0x00000000000f7587 : fistp qword ptr [rax + 0x133] ; syscall
0x00000000000e6e7e : fistp qword ptr [rax + 0x135] ; syscall
0x00000000000ed20f : fistp qword ptr [rax + 0x13] ; syscall
0x0000000000039b81 : fistp qword ptr [rax + 0x13e] ; syscall
0x00000000000ec24a : fistp qword ptr [rax + 0x146] ; syscall
0x00000000000ed2af : fistp qword ptr [rax + 0x14] ; syscall
0x00000000000edbaf : fistp qword ptr [rax + 0x17] ; syscall
0x00000000000f0c41 : fistp qword ptr [rax + 0x1a] ; syscall
0x00000000000f6bbf : fistp qword ptr [rax + 0x2a] ; syscall
0x00000000000f6aef : fistp qword ptr [rax + 0x2b] ; syscall
0x00000000000f6f5e : fistp qword ptr [rax + 0x2c] ; syscall
0x00000000000f6d3e : fistp qword ptr [rax + 0x2d] ; syscall
0x00000000000f6fff : fistp qword ptr [rax + 0x2e] ; syscall
0x00000000000f6e9f : fistp qword ptr [rax + 0x2f] ; syscall
0x00000000000c4c47 : fistp qword ptr [rax + 0x3d] ; syscall
0x00000000000f76e7 : fistp qword ptr [rax + 0x45] ; syscall
0x00000000000f778f : fistp qword ptr [rax + 0x46] ; syscall
0x00000000000e8316 : fistp qword ptr [rax + 0x55] ; syscall
0x00000000000361ae : fistp qword ptr [rax + 0x82] ; syscall
0x000000000003870b : fistp qword ptr [rax + 0xca] ; syscall
0x00000000000bf914 : fistp qword ptr [rax + 0xe4] ; syscall
0x00000000000bf8a4 : fistp qword ptr [rax + 0xe5] ; syscall
0x00000000000f5e97 : fistp qword ptr [rax + 0xe8] ; syscall
0x00000000000c4cf0 : fistp qword ptr [rax + 0xf7] ; syscall
0x00000000000e7aaf : fistp qword ptr [rax + 1] ; syscall
0x00000000000ebc31 : fistp qword ptr [rax + 7] ; syscall
0x000000000012b746 : fistp qword ptr [rbx - 1] ; call 0xe8178
0x000000000006fe7d : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000072a40 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x00000000000798eb : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000001221b8 : fistp word ptr [rbx - 0x17] ; mov ecx, 0x90ffeff4 ; pop rbx ; ret
0x000000000002ba95 : fistp word ptr [rbx - 1] ; dec dword ptr [rbx - 0x76f7dbbc] ; ret
0x00000000000856e2 : fisttp dword ptr [rax + 0x21] ; retf
0x000000000003c292 : fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x0000000000161e82 : fisttp dword ptr [rax + 9] ; fadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000011480b : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x11] ; pop rbx ; ret
0x0000000000163878 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000002be17 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000024c66 : fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 0xf] ; ret
0x0000000000046d51 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000008b114 : fisttp dword ptr [rax - 0x77] ; ret 0x73e9
0x000000000008afb4 : fisttp dword ptr [rax - 0x77] ; ret 0x74e9
0x00000000000f819e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bd1ba ; pop rbx ; ret
0x000000000015eefb : fisttp dword ptr [rax - 0x7b] ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000048257 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x0000000000160ef2 : fisttp dword ptr [rbp + 1] ; rol dword ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x0000000000160c22 : fisttp dword ptr [rbp - 0x77] ; retf 0x894d
0x0000000000161032 : fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x0000000000066c0d : fisttp dword ptr [rcx + 0x4d0f41d8] ; ret
0x00000000001617e1 : fisttp dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x000000000015f422 : fisttp dword ptr [rcx + 9] ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000df474 : fisttp dword ptr [rcx - 0x75] ; adc ecx, dword ptr [rax + 1] ; ret 0x3944
0x0000000000046d6b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000000534fd : fisttp dword ptr [rdi] ; lahf ; rol byte ptr [rax + rcx*4 + 0x11], 0x29 ; ret
0x00000000000cd44e : fisttp dword ptr [rdi] ; mov ds, word ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000bd079 : fisttp dword ptr [rdi] ; ret 0x8348
0x0000000000031bab : fisttp dword ptr [rdi] ; retf
0x000000000008b315 : fisttp dword ptr [rdi] ; test dword ptr [rax + rax - 0x7cb80000], ecx ; ret 0x4801
0x000000000005d4e2 : fisttp dword ptr [rdi] ; test edi, esp ; retf 0xffff
0x000000000015f5f0 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000085ceb : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000016106d : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x0000000000088362 : fisttp qword ptr [rax + 0x29] ; ret
0x00000000000d5057 : fisttp qword ptr [rax - 0x77] ; retf
0x000000000003318e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x00000000000de2a9 : fisttp qword ptr [rbx + 0x5d5b1446] ; ret
0x000000000002b392 : fisttp qword ptr [rdi] ; ret 0xc389
0x00000000000fd17c : fisttp word ptr [rax + 0x29] ; retf 0x894c
0x000000000003405a : fisttp word ptr [rax - 0x39] ; ret
0x00000000000383f9 : fisttp word ptr [rax - 0x3f] ; retf 0x6411
0x000000000011e0ef : fisttp word ptr [rax - 0x75] ; and al, 0x20 ; call rcx
0x000000000011df19 : fisttp word ptr [rax - 0x75] ; and al, 0x28 ; call rcx
0x00000000000665db : fisttp word ptr [rax - 0x75] ; jl 0x6660c ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000008e7a1 : fisttp word ptr [rax - 0x77] ; ret 0x56e8
0x00000000000fe783 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x00000000000638ea : fisttp word ptr [rax - 0x77] ; ret 0xff41
0x00000000000658b8 : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x00000000000238ba : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000046def : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000e819d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x00000000000edd9d : fisttp word ptr [rcx + 0x4ab8c2] ; add byte ptr [rax], al ; syscall
0x00000000000ede4d : fisttp word ptr [rcx + 0x4bb8c2] ; add byte ptr [rax], al ; syscall
0x00000000000d5919 : fisttp word ptr [rcx - 0x7d] ; ret
0x000000000015185d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000de190 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000015a4c1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d8063 : fisub dword ptr [rsi - 0x7f] ; loope 0xd806e ; add esi, esi ; ret
0x00000000001613e3 : fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x00000000001374b1 : fisub word ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000015a1c1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000158a71 : fisubr word ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000c06b1 : fld dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000019afa1 : fld dword ptr [rax] ; add byte ptr [rsp + rcx*4], cl ; int1 ; call qword ptr [rcx]
0x00000000000d0259 : fld dword ptr [rbp + 0x39] ; retf
0x000000000004cd7a : fld dword ptr [rbp - 0x77] ; ret 0x8b4c
0x00000000000b3cfd : fld dword ptr [rcx - 0x7f] ; ret 0x1db
0x0000000000001ddc : fld dword ptr [rdx + 0x6b865524] ; retf
0x000000000007ef32 : fld qword ptr [rax - 0x78] ; cmp al, 0x30 ; ret
0x0000000000046fbb : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000000ebd64 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000019b2e1 : fld qword ptr [rax] ; add byte ptr [rcx + rbx*4], cl ; int1 ; jmp rbx
0x00000000001752c1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000001544b2 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x0000000000154512 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000003a36 : fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x0000000000034bf0 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000034b78 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034ac4 : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000034a29 : fld xword ptr [rsp + 8] ; ret
0x0000000000034a88 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000057ac3 : fldcw word ptr [rbx + 0x58e9ffff] ; ret 0xffff
0x0000000000035a39 : fldcw word ptr [rsp - 2] ; ret
0x00000000000b1e29 : fldenv [rsi + 0xf] ; jbe 0xb1e86 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000091999 : fldenv [rsi + 0xf] ; je 0x919f6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000091c77 : fldenv [rsi + 0xf] ; je 0x91cd4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000015a541 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000091891 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000000b2fbc : fldenv [rsi + 0xf] ; xlatb ; retf 0xf66
0x000000000004ff8c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000188949 : fldz ; jmp rsp
0x0000000000046264 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000001620d2 : fmul dword ptr [rax + 0x11] ; ret 0x2bf
0x0000000000161db7 : fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000001617e4 : fmul dword ptr [rax + 0x11] ; ret 0xf48
0x0000000000161e8e : fmul dword ptr [rax + 0x19] ; ret 0x11e9
0x00000000001616a0 : fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x00000000000e648e : fmul dword ptr [rax + 0x21] ; ret
0x00000000000b3425 : fmul dword ptr [rax + 0xf] ; ret 0x8348
0x000000000008190d : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000000a0ea7 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000004030b : fmul dword ptr [rax - 0x39] ; ret
0x000000000007545f : fmul dword ptr [rax - 0x77] ; ret
0x000000000016347f : fmul dword ptr [rax - 0x7b] ; leave ; je 0x16348d ; call rcx
0x00000000000ceafe : fmul dword ptr [rax - 0x7d] ; ret
0x000000000006979d : fmul dword ptr [rbp + 0x63] ; ret
0x00000000000c3874 : fmul dword ptr [rbx + 0x2f] ; add al, ch ; ret
0x0000000000189504 : fmul dword ptr [rbx] ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; adc al, 0xf0 ; call qword ptr [rax]
0x0000000000126a8e : fmul dword ptr [rcx + 0x39] ; ret 0x820f
0x0000000000024c69 : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000116921 : fmul dword ptr [rcx + rcx*4 - 0xf] ; mov rdi, r13 ; call r12
0x000000000006f532 : fmul dword ptr [rdi] ; test byte ptr [rdi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001617d9 : fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000f807e : fmul qword ptr [rax + 0x39] ; ret
0x00000000000c54d4 : fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x000000000008d6d3 : fmul qword ptr [rax - 0x77] ; ret 0x7ce9
0x000000000008bde9 : fmul qword ptr [rax - 0x77] ; ret 0x8eeb
0x00000000000c0bab : fmul qword ptr [rax - 0x7d] ; ret
0x00000000001963a4 : fmul qword ptr [rbp + 0x7da80000] ; out dx, al ; jmp qword ptr [rbx]
0x000000000008ea49 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000009287f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001a1468 : fmul st(0) ; hlt ; jmp qword ptr [rcx]
0x00000000000401cc : fmul st(0) ; pop r15 ; ret
0x0000000000188964 : fmul st(6) ; add byte ptr [rax], al ; sbb al, 0xe1 ; out dx, al ; call qword ptr [rax]
0x0000000000040221 : fmulp st(1) ; ret
0x0000000000163abe : fnsave dword ptr [rbp - 0x11] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001544b0 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000000025ca : fnstenv [rdx + rdx - 0x38975393] ; ret
0x0000000000034c36 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000176b0a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x0000000000033eb9 : fpatan ; ret
0x000000000015a2c1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000034b7c : fscale ; fstp st(1) ; ret
0x0000000000186701 : fsqrt ; call rax
0x0000000000186825 : fsqrt ; jmp rax
0x0000000000003c25 : fst dword ptr [rbx + 0x55f20b1c] ; jg 0x3c9e ; xchg eax, ebp ; retf 0x10bf
0x0000000000174fa7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000008a1de : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000034c38 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000175320 : fstp st(0) ; ret 0xde5d
0x0000000000034b7e : fstp st(1) ; ret
0x00000000001744eb : fstp st(3), st(0) ; retf 0xeb83
0x0000000000034ac2 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000034b3e : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000034a86 : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000001cc2 : fstp xword ptr [rip + 0xf9a7750] ; retf
0x000000000012607d : fstp xword ptr [rsi + 0x38] ; call 0x122ab5
0x0000000000036118 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000036158 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000034c39 : fsub dword ptr [rip + 0x200] ; ret
0x000000000015a5c1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000097e64 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000193aa4 : fsub qword ptr [rax + rax] ; clc ; in eax, 0xed ; call qword ptr [rdi]
0x00000000001768d8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x00000000000a0feb : fsub qword ptr [rsi + 0xf] ; jmp 0xa0fb7
0x000000000015a3c1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004e1d7 : fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xe383
0x0000000000096efc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000115ecb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187b99 : fsubp st(2) ; jmp rsp
0x0000000000197419 : fsubp st(6) ; call qword ptr [rsi]
0x0000000000188f08 : fsubr qword ptr [rbx - 0x11] ; call qword ptr [rax]
0x000000000018ad18 : fsubr qword ptr [rbx - 0xa] ; jmp rsp
0x000000000018cdc8 : fsubr qword ptr [rcx] ; cli ; jmp rsp
0x00000000001503a3 : fsubr qword ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000ae02b : fsubr qword ptr [rcx] ; ret
0x0000000000188600 : fsubr qword ptr [rdx - 0x12] ; call rsp
0x00000000000288c6 : fsubr st(1) ; retf
0x0000000000197524 : fsubr st(2), st(0) ; out dx, al ; call qword ptr [rdx]
0x0000000000034ac8 : fsubrp st(1) ; ret
0x0000000000176ff8 : fucom st(5) ; loop 0x177051 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000008778f : fucomi st(0) ; retf
0x000000000010c9ee : fucomip st(0) ; in al, dx ; cli ; add dword ptr [rax], eax ; mov rdi, rbp ; call rbx
0x00000000000513fe : fucomip st(0) ; insb byte ptr [rdi], dx ; ret
0x00000000000c4fc2 : fucomip st(0) ; mov byte ptr [rax - 0x76b70005], cl ; ret
0x00000000000e2973 : fucomip st(0) ; mov dword ptr [rdx - 6], 0x75c084ff ; ret
0x00000000000ca471 : fucomip st(0) ; mov ecx, 0x890002ef ; ret
0x000000000002b66e : fucomip st(0) ; pop rsp ; ret
0x000000000004533c : fucomip st(0) ; ret
0x000000000007f408 : fucomip st(0) ; ret 0x717
0x0000000000111588 : fucomip st(0) ; ret 0xfe56
0x000000000007a6a8 : fucomip st(0) ; ret 0xffeb
0x00000000000ce998 : fucomip st(0) ; ret 0xffed
0x000000000002270f : fucomip st(0) ; retf
0x0000000000109ef0 : fucomip st(0) ; retf 0xf47b
0x000000000003858d : fucomip st(0) ; std ; retf 8
0x000000000018e7c1 : fucomip st(1) ; call rsp
0x0000000000187bb1 : fucomip st(2) ; jmp qword ptr [rax]
0x00000000001638e7 : fucomp st(3) ; push rbx ; ret
0x000000000011d10d : fxch st(0), st(3) ; sub dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x000000000017663e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000178e55 : fyl2x ; call qword ptr [rax]
0x000000000014e4c9 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001a261c : hlt ; add al, 0xf5 ; call qword ptr [rdi]
0x000000000018c9c4 : hlt ; add al, byte ptr ds:[rax] ; sub al, 0xbf ; stc ; call qword ptr [rax]
0x000000000019ca01 : hlt ; add byte ptr [rax], al ; in al, dx ; xchg dl, dh ; jmp qword ptr [rcx]
0x00000000001890dd : hlt ; add byte ptr [rax], al ; pop rsp ; jge 0x1890d8 ; jmp qword ptr [rax]
0x0000000000126400 : hlt ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000033b22 : hlt ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000018be2d : hlt ; add dword ptr [rax], eax ; clc ; call rsp
0x000000000018be3d : hlt ; add dword ptr [rax], eax ; pushfq ; clc ; call qword ptr [rax]
0x00000000001a59bc : hlt ; add dword ptr [rcx], 0 ; nop ; hlt ; cmc ; call qword ptr [rdi]
0x000000000004e9b0 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x31], al ; in al, 0x83 ; ret
0x000000000014f3c9 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012a260 : hlt ; add ebp, dword ptr [rcx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000f32bb : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000066c78 : hlt ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000017a1da : hlt ; call qword ptr [rax]
0x000000000019f8be : hlt ; call qword ptr [rbx]
0x000000000019fb0a : hlt ; call qword ptr [rcx]
0x000000000017a086 : hlt ; call qword ptr [rdi]
0x0000000000179efa : hlt ; call qword ptr [rdx]
0x00000000001a1042 : hlt ; call qword ptr [rsi]
0x0000000000179cfa : hlt ; call rax
0x00000000000d7f1d : hlt ; call rcx
0x000000000017a142 : hlt ; call rdx
0x000000000017a0da : hlt ; call rsi
0x000000000017a55a : hlt ; call rsp
0x00000000001a5991 : hlt ; cmc ; call qword ptr [rdi]
0x000000000008e15b : hlt ; cmp ecx, esi ; je 0x8e156 ; ret
0x00000000000dd415 : hlt ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000d57ed : hlt ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f7a2e : hlt ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000179ef2 : hlt ; dec dword ptr [rbx] ; hlt ; inc dword ptr [rbx + rcx*2] ; hlt ; call qword ptr [rdx]
0x000000000017a132 : hlt ; dec dword ptr [rsp + rax*8 - 0xc] ; dec ecx ; ret
0x000000000017a0ea : hlt ; dec ecx ; ret
0x000000000018be3c : hlt ; hlt ; add dword ptr [rax], eax ; pushfq ; clc ; call qword ptr [rax]
0x000000000017a571 : hlt ; hlt ; jmp rdi
0x00000000000546e8 : hlt ; in eax, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000193fad : hlt ; in eax, dx ; jmp rsp
0x000000000017a07e : hlt ; inc dword ptr [rax + 0x1bfff42f] ; hlt ; call qword ptr [rdi]
0x000000000017a596 : hlt ; inc dword ptr [rbp - 0xd] ; hlt ; jmp rdi
0x0000000000179ef6 : hlt ; inc dword ptr [rbx + rcx*2] ; hlt ; call qword ptr [rdx]
0x000000000017a622 : hlt ; inc dword ptr [rbx] ; stc ; hlt ; call rax
0x000000000017a61e : hlt ; inc dword ptr [rbx] ; stc ; hlt ; inc dword ptr [rbx] ; stc ; hlt ; call rax
0x0000000000179d02 : hlt ; inc dword ptr [rdi + 0x14] ; hlt ; push qword ptr [rsi + 0x14] ; hlt ; call rax
0x000000000017a56e : hlt ; inc eax ; hlt ; hlt ; jmp rdi
0x0000000000179eb6 : hlt ; inc edi ; hlt ; jmp rdx
0x000000000018a30a : hlt ; jmp qword ptr [rax]
0x0000000000179e1e : hlt ; jmp qword ptr [rcx]
0x00000000001a1fae : hlt ; jmp qword ptr [rdx]
0x000000000019fc2e : hlt ; jmp qword ptr [rsi]
0x000000000018a3a2 : hlt ; jmp rax
0x000000000019eeae : hlt ; jmp rcx
0x000000000017a572 : hlt ; jmp rdi
0x0000000000179eba : hlt ; jmp rdx
0x000000000017a2da : hlt ; jmp rsi
0x000000000017a11e : hlt ; jmp rsp
0x000000000015ea05 : hlt ; jne 0x15eb27 ; ret
0x000000000015ea04 : hlt ; jne 0x15eb28 ; ret
0x00000000000df04e : hlt ; jne 0xdf046 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000df04d : hlt ; jne 0xdf047 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000105144 : hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000179e1a : hlt ; lcall [rbp + rcx*2 - 0xc] ; jmp qword ptr [rcx]
0x000000000017a082 : hlt ; lcall [rbx] ; hlt ; call qword ptr [rdi]
0x0000000000179eb2 : hlt ; lcall [rcx - 0x38000bb2] ; hlt ; jmp rdx
0x000000000017a592 : hlt ; lcall [rdx] ; hlt ; inc dword ptr [rbp - 0xd] ; hlt ; jmp rdi
0x0000000000179cf2 : hlt ; lcall [rip + 0x67fff410] ; adc dh, ah ; call rax
0x000000000018a1ea : hlt ; ljmp [rax + 0xc00015a] ; sbb al, 0xf4 ; call rax
0x000000000017a0e6 : hlt ; ljmp [rbx] ; hlt ; dec ecx ; ret
0x000000000017a13a : hlt ; ljmp [rsp + rax*8 - 0x3809000c] ; hlt ; call rdx
0x000000000008e3ba : hlt ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000008e2ed : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000013928a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133f3e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000003858b : hlt ; mov edi, ebx ; call 0xc5095
0x00000000000c50be : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000015e013 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000000276c : hlt ; out 0xdf, eax ; syscall
0x00000000001975cc : hlt ; out 0xee, al ; jmp rsp
0x000000000019c4bc : hlt ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdi - 0xe], ch ; call rcx
0x000000000017a56a : hlt ; push qword ptr [rdi + rax*8] ; hlt ; inc eax ; hlt ; hlt ; jmp rdi
0x0000000000179d06 : hlt ; push qword ptr [rsi + 0x14] ; hlt ; call rax
0x000000000018a084 : hlt ; push rsp ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; fcomip st(3) ; jmp qword ptr [rax]
0x00000000000b31a3 : hlt ; ret
0x000000000018b72c : hlt ; retf
0x00000000001aa0bc : hlt ; retf 1
0x00000000001897c4 : hlt ; sbb eax, 0x9c2c0001 ; int1 ; call qword ptr [rax]
0x00000000001754e3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001a02bc : hlt ; sub al, 1 ; add byte ptr [rax - 0x77], dh ; hlt ; jmp qword ptr [rcx]
0x000000000015e017 : hlt ; sub eax, edx ; ret
0x0000000000003eb1 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001967bc : hlt ; xchg eax, ecx ; add byte ptr [rax], al ; mov al, 0x84 ; out dx, al ; jmp qword ptr [rsi]
0x000000000018c281 : idiv al ; call qword ptr [rax]
0x000000000018b142 : idiv bh ; add al, 0xb4 ; add dword ptr [rax], eax ; pop rsp ; ret
0x0000000000103487 : idiv bh ; add rsp, 0xd8 ; ret
0x0000000000061c96 : idiv bh ; call qword ptr [rax]
0x00000000001785c9 : idiv bh ; call rax
0x000000000004260b : idiv bh ; dec dword ptr [rax - 0x77] ; retf 0xfe9
0x00000000000e0700 : idiv bh ; dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2d9e
0x00000000000477b2 : idiv bh ; dec ecx ; ret
0x00000000000bbf68 : idiv bh ; inc dword ptr [rbp - 0x77] ; ret
0x000000000018b122 : idiv bh ; jl 0x18b0e0 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret 0xfff6
0x0000000000061bf6 : idiv bh ; jmp qword ptr [rax]
0x000000000018b0b2 : idiv bh ; mov eax, 0xdc0001b0 ; mov dh, 0xf6 ; call rax
0x000000000018a91a : idiv bh ; mov esp, 0x8c00018a ; or esi, esi ; call rax
0x000000000018b15a : idiv bh ; mov spl, 1 ; add ah, ch ; ret
0x00000000000c022b : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001785c5 : idiv bh ; push qword ptr [rax] ; idiv bh ; call rax
0x00000000001a67c6 : idiv bh ; ret
0x00000000001a7cf2 : idiv bh ; ret 0
0x00000000001a6c12 : idiv bh ; retf 0
0x000000000018b38a : idiv bh ; sar byte ptr [rbx - 0xd63ffff], 0xf6 ; call rsp
0x000000000017b194 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000018d1c9 : idiv bl ; call rsp
0x00000000000ef2f0 : idiv byte ptr [rax + 0x118] ; syscall
0x0000000000024b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000000e06ff : idiv dil ; dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2d9e
0x00000000000384ee : idiv dword ptr [rax + 0xca] ; syscall
0x0000000000052109 : idiv dword ptr [rdx - 0x76b7ffee] ; ret 0x8948
0x00000000000ae20e : idiv edi ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000f2c75 : idiv edi ; add rsp, 0x408 ; ret
0x000000000010355d : idiv edi ; add rsp, 0xd8 ; ret
0x000000000018ba8a : idiv edi ; and al, ah ; add dword ptr [rax], eax ; cld ; retf
0x000000000018b542 : idiv edi ; cwde ; ret
0x000000000018b71a : idiv edi ; cwde ; retf
0x000000000006243b : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x0000000000064535 : idiv edi ; dec dword ptr [rax + 1] ; clc ; jmp rax
0x0000000000162781 : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000b1750 : idiv edi ; dec dword ptr [rax - 0x73] ; je 0xb1784 ; js 0xb174b ; retf
0x0000000000068358 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b6394 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000620e7 : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000620b2 : idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xbd83
0x00000000000477ab : idiv edi ; dec ecx ; ret
0x000000000018b72a : idiv edi ; hlt ; retf
0x000000000018b50a : idiv edi ; in al, dx ; ret 1
0x000000000008ce99 : idiv edi ; inc dword ptr [rbp - 0x77] ; ret 0x8945
0x000000000006185b : idiv edi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x0000000000061da2 : idiv edi ; inc dword ptr [rcx] ; ret
0x0000000000067833 : idiv edi ; jmp qword ptr [rax]
0x000000000018ba12 : idiv edi ; loopne 0x18b9fa ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret
0x000000000018bb0a : idiv edi ; mov esp, 0xec0001e1 ; sal edi, 1 ; call rax
0x000000000018b6fa : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x00000000000b6edd : idiv edi ; nop ; mov eax, 0x24 ; syscall
0x00000000000ae1ba : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000018b532 : idiv edi ; push rax ; ret
0x000000000018b8ea : idiv edi ; pushfq ; fadd dword ptr [rcx] ; add byte ptr [rdx + rbx*4 - 9], cl ; jmp rax
0x000000000018b4ea : idiv edi ; pushfq ; ret 1
0x000000000018ba82 : idiv edi ; rcr bh, 1 ; add dword ptr [rax], eax ; pop rsp ; retf
0x000000000018b53a : idiv edi ; ret
0x00000000001a94fe : idiv edi ; retf
0x000000000018b6ea : idiv edi ; retf 1
0x0000000000038e06 : idiv esi ; ret
0x00000000000477b1 : idiv r15b ; dec ecx ; ret
0x00000000001a67c5 : idiv r15b ; ret
0x000000000006185a : idiv rdi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x0000000000061da1 : idiv rdi ; inc dword ptr [rcx] ; ret
0x0000000000038e05 : idiv rsi ; ret
0x0000000000057ac1 : imul al ; fldcw word ptr [rbx + 0x58e9ffff] ; ret 0xffff
0x00000000000d7f19 : imul al ; jno 0xd7eb8 ; hlt ; call rcx
0x000000000012b178 : imul al ; ret 0xfbc9
0x000000000012aa78 : imul al ; ret 0xfbd0
0x00000000000225cd : imul al ; sbb eax, 0xe9000005 ; ret
0x000000000010ca49 : imul al ; xchg eax, ecx ; ret 1
0x0000000000189331 : imul bh ; call rax
0x0000000000189339 : imul bh ; jmp rsp
0x00000000000d5b5c : imul bl ; ret 0x4890
0x00000000000a3e57 : imul cl ; ret 0xfffc
0x000000000009b6b8 : imul cl ; ret 8
0x0000000000197cd5 : imul dh ; call qword ptr [rax]
0x00000000001005d2 : imul eax ; cwde ; retf 0xffff
0x0000000000128d0e : imul eax ; jl 0x128ca1 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000000c5876 : imul eax ; mov ebx, 0x8948fff5 ; ret 0x8949
0x0000000000060982 : imul eax ; or byte ptr [rbx], cl ; cld ; dec dword ptr [rax + 0x29] ; ret
0x000000000005c9ce : imul eax ; pop rsp ; retf 9
0x000000000005bd67 : imul eax ; ret
0x00000000000d5434 : imul eax ; ret 0xfff4
0x00000000001005c0 : imul eax ; stosb byte ptr [rdi], al ; retf 0xffff
0x000000000004b562 : imul eax ; sub byte ptr [rdi - 3], bl ; dec dword ptr [rax + 0x29] ; ret
0x0000000000100c47 : imul eax ; xchg eax, ebx ; retf 0xffff
0x000000000010b739 : imul eax ; xchg eax, ecx ; ret 0xfffd
0x0000000000193f81 : imul eax, dword ptr [rax], 0xedf3bc00 ; jmp qword ptr [rdx]
0x0000000000193fa9 : imul eax, dword ptr [rax], 0xedf42400 ; jmp rsp
0x00000000000b1825 : imul eax, dword ptr [rbx], 0 ; add al, ch ; ret 0xf7d1
0x00000000000c0589 : imul eax, dword ptr [rcx + rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c0630 : imul eax, dword ptr [rcx + rax], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000015cb71 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000018a40d : imul eax, dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000091627 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x00000000000f0071 : imul eax, dword ptr [rdi - 0x38b7ffd4], 5 ; ret 0x2c87
0x0000000000091027 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000008abfb : imul eax, dword ptr [rdx], 0x83480000 ; ret 0x4801
0x000000000015eba2 : imul eax, edx ; shr rax, 0x38 ; ret
0x000000000019405d : imul ebp ; call qword ptr [rsi]
0x00000000000c196e : imul ebp, dword ptr [rdi], 0xcab800 ; add byte ptr [rax], al ; syscall
0x00000000000f9fad : imul ebx ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000781f6 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131317 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000014b2e7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000090d27 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000000fd85f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d18d1 : imul edi, edi, -1 ; push rbx ; ret
0x0000000000161423 : imul edi, esi, 0x8349ffff ; ret 0x4908
0x0000000000090727 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000090427 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000090127 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000002c70 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003c5c : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000007f21b : imul esi, dword ptr [rbx], 0x57014400 ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000f1451 : imul esi, dword ptr [rsp + rbp], 0x48 ; add esp, 0x18 ; ret
0x000000000013ed34 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000009c5bc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000015eba1 : imul rax, rdx ; shr rax, 0x38 ; ret
0x000000000015ea38 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000bf916 : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000019874c : in al, 0x1b ; out dx, eax ; call rdi
0x00000000001a578c : in al, 0x2a ; add dword ptr [rax], eax ; and al, dh ; cmc ; call rcx
0x00000000001a302c : in al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x000000000018c834 : in al, 0x35 ; add al, byte ptr [rax] ; lodsb al, byte ptr [rsi] ; cwde ; stc ; call qword ptr [rax]
0x0000000000039041 : in al, 0x37 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000039088 : in al, 0x37 ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000008e1ab : in al, 0x41 ; cmp eax, ecx ; je 0x8e197 ; ret
0x00000000000e6daa : in al, 0x44 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a716 : in al, 0x49 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x00000000000f5afc : in al, 0x4c ; mov dword ptr [rsp - 0x30], ecx ; syscall
0x0000000000089dd2 : in al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000176921 : in al, 0x4c ; pop rax ; retf
0x00000000001a29ac : in al, 0x53 ; add dword ptr [rax], eax ; and byte ptr [rdi], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000cd65b : in al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000007eda0 : in al, 0x64 ; xor eax, dword ptr [rax] ; ret
0x000000000009c28c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000818f7 : in al, 0x74 ; or dword ptr [rcx + 0x39], ecx ; retf
0x00000000000f59d4 : in al, 0x74 ; or ecx, dword ptr [rax - 0x77] ; out dx, eax ; call r12
0x00000000001143a8 : in al, 0x75 ; and eax, 0x8348d889 ; ret
0x00000000000f2ccd : in al, 0x75 ; cmp dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000a3db2 : in al, 0x75 ; ret
0x00000000000a3993 : in al, 0x75 ; ret 0x8945
0x000000000008a97b : in al, 0x75 ; retf 0x2b49
0x0000000000086bb8 : in al, 0x75 ; sbb bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006f698 : in al, 0x80 ; xor al, 0 ; mov eax, 0xca ; syscall
0x000000000004e9b6 : in al, 0x83 ; ret
0x00000000000f0ab8 : in al, 0x89 ; ret
0x0000000000196cbc : in al, 0x9c ; out dx, al ; call qword ptr [rax]
0x0000000000172fe0 : in al, 0xc ; in al, dx ; jmp rsp
0x000000000017a120 : in al, 0xc4 ; hlt ; dec ecx ; ret
0x0000000000193a41 : in al, 0xed ; call qword ptr [rdi]
0x0000000000189299 : in al, 0xef ; call rsp
0x0000000000061860 : in al, 0xf ; lahf ; ret
0x00000000000456f9 : in al, 0xf ; xchg eax, ebp ; ret 0x8348
0x00000000000d6477 : in al, 0xf ; xchg eax, esp ; ret 0xd008
0x000000000018a0a9 : in al, 0xf3 ; call rax
0x000000000018a0c9 : in al, 0xf3 ; jmp qword ptr [rax]
0x000000000018a0b1 : in al, 0xf3 ; jmp rsp
0x000000000013926a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000a17de : in al, 0xf3 ; ret
0x000000000018b1c9 : in al, 0xf6 ; jmp rsp
0x00000000001ad139 : in al, 0xf7 ; call qword ptr [rdx]
0x000000000017acb8 : in al, 0xf8 ; cmc ; call rsp
0x0000000000102e8f : in al, 0xf9 ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000018cc11 : in al, 0xf9 ; jmp rax
0x000000000018bbe5 : in al, 1 ; add byte ptr [rdx + rbx*8 - 9], cl ; jmp rax
0x0000000000087a60 : in al, 4 ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000009d0f8 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000c70de : in al, 9 ; ret 0xd889
0x00000000000f6bae : in al, dx ; adc al, ch ; retf
0x00000000001a2604 : in al, dx ; add al, 0xf5 ; call qword ptr [rdi]
0x00000000000cca2d : in al, dx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x0000000000061e36 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000014a640 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000018b520 : in al, dx ; add esi, edi ; ljmp [rax] ; ret
0x000000000018828a : in al, dx ; call qword ptr [rax]
0x0000000000164596 : in al, dx ; call rax
0x00000000001730d6 : in al, dx ; call rsi
0x0000000000188272 : in al, dx ; call rsp
0x0000000000002e38 : in al, dx ; clc ; ret
0x000000000018d1e0 : in al, dx ; cld ; call rsp
0x00000000001893a8 : in al, dx ; cld ; out dx, eax ; call rsp
0x000000000010c9f0 : in al, dx ; cli ; add dword ptr [rax], eax ; mov rdi, rbp ; call rbx
0x00000000001a2ba4 : in al, dx ; cmc ; jmp qword ptr [rcx]
0x0000000000047b8d : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001a1e21 : in al, dx ; hlt ; jmp rax
0x0000000000197cd4 : in al, dx ; imul dh ; call qword ptr [rax]
0x000000000019fdd4 : in al, dx ; ja 0x19fdce ; jmp qword ptr [rcx]
0x0000000000199694 : in al, dx ; jg 0x19968a ; call qword ptr [rdx]
0x00000000000ce46d : in al, dx ; jl 0xce4a9 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018843a : in al, dx ; jmp rax
0x0000000000172fe2 : in al, dx ; jmp rsp
0x0000000000185a08 : in al, dx ; jne 0x1859c1 ; mov esi, 0x697769 ; pop rdi ; retf
0x0000000000038589 : in al, dx ; jne 0x38587 ; mov edi, ebx ; call 0xc5097
0x0000000000189b98 : in al, dx ; jp 0x189b8f ; call rsp
0x0000000000189b98 : in al, dx ; jp 0x189b90 ; call rsp
0x00000000001962f4 : in al, dx ; jp 0x1962e8 ; call qword ptr [rdx]
0x00000000001a5334 : in al, dx ; jrcxz 0x1a532f ; call qword ptr [rdi]
0x00000000001a75b4 : in al, dx ; lahf ; add dword ptr [rax], eax ; pop rax ; sahf ; idiv bh ; retf 0
0x000000000016458e : in al, dx ; lcall [rax + 0x68ffec8a] ; mov esp, ebp ; call rax
0x00000000001882ba : in al, dx ; lcall [rbp + 0x359c0000] ; in al, dx ; call qword ptr [rax]
0x00000000001888dc : in al, dx ; leave ; add byte ptr [rax], al ; sub al, 0xbe ; out dx, al ; inc dword ptr [rax] ; retf 0
0x0000000000164592 : in al, dx ; ljmp [rax - 0x77] ; in al, dx ; call rax
0x00000000001730d2 : in al, dx ; ljmp [rbx] ; or al, 0xec ; call rsi
0x0000000000188810 : in al, dx ; lodsb al, byte ptr [rsi] ; out dx, al ; jmp rsp
0x00000000000ef55b : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000068980 : in al, dx ; mov eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000007a8b1 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001995b4 : in al, dx ; mov edi, 0xe0980000 ; sti ; call rsp
0x0000000000133f3a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008deb3 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000008e3d2 : in al, dx ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000008e4b7 : in al, dx ; mov word ptr [rdi + 4], dx ; ret
0x000000000013966a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000189788 : in al, dx ; movsxd rsi, ecx ; call qword ptr [rax]
0x000000000008876b : in al, dx ; or al, byte ptr [rax] ; and ecx, 8 ; cmovne rax, rdx ; ret
0x0000000000033ed6 : in al, dx ; or al, ch ; ret
0x00000000000875b7 : in al, dx ; or al, ch ; ret 0xf99d
0x000000000008e837 : in al, dx ; or al, ch ; sub edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x000000000006e0e3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000007f532 : in al, dx ; or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x000000000011035f : in al, dx ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000082f37 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000014b364 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000004653f : in al, dx ; or byte ptr [rbp + 0x39], cl ; ret
0x00000000000fe3e5 : in al, dx ; or byte ptr [rbx + 0x5e0b185f], cl ; sbb dh, dh ; ret
0x000000000012773d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000cee8f : in al, dx ; or byte ptr [rbx - 0x76bbfb83], cl ; retf 0x894c
0x0000000000197789 : in al, dx ; out dx, al ; jmp rcx
0x0000000000188432 : in al, dx ; push qword ptr [rbp + rbp*4 - 0x5ff40000] ; in al, dx ; jmp rax
0x00000000001884b2 : in al, dx ; push qword ptr [rdi + rbp*4 - 0x56b40000] ; in al, dx ; call rax
0x0000000000189f00 : in al, dx ; pushfq ; call qword ptr [rax]
0x000000000008e09b : in al, dx ; ret
0x000000000018d518 : in al, dx ; ret 0xfffd
0x0000000000100d80 : in al, dx ; ret 0xffff
0x000000000018b50c : in al, dx ; ret 1
0x000000000019a1b4 : in al, dx ; retf
0x000000000006d6c0 : in al, dx ; retf 0x34
0x0000000000176b0d : in al, dx ; retf 0xae32
0x000000000018bb10 : in al, dx ; sal edi, 1 ; call rax
0x0000000000036243 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018b5f8 : in al, dx ; sbb dh, bh ; jmp rax
0x00000000000f8078 : in al, dx ; shr byte ptr [rbx], cl ; add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000018a834 : in al, dx ; xchg byte ptr [rcx], al ; add byte ptr [rbp + rdi*8 - 0xb], bh ; call qword ptr [rax]
0x000000000019ca04 : in al, dx ; xchg dl, dh ; jmp qword ptr [rcx]
0x0000000000176a3e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1769d1 ; ret 0x48f
0x0000000000176a3d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1769d2 ; ret 0x48f
0x0000000000199294 : in al, dx ; xor al, dh ; jmp qword ptr [rbx]
0x000000000011b503 : in al, dx ; xor dh, dh ; ret 0xc707
0x0000000000188d45 : in eax, 0 ; add ah, cl ; out dx, eax ; jmp qword ptr [rax]
0x00000000000bf8a6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x0000000000175143 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000022a5 : in eax, 0x2d ; pmuludq mm4, mm7 ; retf
0x000000000004b1e2 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000102675 : in eax, 0x5d ; ret
0x00000000001743d9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000014fc5f : in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x00000000001582e0 : in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000003c5e : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000f0167 : in eax, 0x86 ; sub al, 0 ; mov eax, 0xca ; syscall
0x00000000000f8273 : in eax, 0xd0 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000004e856 : in eax, 0xdf ; loopne 0x4e7e7 ; ret
0x0000000000176ff9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000017519a : in eax, 0xe5 ; retf 0x2a91
0x0000000000187c19 : in eax, 0xea ; jmp rax
0x0000000000193aa9 : in eax, 0xed ; call qword ptr [rdi]
0x00000000000b3633 : in eax, 0xf ; je 0xb3658 ; add rax, 2 ; ret
0x00000000000a1939 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000001392ea : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001a538d : in eax, 0xf5 ; call qword ptr [rax]
0x000000000018b1e1 : in eax, 0xf6 ; jmp qword ptr [rax]
0x00000000001030ed : in eax, 0xf9 ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000000546e9 : in eax, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x00000000001764c1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000018bc35 : in eax, 1 ; add byte ptr [rbp + rbx*8 - 9], bl ; jmp rsp
0x00000000000e7649 : in eax, 1 ; jne 0xe7699 ; mov eax, 0x10c ; syscall
0x000000000008855f : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000188f05 : in eax, dx ; add byte ptr [rax], al ; fsubr qword ptr [rbx - 0x11] ; call qword ptr [rax]
0x00000000000f156e : in eax, dx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012aa73 : in eax, dx ; add eax, 0xe8f63100 ; ret 0xfbd0
0x000000000010c09a : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000177892 : in eax, dx ; call qword ptr [rax]
0x0000000000177a92 : in eax, dx ; call qword ptr [rbx]
0x0000000000193a42 : in eax, dx ; call qword ptr [rdi]
0x00000000001778c6 : in eax, dx ; call qword ptr [rdx]
0x000000000019405e : in eax, dx ; call qword ptr [rsi]
0x000000000017783a : in eax, dx ; call rcx
0x000000000017796e : in eax, dx ; call rsp
0x000000000018c231 : in eax, dx ; clc ; call qword ptr [rax]
0x0000000000186a51 : in eax, dx ; cli ; call rax
0x000000000018a731 : in eax, dx ; cmc ; call rsp
0x00000000001778ae : in eax, dx ; dec dword ptr [rip - 0x59001235] ; retf
0x00000000001a1e79 : in eax, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000177896 : in eax, dx ; inc dword ptr [rdx] ; retf
0x0000000000177256 : in eax, dx ; jmp qword ptr [rax - 0x1f001251]
0x0000000000192c06 : in eax, dx ; jmp qword ptr [rax]
0x000000000019336a : in eax, dx ; jmp qword ptr [rdi]
0x0000000000193f86 : in eax, dx ; jmp qword ptr [rdx]
0x000000000017788e : in eax, dx ; jmp qword ptr [rsi + 0x10ffedcb]
0x0000000000177836 : in eax, dx ; jmp qword ptr [rsi - 0x2e001235]
0x000000000017725a : in eax, dx ; jmp rax
0x0000000000192d96 : in eax, dx ; jmp rbx
0x0000000000193fae : in eax, dx ; jmp rsp
0x00000000001632c2 : in eax, dx ; jne 0x1632b1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016360c : in eax, dx ; jne 0x1635f7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016373f : in eax, dx ; jne 0x163721 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e112a : in eax, dx ; jne 0xe1119 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000177826 : in eax, dx ; lcall [rax] ; retf
0x0000000000177a8a : in eax, dx ; lcall [rsi - 0x61001237] ; leave ; in eax, dx ; call qword ptr [rbx]
0x00000000000a0f02 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000018750c : in eax, dx ; mov bh, ch ; jmp rax
0x00000000000a08c9 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a08df : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0901 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a091f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a093f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0965 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0981 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a09a1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a09c1 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a09e7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0a09 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0a27 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a0a47 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0a63 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a0a83 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a0aa3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0ac3 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a0ae9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a0b39 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a080f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a082d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a084d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a086f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a088f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a08af : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0745 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a0757 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a076d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0785 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a079b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a07ad : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a07cb : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a07d7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a07ed : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0731 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000133d4a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000002f561 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5431 : in eax, dx ; mov rdi, r14 ; call 0x2167e
0x00000000000c0c4d : in eax, dx ; mov rdi, rbx ; call r12
0x00000000001396ea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d337f : in eax, dx ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000014eed0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f5b7a : in eax, dx ; pop rax ; pop rdi ; call rax
0x000000000012b173 : in eax, dx ; pop rbp ; add eax, 0xe8f63100 ; ret 0xfbc9
0x00000000001777e6 : in eax, dx ; push qword ptr [rbx - 0x59001247] ; retf
0x0000000000072652 : in eax, dx ; ret
0x0000000000109d1f : in eax, dx ; ret 0xfff6
0x0000000000174f18 : in eax, dx ; retf
0x00000000000a1052 : in eax, dx ; sub rax, 1 ; ret
0x0000000000125ff4 : in eax, dx ; sub rsp, 8 ; call 0x122ae7
0x00000000000661f4 : in eax, dx ; xor al, 0 ; call rax
0x0000000000086b42 : in eax, dx ; xor eax, eax ; ret
0x000000000015c178 : inc bl ; cmp dl, 1 ; jb 0x15c18a ; mov byte ptr [rdi], cl ; ret
0x00000000000f6571 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001107ee : inc byte ptr [rax] ; retf 0x3b9a
0x0000000000062d61 : inc byte ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000002bc05 : inc byte ptr [rbx] ; je 0x2bc15 ; ret
0x00000000001102cc : inc byte ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000bf7e1 : inc byte ptr [rcx] ; je 0xbf7f6 ; xor eax, eax ; ret
0x0000000000114fb3 : inc byte ptr [rdi + 0xf] ; xchg eax, edi ; ret 0x8440
0x0000000000077d6a : inc byte ptr [rdx] ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000001869ab : inc dword ptr [rax + 0x10fffb06] ; stc ; cli ; call rax
0x000000000017a07f : inc dword ptr [rax + 0x1bfff42f] ; hlt ; call qword ptr [rdi]
0x0000000000186aa3 : inc dword ptr [rax + 0x2f] ; sti ; call rax
0x0000000000186c7b : inc dword ptr [rax + 0x33] ; sti ; call rax
0x0000000000186573 : inc dword ptr [rax + 0x3c] ; std ; call qword ptr [rax]
0x00000000001867af : inc dword ptr [rax + 0x40fffad1] ; sar edx, cl ; jmp qword ptr [rax]
0x000000000018638b : inc dword ptr [rax + 0x42] ; cld ; call qword ptr [rax]
0x000000000018659f : inc dword ptr [rax + 0x43] ; std ; call rax
0x00000000001863b3 : inc dword ptr [rax + 0x4b] ; cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x000000000018639b : inc dword ptr [rax + 0x50fffc45] ; cld ; jmp qword ptr [rax]
0x0000000000186f9b : inc dword ptr [rax + 0x56] ; sti ; call rax
0x0000000000187173 : inc dword ptr [rax + 0x5a] ; sti ; call rax
0x00000000000ceab5 : inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000018643f : inc dword ptr [rax + 0x7e] ; cld ; jmp qword ptr [rax]
0x0000000000187ab3 : inc dword ptr [rax + 0x7f] ; add byte ptr [rax], al ; cld ; retf
0x00000000001874cf : inc dword ptr [rax + 0xfffcc0] ; ret 0xfffc
0x00000000001869c7 : inc dword ptr [rax + 4] ; sti ; inc dword ptr [rax + 6] ; sti ; call rax
0x0000000000186947 : inc dword ptr [rax + 5] ; sti ; inc dword ptr [rax + 7] ; sti ; call rax
0x00000000001869cb : inc dword ptr [rax + 6] ; sti ; call rax
0x000000000018694b : inc dword ptr [rax + 7] ; sti ; call rax
0x00000000001885fb : inc dword ptr [rax + rdi*4 + 0x6adc0000] ; out dx, al ; call rsp
0x0000000000186c17 : inc dword ptr [rax + rsi - 5] ; call rsp
0x0000000000186a3f : inc dword ptr [rax - 0x18] ; cli ; call qword ptr [rax - 0x1f000517]
0x000000000018679b : inc dword ptr [rax - 0x29] ; cli ; jmp qword ptr [rax]
0x0000000000186817 : inc dword ptr [rax - 0x2c] ; cli ; jmp qword ptr [rax]
0x00000000001867b3 : inc dword ptr [rax - 0x2d] ; cli ; jmp qword ptr [rax]
0x0000000000187483 : inc dword ptr [rax - 0x2f00035c] ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000186a4f : inc dword ptr [rax - 0x2f000513] ; out dx, al ; cli ; jmp qword ptr [rax]
0x00000000001869fb : inc dword ptr [rax - 0x2f00051a] ; out 0xfa, eax ; jmp qword ptr [rax]
0x0000000000186883 : inc dword ptr [rax - 0x2f00053f] ; ret 0xfffa
0x0000000000178e43 : inc dword ptr [rax - 0x2f000e30] ; sal cl, cl ; jmp qword ptr [rax]
0x00000000001867cf : inc dword ptr [rax - 0x2f] ; cli ; inc dword ptr [rax] ; sar edx, cl ; jmp rax
0x000000000018685f : inc dword ptr [rax - 0x36] ; cli ; call qword ptr [rax - 0x1f000535]
0x0000000000178e33 : inc dword ptr [rax - 0x39] ; int1 ; call qword ptr [rax - 0x1f000e37]
0x0000000000186873 : inc dword ptr [rax - 0x44] ; cli ; call qword ptr [rax - 0x1f000543]
0x000000000018b15b : inc dword ptr [rax - 0x4c] ; add dword ptr [rax], eax ; in al, dx ; ret
0x0000000000187473 : inc dword ptr [rax - 0x61] ; cld ; call qword ptr [rax - 0x1f000360]
0x000000000018645f : inc dword ptr [rax - 0x73] ; cld ; jmp qword ptr [rax]
0x00000000000c9428 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000067980 : inc dword ptr [rax - 0x8e743] ; jmp qword ptr [rax]
0x0000000000061c32 : inc dword ptr [rax - 0x90743] ; jmp qword ptr [rax]
0x00000000001868b3 : inc dword ptr [rax - 4] ; cli ; jmp qword ptr [rax]
0x00000000001868bb : inc dword ptr [rax] ; add bl, bh ; jmp rax
0x0000000000161c4c : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8944
0x0000000000161bb6 : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0xffb8
0x00000000000a18df : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000ab656 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xab665 ; ret
0x000000000015ea1d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000015aad7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000f6601 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001610b6 : inc dword ptr [rax] ; add byte ptr [rcx + 0xf], cl ; ret 0x8341
0x000000000018929d : inc dword ptr [rax] ; add byte ptr [rdi], bl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001863c3 : inc dword ptr [rax] ; cld ; push rax ; cld ; jmp rax
0x000000000018c8bb : inc dword ptr [rax] ; cmp dword ptr [rdx], eax ; add byte ptr [rsp + rbp*4], ch ; stc ; jmp qword ptr [rax]
0x0000000000178ecf : inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x000000000017bde7 : inc dword ptr [rax] ; fdiv st(1), st(0) ; push qword ptr [rax] ; fdiv st(1), st(0) ; jmp qword ptr [rax]
0x00000000001890db : inc dword ptr [rax] ; hlt ; add byte ptr [rax], al ; pop rsp ; jge 0x1890da ; jmp qword ptr [rax]
0x00000000001879cb : inc dword ptr [rax] ; jns 0x1879d7 ; add byte ptr [rsi + rdi*2 - 0x16], bh ; jmp qword ptr [rax]
0x0000000000178db3 : inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000035745 : inc dword ptr [rax] ; or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x00000000001050c0 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000186f8b : inc dword ptr [rax] ; pop rax ; sti ; call qword ptr [rax + 0x20fffb57]
0x00000000001871a3 : inc dword ptr [rax] ; push rbp ; sti ; call qword ptr [rax + 0x20fffb54]
0x00000000000ef50b : inc dword ptr [rax] ; ret
0x00000000001874d3 : inc dword ptr [rax] ; ret 0xfffc
0x00000000001888e3 : inc dword ptr [rax] ; retf 0
0x00000000001867d3 : inc dword ptr [rax] ; sar edx, cl ; jmp rax
0x00000000001873a3 : inc dword ptr [rax] ; sti ; push qword ptr [rax + 0x4a] ; sti ; jmp rax
0x0000000000178d77 : inc dword ptr [rax] ; test bl, bh ; push qword ptr [rax - 0x7b] ; sti ; jmp rax
0x00000000001867bb : inc dword ptr [rax] ; xlatb ; cli ; jmp rax
0x0000000000186a93 : inc dword ptr [rax] ; xor ebx, edi ; call qword ptr [rax + 0x20fffb30]
0x00000000000d5b59 : inc dword ptr [rbp + 0x31] ; imul bl ; ret 0x4890
0x00000000000ff74d : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x3945
0x0000000000042efd : inc dword ptr [rbp + 0x37] ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000177e57 : inc dword ptr [rbp + 0x38] ; out dx, al ; call rbx
0x0000000000177e53 : inc dword ptr [rbp + 0x38] ; out dx, al ; inc dword ptr [rbp + 0x38] ; out dx, al ; call rbx
0x00000000000c4e62 : inc dword ptr [rbp + 0x480975c0] ; add esp, 8 ; ret
0x0000000000043772 : inc dword ptr [rbp + 0x5b0974c0] ; ret
0x000000000005d4e0 : inc dword ptr [rbp - 0x187af025] ; retf 0xffff
0x0000000000038e53 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x0000000000122ce5 : inc dword ptr [rbp - 0x75] ; add byte ptr gs:[rax - 0x7d], cl ; ret
0x000000000016253a : inc dword ptr [rbp - 0x77] ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x000000000015fba8 : inc dword ptr [rbp - 0x77] ; loope 0x15fb9b ; ret
0x00000000000bbf6a : inc dword ptr [rbp - 0x77] ; ret
0x000000000008cb40 : inc dword ptr [rbp - 0x77] ; ret 0x1f0f
0x000000000008cf60 : inc dword ptr [rbp - 0x77] ; ret 0x3845
0x000000000008d82c : inc dword ptr [rbp - 0x77] ; ret 0x8941
0x000000000008b03e : inc dword ptr [rbp - 0x77] ; ret 0x8944
0x000000000008ca61 : inc dword ptr [rbp - 0x77] ; ret 0x8945
0x000000000008b2d6 : inc dword ptr [rbp - 0x77] ; retf
0x000000000006185d : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x00000000000bb16e : inc dword ptr [rbp - 0x7b] ; rol byte ptr [rbp + 0xf], 0x44 ; ret
0x00000000000efeef : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000eff3a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000017a597 : inc dword ptr [rbp - 0xd] ; hlt ; jmp rdi
0x0000000000077006 : inc dword ptr [rbx + 0x48944c8] ; and al, 0xe8 ; ret
0x0000000000056738 : inc dword ptr [rbx + 0x634802c2] ; ror byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000060370 : inc dword ptr [rbx + 0x634802c2] ; ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000189dcb : inc dword ptr [rbx + rax*2] ; add dword ptr [rax], eax ; cmp al, 0x82 ; jmp qword ptr [rax]
0x0000000000179ef7 : inc dword ptr [rbx + rcx*2] ; hlt ; call qword ptr [rdx]
0x00000000000d20c7 : inc dword ptr [rbx + rcx*4 + 0x6b] ; sub al, 0x89 ; ret 0x8348
0x000000000018c2db : inc dword ptr [rbx + rdx + 0x36c0002] ; stc ; call rax
0x00000000000338b3 : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000064b0a : inc dword ptr [rbx - 0x4bf43] ; call qword ptr [rax]
0x00000000000bf98d : inc dword ptr [rbx - 0x76b6fd01] ; retf 0x440f
0x000000000011adfa : inc dword ptr [rbx - 0x76b79c03] ; ret
0x00000000000d8be6 : inc dword ptr [rbx - 0x76beff08] ; ret 0x8b4c
0x000000000005d05d : inc dword ptr [rbx - 0x78f0d007] ; ret
0x000000000005fb1c : inc dword ptr [rbx - 0x78f0d008] ; retf
0x000000000010ba9c : inc dword ptr [rbx - 0x7af00008] ; ret
0x0000000000062374 : inc dword ptr [rbx - 0x90343] ; call qword ptr [rax]
0x000000000010f6df : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x0000000000021963 : inc dword ptr [rbx] ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x21937
0x0000000000039764 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000a199d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a190b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000017a623 : inc dword ptr [rbx] ; stc ; hlt ; call rax
0x000000000017a61f : inc dword ptr [rbx] ; stc ; hlt ; inc dword ptr [rbx] ; stc ; hlt ; call rax
0x00000000000db375 : inc dword ptr [rcx + 0x39] ; ret 0x2374
0x00000000000ab6ac : inc dword ptr [rcx + 0x39] ; retf 0x860f
0x00000000000683c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000505f9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf40
0x0000000000031aa3 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000001117cc : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3b44
0x00000000000e91e2 : inc dword ptr [rcx + 0xfffe1] ; add byte ptr [rcx], cl ; retf 0xea81
0x000000000018cb7b : inc dword ptr [rcx + rcx*2 - 0x1f63fffe] ; stc ; call rax
0x00000000000c4f63 : inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7cf4 : inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000045a85 : inc dword ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000005af90 : inc dword ptr [rcx + rcx*4 - 0x73] ; mov eax, 0xe8fffffa ; retf
0x000000000005c9cb : inc dword ptr [rcx + rcx*4 - 9] ; call 0xf9436
0x00000000000f732a : inc dword ptr [rcx - 0x42] ; add eax, 0x74000000 ; retf
0x0000000000042020 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000df521 : inc dword ptr [rcx - 0x77] ; ret
0x000000000002ca53 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000008b881 : inc dword ptr [rcx - 0x77] ; ret 0x848b
0x00000000000cfd13 : inc dword ptr [rcx - 0x77] ; retf
0x00000000000f6232 : inc dword ptr [rcx - 0x77] ; retf 0x3074
0x00000000000cfe87 : inc dword ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000acc40 : inc dword ptr [rcx - 0x7d] ; ret 0x4801
0x00000000000f0b5e : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000044552 : inc dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe0e9
0x000000000007ad5f : inc dword ptr [rcx - 0x7f] ; retf
0x000000000007ad6f : inc dword ptr [rcx - 0x80] ; retf
0x00000000000e6488 : inc dword ptr [rcx - 0x8b80000] ; fmul dword ptr [rax + 0x21] ; ret
0x000000000010efaa : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000018c02d : inc dword ptr [rcx] ; add byte ptr [rsi + rdx*4 - 8], bh ; call rsp
0x0000000000061da4 : inc dword ptr [rcx] ; ret
0x0000000000056632 : inc dword ptr [rcx] ; retf
0x00000000001864db : inc dword ptr [rcx] ; std ; call qword ptr [rcx + 0x21fffd43]
0x0000000000179d03 : inc dword ptr [rdi + 0x14] ; hlt ; push qword ptr [rsi + 0x14] ; hlt ; call rax
0x0000000000111f6e : inc dword ptr [rdi + rcx + 0x4d] ; ret 0x9d0f
0x00000000000d009d : inc dword ptr [rdi + rcx] ; test dword ptr [rbx - 0x7d000000], edx ; retf 0x8840
0x000000000018d1db : inc dword ptr [rdi + rdx + 0x36ec0001] ; cld ; call rsp
0x000000000018710f : inc dword ptr [rdi + rdx*2 - 5] ; call rsp
0x0000000000186b4f : inc dword ptr [rdx + 0x31] ; sti ; call rdx
0x0000000000187047 : inc dword ptr [rdx + 0x58] ; sti ; call rdx
0x000000000017ab97 : inc dword ptr [rdx - 0x54] ; cmc ; call qword ptr [rdi]
0x000000000017ac03 : inc dword ptr [rdx - 0x54] ; cmc ; inc dword ptr [rdx - 0x54] ; cmc ; jmp rsi
0x000000000017ac07 : inc dword ptr [rdx - 0x54] ; cmc ; jmp rsi
0x000000000017a793 : inc dword ptr [rdx] ; adc dh, ch ; call rax
0x000000000017a78f : inc dword ptr [rdx] ; adc dh, ch ; inc dword ptr [rdx] ; adc dh, ch ; call rax
0x000000000006a0d5 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x0000000000187037 : inc dword ptr [rdx] ; pop rdx ; sti ; call qword ptr [rdx + 0x22fffb59]
0x0000000000177897 : inc dword ptr [rdx] ; retf
0x0000000000186b3f : inc dword ptr [rdx] ; xor edi, ebx ; call qword ptr [rdx + 0x22fffb32]
0x000000000015203d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000186fe3 : inc dword ptr [rsi + 0x55] ; sti ; call rsi
0x0000000000177c9b : inc dword ptr [rsi] ; out dx, al ; call rdi
0x0000000000177c97 : inc dword ptr [rsi] ; out dx, al ; inc dword ptr [rsi] ; out dx, al ; call rdi
0x0000000000186fd3 : inc dword ptr [rsi] ; push rdi ; sti ; call qword ptr [rsi + 0x26fffb56]
0x0000000000186adb : inc dword ptr [rsi] ; xor bl, bh ; call qword ptr [rsi + 0x26fffb2f]
0x000000000018b143 : inc dword ptr [rsp + rsi*4] ; add dword ptr [rax], eax ; pop rsp ; ret
0x0000000000189d93 : inc eax ; add dword ptr [r8], eax ; cmp al, 0x32 ; call qword ptr [rax]
0x000000000018cc43 : inc eax ; add r8b, byte ptr [rax] ; insb byte ptr [rdi], dx ; out 0xf9, al ; call rsp
0x0000000000186a5f : inc eax ; cli ; call qword ptr [rax]
0x0000000000178ebf : inc eax ; cmp dl, dh ; call rax
0x000000000018c8d3 : inc eax ; cmp dword ptr [rdx], eax ; add byte ptr [rdi + rbp*4 - 7], bh ; jmp rax
0x0000000000178e53 : inc eax ; fyl2x ; call qword ptr [rax]
0x000000000017a56f : inc eax ; hlt ; hlt ; jmp rdi
0x0000000000187acb : inc eax ; jg 0x187ad7 ; add byte ptr [rsp + rdx*8 - 0x16], bl ; call rsp
0x0000000000189493 : inc eax ; or al, byte ptr [rcx] ; add byte ptr [rdi + rcx - 0x10], bh ; call rsp
0x000000000018d1c3 : inc eax ; sbb al, 1 ; add byte ptr [rsi + rsi*8 - 5], ch ; call rsp
0x0000000000034a09 : inc eax ; shr eax, 0x1f ; ret
0x0000000000189153 : inc eax ; test byte ptr [rax], 0 ; cld ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x000000000018d0c3 : inc eax ; test dword ptr [rcx], eax ; add byte ptr [rcx + rdi*2 - 6], ch ; call rsp
0x0000000000178da3 : inc eax ; wait ; int1 ; call rax
0x0000000000150fdc : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000017b199 : inc ebx ; add dh, bh ; jmp rdi
0x000000000012d3ff : inc ebx ; mov eax, 0xfffffffe ; ret
0x000000000003697c : inc ebx ; nop ; mov eax, edx ; ret
0x000000000015e509 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000c06da : inc ebx ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000001066e8 : inc edi ; add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000bd5d6 : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bd2c6 : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bd807 : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000179eb7 : inc edi ; hlt ; jmp rdx
0x00000000000ee881 : inc esi ; jmp qword ptr [r8]
0x0000000000189efb : inc esp ; add qword ptr [r8], rax ; in al, dx ; pushfq ; call qword ptr [rax]
0x000000000018cc8b : inc esp ; add r8b, byte ptr [r8] ; or al, 0xe9 ; stc ; jmp rsp
0x0000000000189213 : inc esp ; cld ; add byte ptr [rax], al ; jl 0x1891f3 ; out dx, eax ; jmp rax
0x000000000018bbe3 : inc esp ; in al, 1 ; add byte ptr [rdx + rbx*8 - 9], cl ; jmp rax
0x0000000000188843 : inc esp ; mov byte ptr [rax], 0 ; insb byte ptr [rdi], dx ; mov bl, 0xee ; call qword ptr [rax]
0x000000000018c22b : inc esp ; or al, 2 ; add byte ptr [rbp + rbp*8 - 8], bl ; call qword ptr [rax]
0x0000000000177dff : inc esp ; out dx, al ; call rsi
0x0000000000177dfb : inc esp ; out dx, al ; inc esp ; out dx, al ; call rsi
0x000000000018877b : inc esp ; ret 0
0x000000000018b4fb : inc esp ; ret 1
0x00000000001888fb : inc esp ; retf 0
0x000000000018b8c3 : inc esp ; xlatb ; add dword ptr [rax], eax ; pushfq ; test bh, dh ; call qword ptr [rax]
0x000000000018ed54 : insb byte ptr [rdi], dx ; add dl, ch ; call qword ptr [rbx]
0x000000000014bae4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bfe64 : insb byte ptr [rdi], dx ; add eax, 0x5be77501 ; pop rbp ; pop r12 ; ret
0x000000000018c2e0 : insb byte ptr [rdi], dx ; add edi, ecx ; call rax
0x00000000000b3e39 : insb byte ptr [rdi], dx ; and al, 0x58 ; mov rdi, rbp ; call rbx
0x0000000000034b3b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000034a89 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000035a3a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000034bf1 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x0000000000034b79 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034ac5 : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x0000000000034a2a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001a3144 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x000000000018a088 : insb byte ptr [rdi], dx ; fcomip st(3) ; jmp qword ptr [rax]
0x000000000018d1c8 : insb byte ptr [rdi], dx ; idiv bl ; call rsp
0x0000000000189338 : insb byte ptr [rdi], dx ; imul bh ; jmp rsp
0x000000000018a730 : insb byte ptr [rdi], dx ; in eax, dx ; cmc ; call rsp
0x0000000000176ffe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000018d0c8 : insb byte ptr [rdi], dx ; jns 0x18d0c8 ; call rsp
0x000000000018d090 : insb byte ptr [rdi], dx ; js 0x18d090 ; call qword ptr [rax]
0x0000000000188848 : insb byte ptr [rdi], dx ; mov bl, 0xee ; call qword ptr [rax]
0x00000000001884f0 : insb byte ptr [rdi], dx ; mov cl, 0xec ; call qword ptr [rax]
0x000000000011dd40 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00000000000037f4 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000018d474 : insb byte ptr [rdi], dx ; movsxd rax, dword ptr [rdx] ; add ah, bl ; mov dl, 0xfd ; call rsp
0x000000000018cc48 : insb byte ptr [rdi], dx ; out 0xf9, al ; call rsp
0x00000000001a1f54 : insb byte ptr [rdi], dx ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000001a3334 : insb byte ptr [rdi], dx ; pop rbp ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000051400 : insb byte ptr [rdi], dx ; ret
0x0000000000199834 : insb byte ptr [rdi], dx ; ret 0
0x00000000001891f0 : insb byte ptr [rdi], dx ; retf
0x00000000001763c6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000008a976 : insb byte ptr [rdi], dx ; stc ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x00000000001ad134 : insb byte ptr [rdi], dx ; sti ; add dword ptr [rax], eax ; pop rax ; in al, 0xf7 ; call qword ptr [rdx]
0x00000000001887e0 : insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; out dx, al ; jmp rax
0x00000000001898a0 : insb byte ptr [rdi], dx ; test al, 0xf1 ; jmp qword ptr [rax]
0x00000000000023be : insb byte ptr [rdi], dx ; xor bl, al ; retf 0x23c4
0x000000000014e750 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008a984 : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007af3b : insd dword ptr [rdi], dx ; add byte ptr [rcx + 0x58d4807], cl ; ret 0x3376
0x00000000000a1eff : insd dword ptr [rdi], dx ; add byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000038a83 : insd dword ptr [rdi], dx ; add byte ptr [rcx], al ; xor esi, esi ; mov rdi, r9 ; call r8
0x00000000000b6f7f : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000014f650 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012c130 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000019ace1 : insd dword ptr [rdi], dx ; int1 ; call qword ptr [rax]
0x000000000019acf5 : insd dword ptr [rdi], dx ; int1 ; call qword ptr [rdx]
0x00000000000029a6 : insd dword ptr [rdi], dx ; ja 0x2979 ; mov esp, 0x1fb02742 ; retf
0x00000000000029a5 : insd dword ptr [rdi], dx ; ja 0x297a ; mov esp, 0x1fb02742 ; retf
0x0000000000188641 : insd dword ptr [rdi], dx ; out dx, al ; jmp rax
0x0000000000176fff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000011adf7 : insd dword ptr [rdi], dx ; push -0x27c0010 ; movsxd rcx, dword ptr [rax - 0x77] ; ret
0x0000000000083f1f : insd dword ptr [rdi], dx ; ret
0x0000000000001c04 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00000000001753ad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000000a8acf : insd dword ptr [rdi], dx ; retf 0xd
0x0000000000196421 : insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x000000000008788f : insd dword ptr [rdi], dx ; std ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000178cf1 : insd dword ptr [rdi], dx ; sti ; call rax
0x00000000001762bf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000002d27 : int 0x80
0x0000000000003644 : int 0xcb
0x000000000011a345 : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000012025c : int1 ; add byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000178e36 : int1 ; call qword ptr [rax - 0x1f000e37]
0x0000000000178db6 : int1 ; call qword ptr [rax]
0x000000000019ab42 : int1 ; call qword ptr [rbx]
0x000000000019afa6 : int1 ; call qword ptr [rcx]
0x000000000019b06e : int1 ; call qword ptr [rdi]
0x000000000019acf6 : int1 ; call qword ptr [rdx]
0x0000000000178da6 : int1 ; call rax
0x00000000000a2e46 : int1 ; call rbx
0x000000000019b1a6 : int1 ; call rcx
0x0000000000178c82 : int1 ; call rsp
0x0000000000186a5d : int1 ; cli ; inc eax ; cli ; call qword ptr [rax]
0x00000000000df04b : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xdf049 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000dde93 : int1 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000010f748 : int1 ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000018995a : int1 ; dec dword ptr [rdi] ; add dword ptr [rax], eax ; pushfq ; scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x000000000018987a : int1 ; dec dword ptr [rdx - 0x5bc3ffff] ; int1 ; call qword ptr [rax]
0x000000000018989a : int1 ; dec dword ptr [rsp] ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; test al, 0xf1 ; jmp qword ptr [rax]
0x0000000000003c5b : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000178e42 : int1 ; inc dword ptr [rax - 0x2f000e30] ; sal cl, cl ; jmp qword ptr [rax]
0x0000000000178e32 : int1 ; inc dword ptr [rax - 0x39] ; int1 ; call qword ptr [rax - 0x1f000e37]
0x0000000000178db2 : int1 ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000178e52 : int1 ; inc eax ; fyl2x ; call qword ptr [rax]
0x0000000000178da2 : int1 ; inc eax ; wait ; int1 ; call rax
0x000000000008e15d : int1 ; je 0x8e154 ; ret
0x000000000015c0fb : int1 ; jl 0x15c14c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c11c : int1 ; jl 0x15c16d ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c12f : int1 ; jl 0x15c180 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c204 : int1 ; jl 0x15c255 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c25c : int1 ; jl 0x15c2ad ; adc dword ptr [rsi + 3], edx ; ret
0x000000000015c2f9 : int1 ; jl 0x15c34a ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000178dba : int1 ; jmp qword ptr [rax]
0x000000000019ad86 : int1 ; jmp qword ptr [rbx]
0x000000000019afea : int1 ; jmp qword ptr [rcx]
0x0000000000178daa : int1 ; jmp rax
0x000000000019b2e6 : int1 ; jmp rbx
0x00000000000a1895 : int1 ; jmp rcx
0x0000000000178c86 : int1 ; jmp rsp
0x00000000000731ab : int1 ; jne 0x731a6 ; lea eax, [rdx + rdi] ; ret
0x0000000000156c03 : int1 ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000176284 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000000a19b9 : int1 ; mov eax, eax ; ret
0x00000000001390db : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013450f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000011a7ca : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000116924 : int1 ; mov rdi, r13 ; call r12
0x0000000000121cc3 : int1 ; mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x000000000015dfe3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000cd0a4 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000a19a0 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000450de : int1 ; pop rbx ; ret
0x0000000000178e4e : int1 ; push qword ptr [rax - 0x29] ; int1 ; inc eax ; fyl2x ; call qword ptr [rax]
0x0000000000178dda : int1 ; push qword ptr [rax] ; cwde ; int1 ; jmp rax
0x000000000010d517 : int1 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000178c7e : int1 ; push qword ptr [rdi + rdx*2 + 0x57d4fff1] ; int1 ; jmp rsp
0x0000000000178c7a : int1 ; push qword ptr [rdi - 0x4b000ea9] ; push rdi ; int1 ; call rsp
0x00000000001897c2 : int1 ; push rsp ; sbb eax, 0x9c2c0001 ; int1 ; call qword ptr [rax]
0x00000000000026af : int1 ; ret
0x00000000001769d6 : int1 ; ret 0x5803
0x0000000000024afb : int1 ; retf 0x15
0x000000000018ccf1 : int1 ; stc ; jmp qword ptr [rax]
0x000000000018cce9 : int1 ; stc ; jmp rax
0x000000000012b54e : int1 ; sub byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000015dfe7 : int1 ; sub eax, edx ; ret
0x00000000000de0fc : int1 ; syscall
0x0000000000155153 : int1 ; vzeroupper ; ret
0x000000000008a686 : int1 ; xor eax, eax ; pop rbx ; ret
0x00000000001025ce : int1 ; xor eax, eax ; ret
0x0000000000071ab3 : iretd ; call 0x7e543
0x0000000000038a8a : iretd ; call r8
0x000000000007eb05 : iretd ; call rax
0x0000000000086945 : iretd ; call rcx
0x000000000018c161 : iretd ; clc ; jmp rax
0x0000000000189c99 : iretd ; dec eax ; cmp eax, dword ptr [rcx] ; add byte ptr [rdi + rcx*8 - 0xe], ch ; jmp rsp
0x0000000000125430 : iretd ; mov dword ptr [rsp + 0xc], edx ; call 0x2166f
0x00000000000e7409 : iretd ; mov eax, 0x103 ; syscall
0x0000000000075dde : iretd ; mov eax, 0xca ; syscall
0x00000000000c180d : iretd ; push 0x2f ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001075dd : iretd ; sbb ch, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000018ca71 : iretd ; stc ; jmp qword ptr [rax]
0x000000000010c4ce : iretd ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000831ad : iretd ; sub dword ptr [rbx], esi ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000fbe7a : iretd ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000f59a1 : iretd ; sub rsp, 8 ; call rsi
0x0000000000103dbf : ja 0x103dcb ; ret
0x0000000000103db3 : ja 0x103de0 ; xor eax, eax ; syscall
0x0000000000104f67 : ja 0x104f7a ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000105ded : ja 0x105e29 ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000106965 : ja 0x106996 ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000001073f5 : ja 0x10741c ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000110107 : ja 0x11010c ; ret
0x0000000000117dc1 : ja 0x117e14 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000011a7ed : ja 0x11a7de ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000011d3ad : ja 0x11d381 ; sub dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x00000000001258e7 : ja 0x125903 ; ret
0x0000000000125a5f : ja 0x125a82 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000125c64 : ja 0x125c90 ; ret
0x000000000012a8bd : ja 0x12a8d8 ; cmp dx, cx ; sete al ; ret
0x000000000012d39d : ja 0x12d394 ; xor eax, eax ; ret
0x000000000015731e : ja 0x1572ea ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000001576b4 : ja 0x1576fa ; jb 0x1576c6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000157ba1 : ja 0x157bd8 ; jb 0x157bb0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001593d9 : ja 0x1593a7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000015bed3 : ja 0x15bed7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000015c414 : ja 0x15c472 ; jb 0x15c426 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015ca39 : ja 0x15ca7e ; jb 0x15ca48 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000176a44 : ja 0x1769cb ; ret 0x48f
0x0000000000187911 : ja 0x1878ff ; jmp rax
0x000000000018796d : ja 0x187975 ; add byte ptr [rax + rdi*2 - 0x16], bl ; call rax
0x0000000000187975 : ja 0x18797d ; add byte ptr [rax + rdi*2 - 0x16], bh ; jmp rsp
0x000000000018a309 : ja 0x18a301 ; jmp qword ptr [rax]
0x000000000018a5c5 : ja 0x18a5ce ; add byte ptr [rbx + rbp*2], bh ; cmc ; call rax
0x000000000018d08d : ja 0x18d096 ; add byte ptr [rax + rdi*2 - 6], ch ; call qword ptr [rax]
0x00000000001961c9 : ja 0x1961bb ; call qword ptr [rdi]
0x000000000019fd31 : ja 0x19fd29 ; jmp qword ptr [rcx]
0x000000000019fd45 : ja 0x19fd3d ; jmp qword ptr [rcx]
0x000000000019fdd5 : ja 0x19fdcd ; jmp qword ptr [rcx]
0x00000000001ab0d1 : ja 0x1ab0cc ; call qword ptr [rcx]
0x00000000001ab0e5 : ja 0x1ab0e0 ; call qword ptr [rbx]
0x00000000001ac61d : ja 0x1ac61c ; jmp qword ptr [rdx]
0x0000000000001f54 : ja 0x1f91 ; retf 0x1cd6
0x00000000000029a7 : ja 0x2978 ; mov esp, 0x1fb02742 ; retf
0x000000000003319d : ja 0x3317e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034172 : ja 0x341ac ; mov rdi, qword ptr [rdi + 0x28] ; call 0xf0ba8
0x0000000000036066 : ja 0x360e6 ; add rsp, 0x10 ; ret
0x0000000000036142 : ja 0x36153 ; ret
0x000000000003618e : ja 0x361db ; ret
0x0000000000039b59 : ja 0x39bb3 ; ret
0x000000000004686e : ja 0x468c0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004b6d2 : ja 0x4b6b5 ; mov eax, r9d ; ret
0x0000000000051b8d : ja 0x51b9b ; ret
0x0000000000051bc0 : ja 0x51bcb ; ret
0x0000000000051bfa : ja 0x51c38 ; cmp eax, -1 ; je 0x51c18 ; ret
0x0000000000078508 : ja 0x78521 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a1dd : ja 0x8a1be ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c707 : ja 0x9c70d ; ret
0x000000000009c723 : ja 0x9c72d ; mov dword ptr [rdi], ecx ; ret
0x000000000009c764 : ja 0x9c773 ; mov qword ptr [rdi], rcx ; ret
0x000000000009c7e9 : ja 0x9c7fd ; ret
0x000000000009c83f : ja 0x9c857 ; ret
0x000000000009c8c1 : ja 0x9c8dd ; ret
0x000000000009dd07 : ja 0x9dd11 ; lea rax, [rdi + 2] ; ret
0x000000000009dd23 : ja 0x9dd31 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000009dd74 : ja 0x9dd87 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000009de59 : ja 0x9de71 ; lea rax, [rdi + 0x10] ; ret
0x000000000009decf : ja 0x9deeb ; lea rax, [rdi + 0x14] ; ret
0x000000000009df51 : ja 0x9df71 ; lea rax, [rdi + 0x18] ; ret
0x000000000009f9b7 : ja 0x9f9bd ; ret
0x000000000009f9d3 : ja 0x9f9dd ; mov dword ptr [rdi], ecx ; ret
0x000000000009fa14 : ja 0x9fa23 ; mov qword ptr [rdi], rcx ; ret
0x000000000009fa99 : ja 0x9faad ; ret
0x000000000009faef : ja 0x9fb07 ; ret
0x000000000009fb71 : ja 0x9fb8d ; ret
0x00000000000a0487 : ja 0xa048d ; ret
0x00000000000a04a3 : ja 0xa04ad ; mov dword ptr [rdi], ecx ; ret
0x00000000000a04e4 : ja 0xa04f3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0569 : ja 0xa057d ; ret
0x00000000000a05bf : ja 0xa05d7 ; ret
0x00000000000a0641 : ja 0xa065d ; ret
0x00000000000a13b4 : ja 0xa13e5 ; jb 0xa13c6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a17f3 : ja 0xa1810 ; jb 0xa17ff ; mov byte ptr [rdi], cl ; ret
0x00000000000a26de : ja 0xa26eb ; ret
0x00000000000b2ea9 : ja 0xb2ec9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000b451d : ja 0xb452b ; ret
0x00000000000b4632 : ja 0xb4643 ; ret
0x00000000000b47b2 : ja 0xb47c3 ; ret
0x00000000000b4d60 : ja 0xb4d71 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000bf947 : ja 0xbf953 ; ret
0x00000000000bf938 : ja 0xbf96f ; mov eax, 0xe3 ; syscall
0x00000000000c06bd : ja 0xc06cb ; ret
0x00000000000c1707 : ja 0xc174b ; ret
0x00000000000c4c1c : ja 0xc4c7b ; ret
0x00000000000c4cbf : ja 0xc4d23 ; ret
0x00000000000c4de9 : ja 0xc4e23 ; ret
0x00000000000c50bc : ja 0xc50e8 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000c5af7 : ja 0xc5b33 ; ret
0x00000000000c5b67 : ja 0xc5ba3 ; ret
0x00000000000c5db7 : ja 0xc5e03 ; ret
0x00000000000c5e2b : ja 0xc5e31 ; add byte ptr [rax], al ; syscall
0x00000000000c5e37 : ja 0xc5e83 ; ret
0x00000000000cef8e : ja 0xcef99 ; jl 0xcef85 ; ret
0x00000000000de1c6 : ja 0xde1d8 ; setne al ; movzx eax, al ; ret
0x00000000000e5dec : ja 0xe5e4b ; ret
0x00000000000e5e9c : ja 0xe5efb ; ret
0x00000000000e63f1 : ja 0xe63fb ; xor eax, eax ; ret
0x00000000000e6a4e : ja 0xe6a56 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000e6d42 : ja 0xe6d33 ; ret
0x00000000000e6d98 : ja 0xe6d89 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6fbb : ja 0xe6fc3 ; ret
0x00000000000e7009 : ja 0xe7013 ; ret
0x00000000000e705b : ja 0xe7063 ; ret
0x00000000000e73b3 : ja 0xe73c3 ; ret
0x00000000000e7417 : ja 0xe7423 ; ret
0x00000000000e746f : ja 0xe747b ; ret
0x00000000000e765a : ja 0xe7663 ; ret
0x00000000000e79e4 : ja 0xe7a43 ; ret
0x00000000000e7a89 : ja 0xe7ae3 ; ret
0x00000000000e7b1d : ja 0xe7b2b ; ret
0x00000000000e7b4d : ja 0xe7b5b ; ret
0x00000000000e7e78 : ja 0xe7ed6 ; add rsp, 0x68 ; ret
0x00000000000e8189 : ja 0xe81cb ; ret
0x00000000000e82f9 : ja 0xe8343 ; ret
0x00000000000eba83 : ja 0xeba98 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000ebc09 : ja 0xebc63 ; ret
0x00000000000ec20c : ja 0xec283 ; ret
0x00000000000ec2c0 : ja 0xec2cb ; ret
0x00000000000ec2f5 : ja 0xec303 ; ret
0x00000000000ec3ec : ja 0xec44b ; ret
0x00000000000ec48c : ja 0xec4e3 ; ret
0x00000000000ec51d : ja 0xec52b ; ret
0x00000000000ec552 : ja 0xec57b ; ret
0x00000000000ec603 : ja 0xec63b ; ret
0x00000000000ec678 : ja 0xec6ab ; ret
0x00000000000ec6ca : ja 0xec6d3 ; ret
0x00000000000ec700 : ja 0xec70b ; ret
0x00000000000ec72d : ja 0xec73b ; ret
0x00000000000ec7a3 : ja 0xec7af ; ret
0x00000000000ec7ec : ja 0xec7f8 ; ret
0x00000000000ec930 : ja 0xec953 ; ret
0x00000000000eca93 : ja 0xecae3 ; ret
0x00000000000ecc56 : ja 0xecc63 ; ret
0x00000000000ecc97 : ja 0xecca3 ; ret
0x00000000000ed0a3 : ja 0xed0d3 ; ret
0x00000000000ed1e9 : ja 0xed243 ; ret
0x00000000000ed289 : ja 0xed2e3 ; ret
0x00000000000ed32f : ja 0xed393 ; ret
0x00000000000ed3df : ja 0xed443 ; ret
0x00000000000ed747 : ja 0xed793 ; ret
0x00000000000ed7c7 : ja 0xed813 ; ret
0x00000000000ed859 : ja 0xed8ab ; ret
0x00000000000ed8fb : ja 0xed903 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000ed909 : ja 0xed95b ; ret
0x00000000000edb7c : ja 0xedbe3 ; ret
0x00000000000edd89 : ja 0xeddcb ; ret
0x00000000000ede39 : ja 0xede7b ; ret
0x00000000000edee9 : ja 0xedef3 ; ret
0x00000000000ef1cd : ja 0xef1db ; ret
0x00000000000ef257 : ja 0xef26b ; ret
0x00000000000ef2fe : ja 0xef313 ; ret
0x00000000000ef352 : ja 0xef363 ; ret
0x00000000000ef38d : ja 0xef39b ; ret
0x00000000000ef3bd : ja 0xef3cb ; ret
0x00000000000ef459 : ja 0xef465 ; ret
0x00000000000f0c19 : ja 0xf0c73 ; ret
0x00000000000f3084 : ja 0xf3093 ; ret
0x00000000000f5b0a : ja 0xf5b13 ; ret
0x00000000000f5bed : ja 0xf5bfb ; ret
0x00000000000f5c92 : ja 0xf5d0b ; ret
0x00000000000f5d45 : ja 0xf5d53 ; ret
0x00000000000f5e6c : ja 0xf5ecb ; ret
0x00000000000f5f0c : ja 0xf5f6b ; ret
0x00000000000f5fbc : ja 0xf601b ; ret
0x00000000000f606c : ja 0xf60e3 ; ret
0x00000000000f6129 : ja 0xf6183 ; ret
0x00000000000f61c1 : ja 0xf621b ; ret
0x00000000000f6245 : ja 0xf6253 ; ret
0x00000000000f6ac9 : ja 0xf6b23 ; ret
0x00000000000f6b99 : ja 0xf6bf3 ; ret
0x00000000000f6d02 : ja 0xf6d73 ; ret
0x00000000000f6dbc : ja 0xf6e33 ; ret
0x00000000000f6e79 : ja 0xf6ed3 ; ret
0x00000000000f6f22 : ja 0xf6f93 ; ret
0x00000000000f6fd9 : ja 0xf7033 ; ret
0x00000000000f707c : ja 0xf70f3 ; ret
0x00000000000f740c : ja 0xf746b ; ret
0x00000000000f74ac : ja 0xf7513 ; ret
0x00000000000f755c : ja 0xf75bb ; ret
0x00000000000f76bc : ja 0xf771b ; ret
0x00000000000f775c : ja 0xf77c3 ; ret
0x00000000000f77fd : ja 0xf780b ; ret
0x00000000000f782d : ja 0xf783b ; ret
0x00000000000f786d : ja 0xf787b ; ret
0x00000000000f78bb : ja 0xf78eb ; ret
0x00000000000f7910 : ja 0xf791b ; ret
0x00000000000f793d : ja 0xf794b ; ret
0x00000000000f796d : ja 0xf797b ; ret
0x00000000000f79a0 : ja 0xf79ab ; ret
0x00000000000f79cd : ja 0xf79db ; ret
0x0000000000105bb1 : jae 0x105bef ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000010a8be : jae 0x10a8de ; mov edi, ebp ; call 0xf6b86
0x0000000000122bb4 : jae 0x122b3b ; ret 0x3901
0x00000000001259c5 : jae 0x1259d4 ; xor eax, eax ; ret
0x0000000000125a05 : jae 0x125a14 ; xor eax, eax ; ret
0x000000000012c4a4 : jae 0x12c487 ; mov eax, 1 ; ret
0x0000000000175002 : jae 0x174fe4 ; jo 0x175080 ; mov ebp, 0xfb67d10d ; ret
0x0000000000175e9e : jae 0x175e79 ; push rsi ; pop rdx ; je 0x175e6e ; ret 0xacfc
0x00000000001948f9 : jae 0x194901 ; add byte ptr [rcx], ah ; out dx, al ; call rsp
0x000000000019fc2d : jae 0x19fc25 ; jmp qword ptr [rsi]
0x00000000001a42f5 : jae 0x1a42ee ; call qword ptr [rdi]
0x0000000000035abe : jae 0x35b05 ; xor eax, eax ; pop rbx ; ret
0x000000000003610d : jae 0x36112 ; ret
0x000000000003651d : jae 0x36522 ; ret
0x0000000000045b57 : jae 0x45b60 ; xor eax, eax ; ret
0x000000000004f489 : jae 0x4f493 ; jb 0x4f469 ; mov rdi, r13 ; call 0x7bf89
0x00000000000733ab : jae 0x733b4 ; mov eax, dword ptr [rdx] ; ret
0x000000000007a478 : jae 0x7a485 ; movzx eax, byte ptr [rax] ; ret
0x000000000007d97d : jae 0x7d9a5 ; movzx eax, byte ptr [rax] ; ret
0x0000000000084e65 : jae 0x84e86 ; lea rax, [rdx - 8] ; ret
0x0000000000086bce : jae 0x86bde ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b6eed : jae 0xb6ef2 ; ret
0x00000000000b6f1d : jae 0xb6f22 ; ret
0x00000000000c4b3d : jae 0xc4b42 ; ret
0x00000000000c4d5d : jae 0xc4d62 ; ret
0x00000000000c506e : jae 0xc5073 ; ret
0x00000000000c50fd : jae 0xc5102 ; ret
0x00000000000c5ab1 : jae 0xc5ab7 ; add byte ptr [rax], al ; syscall
0x00000000000c5abd : jae 0xc5ac2 ; ret
0x00000000000c5c5d : jae 0xc5c62 ; ret
0x00000000000c5c8d : jae 0xc5c92 ; ret
0x00000000000c5ced : jae 0xc5cf2 ; ret
0x00000000000c5d1d : jae 0xc5d22 ; ret
0x00000000000c5d4d : jae 0xc5d52 ; ret
0x00000000000c5d7d : jae 0xc5d82 ; ret
0x00000000000ddf6d : jae 0xddf72 ; ret
0x00000000000ddf9d : jae 0xddfa2 ; ret
0x00000000000ddfcd : jae 0xddfd2 ; ret
0x00000000000ddffd : jae 0xde002 ; ret
0x00000000000de02d : jae 0xde032 ; ret
0x00000000000de05d : jae 0xde062 ; ret
0x00000000000de08d : jae 0xde092 ; ret
0x00000000000de0bd : jae 0xde0c2 ; ret
0x00000000000e6f1d : jae 0xe6f22 ; ret
0x00000000000e74bd : jae 0xe74c2 ; ret
0x00000000000e74ed : jae 0xe74f2 ; ret
0x00000000000e75cd : jae 0xe75d2 ; ret
0x00000000000e75fd : jae 0xe7602 ; ret
0x00000000000e76bd : jae 0xe76c2 ; ret
0x00000000000e76ed : jae 0xe76f2 ; ret
0x00000000000e7f0d : jae 0xe7f12 ; ret
0x00000000000e81fd : jae 0xe8202 ; ret
0x00000000000e822d : jae 0xe8232 ; ret
0x00000000000e825d : jae 0xe8262 ; ret
0x00000000000e828d : jae 0xe8292 ; ret
0x00000000000e82bd : jae 0xe82c2 ; ret
0x00000000000e837d : jae 0xe8382 ; ret
0x00000000000e83ad : jae 0xe83b2 ; ret
0x00000000000e8bdd : jae 0xe8be2 ; ret
0x00000000000e8c0d : jae 0xe8c12 ; ret
0x00000000000e8c3d : jae 0xe8c42 ; ret
0x00000000000e8c70 : jae 0xe8c75 ; ret
0x00000000000e938d : jae 0xe9392 ; ret
0x00000000000e93c0 : jae 0xe93c5 ; ret
0x00000000000e93ed : jae 0xe93f2 ; ret
0x00000000000e941d : jae 0xe9422 ; ret
0x00000000000e944d : jae 0xe9452 ; ret
0x00000000000e9480 : jae 0xe9485 ; ret
0x00000000000e94ad : jae 0xe94b2 ; ret
0x00000000000e94dd : jae 0xe94e2 ; ret
0x00000000000e950d : jae 0xe9512 ; ret
0x00000000000ec1d0 : jae 0xec1d5 ; ret
0x00000000000ecccd : jae 0xeccd2 ; ret
0x00000000000ecfdd : jae 0xecfe2 ; ret
0x00000000000ed1ad : jae 0xed1b2 ; ret
0x00000000000eda9d : jae 0xedaa2 ; ret
0x00000000000edb3d : jae 0xedb42 ; ret
0x00000000000edd1d : jae 0xedd22 ; ret
0x00000000000edd4d : jae 0xedd52 ; ret
0x00000000000eddfd : jae 0xede02 ; ret
0x00000000000edead : jae 0xedeb2 ; ret
0x00000000000ee1ad : jae 0xee1b2 ; ret
0x00000000000ee1dd : jae 0xee1e2 ; ret
0x00000000000ee20d : jae 0xee212 ; ret
0x00000000000f095f : jae 0xf0964 ; ret
0x00000000000f0bad : jae 0xf0bb2 ; ret
0x00000000000f0bdd : jae 0xf0be2 ; ret
0x00000000000f0cad : jae 0xf0cb2 ; ret
0x00000000000f0cdd : jae 0xf0ce2 ; ret
0x00000000000f0d10 : jae 0xf0d15 ; ret
0x00000000000f0d3d : jae 0xf0d42 ; ret
0x00000000000f0d6d : jae 0xf0d72 ; ret
0x00000000000f0d9d : jae 0xf0da2 ; ret
0x00000000000f0dcd : jae 0xf0dd2 ; ret
0x00000000000f278e : jae 0xf27b9 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000f3880 : jae 0xf3885 ; ret
0x00000000000f38ad : jae 0xf38b2 ; ret
0x00000000000f38dd : jae 0xf38e2 ; ret
0x00000000000f3910 : jae 0xf3915 ; ret
0x00000000000f3940 : jae 0xf3945 ; ret
0x00000000000f396d : jae 0xf3972 ; ret
0x00000000000f39a0 : jae 0xf39a5 ; ret
0x00000000000f39cd : jae 0xf39d2 ; ret
0x00000000000f39fd : jae 0xf3a02 ; ret
0x00000000000f3a30 : jae 0xf3a35 ; ret
0x00000000000f3a5d : jae 0xf3a62 ; ret
0x00000000000f3a90 : jae 0xf3a95 ; ret
0x00000000000f5a6d : jae 0xf5a72 ; ret
0x00000000000f5a9d : jae 0xf5aa2 ; ret
0x00000000000f5bbd : jae 0xf5bc2 ; ret
0x00000000000f5c1d : jae 0xf5c22 ; ret
0x00000000000f5c4d : jae 0xf5c52 ; ret
0x00000000000f5d7d : jae 0xf5d82 ; ret
0x00000000000f5e00 : jae 0xf5e05 ; ret
0x00000000000f5e2d : jae 0xf5e32 ; ret
0x00000000000f62fd : jae 0xf6302 ; ret
0x00000000000f632d : jae 0xf6332 ; ret
0x00000000000f6370 : jae 0xf6375 ; ret
0x00000000000f639d : jae 0xf63a2 ; ret
0x00000000000f63cd : jae 0xf63d2 ; ret
0x00000000000f63fd : jae 0xf6402 ; ret
0x00000000000f642d : jae 0xf6432 ; ret
0x00000000000f645d : jae 0xf6462 ; ret
0x00000000000f648d : jae 0xf6492 ; ret
0x00000000000f64bd : jae 0xf64c2 ; ret
0x00000000000f64f0 : jae 0xf64f5 ; ret
0x00000000000f651d : jae 0xf6522 ; ret
0x00000000000f6550 : jae 0xf6555 ; ret
0x00000000000f657d : jae 0xf6582 ; ret
0x00000000000f65ad : jae 0xf65b2 ; ret
0x00000000000f65dd : jae 0xf65e2 ; ret
0x00000000000f660d : jae 0xf6612 ; ret
0x00000000000f663d : jae 0xf6642 ; ret
0x00000000000f6670 : jae 0xf6675 ; ret
0x00000000000f66a0 : jae 0xf66a5 ; ret
0x00000000000f66cd : jae 0xf66d2 ; ret
0x00000000000f66fd : jae 0xf6702 ; ret
0x00000000000f6730 : jae 0xf6735 ; ret
0x00000000000f6760 : jae 0xf6765 ; ret
0x00000000000f6790 : jae 0xf6795 ; ret
0x00000000000f67bd : jae 0xf67c2 ; ret
0x00000000000f67ed : jae 0xf67f2 ; ret
0x00000000000f681d : jae 0xf6822 ; ret
0x00000000000f684d : jae 0xf6852 ; ret
0x00000000000f6880 : jae 0xf6885 ; ret
0x00000000000f68ad : jae 0xf68b2 ; ret
0x00000000000f68dd : jae 0xf68e2 ; ret
0x00000000000f6910 : jae 0xf6915 ; ret
0x00000000000f693d : jae 0xf6942 ; ret
0x00000000000f6970 : jae 0xf6975 ; ret
0x00000000000f69a0 : jae 0xf69a5 ; ret
0x00000000000f69cd : jae 0xf69d2 ; ret
0x00000000000f69fd : jae 0xf6a02 ; ret
0x00000000000f6a2d : jae 0xf6a32 ; ret
0x00000000000f6a6d : jae 0xf6a72 ; ret
0x00000000000f6b5d : jae 0xf6b62 ; ret
0x00000000000f6c2d : jae 0xf6c32 ; ret
0x00000000000f6c5d : jae 0xf6c62 ; ret
0x00000000000f6c90 : jae 0xf6c95 ; ret
0x00000000000f6cbd : jae 0xf6cc2 ; ret
0x00000000000f7130 : jae 0xf7135 ; ret
0x00000000000f715d : jae 0xf7162 ; ret
0x00000000000f718d : jae 0xf7192 ; ret
0x00000000000f71c0 : jae 0xf71c5 ; ret
0x00000000000f7e67 : jae 0xf7dfa ; fistp qword ptr [rax + 0x14] ; syscall
0x00000000000fbe79 : jae 0xfbe53 ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000fd6ad : jae 0xfd6f8 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd92b : jae 0xfd93c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd96b : jae 0xfd984 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd9ab : jae 0xfd9cc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fda42 : jae 0xfda74 ; add byte ptr [rax + 0x63], cl ; retf 0x4864
0x00000000001025cd : jb 0x1025c4 ; xor eax, eax ; ret
0x0000000000109b3d : jb 0x109b3c ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000010f86f : jb 0x10f897 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001103a8 : jb 0x11039b ; mov eax, 0xffffffff ; ret
0x00000000001187f2 : jb 0x118810 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x118809 ; ret
0x000000000011a7f1 : jb 0x11a815 ; ret
0x000000000011a7eb : jb 0x11a81d ; ja 0x11a7e0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013251a : jb 0x13252a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013266a : jb 0x13267a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001327ba : jb 0x1327ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013290a : jb 0x13291a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132a5a : jb 0x132a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132baa : jb 0x132bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132cfa : jb 0x132d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132e4a : jb 0x132e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132f9a : jb 0x132faa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001330ea : jb 0x1330fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013323a : jb 0x13324a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013338a : jb 0x13339a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001334da : jb 0x1334ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013362a : jb 0x13363a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013377a : jb 0x13378a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000134eea : jb 0x134efa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013503a : jb 0x13504a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013518a : jb 0x13519a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001352da : jb 0x1352ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013542a : jb 0x13543a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013557a : jb 0x13558a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001356ca : jb 0x1356da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013581a : jb 0x13582a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013596a : jb 0x13597a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135aba : jb 0x135aca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135c0a : jb 0x135c1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135d5a : jb 0x135d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135eaa : jb 0x135eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135ffa : jb 0x13600a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013614a : jb 0x13615a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001576b6 : jb 0x1576c4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000157ba3 : jb 0x157bae ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000015baae : jb 0x15baba ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015c165 : jb 0x15c174 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000015c170 : jb 0x15c183 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015c17d : jb 0x15c185 ; mov byte ptr [rdi], cl ; ret
0x000000000015c416 : jb 0x15c424 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000015ca3b : jb 0x15ca46 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000186498 : jb 0x1864de ; std ; push qword ptr [rdx + 0x3e] ; std ; call qword ptr [rax]
0x000000000018649c : jb 0x1864df ; std ; call qword ptr [rax]
0x0000000000187861 : jb 0x18784f ; call rax
0x0000000000187869 : jb 0x187857 ; jmp rsp
0x00000000001896d1 : jb 0x1896c5 ; call qword ptr [rax]
0x000000000019fa79 : jb 0x19fa71 ; call qword ptr [rdx]
0x000000000019fb09 : jb 0x19fb01 ; call qword ptr [rcx]
0x000000000019fc19 : jb 0x19fc11 ; jmp qword ptr [rcx]
0x0000000000001acd : jb 0x1b4c ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000001db5 : jb 0x1de8 ; retf
0x0000000000029d7f : jb 0x29f28 ; mov rdx, rax ; jmp 0x29d49
0x0000000000002c6c : jb 0x2c0c ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000003a96 : jb 0x3b16 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000048ead : jb 0x48e3a ; retf 0x703d
0x0000000000048eac : jb 0x48e3b ; retf 0x703d
0x000000000004f48b : jb 0x4f467 ; mov rdi, r13 ; call 0x7bf87
0x0000000000059a88 : jb 0x59a15 ; ret 0x348
0x000000000005c94c : jb 0x5c970 ; add byte ptr [rax], al ; mov edi, r14d ; call 0xf9439
0x0000000000071b68 : jb 0x71b8e ; mov dword ptr [rcx], eax ; ret
0x0000000000071d3e : jb 0x71d6d ; mov byte ptr [rcx], dil ; ret
0x0000000000078b87 : jb 0x78bb6 ; mov byte ptr [rcx], dil ; ret
0x0000000000078c77 : jb 0x78ca6 ; mov byte ptr [rcx], dil ; ret
0x000000000007ef31 : jb 0x7ef17 ; mov byte ptr [rax + rsi], dil ; ret
0x000000000008716b : jb 0x87180 ; mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x00000000000871b2 : jb 0x871c3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008862a : jb 0x88670 ; or eax, 0x450f4800 ; ret 0xfc3
0x00000000000896a5 : jb 0x896af ; sub cl, byte ptr [rax + 0x39] ; bnd jne 0x896a9 ; ret
0x000000000008a0fc : jb 0x8a0fc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x000000000008bde8 : jb 0x8bdca ; mov rdx, rax ; jmp 0x8bd81
0x000000000008daac : jb 0x8da8e ; movzx r8d, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8da42
0x000000000009e68a : jb 0x9e699 ; add byte ptr [rax], al ; ret
0x00000000000a1319 : jb 0xa1322 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a13b6 : jb 0xa13c4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a13b5 : jb 0xa13c5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a17f5 : jb 0xa17fd ; mov byte ptr [rdi], cl ; ret
0x00000000000afbe3 : jb 0xafb70 ; retf 0x703d
0x00000000000afbe2 : jb 0xafb71 ; retf 0x703d
0x00000000000c0fef : jb 0xc1028 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000cf082 : jb 0xcf0a8 ; xor eax, eax ; ret
0x00000000000d18cf : jb 0xd1847 ; ret
0x00000000000ec20d : jb 0xec204 ; ret
0x00000000000ed7bb : jb 0xed7c1 ; add byte ptr [rax], al ; syscall
0x00000000000ef6bf : jb 0xef6af ; mov rdi, rdx ; call 0x7c107
0x00000000000f606d : jb 0xf6064 ; ret
0x00000000000f6dbd : jb 0xf6db4 ; ret
0x00000000000f707d : jb 0xf7074 ; ret
0x00000000000fd6eb : jb 0xfd6ff ; mov eax, 1 ; ret
0x000000000010bf8c : jbe 0x10bf93 ; ret
0x00000000001258a8 : jbe 0x1258b5 ; xor eax, eax ; ret
0x0000000000125c61 : jbe 0x125c75 ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000001506e7 : jbe 0x150758 ; add rax, rdi ; vzeroupper ; ret
0x0000000000157236 : jbe 0x157240 ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000158147 : jbe 0x1581b8 ; add rax, rdi ; vzeroupper ; ret
0x00000000001768dc : jbe 0x1768af ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000001768db : jbe 0x1768b0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000178d11 : jbe 0x178d10 ; call rax
0x0000000000179d08 : jbe 0x179d21 ; hlt ; call rax
0x0000000000189021 : jbe 0x189014 ; jmp rsp
0x000000000018a56d : jbe 0x18a576 ; add byte ptr [rcx + rbp*2 - 0xb], bl ; call rsp
0x00000000001ac6e9 : jbe 0x1ac6e8 ; jmp qword ptr [rdx]
0x000000000002db7b : jbe 0x2db5d ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000002f0a : jbe 0x2f24 ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000000396f : jbe 0x391a ; outsb dx, byte ptr [rsi] ; retf
0x000000000004afb0 : jbe 0x4af44 ; pop rbx ; pop rbp ; ret
0x00000000000500d6 : jbe 0x50116 ; add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000500d5 : jbe 0x50156 ; add byte ptr ss:[rcx], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000050126 : jbe 0x50166 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000059c90 : jbe 0x59c68 ; mov qword ptr [rdi], rsi ; ret
0x00000000000663e0 : jbe 0x663b8 ; mov qword ptr [rdi], rsi ; ret
0x000000000006c820 : jbe 0x6c7f8 ; mov qword ptr [rdi], rsi ; ret
0x000000000007f5a7 : jbe 0x7f552 ; add rsp, 8 ; ret
0x00000000000887b6 : jbe 0x887ae ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000089f99 : jbe 0x89fbb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000091a96 : jbe 0x91ad5 ; add rax, rdi ; ret
0x0000000000091aa6 : jbe 0x91ad7 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000091ab6 : jbe 0x91ad7 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000091ac6 : jbe 0x91ad7 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000097a99 : jbe 0x97a93 ; ret 0xf10
0x00000000000996b9 : jbe 0x996b3 ; ret 0xf10
0x00000000000b1e2c : jbe 0xb1e83 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000b1f26 : jbe 0xb1f65 ; add rax, rdi ; ret
0x00000000000b1f36 : jbe 0xb1f67 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000b1f46 : jbe 0xb1f67 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000b1f56 : jbe 0xb1f67 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000c4fb6 : jbe 0xc4f46 ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c5d41 : jbe 0xc5d47 ; add byte ptr [rax], al ; syscall
0x00000000000ee43c : jbe 0xee443 ; ret
0x00000000001015b7 : je 0x1015c3 ; pop rbx ; ret
0x00000000001015a6 : je 0x1015e9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000010264d : je 0x10265b ; ret
0x00000000001026d4 : je 0x1026ee ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000001027fe : je 0x10281b ; leave ; ret
0x0000000000103ecc : je 0x103ede ; add rsp, 8 ; ret
0x00000000001044ef : je 0x1044fb ; ret
0x000000000010b8fa : je 0x10b904 ; xor eax, eax ; ret
0x000000000010bfa6 : je 0x10bfb2 ; mov rdi, rbx ; call rax
0x000000000010c953 : je 0x10c980 ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x000000000010f6e3 : je 0x10f6db ; pop rbx ; ret
0x0000000000110a96 : je 0x110ac2 ; or byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000113ed8 : je 0x113ee3 ; ret
0x0000000000113f11 : je 0x113f1b ; ret
0x0000000000113f0b : je 0x113f1c ; cmp dword ptr [rdi + 0x10], 2 ; je 0x113f21 ; ret
0x000000000011447a : je 0x1144a6 ; add rsp, 8 ; ret
0x0000000000114780 : je 0x114796 ; add rsp, 8 ; ret
0x0000000000114896 : je 0x1148a6 ; add rsp, 8 ; ret
0x000000000011490c : je 0x11491d ; mov qword ptr [rdi], rax ; ret
0x0000000000114988 : je 0x114993 ; ret
0x0000000000114a0a : je 0x114a13 ; ret
0x0000000000114abb : je 0x114a27 ; ret
0x0000000000117ea2 : je 0x117eae ; mov rdi, rbx ; call rax
0x0000000000118321 : je 0x11834e ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000118529 : je 0x118535 ; mov rdi, rbp ; call rax
0x00000000001187f8 : je 0x118803 ; ret
0x000000000011935a : je 0x119366 ; mov rdi, rbp ; call rax
0x00000000001196d5 : je 0x1196e5 ; mov rdi, qword ptr [rsp + 8] ; call rax
0x00000000001198c3 : je 0x1198d4 ; xor eax, eax ; ret
0x0000000000119ef2 : je 0x119efe ; mov rdi, rbp ; call rdx
0x000000000011a343 : je 0x11a443 ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000011d004 : je 0x11d030 ; or byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x29cc
0x000000000011dc52 : je 0x11dc66 ; lea rdi, [rbx + 0xc8] ; call rax
0x000000000011df2a : je 0x11df57 ; cmp byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000011e610 : je 0x11e61c ; mov rdi, r12 ; call rax
0x000000000011e7db : je 0x11e7e9 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000011f0c4 : je 0x11f0d4 ; xor eax, eax ; ret
0x000000000011f88c : je 0x11f898 ; mov rdi, rbx ; call rax
0x000000000011f932 : je 0x11f93e ; mov rdi, r13 ; call rax
0x000000000011f9b3 : je 0x11f9c7 ; mov eax, 1 ; ret
0x000000000012040f : je 0x12041d ; lea rdi, [rbx + 0x68] ; call rax
0x0000000000120ad6 : je 0x120ae2 ; mov rdi, r12 ; call rax
0x0000000000120e1f : je 0x120e2d ; lea rdi, [rbx + 0x58] ; call rax
0x0000000000122982 : je 0x1229b2 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000122a11 : je 0x1229c8 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001229bf : je 0x1229cb ; pop rbx ; ret
0x000000000012346b : je 0x123473 ; ret
0x000000000012354b : je 0x123559 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000123b84 : je 0x123b92 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000124800 : je 0x12485c ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001248f0 : je 0x12494c ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012550d : je 0x125538 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000001255dd : je 0x125608 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000001277d8 : je 0x1277e4 ; xor eax, eax ; ret
0x000000000012b871 : je 0x12b886 ; add rsp, 8 ; ret
0x000000000012cb39 : je 0x12cb66 ; or al, 0x4c ; add ecx, dword ptr [rsp] ; call rax
0x0000000000149f73 : je 0x149f3d ; lea r10, [r10 + r9] ; jmp r10
0x000000000014ac45 : je 0x14ac4d ; xchg eax, edx ; sub eax, edx ; ret
0x000000000014ad43 : je 0x14ad0d ; lea r10, [r10 + r9] ; jmp r10
0x000000000014bc2a : je 0x14bc32 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000014bd83 : je 0x14bd4d ; lea r10, [r10 + r9] ; jmp r10
0x000000000014d953 : je 0x14d91d ; lea r10, [r10 + r9] ; jmp r10
0x000000000014f9ed : je 0x14f9d0 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000150981 : je 0x1509e8 ; and ch, al ; std ; xlatb ; ret
0x0000000000150a6f : je 0x150ad6 ; and ch, al ; std ; xlatb ; ret
0x0000000000150dc5 : je 0x150dd7 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000151143 : je 0x15110d ; lea r10, [r10 + r9] ; jmp r10
0x00000000001527d3 : je 0x15279d ; lea r10, [r10 + r9] ; jmp r10
0x000000000015505f : je 0x1550e8 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000001554b2 : je 0x155513 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x0000000000155dff : je 0x155e88 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x0000000000155f71 : je 0x155fd2 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000015685a : je 0x156519 ; vzeroupper ; ret
0x0000000000156736 : je 0x1565f9 ; vzeroupper ; ret
0x0000000000156c7e : je 0x156cdf ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x0000000000157466 : je 0x157329 ; vzeroupper ; ret
0x000000000015a837 : je 0x15a841 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162d4d : je 0x162d78 ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000163483 : je 0x163489 ; call rcx
0x0000000000163583 : je 0x16358e ; call rax
0x000000000017440c : je 0x17443a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000175168 : je 0x175133 ; xor al, 0xd8 ; ret
0x0000000000175ea2 : je 0x175e6a ; ret 0xacfc
0x000000000017acb0 : je 0x17acae ; cmc ; call qword ptr [rdx]
0x000000000017acac : je 0x17acae ; cmc ; push qword ptr [rcx + rdi*8 - 0xb] ; call qword ptr [rdx]
0x0000000000187865 : je 0x18786d ; add byte ptr [rdx + rsi*2 - 0x16], bl ; jmp rsp
0x0000000000188661 : je 0x188653 ; jmp rax
0x000000000018c6d9 : je 0x18c6d6 ; jmp rax
0x000000000018c6e9 : je 0x18c6e6 ; jmp qword ptr [rax]
0x000000000018f13c : je 0x18f160 ; add byte ptr [rax], al ; rcr byte ptr [rsi], 0xea ; jmp rdx
0x00000000001900b5 : je 0x1900a3 ; jmp qword ptr [rbx]
0x0000000000193a3c : je 0x193aa9 ; add byte ptr [rax], al ; push rax ; in al, 0xed ; call qword ptr [rdi]
0x0000000000194aa5 : je 0x194aad ; add byte ptr [rax], bh ; out dx, al ; call qword ptr [rdi]
0x000000000019ab3c : je 0x19ab1a ; add byte ptr [rax], al ; mov al, 0x44 ; int1 ; call qword ptr [rbx]
0x000000000019b66c : je 0x19b629 ; int1 ; jmp qword ptr [rcx]
0x000000000019ed3c : je 0x19ed5c ; add dword ptr [rax], eax ; adc bl, dh ; jmp qword ptr [rcx]
0x000000000019eeac : je 0x19eeb1 ; hlt ; jmp rcx
0x00000000001a1f3c : je 0x1a1f8e ; add dword ptr [rax], eax ; push rax ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x00000000001a29ec : je 0x1a2a00 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2fdc : je 0x1a3015 ; cmc ; jmp qword ptr [rcx]
0x00000000001ac965 : je 0x1ac964 ; jmp qword ptr [rdx]
0x00000000001b0b7c : je 0x1b0b87 ; add byte ptr [rax], al ; syscall
0x0000000000001cd2 : je 0x1cfe ; ret
0x0000000000024a78 : je 0x24a83 ; ret
0x0000000000024ad1 : je 0x24ae0 ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x215a8
0x0000000000024eb7 : je 0x24e53 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000024f7f : je 0x24fae ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000259c0 : je 0x259ee ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x0000000000026551 : je 0x26580 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002681b : je 0x2684a ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call r14
0x0000000000026cb8 : je 0x26ce7 ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call r14
0x000000000002769c : je 0x276cb ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000282d7 : je 0x28306 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000028f47 : je 0x28f76 ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x0000000000029333 : je 0x29362 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000297fb : je 0x2982a ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000002a18b : je 0x2a1ba ; mov rdi, qword ptr [rsp + 0x40] ; call r14
0x000000000002a59d : je 0x2a5cc ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call r15
0x000000000002aa1e : je 0x2aa4d ; pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call r14
0x000000000002bc07 : je 0x2bc13 ; ret
0x000000000002bc02 : je 0x2bc18 ; cmp esi, 3 ; je 0x2bc18 ; ret
0x000000000002c42b : je 0x2c431 ; call rax
0x000000000002c5b8 : je 0x2c5be ; call rcx
0x000000000002d3fb : je 0x2d401 ; call rax
0x0000000000032e9e : je 0x32eae ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000346e8 : je 0x3479b ; add rdx, rcx ; jmp 0x34709
0x00000000000346e7 : je 0x3479c ; add rdx, rcx ; jmp 0x3470a
0x0000000000034b67 : je 0x34aeb ; ret
0x0000000000034b66 : je 0x34aec ; ret
0x000000000003520e : je 0x351f4 ; ret
0x000000000003684d : je 0x36843 ; ret
0x0000000000036847 : je 0x36861 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; je 0x36849 ; ret
0x00000000000369d7 : je 0x369e8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000037227 : je 0x37252 ; sbb byte ptr [rax + 1], cl ; ret
0x000000000003744f : je 0x3747c ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x0000000000038f00 : je 0x38f11 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x0000000000039c34 : je 0x39c0c ; mov eax, 0xffffffff ; ret
0x0000000000043775 : je 0x43783 ; pop rbx ; ret
0x000000000004503a : je 0x45066 ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000051bff : je 0x51c13 ; ret
0x000000000006e0a7 : je 0x6e0bb ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e177 : je 0x6e191 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e94f : je 0x6e8fc ; jmp 0x6e919
0x000000000006fb9b : je 0x6fbb9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070d88 : je 0x70dcb ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000072716 : je 0x72766 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000072715 : je 0x72767 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000072b7c : je 0x72b83 ; ret
0x0000000000072b96 : je 0x72ba3 ; pop rbx ; ret
0x00000000000730ea : je 0x73114 ; or al, 0xeb ; ret 0x5590
0x000000000007599e : je 0x759db ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000076ec9 : je 0x76ef4 ; cmp byte ptr [rax + 0x29], cl ; ret
0x000000000007787f : je 0x7782c ; jmp 0x77849
0x000000000007803c : je 0x7804f ; mov eax, 0xffffffff ; ret
0x000000000007841c : je 0x7842f ; mov eax, 0xffffffff ; ret
0x0000000000078814 : je 0x78828 ; add rsp, 0x38 ; ret
0x000000000007923f : je 0x7924b ; pop rbx ; ret
0x0000000000079500 : je 0x79537 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000007c275 : je 0x7c283 ; ret
0x000000000007e5a9 : je 0x7e5ae ; ret
0x000000000007e60d : je 0x7e612 ; ret
0x000000000007e648 : je 0x7e656 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000007ea5e : je 0x7ea64 ; call rax
0x000000000007eb04 : je 0x7ead7 ; call rax
0x000000000007f01f : je 0x7f067 ; mov qword ptr [rsi], rcx ; ret
0x000000000007f887 : je 0x7f88d ; call rax
0x0000000000083af2 : je 0x83b1f ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000085062 : je 0x84fef ; retf 0x4c89
0x0000000000085061 : je 0x84ff0 ; retf 0x4c89
0x000000000008549d : je 0x854d0 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000085710 : je 0x857ee ; call rax
0x000000000008583a : je 0x8590e ; call rax
0x00000000000859d0 : je 0x85a28 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000086608 : je 0x86613 ; ret
0x0000000000086706 : je 0x86758 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087518 : je 0x8753e ; movsx eax, dl ; ret
0x0000000000087612 : je 0x87626 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088586 : je 0x88544 ; ret
0x000000000008a004 : je 0x8a016 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a531 : je 0x8a55c ; cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000008a6a7 : je 0x8a692 ; cmp dil, 0x3d ; jne 0x8a675 ; pop rbx ; ret
0x000000000008e127 : je 0x8e123 ; ret
0x000000000008e15e : je 0x8e153 ; ret
0x000000000008e15a : je 0x8e157 ; cmp ecx, esi ; je 0x8e157 ; ret
0x000000000008e1af : je 0x8e193 ; ret
0x000000000009199c : je 0x919f3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000091c7a : je 0x91cd1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000091ffc : je 0x91fd8 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000096fa1 : je 0x96fb9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000097494 : je 0x9749f ; bsf eax, edx ; ret
0x000000000009753d : je 0x97556 ; bsf rax, rdx ; ret
0x000000000009770c : je 0x97736 ; bsf rax, rdx ; ret
0x000000000009ca09 : je 0x9ca5a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009e096 : je 0x9e0e7 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009ff7a : je 0x9ffcb ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a1443 : je 0xa1464 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000a1db5 : je 0xa1dc4 ; xor eax, eax ; ret
0x00000000000a1db0 : je 0xa1dd1 ; cmp eax, 2 ; je 0xa1dc9 ; xor eax, eax ; ret
0x00000000000a1dfd : je 0xa1de3 ; ret
0x00000000000a1e4a : je 0xa1e2b ; ret
0x00000000000a1f5f : je 0xa1f51 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2416 : je 0xa23d4 ; ret
0x00000000000a246f : je 0xa247b ; ret
0x00000000000a2e3e : je 0xa2e6d ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r14 ; call rbx
0x00000000000a30a6 : je 0xa30d5 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, r12 ; call rbx
0x00000000000a336e : je 0xa339d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, r12 ; call rbx
0x00000000000a34c8 : je 0xa34d5 ; test edx, edx ; jne 0xa34c7 ; ret
0x00000000000ab65a : je 0xab661 ; ret
0x00000000000ae61b : je 0xae630 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b1755 : je 0xb177f ; js 0xb1746 ; retf
0x00000000000b3166 : je 0xb31d6 ; lea rax, [rdi - 0x10] ; ret
0x00000000000b3619 : je 0xb3639 ; mov cl, dl ; and cl, 0xf ; je 0xb3649 ; ret
0x00000000000b3620 : je 0xb3642 ; ret
0x00000000000b3635 : je 0xb3656 ; add rax, 2 ; ret
0x00000000000b4139 : je 0xb4168 ; sub byte ptr [rax - 0x75], cl ; jl 0xb416d ; and al, ch ; retf 0xfffc
0x00000000000b426a : je 0xb4298 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000000bbea0 : je 0xbbecb ; or byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000bf7e3 : je 0xbf7f4 ; xor eax, eax ; ret
0x00000000000bf86c : je 0xbf8a2 ; call rax
0x00000000000bf8dc : je 0xbf912 ; call rax
0x00000000000bfb17 : je 0xbfb42 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000c0c49 : je 0xc0c69 ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000c16fb : je 0xc1701 ; add byte ptr [rax], al ; syscall
0x00000000000c6194 : je 0xc61f7 ; mov eax, 0x7f ; ret
0x00000000000c62a5 : je 0xc62e8 ; mov eax, 0x20 ; ret
0x00000000000c63d8 : je 0xc63c2 ; mov eax, 1 ; ret
0x00000000000c6406 : je 0xc63c4 ; cmp rax, 0x414a53 ; jne 0xc63e3 ; jmp 0xc63c4
0x00000000000cc02a : je 0xcc08d ; cmp al, 0x2e ; jne 0xcbfff ; jmp 0xcc040
0x00000000000ccb5e : je 0xccb83 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cd094 : je 0xcd0a4 ; xor eax, eax ; ret
0x00000000000cd309 : je 0xcd323 ; ret
0x00000000000cd5f7 : je 0xcd5b9 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000cd604 : je 0xcd5de ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce530 : je 0xce53b ; ret
0x00000000000ce52b : je 0xce548 ; cmp eax, 3 ; je 0xce540 ; ret
0x00000000000cedb8 : je 0xcedc3 ; ret
0x00000000000cee43 : je 0xcee63 ; ret
0x00000000000cefaa : je 0xcefb4 ; xor eax, eax ; ret
0x00000000000cefa6 : je 0xcf008 ; cmp al, 0x11 ; je 0xcefb8 ; xor eax, eax ; ret
0x00000000000d1742 : je 0xd17b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d18a8 : je 0xd1843 ; ret
0x00000000000d18e7 : je 0xd187d ; xor eax, eax ; pop rbx ; ret
0x00000000000d18e3 : je 0xd1881 ; test al, 1 ; je 0xd1881 ; xor eax, eax ; pop rbx ; ret
0x00000000000d19b2 : je 0xd1968 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d4f42 : je 0xd4f0e ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d60fe : je 0xd6128 ; jo 0xd6107 ; ret 0xc083
0x00000000000de215 : je 0xde21e ; pop rbx ; pop rbp ; ret
0x00000000000df2c7 : je 0xdf2d0 ; or byte ptr [rcx], bh ; retf 0x850f
0x00000000000e6cd5 : je 0xe6ce7 ; mov eax, 0x1c ; syscall
0x00000000000e6e2b : je 0xe6e81 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000e6ebd : je 0xe6ef4 ; xor edx, edx ; call rax
0x00000000000e8637 : je 0xe8662 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x00000000000e9f81 : je 0xe9f7f ; dec dword ptr [rcx - 0x73] ; add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000000ea584 : je 0xea5c0 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000ebf70 : je 0xebf8d ; neg eax ; pop rbx ; ret
0x00000000000ec190 : je 0xec1ad ; neg eax ; pop rbx ; ret
0x00000000000ec2e6 : je 0xec319 ; mov eax, 0x118 ; syscall
0x00000000000ec543 : je 0xec567 ; mov eax, 0x48 ; syscall
0x00000000000ec669 : je 0xec687 ; mov eax, 0x101 ; syscall
0x00000000000ed99e : je 0xed9a5 ; ret
0x00000000000edf37 : je 0xedf61 ; or al, 0x89 ; ret
0x00000000000ef343 : je 0xef37f ; mov eax, 0x105 ; syscall
0x00000000000ef483 : je 0xef48e ; mov qword ptr [rax], rdx ; ret
0x00000000000ef55a : je 0xef54f ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000f0928 : je 0xf0939 ; mov dword ptr [rip + 0x2c4a18], edi ; ret
0x00000000000f13fe : je 0xf1432 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000f1889 : je 0xf1860 ; mov eax, 0xffffffff ; jmp 0xf1865
0x00000000000f198f : je 0xf199b ; ret
0x00000000000f2d87 : je 0xf2dd2 ; call rax
0x00000000000f2f13 : je 0xf2fc6 ; call rax
0x00000000000f59d5 : je 0xf59e8 ; mov rdi, rbp ; call r12
0x00000000000f5b76 : je 0xf5b7b ; ret
0x00000000000f5c93 : je 0xf5c8a ; ret
0x00000000000f6236 : je 0xf626f ; mov eax, 0x149 ; syscall
0x00000000000f8599 : je 0xf8617 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000f85d8 : je 0xf8618 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000fb3ec : je 0xfb408 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000fe4a5 : je 0xfe4b4 ; xor eax, eax ; ret
0x00000000000fe647 : je 0xfe672 ; adc byte ptr [rcx - 0x77], al ; ret
0x00000000000ff027 : je 0xff052 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000010943d : jg 0x109446 ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000110844 : jg 0x11083b ; ret
0x0000000000113f0e : jg 0x113f26 ; add dh, byte ptr [rbp + rax - 0xd] ; ret
0x0000000000114843 : jg 0x11484a ; ret
0x000000000011d29d : jg 0x11d272 ; sub dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x000000000011d5a5 : jg 0x11d577 ; sub dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x000000000011ea02 : jg 0x11ea4d ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11ea19 ; ret
0x0000000000123742 : jg 0x12378d ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x123759 ; ret
0x00000000001340f9 : jg 0x13414c ; ret
0x0000000000134140 : jg 0x134190 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000134145 : jg 0x134198 ; retf
0x000000000013417f : jg 0x1341ca ; ret
0x00000000001341bf : jg 0x13420a ; retf
0x00000000001342f9 : jg 0x13434c ; ret 0x894c
0x0000000000134340 : jg 0x134390 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000134345 : jg 0x134398 ; retf 0x894c
0x000000000013437f : jg 0x1343ca ; ret 0x894c
0x00000000001343bb : jg 0x134406 ; retf 0x894c
0x0000000000136ac9 : jg 0x136b1c ; ret
0x0000000000136b10 : jg 0x136b60 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000136b15 : jg 0x136b68 ; retf
0x0000000000136b4f : jg 0x136b9a ; ret
0x0000000000136b8f : jg 0x136bda ; retf
0x0000000000136cc9 : jg 0x136d1c ; ret 0x894c
0x0000000000136d10 : jg 0x136d60 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000136d15 : jg 0x136d68 ; retf 0x894c
0x0000000000136d4f : jg 0x136d9a ; ret 0x894c
0x0000000000136d8b : jg 0x136dd6 ; retf 0x894c
0x00000000001390b8 : jg 0x139109 ; loope 0x1390b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013912f : jg 0x13917a ; ret 0xff2
0x0000000000139148 : jg 0x139199 ; loop 0x139147 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001391bf : jg 0x13920a ; ret
0x00000000001391d8 : jg 0x139229 ; jrcxz 0x1391d7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139268 : jg 0x1392b9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001392e8 : jg 0x139339 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139368 : jg 0x1393b9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001393e8 : jg 0x139439 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139545 : jg 0x139595 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000013954f : jg 0x13959a ; retf 0xff2
0x00000000001395c5 : jg 0x139615 ; mov ebx, 0x46f00ff2 ; retf
0x00000000001395cf : jg 0x13961a ; retf
0x0000000000139668 : jg 0x1396b9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001396e8 : jg 0x139739 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139778 : jg 0x1397c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001397f8 : jg 0x139849 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013986c : jg 0x139877 ; ret
0x00000000001398c6 : jg 0x1398d9 ; ret
0x00000000001398c1 : jg 0x139911 ; psllq mm1, qword ptr [rdi] ; jg 0x1398de ; ret
0x0000000000139936 : jg 0x139949 ; ret
0x00000000001399a6 : jg 0x1399b9 ; ret
0x00000000001399a1 : jg 0x1399f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000139a16 : jg 0x139a29 ; ret
0x0000000000139a11 : jg 0x139a61 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139a86 : jg 0x139a99 ; ret
0x0000000000139a81 : jg 0x139ad1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139af6 : jg 0x139b09 ; ret
0x0000000000139af1 : jg 0x139b41 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139b66 : jg 0x139b79 ; ret
0x0000000000139b61 : jg 0x139bb1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139bd6 : jg 0x139be9 ; ret
0x0000000000139bd1 : jg 0x139c21 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139c46 : jg 0x139c59 ; ret
0x0000000000139cb6 : jg 0x139cc9 ; ret
0x0000000000139d26 : jg 0x139d39 ; ret
0x0000000000139d21 : jg 0x139d71 ; add eax, 0xf7f0ff3 ; ret
0x0000000000139d96 : jg 0x139da9 ; ret
0x0000000000139d91 : jg 0x139de1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139e06 : jg 0x139e19 ; ret
0x0000000000139e01 : jg 0x139e51 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139e76 : jg 0x139e89 ; ret
0x0000000000139e71 : jg 0x139ec1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139ee6 : jg 0x139ef9 ; ret
0x0000000000139ee1 : jg 0x139f31 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000013bbd8 : jg 0x13bc29 ; loope 0x13bbd7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bc4f : jg 0x13bc9a ; ret 0xff2
0x000000000013bc68 : jg 0x13bcb9 ; loop 0x13bc67 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bcdf : jg 0x13bd2a ; ret
0x000000000013bcf8 : jg 0x13bd49 ; jrcxz 0x13bcf7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bd88 : jg 0x13bdd9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013be08 : jg 0x13be59 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013be88 : jg 0x13bed9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bf08 : jg 0x13bf59 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013c065 : jg 0x13c0b5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000013c06f : jg 0x13c0ba ; retf 0xff2
0x000000000013c0e5 : jg 0x13c135 ; mov ebx, 0x46f00ff2 ; retf
0x000000000013c0ef : jg 0x13c13a ; retf
0x000000000013c188 : jg 0x13c1d9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013c208 : jg 0x13c259 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013c298 : jg 0x13c2e9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013c318 : jg 0x13c369 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013c38c : jg 0x13c397 ; ret
0x000000000013c3e6 : jg 0x13c3f9 ; ret
0x000000000013c3e1 : jg 0x13c431 ; psllq mm1, qword ptr [rdi] ; jg 0x13c3fe ; ret
0x000000000013c456 : jg 0x13c469 ; ret
0x000000000013c4c6 : jg 0x13c4d9 ; ret
0x000000000013c4c1 : jg 0x13c511 ; or eax, 0xf7f0ff3 ; ret
0x000000000013c536 : jg 0x13c549 ; ret
0x000000000013c531 : jg 0x13c581 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c5a6 : jg 0x13c5b9 ; ret
0x000000000013c5a1 : jg 0x13c5f1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c616 : jg 0x13c629 ; ret
0x000000000013c611 : jg 0x13c661 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c686 : jg 0x13c699 ; ret
0x000000000013c681 : jg 0x13c6d1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c6f6 : jg 0x13c709 ; ret
0x000000000013c6f1 : jg 0x13c741 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c766 : jg 0x13c779 ; ret
0x000000000013c7d6 : jg 0x13c7e9 ; ret
0x000000000013c846 : jg 0x13c859 ; ret
0x000000000013c841 : jg 0x13c891 ; add eax, 0xf7f0ff3 ; ret
0x000000000013c8b6 : jg 0x13c8c9 ; ret
0x000000000013c8b1 : jg 0x13c901 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c926 : jg 0x13c939 ; ret
0x000000000013c921 : jg 0x13c971 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000013c996 : jg 0x13c9a9 ; ret
0x000000000013c991 : jg 0x13c9e1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000013ca06 : jg 0x13ca19 ; ret
0x000000000013ca01 : jg 0x13ca51 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000154ef2 : jg 0x154f0e ; pextrw edi, mm5, 0x74 ; retf
0x00000000001555cd : jg 0x1555e9 ; pextrw edi, mm5, 0x74 ; retf
0x0000000000155c92 : jg 0x155cae ; pextrw edi, mm5, 0x74 ; retf
0x000000000015608d : jg 0x1560a9 ; pextrw edi, mm5, 0x74 ; retf
0x0000000000156789 : jg 0x1567f0 ; vzeroupper ; ret
0x0000000000156982 : jg 0x15699e ; pextrw edi, mm5, 0x74 ; retf
0x0000000000156d9d : jg 0x156db9 ; pextrw edi, mm5, 0x74 ; retf
0x00000000001576ca : jg 0x1576db ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015785b : jg 0x157885 ; vzeroupper ; ret
0x0000000000157902 : jg 0x15790c ; vzeroupper ; ret
0x000000000015798e : jg 0x1579b8 ; vzeroupper ; ret
0x0000000000157a1e : jg 0x157a28 ; vzeroupper ; ret
0x0000000000157a94 : jg 0x157aa2 ; vzeroupper ; ret
0x0000000000157af4 : jg 0x157b02 ; vzeroupper ; ret
0x0000000000157bb3 : jg 0x157bc1 ; vzeroupper ; ret
0x000000000015ba54 : jg 0x15ba65 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000015ba68 : jg 0x15ba79 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000015beda : jg 0x15bed6 ; ret
0x000000000015c147 : jg 0x15c157 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000015c13d : jg 0x15c15d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000015c442 : jg 0x15c453 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015c626 : jg 0x15c650 ; vzeroupper ; ret
0x000000000015c625 : jg 0x15c651 ; vzeroupper ; ret
0x000000000015c6ec : jg 0x15c6f6 ; vzeroupper ; ret
0x000000000015c6eb : jg 0x15c6f7 ; vzeroupper ; ret
0x000000000015c7b1 : jg 0x15c7db ; vzeroupper ; ret
0x000000000015c7b0 : jg 0x15c7dc ; vzeroupper ; ret
0x000000000015c876 : jg 0x15c880 ; vzeroupper ; ret
0x000000000015c875 : jg 0x15c881 ; vzeroupper ; ret
0x000000000015c8f5 : jg 0x15c903 ; vzeroupper ; ret
0x000000000015c8f4 : jg 0x15c904 ; vzeroupper ; ret
0x000000000015c961 : jg 0x15c96f ; vzeroupper ; ret
0x000000000015c960 : jg 0x15c970 ; vzeroupper ; ret
0x000000000015ca4b : jg 0x15ca59 ; vzeroupper ; ret
0x000000000015ca59 : jg 0x15ca67 ; vzeroupper ; ret
0x000000000015eb25 : jg 0x15eb34 ; neg eax ; ret
0x000000000015f1a4 : jg 0x15f1ab ; add byte ptr [rax + 0x21], cl ; ret 0x50e9
0x00000000001628c8 : jg 0x1628d2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000162fa1 : jg 0x162fa8 ; add byte ptr [rax - 0x77], cl ; ret 0x3775
0x0000000000178d6d : jg 0x178d6c ; jmp qword ptr [rax]
0x000000000017ac18 : jg 0x17abb6 ; cmc ; call rsp
0x0000000000187ab5 : jg 0x187abb ; add ah, bh ; retf
0x0000000000187ab4 : jg 0x187abc ; add ah, bh ; retf
0x0000000000187acd : jg 0x187ad5 ; add byte ptr [rsp + rdx*8 - 0x16], bl ; call rsp
0x0000000000196575 : jg 0x196567 ; jmp qword ptr [rbx]
0x0000000000196589 : jg 0x19657b ; jmp qword ptr [rbx]
0x000000000019659d : jg 0x19658f ; jmp qword ptr [rbx]
0x000000000019659c : jg 0x196590 ; jmp qword ptr [rbx]
0x00000000001965b1 : jg 0x1965a3 ; jmp qword ptr [rbx]
0x0000000000199695 : jg 0x199689 ; call qword ptr [rdx]
0x00000000001a54c9 : jg 0x1a54d2 ; add byte ptr [rcx + rbp*8 - 0xb], al ; call qword ptr [rbx]
0x00000000001a54dd : jg 0x1a54e6 ; add byte ptr [rax - 0x17], dl ; cmc ; call qword ptr [rsi]
0x00000000001a550d : jg 0x1a5516 ; add byte ptr [rax - 0x17], dh ; cmc ; call qword ptr [rbx]
0x00000000001a550c : jg 0x1a5517 ; add byte ptr [rax - 0x17], dh ; cmc ; call qword ptr [rbx]
0x00000000001a5521 : jg 0x1a552a ; add byte ptr [rcx + rbp*8 - 0xb], bh ; call qword ptr [rbx]
0x0000000000001b0c : jg 0x1b69 ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x0000000000034176 : jg 0x341a4 ; call 0xf0ba4
0x0000000000034d0b : jg 0x34d5d ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000003520c : jg 0x35213 ; je 0x351f6 ; ret
0x00000000000354c5 : jg 0x35517 ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000036136 : jg 0x3613c ; add byte ptr [rax], al ; syscall
0x0000000000039462 : jg 0x394ab ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000039883 : jg 0x39897 ; cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000003c2b : jg 0x3c98 ; xchg eax, ebp ; retf 0x10bf
0x0000000000042f53 : jg 0x42f67 ; syscall
0x0000000000047b61 : jg 0x47b6e ; ret 0xf089
0x000000000004ed21 : jg 0x4ed2b ; add byte ptr [rcx - 0x7af0dbfc], cl ; ret
0x000000000006133a : jg 0x61367 ; retf 0xc239
0x000000000006201f : jg 0x6204e ; fidivr dword ptr [rcx] ; ret 0x830f
0x0000000000062acf : jg 0x62ae8 ; test byte ptr [rax - 0x7c000018], al ; ret
0x0000000000068622 : jg 0x6863b ; test ch, bl ; call 0xffffffffc38a8632
0x0000000000069a55 : jg 0x69a67 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000007c272 : jg 0x7c2b2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000007e64c : jg 0x7e658 ; jmp qword ptr [rax]
0x0000000000086a0a : jg 0x86a59 ; mov rsi, rbp ; call rax
0x000000000009c7d6 : jg 0x9c7e1 ; ret
0x000000000009c7e6 : jg 0x9c7f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009c7fa : jg 0x9c809 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009c819 : jg 0x9c827 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c829 : jg 0x9c837 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009c839 : jg 0x9c84a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009c85a : jg 0x9c869 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009c87a : jg 0x9c889 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009c89a : jg 0x9c8a9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009c8ba : jg 0x9c8cc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009c8fd : jg 0x9c90f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009c91d : jg 0x9c92f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009c93b : jg 0x9c94b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009c95b : jg 0x9c96b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009c97b : jg 0x9c98b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009c99b : jg 0x9c9ab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009cf28 : jg 0x9cf33 ; jne 0x9d7e8 ; ret
0x000000000009cf4c : jg 0x9cf58 ; jne 0x9d7e8 ; ret
0x000000000009cf6f : jg 0x9cf7c ; jne 0x9d7e8 ; ret
0x000000000009cf8a : jg 0x9cf98 ; jne 0x9d7e8 ; ret
0x000000000009cfad : jg 0x9cfbc ; jne 0x9d7e8 ; ret
0x000000000009cfd2 : jg 0x9cfe2 ; jne 0x9d7e8 ; ret
0x000000000009cff0 : jg 0x9d001 ; jne 0x9d7e8 ; ret
0x000000000009d00c : jg 0x9d01e ; jne 0x9d7e8 ; ret
0x000000000009d02f : jg 0x9d042 ; jne 0x9d7e8 ; ret
0x000000000009d054 : jg 0x9d068 ; jne 0x9d7e8 ; ret
0x000000000009d072 : jg 0x9d087 ; jne 0x9d7e8 ; ret
0x000000000009d092 : jg 0x9d0a8 ; jne 0x9d7e8 ; ret
0x000000000009d0b4 : jg 0x9d0cb ; jne 0x9d7e8 ; ret
0x000000000009d0d4 : jg 0x9d0ec ; jne 0x9d7e8 ; ret
0x000000000009d0f4 : jg 0x9d10d ; jne 0x9d7e8 ; ret
0x000000000009d10e : jg 0x9d128 ; jne 0x9d7e8 ; ret
0x000000000009d131 : jg 0x9d14c ; jne 0x9d7e8 ; ret
0x000000000009d156 : jg 0x9d172 ; jne 0x9d7e8 ; ret
0x000000000009d174 : jg 0x9d191 ; jne 0x9d7e8 ; ret
0x000000000009d194 : jg 0x9d1b2 ; jne 0x9d7e8 ; ret
0x000000000009d1b7 : jg 0x9d1d6 ; jne 0x9d7e8 ; ret
0x000000000009d1d6 : jg 0x9d1f6 ; jne 0x9d7e8 ; ret
0x000000000009d1f6 : jg 0x9d217 ; jne 0x9d7e8 ; ret
0x000000000009d216 : jg 0x9d238 ; jne 0x9d7e8 ; ret
0x000000000009d239 : jg 0x9d25c ; jne 0x9d7e8 ; ret
0x000000000009d26e : jg 0x9d292 ; jne 0x9d7e8 ; ret
0x000000000009d29c : jg 0x9d2c1 ; jne 0x9d7e8 ; ret
0x000000000009d2cc : jg 0x9d2f2 ; jne 0x9d7e8 ; ret
0x000000000009d2f8 : jg 0x9d31f ; jne 0x9d7e8 ; ret
0x000000000009d328 : jg 0x9d350 ; jne 0x9d7e8 ; ret
0x000000000009d358 : jg 0x9d381 ; jne 0x9d7e8 ; ret
0x000000000009d388 : jg 0x9d3b2 ; jne 0x9d7e8 ; ret
0x000000000009d4a6 : jg 0x9d4b1 ; ret
0x000000000009d4b9 : jg 0x9d4c7 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009d4ca : jg 0x9d4d9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009d4e9 : jg 0x9d4f7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d4f9 : jg 0x9d507 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009d50c : jg 0x9d51d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009d52a : jg 0x9d539 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009d54a : jg 0x9d559 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009d56a : jg 0x9d579 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009d58d : jg 0x9d59f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009d5cd : jg 0x9d5df ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d5ed : jg 0x9d5ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009d60b : jg 0x9d61b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009d62b : jg 0x9d63b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009d64b : jg 0x9d65b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009d66b : jg 0x9d67b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009d7a2 : jg 0x9d7ad ; ret
0x000000000009d8d6 : jg 0x9d90a ; ret
0x000000000009de46 : jg 0x9de55 ; lea rax, [rdi + 0xf] ; ret
0x000000000009de56 : jg 0x9de68 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000009de89 : jg 0x9de9b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000009dea9 : jg 0x9debb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009dfcf : jg 0x9e02f ; or eax, 0x1c478d48 ; ret
0x000000000009e5db : jg 0x9e5e6 ; jne 0x9f008 ; ret
0x000000000009e600 : jg 0x9e60c ; jne 0x9f008 ; ret
0x000000000009e623 : jg 0x9e630 ; jne 0x9f008 ; ret
0x000000000009e63e : jg 0x9e64c ; jne 0x9f008 ; ret
0x000000000009e661 : jg 0x9e670 ; jne 0x9f008 ; ret
0x000000000009e686 : jg 0x9e696 ; jne 0x9f008 ; ret
0x000000000009e6a4 : jg 0x9e6b5 ; jne 0x9f008 ; ret
0x000000000009e6c0 : jg 0x9e6d2 ; jne 0x9f008 ; ret
0x000000000009e6e3 : jg 0x9e6f6 ; jne 0x9f008 ; ret
0x000000000009e708 : jg 0x9e71c ; jne 0x9f008 ; ret
0x000000000009e736 : jg 0x9e74b ; jne 0x9f008 ; ret
0x000000000009e756 : jg 0x9e76c ; jne 0x9f008 ; ret
0x000000000009e778 : jg 0x9e78f ; jne 0x9f008 ; ret
0x000000000009e7a8 : jg 0x9e7c0 ; jne 0x9f008 ; ret
0x000000000009e7d8 : jg 0x9e7f1 ; jne 0x9f008 ; ret
0x000000000009e802 : jg 0x9e81c ; jne 0x9f008 ; ret
0x000000000009e825 : jg 0x9e840 ; jne 0x9f008 ; ret
0x000000000009e84a : jg 0x9e866 ; jne 0x9f008 ; ret
0x000000000009e878 : jg 0x9e895 ; jne 0x9f008 ; ret
0x000000000009e8a8 : jg 0x9e8c6 ; jne 0x9f008 ; ret
0x000000000009e8db : jg 0x9e8fa ; jne 0x9f008 ; ret
0x000000000009e90a : jg 0x9e92a ; jne 0x9f008 ; ret
0x000000000009e93a : jg 0x9e95b ; jne 0x9f008 ; ret
0x000000000009e96a : jg 0x9e98c ; jne 0x9f008 ; ret
0x000000000009e99d : jg 0x9e9c0 ; jne 0x9f008 ; ret
0x000000000009e9d2 : jg 0x9e9f6 ; jne 0x9f008 ; ret
0x000000000009ea00 : jg 0x9ea25 ; jne 0x9f008 ; ret
0x000000000009ea30 : jg 0x9ea56 ; jne 0x9f008 ; ret
0x000000000009ea5c : jg 0x9ea83 ; jne 0x9f008 ; ret
0x000000000009ea8c : jg 0x9eab4 ; jne 0x9f008 ; ret
0x000000000009eabc : jg 0x9eae5 ; jne 0x9f008 ; ret
0x000000000009eaec : jg 0x9eb16 ; jne 0x9f008 ; ret
0x000000000009ec96 : jg 0x9eca5 ; lea rax, [rdi + 0x10] ; ret
0x000000000009eca9 : jg 0x9ecbb ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x000000000009ece9 : jg 0x9ecfb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009ed09 : jg 0x9ed1b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x000000000009ee2f : jg 0x9ee8f ; or eax, 0x1d478d48 ; ret
0x000000000009efc2 : jg 0x9efcd ; ret
0x000000000009f0f6 : jg 0x9f12e ; lea rax, [rdi + 0x40] ; ret
0x000000000009f0f5 : jg 0x9f17d ; xor byte ptr [rax - 0x73], cl ; ret
0x000000000009fa86 : jg 0x9fa91 ; ret
0x000000000009fa96 : jg 0x9faa4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009faaa : jg 0x9fab9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009fac9 : jg 0x9fad7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009fad9 : jg 0x9fae7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009fae9 : jg 0x9fafa ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009fb0a : jg 0x9fb19 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009fb2a : jg 0x9fb39 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009fb4a : jg 0x9fb59 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009fb6a : jg 0x9fb7c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009fbad : jg 0x9fbbf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009fbcd : jg 0x9fbdf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009fbeb : jg 0x9fbfb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009fc0b : jg 0x9fc1b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009fc2b : jg 0x9fc3b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009fc4b : jg 0x9fc5b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a0556 : jg 0xa0561 ; ret
0x00000000000a0566 : jg 0xa0574 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a057a : jg 0xa0589 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0599 : jg 0xa05a7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a05a9 : jg 0xa05b7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a05b9 : jg 0xa05ca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a05da : jg 0xa05e9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a05fa : jg 0xa0609 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a061a : jg 0xa0629 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a063a : jg 0xa064c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a067d : jg 0xa068f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a069d : jg 0xa06af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a06bb : jg 0xa06cb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a06db : jg 0xa06eb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a06fb : jg 0xa070b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a071b : jg 0xa072b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a08c6 : jg 0xa08d6 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a0a9f : jg 0xa0b00 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0abf : jg 0xa0b20 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a0b36 : jg 0xa0b6f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a0b35 : jg 0xa0bbe ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a1584 : jg 0xa15bc ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000a1652 : jg 0xa168a ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000a16e0 : jg 0xa16eb ; ret
0x00000000000a175c : jg 0xa1767 ; ret
0x00000000000a17d3 : jg 0xa181f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000a1840 : jg 0xa187d ; ret 0x2b77
0x00000000000a195b : jg 0xa1928 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a19b7 : jg 0xa19b5 ; int1 ; mov eax, eax ; ret
0x00000000000a26db : jg 0xa266c ; clc ; ja 0xa26ee ; ret
0x00000000000b2c25 : jg 0xb2c2d ; neg eax ; ret
0x00000000000b571d : jg 0xb5752 ; xor byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000c6197 : jg 0xc619d ; add byte ptr [rax], al ; ret
0x00000000000c634b : jg 0xc6355 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000d177f : jg 0xd17ee ; add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x00000000000e1b20 : jg 0xe1b34 ; ret 0x8589
0x00000000000f0153 : jg 0xf015a ; ret
0x000000000010ea75 : jge 0x10ea2e ; mov eax, 3 ; syscall
0x000000000011e7df : jge 0x11e7f3 ; call rax
0x000000000012354f : jge 0x123563 ; call rax
0x0000000000123b88 : jge 0x123b9c ; call rax
0x00000000001584bd : jge 0x1584fc ; ret 0xe2c4
0x000000000015896d : jge 0x1589ac ; ret 0xe2c4
0x000000000017446a : jge 0x17444b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000175db4 : jge 0x175e25 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001890e1 : jge 0x1890d4 ; jmp qword ptr [rax]
0x00000000001963a9 : jge 0x19639b ; jmp qword ptr [rbx]
0x00000000001963bd : jge 0x1963af ; jmp qword ptr [rbx]
0x00000000001963d1 : jge 0x1963c3 ; jmp qword ptr [rbx]
0x00000000001963e5 : jge 0x1963d7 ; jmp qword ptr [rbx]
0x00000000001a5331 : jge 0x1a533a ; add ah, ch ; jrcxz 0x1a5332 ; call qword ptr [rdi]
0x0000000000037666 : jge 0x3766f ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000004812b : jge 0x48132 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x0000000000062075 : jge 0x620ac ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000879ef : jge 0x879f0 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000089cdf : jge 0x89cbb ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000a1ebf : jge 0xa1ed7 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000aeda7 : jge 0xaedb1 ; lea r9, [rsp + 0x30] ; call r12
0x00000000000af22b : jge 0xaf232 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000bfcc3 : jge 0xbfca6 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f21c7 : jge 0xf2192 ; mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x00000000000f6391 : jge 0xf6397 ; add byte ptr [rax], al ; syscall
0x00000000001027fa : jl 0x1027d4 ; clc ; add byte ptr [rax + rbx - 0x37], dh ; ret
0x00000000001070a5 : jl 0x1070cf ; xor al, ch ; retf
0x00000000001139ae : jl 0x1139d8 ; or al, ch ; ret 0xf0dc
0x00000000001157c3 : jl 0x1157f1 ; adc byte ptr [rax + 0x81], bh ; syscall
0x0000000000116342 : jl 0x116371 ; or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x00000000001195fb : jl 0x119628 ; or byte ptr [rax - 0x75], cl ; or al, 0x24 ; call rcx
0x00000000001196bd : jl 0x1196ea ; or byte ptr [rax - 0x75], cl ; or al, 0x24 ; call rcx
0x000000000011efc0 : jl 0x11efeb ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000128d10 : jl 0x128c9f ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000001562b5 : jl 0x1562d2 ; and ecx, ebp ; ret
0x0000000000156400 : jl 0x15640b ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000015b8fb : jl 0x15b904 ; neg eax ; ret
0x000000000015b9d4 : jl 0x15ba23 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000015ba10 : jl 0x15ba5f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000015bc0e : jl 0x15bc5d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000015bd75 : jl 0x15bdc4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000015bed7 : jl 0x15bf26 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000015c0fc : jl 0x15c14b ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c11d : jl 0x15c16c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c130 : jl 0x15c17f ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c205 : jl 0x15c254 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000015c25d : jl 0x15c2ac ; adc dword ptr [rsi + 3], edx ; ret
0x000000000015c2fa : jl 0x15c349 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000015c510 : jl 0x15c52f ; cld ; vzeroupper ; ret
0x0000000000175fb2 : jl 0x176011 ; leave ; retf
0x000000000017a558 : jl 0x17a524 ; hlt ; call rsp
0x000000000018643d : jl 0x186441 ; inc dword ptr [rax + 0x7e] ; cld ; jmp qword ptr [rax]
0x0000000000188900 : jl 0x1888c7 ; out dx, al ; jmp rax
0x0000000000188ca0 : jl 0x188cd8 ; out dx, eax ; call rax
0x0000000000189218 : jl 0x1891ee ; out dx, eax ; jmp rax
0x0000000000189758 : jl 0x18975f ; int1 ; jmp qword ptr [rax]
0x0000000000189e00 : jl 0x189d89 ; call rsp
0x0000000000189f40 : jl 0x189eed ; call qword ptr [rax]
0x000000000018a244 : jl 0x18a2aa ; add dword ptr [rax], eax ; sub al, 0x5d ; hlt ; call qword ptr [rax]
0x000000000018a478 : jl 0x18a49c ; cmc ; jmp qword ptr [rax]
0x000000000018a838 : jl 0x18a83a ; cmc ; call qword ptr [rax]
0x000000000018ae21 : jl 0x18ae1b ; call qword ptr [rax]
0x000000000018ae20 : jl 0x18ae1c ; call qword ptr [rax]
0x000000000018b124 : jl 0x18b0de ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret 0xfff6
0x000000000018b4e8 : jl 0x18b4f1 ; idiv edi ; pushfq ; ret 1
0x000000000018b540 : jl 0x18b550 ; idiv edi ; cwde ; ret
0x000000000018c030 : jl 0x18bfcb ; clc ; call rsp
0x000000000018c358 : jl 0x18c366 ; stc ; call rsp
0x000000000018c458 : jl 0x18c485 ; stc ; call rax
0x000000000018c598 : jl 0x18c5e6 ; stc ; jmp rax
0x000000000018c8d8 : jl 0x18c88c ; stc ; jmp rax
0x000000000018cf60 : jl 0x18cfb4 ; cli ; jmp rsp
0x000000000018d0e9 : jl 0x18d0e7 ; call rsp
0x000000000018d1f8 : jl 0x18d25f ; cld ; jmp rax
0x000000000018d2e8 : jl 0x18d2ed ; std ; call rax
0x000000000018d3bc : jl 0x18d3e3 ; add dword ptr [rax], eax ; pop rsp ; std ; jmp qword ptr [rax]
0x000000000018d508 : jl 0x18d4cf ; std ; jmp rax
0x0000000000190444 : jl 0x19047b ; add byte ptr [rax], al ; clc ; xchg edx, ebp ; call qword ptr [rcx]
0x0000000000194dd4 : jl 0x194e08 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196444 : jl 0x1963db ; add byte ptr [rax], al ; js 0x1964be ; stc ; jmp qword ptr [rbx]
0x000000000019ad44 : jl 0x19ad24 ; add byte ptr [rax], al ; fdiv dword ptr [rdi] ; cld ; jmp qword ptr [rbx]
0x000000000019b044 : jl 0x19afd5 ; int1 ; call qword ptr [rax]
0x000000000019b174 : jl 0x19b10c ; int1 ; jmp qword ptr [rax]
0x000000000019b1e4 : jl 0x19b17d ; int1 ; call rcx
0x000000000019b694 : jl 0x19b6b6 ; stc ; jmp qword ptr [rbx]
0x000000000019ec64 : jl 0x19ec5b ; call qword ptr [rbx]
0x00000000001a2444 : jl 0x1a249b ; add dword ptr [rax], eax ; call 0x131a1956
0x00000000001a3244 : jl 0x1a32a9 ; add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a32d4 : jl 0x1a3311 ; cmc ; jmp qword ptr [rcx]
0x00000000001a4475 : jl 0x1a446e ; call rbx
0x00000000001a5524 : jl 0x1a5512 ; cmc ; call qword ptr [rbx]
0x00000000001a5a44 : jl 0x1a59d1 ; add dword ptr [rax], eax ; cmp ch, dh ; cmc ; call qword ptr [rdi]
0x00000000001ab144 : jl 0x1ab128 ; add dword ptr [rax], eax ; or byte ptr [rcx - 9], bh ; jmp qword ptr [rbx]
0x00000000001ae1f4 : jl 0x1ae206 ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x0000000000024d2e : jl 0x24d5c ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000024f84 : jl 0x24fae ; call r14
0x0000000000025243 : jl 0x25271 ; pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002557b : jl 0x255a5 ; pop rax ; call r14
0x000000000002582f : jl 0x2585d ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000259c5 : jl 0x259ee ; call rbx
0x0000000000025d2b : jl 0x25d59 ; pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026077 : jl 0x260a1 ; pop rax ; call r14
0x0000000000002683 : jl 0x2615 ; loop 0x2661 ; ret 0x943d
0x0000000000026337 : jl 0x26365 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000026556 : jl 0x26580 ; call r14
0x0000000000026820 : jl 0x2684a ; push rax ; call r14
0x0000000000026cbd : jl 0x26ce7 ; push rax ; call r14
0x000000000002727f : jl 0x272ad ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000027e3f : jl 0x27e6d ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000282dc : jl 0x28306 ; call r15
0x0000000000028bd6 : jl 0x28c04 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000028f4c : jl 0x28f76 ; call r14
0x0000000000029338 : jl 0x29362 ; call r15
0x0000000000029800 : jl 0x2982a ; call r14
0x0000000000029e15 : jl 0x29e43 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002a190 : jl 0x2a1ba ; call r14
0x000000000002a5a2 : jl 0x2a5cc ; push rax ; call r15
0x000000000002aa23 : jl 0x2aa4d ; push rax ; call r14
0x0000000000002e6b : jl 0x2e61 ; clc ; ret
0x000000000002e9ad : jl 0x2e9d7 ; or al, ch ; ret
0x0000000000032df6 : jl 0x32e07 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000003382d : jl 0x33858 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000037060 : jl 0x3708d ; or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x00000000000373d6 : jl 0x37401 ; and byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000046343 : jl 0x4636e ; xor byte ptr [rax - 0x77], cl ; retf
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004e439 : jl 0x4e464 ; adc byte ptr [rbp + 0x29], cl ; retf 0xff83
0x00000000000665de : jl 0x66609 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000006fa75 : jl 0x6fa00 ; sub al, ch ; xchg eax, ebx ; retf 7
0x000000000006fb27 : jl 0x6fb65 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000801f2 : jl 0x8022f ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000080272 : jl 0x802af ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000091f6a : jl 0x91fd5 ; add rax, rdi ; ret
0x0000000000091f7a : jl 0x91fd7 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000091f9a : jl 0x91fd7 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000091fba : jl 0x91fd7 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b413e : jl 0xb4168 ; and al, ch ; retf 0xfffc
0x00000000000b447e : jl 0xb44a9 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000c09eb : jl 0xc0a19 ; or byte ptr [rax + 0xca], bh ; syscall
0x00000000000c1364 : jl 0xc1392 ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000c5ce1 : jl 0xc5ce7 ; add byte ptr [rax], al ; syscall
0x00000000000c7282 : jl 0xc7267 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000ce46e : jl 0xce4a8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cef90 : jl 0xcef83 ; ret
0x00000000000cf560 : jl 0xcf58f ; or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000d2260 : jl 0xd227f ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000d4d63 : jl 0xd4d8e ; sbb byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000000d888f : jl 0xd88ba ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d997d : jl 0xd99a7 ; or byte ptr [rcx], ch ; retf 0x3941
0x00000000000db911 : jl 0xdb93f ; cmp byte ptr [rax + 0xca], bh ; syscall
0x00000000000dc542 : jl 0xdc527 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000e7ead : jl 0xe7edb ; or byte ptr [rax + 0x48], bh ; syscall
0x00000000000e88ad : jl 0xe88d7 ; sub al, ch ; ret
0x00000000000f201a : jl 0xf2048 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000f5b74 : jl 0xf5b8d ; je 0xf5b7d ; ret
0x000000000011f10c : jle 0x11f129 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000122678 : jle 0x122690 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012607e : jle 0x1260bc ; call 0x122ab4
0x000000000014f881 : jle 0x14f8bd ; movsxd rax, ecx ; ret
0x0000000000174462 : jle 0x1743fb ; xlatb ; retf 0xa1eb
0x0000000000176025 : jle 0x176060 ; pop rsp ; sbb ebp, ebx ; retf
0x000000000017a1d4 : jle 0x17a1a1 ; hlt ; call rdx
0x0000000000186441 : jle 0x186441 ; jmp qword ptr [rax]
0x0000000000186440 : jle 0x186442 ; jmp qword ptr [rax]
0x00000000001879d1 : jle 0x1879bf ; jmp qword ptr [rax]
0x000000000018d109 : jle 0x18d107 ; jmp rsp
0x00000000001963f9 : jle 0x1963eb ; jmp qword ptr [rbx]
0x000000000019640d : jle 0x1963ff ; jmp qword ptr [rbx]
0x0000000000196435 : jle 0x196427 ; jmp qword ptr [rbx]
0x000000000019645d : jle 0x19644f ; jmp qword ptr [rbx]
0x000000000019645c : jle 0x196450 ; jmp qword ptr [rbx]
0x0000000000196485 : jle 0x196477 ; jmp qword ptr [rbx]
0x0000000000196484 : jle 0x196478 ; jmp qword ptr [rbx]
0x00000000001964ad : jle 0x19649f ; jmp qword ptr [rbx]
0x00000000001964d5 : jle 0x1964c7 ; jmp qword ptr [rbx]
0x00000000001964fd : jle 0x1964ef ; jmp qword ptr [rbx]
0x00000000001964fc : jle 0x1964f0 ; jmp qword ptr [rbx]
0x0000000000196525 : jle 0x196517 ; jmp qword ptr [rbx]
0x0000000000196539 : jle 0x19652b ; jmp qword ptr [rbx]
0x000000000019654d : jle 0x19653f ; jmp qword ptr [rbx]
0x0000000000196561 : jle 0x196553 ; jmp qword ptr [rbx]
0x0000000000198e35 : jle 0x198e34 ; call rsp
0x00000000001a0069 : jle 0x1a0061 ; jmp qword ptr [rcx]
0x000000000002bc55 : jle 0x2bc68 ; sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x00000000000032d4 : jle 0x32d2 ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000034db1 : jle 0x34dfb ; and al, 0xf8 ; ret
0x0000000000034de8 : jle 0x34e33 ; and al, 0xf8 ; ret
0x0000000000003679 : jle 0x36ad ; retf 0x8792
0x0000000000072b79 : jle 0x72bb1 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000007ee66 : jle 0x7eed0 ; xor eax, dword ptr [rax] ; ret
0x000000000007f8e2 : jle 0x7f946 ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x7f8f9 ; ret
0x000000000007ffa2 : jle 0x7ffdf ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000885de : jle 0x88575 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000895c0 : jle 0x895c4 ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000089ca0 : jle 0x89ca8 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000974de : jle 0x974e8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b4c47 : jle 0xb4c5e ; call 0x2166c
0x00000000000c61e1 : jle 0xc61e7 ; add byte ptr [rax], al ; ret
0x00000000000c670e : jle 0xc66c3 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d1f63 : jle 0xd1fa2 ; movsxd rcx, edx ; jmp 0xd1f7c
0x00000000000f63c1 : jle 0xf63c7 ; add byte ptr [rax], al ; syscall
0x0000000000111480 : jmp 0x11144e
0x0000000000118c93 : jmp 0x118c61
0x000000000011dc7f : jmp 0x11dc45
0x0000000000120437 : jmp 0x120405
0x0000000000120e47 : jmp 0x120e15
0x000000000012b45e : jmp 0x12b42c
0x000000000012de53 : jmp 0x12de21
0x0000000000159948 : jmp 0x159916
0x00000000001599c6 : jmp 0x159994
0x0000000000159e58 : jmp 0x159e26
0x0000000000159ed6 : jmp 0x159ea4
0x000000000015af78 : jmp 0x15af46
0x000000000015aff6 : jmp 0x15afc4
0x000000000015b488 : jmp 0x15b456
0x000000000015b506 : jmp 0x15b4d4
0x00000000001632e3 : jmp 0x1632a9
0x0000000000176029 : jmp 0x175ff7
0x0000000000176576 : jmp 0x176544
0x000000000018dbb6 : jmp 0x19a6bc
0x0000000000002ce7 : jmp 0x2cb5
0x00000000000318fb : jmp 0x318c1
0x00000000000365e5 : jmp 0x365b3
0x0000000000037801 : jmp 0x377c7
0x00000000000382f8 : jmp 0x382c6
0x0000000000003a53 : jmp 0x3a19
0x0000000000003a57 : jmp 0x3a25
0x0000000000056a60 : jmp 0x52ce2
0x00000000000573bc : jmp 0x5366f
0x0000000000057ac7 : jmp 0x53d26
0x00000000000572e0 : jmp 0x53dd2
0x0000000000058d47 : jmp 0x55832
0x0000000000059965 : jmp 0x56382
0x000000000005dbf1 : jmp 0x59eaf
0x000000000005dd6b : jmp 0x59fd2
0x000000000005e8f3 : jmp 0x5b308
0x000000000006838f : jmp 0x68355
0x000000000006e951 : jmp 0x6e917
0x000000000006674f : jmp 0x72a02
0x0000000000077881 : jmp 0x77847
0x000000000007aa92 : jmp 0x7aa58
0x000000000007eb08 : jmp 0x7ead6
0x000000000007fb2d : jmp 0x7fafb
0x0000000000080f4b : jmp 0x80f19
0x0000000000085515 : jmp 0x854e3
0x00000000000858f8 : jmp 0x858c6
0x0000000000086218 : jmp 0x861de
0x0000000000086d23 : jmp 0x86ce9
0x0000000000096de4 : jmp 0x96daa
0x0000000000096ffc : jmp 0x96fc2
0x00000000000a0eae : jmp 0xa0e74
0x00000000000a0f7f : jmp 0xa0f45
0x00000000000a0fee : jmp 0xa0fb4
0x00000000000b4b5e : jmp 0xb4b24
0x00000000000bcd5b : jmp 0xbcd29
0x00000000000c81a3 : jmp 0xc8171
0x00000000000cd752 : jmp 0xcd718
0x00000000000cfc60 : jmp 0xcfc26
0x00000000000e0cba : jmp 0xe0c88
0x00000000000e341e : jmp 0xe33e4
0x00000000000eda84 : jmp 0xeda52
0x00000000000f1890 : jmp 0xf185e
0x00000000000f78e1 : jmp 0xf78af
0x00000000000ff841 : jmp 0xff807
0x000000000011f719 : jmp 0xffffffff895fb9a9
0x00000000000b2b33 : jmp 0xffffffffc30b2b3c
0x0000000000046871 : jmp 0xffffffffc313f1c6
0x0000000000177f30 : jmp 0xffffffffc3177f42
0x0000000000104356 : jmp 0xffffffffc408cca7
0x00000000001aea74 : jmp 0xffffffffcb1aea84
0x000000000008bed9 : jmp 0xffffffffcb4207e6
0x000000000008bf39 : jmp 0xffffffffcb420846
0x000000000008bfd0 : jmp 0xffffffffcb4208dd
0x00000000000b38b7 : jmp 0xffffffffcb9480c1
0x000000000007cbf2 : jmp 0xffffffffd107cbf9
0x00000000000c0b00 : jmp 0xfffffffff63dcd90
0x00000000000ee883 : jmp qword ptr [r8]
0x0000000000187377 : jmp qword ptr [rax + 0x10fffb50]
0x0000000000178d8f : jmp qword ptr [rax + 0x10fffb8c]
0x00000000001863eb : jmp qword ptr [rax + 0x10fffc49]
0x00000000001869ef : jmp qword ptr [rax - 0x1f000521]
0x0000000000177257 : jmp qword ptr [rax - 0x1f001251]
0x000000000018642b : jmp qword ptr [rax - 0x2f0003a7]
0x0000000000179177 : jmp qword ptr [rax - 0x2f000da7]
0x0000000000037872 : jmp qword ptr [rax]
0x00000000000025ff : jmp qword ptr [rbx]
0x000000000018d51b : jmp qword ptr [rcx + rbp*4 - 0x3cb40000]
0x0000000000104d7d : jmp qword ptr [rcx]
0x00000000001140fd : jmp qword ptr [rdi]
0x0000000000186d5f : jmp qword ptr [rdx + 0x12fffb25]
0x0000000000187267 : jmp qword ptr [rdx + 0x12fffb4a]
0x0000000000186d57 : jmp qword ptr [rdx + 0x22fffb26]
0x0000000000186d4f : jmp qword ptr [rdx + 0x22fffb27]
0x0000000000186d47 : jmp qword ptr [rdx + 0x22fffb28]
0x0000000000186d3f : jmp qword ptr [rdx + 0x22fffb29]
0x0000000000106d25 : jmp qword ptr [rdx]
0x000000000017788f : jmp qword ptr [rsi + 0x10ffedcb]
0x0000000000177837 : jmp qword ptr [rsi - 0x2e001235]
0x0000000000186ae3 : jmp qword ptr [rsi]
0x0000000000001b6a : jmp r10
0x00000000000d69f7 : jmp r8
0x0000000000131eed : jmp r9
0x0000000000022091 : jmp rax
0x00000000000ba761 : jmp rbx
0x0000000000059b5c : jmp rcx
0x000000000003393e : jmp rdi
0x0000000000001b6b : jmp rdx
0x000000000002cf77 : jmp rsi
0x0000000000002b55 : jmp rsp
0x0000000000100ecc : jne 0x100f08 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010110b : jne 0x1010fb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000102647 : jne 0x102658 ; cmp qword ptr [rdi], 0 ; je 0x102661 ; ret
0x00000000001027de : jne 0x1027c9 ; lea rdi, [rip - 0x167] ; call rax
0x000000000010280b : jne 0x102805 ; xor eax, eax ; leave ; ret
0x00000000001031e6 : jne 0x1031d5 ; mov rax, rdi ; ret
0x0000000000103325 : jne 0x1032c1 ; mov rax, rdi ; ret
0x0000000000104355 : jne 0x104345 ; mov rax, rdi ; ret
0x0000000000104441 : jne 0x1043e3 ; mov rax, rdi ; ret
0x00000000001053c9 : jne 0x105367 ; mov rdi, r13 ; call 0x2167f
0x00000000001097ee : jne 0x109764 ; pop rbx ; ret
0x000000000010c099 : jne 0x10c090 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010fe0f : jne 0x10fdf4 ; ret
0x000000000011254d : jne 0x11252f ; ret
0x000000000011424c : jne 0x114253 ; ret
0x000000000011428c : jne 0x114280 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114426 : jne 0x114433 ; pop rbx ; ret
0x000000000011480f : jne 0x114803 ; pop rbx ; ret
0x000000000011482a : jne 0x114841 ; sub dword ptr [rip + 0x2a51e5], 1 ; ret
0x0000000000114971 : jne 0x114991 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011572a : jne 0x115733 ; ret
0x0000000000116345 : jne 0x116336 ; add rsp, 0x18 ; ret
0x0000000000118c90 : jne 0x118c96 ; add bl, ch ; retf
0x000000000011997d : jne 0x1199c8 ; mov dword ptr [rsi], 0 ; ret
0x000000000011a2ad : jne 0x11a247 ; xor eax, eax ; pop rbx ; ret
0x000000000011a986 : jne 0x11a9f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011af8a : jne 0x11af4a ; xor eax, eax ; pop rbx ; ret
0x000000000011afea : jne 0x11afad ; mov eax, 1 ; pop rbx ; ret
0x000000000011bf44 : jne 0x11bf33 ; ret
0x000000000011ea08 : jne 0x11ea13 ; ret
0x00000000001234c7 : jne 0x1234b3 ; pop rbx ; ret
0x0000000000123748 : jne 0x123753 ; ret
0x0000000000124d13 : jne 0x124d26 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000124dfb : jne 0x124e51 ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000124ebb : jne 0x124f11 ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000125f02 : jne 0x125f17 ; mov eax, 1 ; ret
0x0000000000125f42 : jne 0x125f57 ; mov eax, 1 ; ret
0x0000000000126007 : jne 0x126074 ; call 0x122ab4
0x000000000012c631 : jne 0x12c646 ; add rsp, 0x38 ; ret
0x000000000012c695 : jne 0x12c6b1 ; mov rax, qword ptr [rip + 0x28daea] ; call qword ptr [rax]
0x000000000012d13e : jne 0x12d14b ; pop rbx ; ret
0x000000000012d16e : jne 0x12d17b ; pop rbx ; ret
0x000000000012d2bf : jne 0x12d2dd ; mov eax, 0x27 ; syscall
0x0000000000144321 : jne 0x1448d6 ; ret
0x000000000014fedd : jne 0x14fec7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001503a2 : jne 0x150387 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001506d3 : jne 0x1506f7 ; xor eax, eax ; vzeroupper ; ret
0x0000000000150d7a : jne 0x150d85 ; vzeroupper ; ret
0x0000000000150e74 : jne 0x150d86 ; ret
0x0000000000150fbf : jne 0x150d89 ; vzeroupper ; ret
0x00000000001549d3 : jne 0x154a08 ; mov rax, r8 ; vzeroupper ; ret
0x0000000000156250 : jne 0x156689 ; vzeroupper ; ret
0x0000000000156f68 : jne 0x1573b9 ; vzeroupper ; ret
0x0000000000157b84 : jne 0x157b6c ; vzeroupper ; ret
0x0000000000157cea : jne 0x157cf5 ; vzeroupper ; ret
0x0000000000157d72 : jne 0x157cf6 ; ret
0x0000000000157ebf : jne 0x157cf9 ; vzeroupper ; ret
0x0000000000157d16 : jne 0x157cfe ; ret
0x0000000000158133 : jne 0x158157 ; xor eax, eax ; vzeroupper ; ret
0x000000000015827e : jne 0x158266 ; vzeroupper ; ret
0x000000000015829d : jne 0x158267 ; vzeroupper ; ret
0x00000000001583e9 : jne 0x15826a ; vzeroupper ; ret
0x0000000000158392 : jne 0x1583d1 ; retf
0x00000000001584c2 : jne 0x158501 ; retf
0x000000000015859b : jne 0x158587 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001586f9 : jne 0x1586ca ; vzeroupper ; ret
0x000000000015886f : jne 0x1586ce ; vzeroupper ; ret
0x000000000015880f : jne 0x15884e ; retf
0x0000000000158972 : jne 0x1589b1 ; retf
0x0000000000158a70 : jne 0x158a57 ; sub eax, ecx ; vzeroupper ; ret
0x000000000015aa7d : jne 0x15aaa7 ; xor eax, eax ; ret
0x000000000015a071 : jne 0x15aaab ; xor eax, eax ; ret
0x000000000015a099 : jne 0x15aab7 ; xor eax, eax ; ret
0x000000000015b8bd : jne 0x15b8e7 ; xor eax, eax ; ret
0x000000000015b6a1 : jne 0x15b8eb ; xor eax, eax ; ret
0x000000000015b8f1 : jne 0x15b8fa ; xor eax, eax ; ret
0x000000000015b6c7 : jne 0x15b8fe ; xor eax, eax ; ret
0x000000000015ca17 : jne 0x15c9f7 ; vzeroupper ; ret
0x000000000015cb85 : jne 0x15cb16 ; lea rax, [rdi + 3] ; ret
0x000000000015cb57 : jne 0x15cb16 ; lea rax, [rdi + 7] ; ret
0x000000000015cb56 : jne 0x15cb17 ; lea rax, [rdi + 7] ; ret
0x000000000015e2e4 : jne 0x15e4f8 ; xor eax, eax ; ret
0x000000000015e4e9 : jne 0x15e509 ; xor eax, eax ; ret
0x000000000015e391 : jne 0x15e50d ; xor eax, eax ; ret
0x000000000015e501 : jne 0x15e50e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000015eb16 : jne 0x15eb24 ; xor eax, eax ; ret
0x000000000015e9ed : jne 0x15eb26 ; ret
0x0000000000162fd7 : jne 0x16304a ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001632c3 : jne 0x1632b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016360d : jne 0x1635f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001636ed : jne 0x1636de ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163740 : jne 0x163720 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016387c : jne 0x16386b ; pop rbx ; ret
0x0000000000163925 : jne 0x16390b ; pop rbx ; ret
0x0000000000163abf : jne 0x163ab8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000163e3b : jne 0x163e43 ; ret
0x00000000001744d7 : jne 0x1744a1 ; mov ecx, 0x5b92ac50 ; retf
0x000000000017646b : jne 0x176492 ; retf 0x32dd
0x0000000000185a09 : jne 0x1859c0 ; mov esi, 0x697769 ; pop rdi ; retf
0x0000000000196071 : jne 0x196063 ; jmp qword ptr [rdx]
0x00000000001ac881 : jne 0x1ac880 ; jmp qword ptr [rdx]
0x0000000000021781 : jne 0x21749 ; ret
0x0000000000023544 : jne 0x234e8 ; call rsi
0x000000000002f3f3 : jne 0x2f406 ; add rsp, 0x18 ; ret
0x000000000002f433 : jne 0x2f446 ; add rsp, 0x18 ; ret
0x00000000000331bc : jne 0x331d0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000033eb8 : jne 0x33e96 ; ret
0x0000000000034c62 : jne 0x34c78 ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000034e6c : jne 0x34df3 ; call qword ptr [rax - 0x3d]
0x0000000000035088 : jne 0x35096 ; addsd xmm0, xmm0 ; ret
0x00000000000353e4 : jne 0x353f6 ; addss xmm0, xmm0 ; ret
0x00000000000368b4 : jne 0x368a4 ; xor eax, eax ; ret
0x0000000000036904 : jne 0x368f4 ; xor eax, eax ; ret
0x0000000000003677 : jne 0x36e0 ; jle 0x36af ; retf 0x8792
0x000000000003858a : jne 0x38586 ; mov edi, ebx ; call 0xc5096
0x0000000000038d8c : jne 0x38d58 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000038e2b : jne 0x38e33 ; pop rbx ; ret
0x000000000003955b : jne 0x39551 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000039b4a : jne 0x39b67 ; mov eax, 0x13e ; syscall
0x000000000003ad3b : jne 0x3ad7a ; xor eax, eax ; ret
0x000000000003d70b : jne 0x3d74a ; xor eax, eax ; ret
0x00000000000400fb : jne 0x4013a ; xor eax, eax ; ret
0x000000000004365e : jne 0x4363e ; ret
0x00000000000450dd : jne 0x450d3 ; pop rbx ; ret
0x0000000000045108 : jne 0x45103 ; pop rbx ; ret
0x0000000000045d17 : jne 0x45cd3 ; pop rbx ; ret
0x0000000000045f4f : jne 0x45f44 ; xor eax, eax ; ret
0x0000000000045f75 : jne 0x45f5f ; mov eax, 1 ; ret
0x000000000004602f : jne 0x46024 ; xor eax, eax ; ret
0x0000000000046055 : jne 0x4603f ; mov eax, 1 ; ret
0x00000000000462f7 : jne 0x462e5 ; mov rax, rdx ; ret
0x000000000004695f : jne 0x46955 ; mov rax, rdx ; ret
0x0000000000047f4b : jne 0x47f8a ; xor eax, eax ; ret
0x000000000004af6c : jne 0x4af64 ; pop rbx ; pop rbp ; ret
0x000000000004b1e1 : jne 0x4b1cd ; mov rax, rsi ; ret
0x000000000004b265 : jne 0x4b245 ; mov rax, rsi ; ret
0x0000000000051531 : jne 0x51546 ; mov rax, rbx ; pop rbx ; ret
0x0000000000051c22 : jne 0x51c0a ; mov dword ptr fs:[rcx], 0x16 ; ret
0x0000000000051d56 : jne 0x51d65 ; sub dword ptr [rdi], 1 ; ret
0x000000000006f738 : jne 0x6f751 ; sub dword ptr [rip + 0x34803f], 1 ; ret
0x0000000000072651 : jne 0x72643 ; ret
0x00000000000731ac : jne 0x731a5 ; lea eax, [rdx + rdi] ; ret
0x0000000000075589 : jne 0x755b8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000078dfe : jne 0x78e19 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007afb3 : jne 0x7afc4 ; xor eax, eax ; ret
0x000000000007b5ac : jne 0x7b5c9 ; sub dword ptr [rip + 0x33c20b], 1 ; ret
0x000000000007bc51 : jne 0x7bc43 ; ret
0x000000000007c80e : jne 0x7c803 ; ret
0x000000000007ca29 : jne 0x7ca53 ; pop rbx ; ret
0x000000000007cb51 : jne 0x7cb17 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007cb9c : jne 0x7cb95 ; lea eax, [rdx + rdi] ; ret
0x000000000007d586 : jne 0x7d57b ; ret
0x000000000007d8f8 : jne 0x7d911 ; sub dword ptr [rip + 0x339ebf], 1 ; ret
0x000000000007ec77 : jne 0x7ec98 ; and dword ptr [rdi + 8], 0xfffffffe ; xor eax, eax ; ret
0x000000000007f36b : jne 0x7f372 ; ret
0x000000000007f6b4 : jne 0x7f6a8 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000837a6 : jne 0x8378e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084eef : jne 0x84ede ; sub rax, 0x10 ; ret
0x0000000000086897 : jne 0x868ab ; mov rax, qword ptr [rip + 0x32e6b0] ; call qword ptr [rax]
0x0000000000086952 : jne 0x86966 ; mov rax, qword ptr [rip + 0x32e5f5] ; call qword ptr [rax]
0x0000000000086a17 : jne 0x86a2b ; mov rax, qword ptr [rip + 0x32e530] ; call qword ptr [rax]
0x0000000000086aff : jne 0x86b15 ; mov rdi, r13 ; call rax
0x0000000000086afe : jne 0x86b16 ; mov rdi, r13 ; call rax
0x0000000000086afd : jne 0x86b17 ; mov rdi, r13 ; call rax
0x0000000000086b41 : jne 0x86b34 ; xor eax, eax ; ret
0x0000000000086ba3 : jne 0x86b7d ; mov rdi, rsi ; call rax
0x0000000000086ba2 : jne 0x86b7e ; mov rdi, rsi ; call rax
0x0000000000086ba1 : jne 0x86b7f ; mov rdi, rsi ; call rax
0x0000000000086bb9 : jne 0x86bdb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086bfb : jne 0x86bf3 ; ret
0x0000000000089598 : jne 0x89583 ; ret
0x00000000000896ab : jne 0x896a3 ; ret
0x0000000000089dbf : jne 0x89db1 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a6ad : jne 0x8a66f ; pop rbx ; ret
0x000000000008a685 : jne 0x8a67d ; xor eax, eax ; pop rbx ; ret
0x000000000008ba93 : jne 0x8ba84 ; or byte ptr [rdi], sil ; ret
0x000000000008deb2 : jne 0x8dea5 ; mov qword ptr [rdx], rcx ; ret
0x000000000008df7b : jne 0x8df70 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008e056 : jne 0x8e04b ; ret
0x000000000008e09a : jne 0x8e08b ; ret
0x000000000008e0f4 : jne 0x8e0d3 ; ret
0x000000000008e1aa : jne 0x8e198 ; cmp r8d, ecx ; je 0x8e198 ; ret
0x000000000008e1e9 : jne 0x8e1dd ; xor eax, eax ; ret
0x000000000008e24b : jne 0x8e22b ; ret
0x000000000008ff4c : jne 0x8ff36 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000091a47 : jne 0x91aa4 ; xor eax, eax ; ret
0x0000000000091a17 : jne 0x91ac8 ; xor eax, eax ; ret
0x0000000000091eea : jne 0x91f64 ; xor eax, eax ; ret
0x0000000000091f19 : jne 0x91f94 ; xor eax, eax ; ret
0x0000000000097603 : jne 0x9760e ; xor rax, rax ; ret
0x000000000009cf2a : jne 0x9d7e6 ; ret
0x000000000009e5dd : jne 0x9f006 ; ret
0x00000000000a0ce1 : jne 0xa0cd2 ; ret
0x00000000000a0d91 : jne 0xa0d82 ; ret
0x00000000000a0f01 : jne 0xa0ef6 ; lea rax, [rcx - 1] ; ret
0x00000000000a1051 : jne 0xa1046 ; sub rax, 1 ; ret
0x00000000000a1703 : jne 0xa170e ; mov rax, rdi ; ret
0x00000000000a17dd : jne 0xa17c6 ; ret
0x00000000000a21c3 : jne 0xa2193 ; ret
0x00000000000a21ad : jne 0xa21a3 ; ret
0x00000000000a2280 : jne 0xa2277 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000a34cc : jne 0xa34c3 ; ret
0x00000000000a3e8b : jne 0xa3eca ; xor eax, eax ; ret
0x00000000000a660b : jne 0xa664a ; xor eax, eax ; ret
0x00000000000a8cfb : jne 0xa8d3a ; xor eax, eax ; ret
0x00000000000af04b : jne 0xaf08a ; xor eax, eax ; ret
0x00000000000b1c37 : jne 0xb1c07 ; ret
0x00000000000b1ed7 : jne 0xb1f34 ; xor eax, eax ; ret
0x00000000000b1ea7 : jne 0xb1f58 ; xor eax, eax ; ret
0x00000000000b2ba6 : jne 0xb2c22 ; ret
0x00000000000b2acf : jne 0xb2c26 ; ret
0x00000000000b2aae : jne 0xb2c28 ; xor eax, eax ; ret
0x00000000000b2ce7 : jne 0xb2cd4 ; xor eax, eax ; ret
0x00000000000b2ce2 : jne 0xb2cf9 ; cmp rax, rdx ; jne 0xb2cd9 ; xor eax, eax ; ret
0x00000000000b314b : jne 0xb31a6 ; lea rax, [rdi - 0x10] ; ret
0x00000000000b31e3 : jne 0xb31ee ; xor rax, rax ; ret
0x00000000000b4623 : jne 0xb465f ; mov eax, 0x60 ; syscall
0x00000000000b4c43 : jne 0xb4c20 ; lea rdi, [r14 + 0x11] ; call 0x21670
0x00000000000b7729 : jne 0xb7741 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bf9a1 : jne 0xbf9d7 ; mov eax, 0xe6 ; syscall
0x00000000000bfe67 : jne 0xbfe56 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c16f8 : jne 0xc1717 ; mov eax, 0x74 ; syscall
0x00000000000c3530 : jne 0xc34f5 ; jmp 0xc34ec
0x00000000000c4c0d : jne 0xc4c27 ; mov eax, 0x3d ; syscall
0x00000000000c4dda : jne 0xc4df7 ; mov eax, 0x22 ; syscall
0x00000000000c4e65 : jne 0xc4e76 ; add rsp, 8 ; ret
0x00000000000c5ae8 : jne 0xc5b07 ; mov eax, 0x69 ; syscall
0x00000000000c5b58 : jne 0xc5b77 ; mov eax, 0x6a ; syscall
0x00000000000c5dab : jne 0xc5db1 ; add byte ptr [rax], al ; syscall
0x00000000000c5da8 : jne 0xc5dc7 ; mov eax, 0x75 ; syscall
0x00000000000c5e28 : jne 0xc5e47 ; mov eax, 0x77 ; syscall
0x00000000000c61c9 : jne 0xc6199 ; ret
0x00000000000c62d4 : jne 0xc62ae ; mov eax, 0x40 ; ret
0x00000000000c640e : jne 0xc63db ; jmp 0xc63bc
0x00000000000c63b9 : jne 0xc63de ; xor eax, eax ; ret
0x00000000000c6df9 : jne 0xc6ddb ; xor eax, eax ; ret
0x00000000000c91ee : jne 0xc91d7 ; mov eax, 1 ; ret
0x00000000000c9286 : jne 0xc9260 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9388 : jne 0xc9361 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc02e : jne 0xcbffb ; jmp 0xcc03c
0x00000000000cc02d : jne 0xcbffc ; jmp 0xcc03d
0x00000000000cd0a3 : jne 0xcd09e ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000cd5c3 : jne 0xcd5b9 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000cd65a : jne 0xcd646 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce2f2 : jne 0xce2c8 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000ceaba : jne 0xceac3 ; pop rbx ; ret
0x00000000000d18fd : jne 0xd1847 ; ret
0x00000000000d18fc : jne 0xd1848 ; ret
0x00000000000d18a2 : jne 0xd18b9 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1849 ; ret
0x00000000000d5430 : jne 0xd5426 ; mov rdi, r14 ; call 0x2167f
0x00000000000dc0b9 : jne 0xdc09b ; xor eax, eax ; ret
0x00000000000de2a8 : jne 0xde28e ; mov eax, dword ptr [rsi + 0x14] ; pop rbx ; pop rbp ; ret
0x00000000000df04f : jne 0xdf045 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000df06f : jne 0xdf088 ; mov eax, 2 ; ret
0x00000000000e112b : jne 0xe1118 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e2521 : jne 0xe2503 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5373 : jne 0xe5337 ; mov rdi, rax ; call 0x2167f
0x00000000000e5ddd : jne 0xe5df7 ; mov eax, 0x11 ; syscall
0x00000000000e5e8d : jne 0xe5ea7 ; mov eax, 0x12 ; syscall
0x00000000000e63ca : jne 0xe63d9 ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000e6a26 : jne 0xe6a2e ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000e7348 : jne 0xe7356 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e764b : jne 0xe7697 ; mov eax, 0x10c ; syscall
0x00000000000e78cd : jne 0xe7927 ; mov eax, 0x101 ; syscall
0x00000000000e79da : jne 0xe79f2 ; syscall
0x00000000000e7a7a : jne 0xe7a97 ; mov eax, 1 ; syscall
0x00000000000e7cab : jne 0xe7cdf ; mov eax, 0x10d ; syscall
0x00000000000e7e69 : jne 0xe7e97 ; mov eax, 0x48 ; syscall
0x00000000000e817a : jne 0xe8197 ; mov eax, 3 ; syscall
0x00000000000e82ea : jne 0xe8307 ; mov eax, 0x55 ; syscall
0x00000000000eb909 : jne 0xeb91f ; call 0xe83a4
0x00000000000ebbfa : jne 0xebc17 ; mov eax, 7 ; syscall
0x00000000000ec1fd : jne 0xec217 ; mov eax, 0x146 ; syscall
0x00000000000ec3dd : jne 0xec3f7 ; mov eax, 0x115 ; syscall
0x00000000000ec47d : jne 0xec497 ; mov eax, 0x11d ; syscall
0x00000000000ec599 : jne 0xec558 ; neg eax ; ret
0x00000000000ed1da : jne 0xed1f7 ; mov eax, 0x13 ; syscall
0x00000000000ed27a : jne 0xed297 ; mov eax, 0x14 ; syscall
0x00000000000ed738 : jne 0xed757 ; mov eax, 0x71 ; syscall
0x00000000000ed7b8 : jne 0xed7d7 ; mov eax, 0x72 ; syscall
0x00000000000ed84b : jne 0xed853 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000edb6d : jne 0xedb87 ; mov eax, 0x17 ; syscall
0x00000000000edd7a : jne 0xedd97 ; mov eax, 0x4a ; syscall
0x00000000000ede2a : jne 0xede47 ; mov eax, 0x4b ; syscall
0x00000000000ee586 : jne 0xee597 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee6b6 : jne 0xee698 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ee717 : jne 0xee6f8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ee7ca : jne 0xee795 ; xor eax, eax ; pop rbx ; ret
0x00000000000ee81d : jne 0xee7f3 ; ret
0x00000000000f013a : jne 0xf0151 ; sub dword ptr [rip + 0x2c870d], 1 ; ret
0x00000000000f0c0a : jne 0xf0c27 ; mov eax, 0x1a ; syscall
0x00000000000f1e93 : jne 0xf1ea3 ; ret
0x00000000000f2cce : jne 0xf2d0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3075 : jne 0xf30af ; mov eax, 0x88 ; syscall
0x00000000000f32ba : jne 0xf32b8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f36e2 : jne 0xf3712 ; mov rdx, rax ; jmp 0xf36fa
0x00000000000f3ae7 : jne 0xf3ade ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f5e5d : jne 0xf5e77 ; mov eax, 0xe8 ; syscall
0x00000000000f5efd : jne 0xf5f17 ; mov eax, 0x114 ; syscall
0x00000000000f5fad : jne 0xf5fc7 ; mov eax, 0x116 ; syscall
0x00000000000f605d : jne 0xf6077 ; mov eax, 0x113 ; syscall
0x00000000000f611a : jne 0xf6137 ; mov eax, 0x130 ; syscall
0x00000000000f61b2 : jne 0xf61cf ; mov eax, 0x95 ; syscall
0x00000000000f6aba : jne 0xf6ad7 ; mov eax, 0x2b ; syscall
0x00000000000f6b8a : jne 0xf6ba7 ; mov eax, 0x2a ; syscall
0x00000000000f6dad : jne 0xf6dc7 ; mov eax, 0x2d ; syscall
0x00000000000f6e6a : jne 0xf6e87 ; mov eax, 0x2f ; syscall
0x00000000000f6fca : jne 0xf6fe7 ; mov eax, 0x2e ; syscall
0x00000000000f706d : jne 0xf7087 ; mov eax, 0x2c ; syscall
0x00000000000f73fd : jne 0xf7417 ; mov eax, 0x120 ; syscall
0x00000000000f749d : jne 0xf74b7 ; mov eax, 0x12b ; syscall
0x00000000000f754d : jne 0xf7567 ; mov eax, 0x133 ; syscall
0x00000000000f76ad : jne 0xf76c7 ; mov eax, 0x45 ; syscall
0x00000000000f774d : jne 0xf7767 ; mov eax, 0x46 ; syscall
0x00000000000f78ac : jne 0xf78c7 ; mov eax, 0x42 ; syscall
0x00000000000fa450 : jne 0xfa415 ; jmp 0xfa40c
0x00000000000fc010 : jne 0xfbfd5 ; jmp 0xfbfcc
0x00000000000fdb54 : jne 0xfdb43 ; ret
0x00000000000fe467 : jne 0xfe3e5 ; xor eax, eax ; ret
0x0000000000122a67 : jno 0x122a98 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000015a32e : jno 0x15a33d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015b9d0 : jno 0x15b9d9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000015bc0a : jno 0x15bc13 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000015bd71 : jno 0x15bd82 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000015bed6 : jno 0x15bf5a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000186429 : jno 0x18642d ; jmp qword ptr [rax - 0x2f0003a7]
0x0000000000195952 : jno 0x195960 ; ret
0x0000000000001ed6 : jno 0x1eb0 ; adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x0000000000002243 : jno 0x2290 ; ret 0x1dd4
0x0000000000003aff : jno 0x3b49 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000046764 : jno 0x467b6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000661f3 : jno 0x661e6 ; xor al, 0 ; call rax
0x0000000000071b64 : jno 0x71b72 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000071d3a : jno 0x71d46 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000078b83 : jno 0x78b8f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000078c73 : jno 0x78c7f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000007d14b : jno 0x7d0fc ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000008a1c7 : jno 0x8a1c7 ; dec dword ptr [rax + 0x29] ; ret
0x00000000000d7f1b : jno 0xd7eb6 ; hlt ; call rcx
0x00000000000ed73b : jno 0xed741 ; add byte ptr [rax], al ; syscall
0x00000000000efc1b : jno 0xefbac ; sub al, 0 ; ret
0x00000000000fa46a : jno 0xfa463 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000fe2e6 : jno 0xfe2ef ; cmovne eax, edx ; ret
0x00000000000fe2e5 : jno 0xfe2f0 ; cmovne eax, edx ; ret
0x0000000000120413 : jnp 0x12047f ; call rax
0x0000000000120e23 : jnp 0x120e7f ; call rax
0x0000000000163921 : jnp 0x163968 ; and eax, 0x5be17500 ; ret
0x0000000000174e85 : jnp 0x174e42 ; ret
0x0000000000175e82 : jnp 0x175ee0 ; retf
0x0000000000176289 : jnp 0x1762d6 ; retf 0x99e0
0x0000000000176ee9 : jnp 0x176f2a ; retf
0x0000000000178d61 : jnp 0x178d60 ; call rax
0x000000000018b8a9 : jnp 0x18b8a4 ; jmp rsp
0x000000000018d505 : jnp 0x18d50d ; add byte ptr [rdx + rax*8 - 3], bh ; jmp rax
0x000000000000268a : jnp 0x26ae ; retf
0x000000000002c966 : jnp 0x2c980 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000031b12 : jnp 0x31b24 ; dec dword ptr [rbx - 0x7af0fbbd] ; retf
0x0000000000051af0 : jnp 0x48113f43 ; add esp, 0x18 ; ret
0x00000000000eca38 : jnp 0x481aee8b ; add esp, 0x18 ; ret
0x000000000006608d : jnp 0x6601a ; ret 0x349
0x000000000006be43 : jnp 0x6bdd0 ; ret 0x349
0x0000000000036848 : jnp 0x74cced60 ; int1 ; ret
0x0000000000086b12 : jnp 0x86b61 ; mov rsi, r13 ; call rax
0x0000000000086b7a : jnp 0x86bc6 ; call rax
0x00000000000c7695 : jnp 0xc768f ; ret
0x00000000000ceab7 : jnp 0xceb22 ; add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x00000000000d1ffb : jnp 0xd2067 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000dc955 : jnp 0xdc94f ; ret
0x00000000000e98f1 : jnp 0xe98ef ; dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000eb907 : jnp 0xeb94b ; jne 0xeb921 ; call 0xe83a6
0x00000000000f5c41 : jnp 0xf5c47 ; add byte ptr [rax], al ; syscall
0x000000000012a966 : jns 0x12a958 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000151297 : jns 0x151272 ; retf 0xead3
0x00000000001513e7 : jns 0x1513c2 ; retf 0xead3
0x0000000000151537 : jns 0x151512 ; retf 0xead3
0x0000000000151687 : jns 0x151662 ; retf 0xead3
0x00000000001517d7 : jns 0x1517b2 ; retf 0xead3
0x0000000000151927 : jns 0x151902 ; retf 0xead3
0x0000000000151a77 : jns 0x151a52 ; retf 0xead3
0x0000000000151bc7 : jns 0x151ba2 ; retf 0xead3
0x0000000000151d17 : jns 0x151cf2 ; retf 0xead3
0x0000000000151e67 : jns 0x151e42 ; retf 0xead3
0x0000000000151fb7 : jns 0x151f92 ; retf 0xead3
0x0000000000152107 : jns 0x1520e2 ; retf 0xead3
0x0000000000152257 : jns 0x152232 ; retf 0xead3
0x00000000001523a7 : jns 0x152382 ; retf 0xead3
0x00000000001524f7 : jns 0x1524d2 ; retf 0xead3
0x0000000000152967 : jns 0x152942 ; retf 0xead3
0x0000000000152ae7 : jns 0x152ac2 ; retf 0xead3
0x0000000000152c67 : jns 0x152c42 ; retf 0xead3
0x0000000000152de7 : jns 0x152dc2 ; retf 0xead3
0x0000000000152f67 : jns 0x152f42 ; retf 0xead3
0x00000000001530e7 : jns 0x1530c2 ; retf 0xead3
0x0000000000153267 : jns 0x153242 ; retf 0xead3
0x00000000001533e7 : jns 0x1533c2 ; retf 0xead3
0x0000000000153567 : jns 0x153542 ; retf 0xead3
0x00000000001536e7 : jns 0x1536c2 ; retf 0xead3
0x0000000000153867 : jns 0x153842 ; retf 0xead3
0x00000000001539e7 : jns 0x1539c2 ; retf 0xead3
0x0000000000153b67 : jns 0x153b42 ; retf 0xead3
0x0000000000153ce7 : jns 0x153cc2 ; retf 0xead3
0x0000000000153e67 : jns 0x153e42 ; retf 0xead3
0x000000000015b9d7 : jns 0x15b9da ; ret
0x000000000015bc11 : jns 0x15bc14 ; ret
0x000000000015bd78 : jns 0x15bd83 ; ret
0x0000000000173f8e : jns 0x173f24 ; ret 0xf869
0x0000000000173f8d : jns 0x173f25 ; ret 0xf869
0x00000000001879cd : jns 0x1879d5 ; add byte ptr [rsi + rdi*2 - 0x16], bh ; jmp qword ptr [rax]
0x00000000001879fd : jns 0x187a05 ; add byte ptr [rcx + rax*4 - 0x16], cl ; call qword ptr [rax]
0x000000000018d0c9 : jns 0x18d0c7 ; call rsp
0x00000000001ab149 : jns 0x1ab144 ; jmp qword ptr [rbx]
0x0000000000001b31 : jns 0x1b3c ; ret
0x0000000000002633 : jns 0x25d4 ; ret 0xb675
0x0000000000002cd7 : jns 0x2ca5 ; clc ; ret
0x00000000000033cb : jns 0x33a6 ; ret 0x5a51
0x0000000000003a97 : jns 0x3aea ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000006d56d : jns 0x6d5a8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3b48
0x000000000006d56c : jns 0x6d5a9 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3b48
0x00000000000c5c51 : jns 0xc5c57 ; add byte ptr [rax], al ; syscall
0x00000000000cedeb : jns 0xcedd7 ; mov eax, 1 ; ret
0x00000000000ee244 : jns 0xee252 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a07c6 : jns 0xffffffffed3a0b2c ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0828 : jns 0xffffffffed3a0f8e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a0848 : jns 0xffffffffed3a10ae ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000117121 : jo 0x11712b ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000122a9e : jo 0x122acf ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000122ace : jo 0x122aff ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000122afe : jo 0x122b2f ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000175004 : jo 0x17507e ; mov ebp, 0xfb67d10d ; ret
0x0000000000177b78 : jo 0x177ba4 ; out dx, al ; call qword ptr [rsi]
0x0000000000178d7c : jo 0x178d06 ; sti ; jmp rax
0x0000000000178e50 : jo 0x178e30 ; int1 ; inc eax ; fyl2x ; call qword ptr [rax]
0x0000000000186388 : jo 0x1863d2 ; cld ; inc dword ptr [rax + 0x42] ; cld ; call qword ptr [rax]
0x0000000000186425 : jo 0x186425 ; call rax
0x00000000001863e8 : jo 0x186448 ; cld ; jmp qword ptr [rax + 0x10fffc49]
0x000000000018640c : jo 0x186477 ; cld ; call qword ptr [rax]
0x00000000001865a8 : jo 0x1865f1 ; std ; call qword ptr [rax]
0x0000000000186814 : jo 0x1867ef ; cli ; inc dword ptr [rax - 0x2c] ; cli ; jmp qword ptr [rax]
0x00000000001868d0 : jo 0x1868d3 ; cli ; push qword ptr [rax] ; cld ; cli ; call qword ptr [rax]
0x0000000000186a5c : jo 0x186a56 ; cli ; inc eax ; cli ; call qword ptr [rax]
0x0000000000186ea0 : jo 0x186eca ; sti ; jmp rax
0x0000000000186eb8 : jo 0x186ee7 ; sti ; jmp rax
0x00000000001873a8 : jo 0x1873f7 ; sti ; jmp rax
0x00000000001873b0 : jo 0x1873fe ; sti ; call qword ptr [rax]
0x00000000001895ac : jo 0x1895c5 ; add dword ptr [rax], eax ; cld ; sub esi, eax ; call rax
0x000000000018b714 : jo 0x18b6ea ; add dword ptr [rax], eax ; sbb al, 0x35 ; idiv edi ; cwde ; retf
0x0000000000196420 : jo 0x196492 ; stc ; jmp qword ptr [rbx]
0x0000000000199038 : jo 0x198ffb ; add byte ptr [rax], al ; mov ah, 0xb6 ; out dx, eax ; call qword ptr [rax]
0x000000000019b030 : jo 0x19afc1 ; int1 ; call qword ptr [rcx]
0x000000000019b738 : jo 0x19b722 ; add byte ptr [rax], al ; adc al, 0xc0 ; int1 ; call qword ptr [rdx]
0x00000000001a02c0 : jo 0x1a024e ; hlt ; jmp qword ptr [rcx]
0x00000000001a0638 : jo 0x1a0671 ; add dword ptr [rax], eax ; xor al, 0x9e ; hlt ; jmp rsi
0x00000000001a2f38 : jo 0x1a2f9a ; add dword ptr [rax], eax ; mov ah, 0x33 ; cmc ; jmp qword ptr [rcx]
0x00000000001a3090 : jo 0x1a30ca ; cmc ; jmp qword ptr [rcx]
0x00000000001a3650 : jo 0x1a3692 ; cmc ; jmp qword ptr [rbx]
0x00000000001a5510 : jo 0x1a54fe ; cmc ; call qword ptr [rbx]
0x00000000001a5960 : jo 0x1a5958 ; cmc ; call qword ptr [rdi]
0x0000000000034fe3 : jo 0x214b5f78 ; ret 0xb848
0x000000000002743f : jo 0x27457 ; mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002ee63 : jo 0x2eeb4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ee62 : jo 0x2eeb5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000592e4 : jo 0x59271 ; ret 0x348
0x00000000000726ca : jo 0x726e2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000007508 : jo 0x74c3 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007601a : jo 0x75fa7 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000076019 : jo 0x75fa8 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000007a724 : jo 0x7a775 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a76f : jo 0x7a7c0 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087930 : jo 0x8792b ; ret 0
0x00000000000a2cfd : jo 0xa2d4f ; mov edi, esp ; call rbx
0x00000000000a3287 : jo 0xa32d9 ; mov edi, esp ; call rbx
0x00000000000b0eca : jo 0xb0ef7 ; ret 0x9848
0x00000000000b5319 : jo 0xb532a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c4fcc : jo 0xc4f5c ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c5d11 : jo 0xc5d17 ; add byte ptr [rax], al ; syscall
0x00000000000d6100 : jo 0xd6105 ; ret 0xc083
0x00000000000e63a4 : jo 0xe63ba ; adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e63a3 : jo 0xe63bb ; adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e6c89 : jo 0xe6ca2 ; adc dword ptr [rdi + 0xf8], eax ; ret
0x00000000000e6c88 : jo 0xe6ca3 ; adc dword ptr [rdi + 0xf8], eax ; ret
0x00000000000f1e8d : jo 0xf1ea0 ; test sil, 1 ; jne 0xf1ea9 ; ret
0x00000000000f4040 : jo 0xf3fcd ; ret 0xeac1
0x00000000000f403f : jo 0xf3fce ; ret 0xeac1
0x00000000000f489d : jo 0xf482a ; ret 0xe8c1
0x00000000000f489c : jo 0xf482b ; ret 0xe8c1
0x00000000000f4922 : jo 0xf48af ; ret 0xe8c1
0x00000000000f4921 : jo 0xf48b0 ; ret 0xe8c1
0x00000000000f4b6f : jo 0xf4afc ; ret 0xe8c1
0x00000000000f4b6e : jo 0xf4afd ; ret 0xe8c1
0x00000000000f4d75 : jo 0xf4d02 ; ret 0xe8c1
0x00000000000f4d74 : jo 0xf4d03 ; ret 0xe8c1
0x00000000000f4e05 : jo 0xf4d92 ; ret 0xe8c1
0x00000000000f4e04 : jo 0xf4d93 ; ret 0xe8c1
0x00000000001015aa : jp 0x101601 ; mov rsi, rdx ; call rax
0x000000000011a7cd : jp 0x11a82d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012ce21 : jp 0x12ce6b ; add eax, 0x440f4c00 ; retf 0x8d48
0x0000000000156502 : jp 0x15650c ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000175193 : jp 0x17514d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000187370 : jp 0x1873be ; sti ; jmp qword ptr [rax]
0x0000000000189b99 : jp 0x189b8e ; call rsp
0x0000000000189b99 : jp 0x189b8f ; call rsp
0x000000000018a635 : jp 0x18a63e ; add byte ptr [rax + rbp*4], bh ; cmc ; jmp rsp
0x000000000019014d : jp 0x19013b ; call rsp
0x0000000000196289 : jp 0x19627b ; call qword ptr [rsi]
0x00000000001962f5 : jp 0x1962e7 ; call qword ptr [rdx]
0x0000000000196325 : jp 0x196317 ; call qword ptr [rdx]
0x00000000001a4429 : jp 0x1a4422 ; call rcx
0x00000000001a6fd9 : jp 0x1a6fd3 ; jmp rcx
0x00000000001ab241 : jp 0x1ab23c ; call rax
0x0000000000024af4 : jp 0x24a88 ; adc eax, 0x3d8d4800 ; int1 ; retf 0x15
0x00000000000025fd : jp 0x25e1 ; jmp qword ptr [rbx]
0x00000000000025fc : jp 0x25e2 ; jmp qword ptr [rbx]
0x000000000002db79 : jp 0x2dbbc ; jbe 0x2db5f ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000035086 : jp 0x35098 ; jne 0x35098 ; addsd xmm0, xmm0 ; ret
0x00000000000353e2 : jp 0x353f8 ; jne 0x353f8 ; addss xmm0, xmm0 ; ret
0x00000000000369c5 : jp 0x36950 ; clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000003afe : jp 0x3b78 ; xchg eax, ebx ; and cl, ah ; ret
0x00000000000cfe65 : jp 0xcfe66 ; and al, 4 ; add dword ptr [rbx + rcx - 0xa], esi ; ret
0x00000000000d5b57 : jp 0xd5b5f ; inc dword ptr [rbp + 0x31] ; imul bl ; ret 0x4890
0x00000000000d5b56 : jp 0xd5b60 ; inc dword ptr [rbp + 0x31] ; imul bl ; ret 0x4890
0x00000000000e1d42 : jp 0xe1db5 ; sub eax, 0xcab800 ; add byte ptr [rax], al ; syscall
0x00000000000f0e6b : jp 0xf0ea0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f5c11 : jp 0xf5c17 ; add byte ptr [rax], al ; syscall
0x000000000000f8f8 : jp 0xf902 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000102f4f : jrcxz 0x102f50 ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000010300f : jrcxz 0x103010 ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000116835 : jrcxz 0x116841 ; add al, ch ; ret
0x0000000000116834 : jrcxz 0x116842 ; add al, ch ; ret
0x00000000001391da : jrcxz 0x1391d5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001391d9 : jrcxz 0x1391d6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bcfa : jrcxz 0x13bcf5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bcf9 : jrcxz 0x13bcf6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015859c : jrcxz 0x1585cd ; enter -0x73b, 0x77 ; ret
0x00000000001632c4 : jrcxz 0x163315 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016336d : jrcxz 0x16335e ; push rbx ; ret
0x0000000000173de5 : jrcxz 0x173e3f ; ret
0x0000000000175fad : jrcxz 0x175f70 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000176b09 : jrcxz 0x176aed ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x0000000000199735 : jrcxz 0x199734 ; call qword ptr [rdx]
0x0000000000199771 : jrcxz 0x199770 ; call qword ptr [rbx]
0x00000000001a5335 : jrcxz 0x1a532e ; call qword ptr [rdi]
0x00000000001ad109 : jrcxz 0x1ad104 ; jmp qword ptr [rax]
0x0000000000001f93 : jrcxz 0x1f71 ; retf 0xbe35
0x0000000000001f5a : jrcxz 0x1fd7 ; retf 0x6321
0x000000000000275a : jrcxz 0x26fb ; retf
0x0000000000002e5a : jrcxz 0x2e5e ; loopne 0x2e4b ; stc ; out dx, al ; clc ; ret
0x0000000000002e5e : jrcxz 0x2e5e ; out dx, al ; clc ; ret
0x0000000000035155 : jrcxz 0x3516f ; add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000039196 : jrcxz 0x391d7 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000039195 : jrcxz 0x391d8 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000039c4d : jrcxz 0x39cba ; nop ; xor eax, eax ; ret
0x000000000004d221 : jrcxz 0x4d27c ; add byte ptr ss:[rax + 0x29], cl ; retf 0x8948
0x000000000004fe65 : jrcxz 0x4fee8 ; add byte ptr ss:[rax + 0xca], bh ; syscall
0x0000000000078e42 : jrcxz 0x78e94 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e5a3 : jrcxz 0x7e568 ; cmp r11d, 0xa ; je 0x7e5b4 ; ret
0x000000000007ffa1 : jrcxz 0x8002a ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000085e21 : jrcxz 0x85e4b ; xor eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000888ad : jrcxz 0x888c0 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000888ad : jrcxz 0x888c2 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000bf93b : jrcxz 0xbf941 ; add byte ptr [rax], al ; syscall
0x00000000000cedec : jrcxz 0xcedac ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e112c : jrcxz 0xe117d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e16ea : jrcxz 0xe1765 ; retf
0x00000000000e4902 : jrcxz 0xe4954 ; add esp, 1 ; call 0x213e7
0x00000000000ff69d : jrcxz 0xff6a6 ; dec dword ptr [rax - 0x75] ; adc eax, dword ptr [rcx - 0x77] ; ret
0x0000000000105054 : js 0x105069 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000001050d4 : js 0x1050e7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000110780 : js 0x11079e ; mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000118260 : js 0x118280 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000011f1c1 : js 0x11f1d4 ; retf 0xc90f
0x0000000000122bb0 : js 0x122bb0 ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x000000000012a183 : js 0x12a198 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000157134 : js 0x15713f ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000175ee8 : js 0x175ebc ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000175e81 : js 0x175f01 ; pop rdx ; retf
0x000000000017ce94 : js 0x17cea8 ; cli ; call rax
0x000000000017ce9c : js 0x17ceb0 ; cli ; jmp rax
0x00000000001868b0 : js 0x1868b3 ; cli ; inc dword ptr [rax - 4] ; cli ; jmp qword ptr [rax]
0x0000000000187971 : js 0x18795f ; call rax
0x0000000000187979 : js 0x187967 ; jmp rsp
0x0000000000187991 : js 0x18797f ; jmp qword ptr [rax]
0x000000000018798d : js 0x187995 ; add ah, cl ; js 0x187983 ; jmp qword ptr [rax]
0x00000000001891bc : js 0x1891bd ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000018b889 : js 0x18b884 ; call rsp
0x000000000018b891 : js 0x18b88c ; call qword ptr [rax]
0x000000000018d091 : js 0x18d08f ; call qword ptr [rax]
0x0000000000193240 : js 0x1932a3 ; add byte ptr [rax], al ; ret 0xffed
0x0000000000194dd1 : js 0x194dd9 ; add byte ptr [rdi + rbp - 0x12], bh ; jmp qword ptr [rbx]
0x0000000000194e6d : js 0x194e75 ; add byte ptr [rax + 0x32], dl ; out dx, al ; jmp rdi
0x0000000000196448 : js 0x1964ba ; stc ; jmp qword ptr [rbx]
0x0000000000197788 : js 0x197779 ; out dx, al ; jmp rcx
0x0000000000198058 : js 0x198061 ; out dx, eax ; call qword ptr [rax]
0x0000000000198a98 : js 0x198af3 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019ade8 : js 0x19adc5 ; sti ; call qword ptr [rbx]
0x000000000019b040 : js 0x19b023 ; add byte ptr [rax], al ; jl 0x19afd9 ; int1 ; call qword ptr [rax]
0x000000000019fd40 : js 0x19fd70 ; add dword ptr [rax], eax ; pushfq ; ja 0x19fd42 ; jmp qword ptr [rcx]
0x000000000019fde9 : js 0x19fde1 ; jmp qword ptr [rcx]
0x000000000019fe25 : js 0x19fe1d ; jmp qword ptr [rcx]
0x000000000019fe39 : js 0x19fe31 ; jmp qword ptr [rcx]
0x00000000001a1168 : js 0x1a1173 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000001a11e4 : js 0x1a11ef ; add byte ptr [rax], al ; and byte ptr [rcx + rax], bh ; add ah, ah ; ret
0x00000000001a18e8 : js 0x1a18bf ; hlt ; jmp qword ptr [rsi]
0x00000000001a2208 : js 0x1a2204 ; hlt ; jmp rcx
0x00000000001a3140 : js 0x1a31a4 ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x0000000000001ace : js 0x1ac3 ; fidiv word ptr [rbx] ; retf
0x00000000001ac52d : js 0x1ac52c ; jmp qword ptr [rdx]
0x00000000000221cb : js 0x221d6 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000278e3 : js 0x27870 ; ret 0x8348
0x000000000002c7eb : js 0x2c7f6 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002eac1 : js 0x2ea4d ; loopne 0x2ead4 ; movzx eax, ax ; ret
0x000000000002eb01 : js 0x2ea8d ; loopne 0x2eb0e ; movzx eax, ax ; ret
0x000000000002eba1 : js 0x2eb2d ; loopne 0x2ebb0 ; movzx eax, ax ; ret
0x000000000002ec81 : js 0x2ec0a ; loopne 0x2ec8a ; ret
0x000000000002ecfa : js 0x2ec83 ; loopne 0x2ed03 ; ret
0x000000000002ed0a : js 0x2ec96 ; loopne 0x2ed1d ; movzx eax, ax ; ret
0x000000000002ed4a : js 0x2ecd6 ; loopne 0x2ed57 ; movzx eax, ax ; ret
0x000000000002edea : js 0x2ed76 ; loopne 0x2edf9 ; movzx eax, ax ; ret
0x000000000002ee73 : js 0x2eec4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ee72 : js 0x2eec5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000030c5 : js 0x307b ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000031aa1 : js 0x31ab1 ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000031b7b : js 0x31b8b ; inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000035d9f : js 0x35df6 ; mov dword ptr [rsp + 0x80], eax ; syscall
0x0000000000035fad : js 0x35fff ; add esp, 0xd0 ; ret
0x0000000000035fac : js 0x36000 ; add esp, 0xd0 ; ret
0x0000000000036067 : js 0x360b6 ; add esp, 0x10 ; ret
0x00000000000384a5 : js 0x384c9 ; call rdx
0x0000000000045105 : js 0x4510e ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000004e1d2 : js 0x4e1f0 ; add byte ptr [rdi], cl ; push rax ; fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xe383
0x000000000004e1fe : js 0x4e219 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x16e8
0x000000000004fe66 : js 0x4fea6 ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000007601d : js 0x7602b ; ret
0x0000000000078811 : js 0x7884c ; add byte ptr [rsp + rcx + 0x48], dh ; add esp, 0x38 ; ret
0x000000000007f8e8 : js 0x7f8f3 ; ret
0x0000000000085f64 : js 0x85f7a ; add byte ptr [rax - 0x77], cl ; retf 0x9aeb
0x00000000000b1757 : js 0xb1744 ; retf
0x00000000000c5d71 : js 0xc5d77 ; add byte ptr [rax], al ; syscall
0x00000000000c66a7 : js 0xc66b3 ; ret
0x00000000000d9eed : js 0xd9f01 ; xchg eax, ebp ; ret
0x00000000000e61d5 : js 0xe61f1 ; cmp rbx, rax ; setl al ; pop rbx ; ret
0x00000000000e6354 : js 0xe636a ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000e6353 : js 0xe636b ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000ed163 : js 0xed14c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed9e3 : js 0xed9f9 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000ee436 : js 0xee447 ; cmp r8d, 2 ; jbe 0xee449 ; ret
0x00000000000ef452 : js 0xef465 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000f36a8 : js 0xf3695 ; ret 0xfffb
0x00000000000f8d98 : js 0xf8d24 ; loopne 0xf8dab ; movzx eax, ax ; ret
0x00000000000f8ec8 : js 0xf8e51 ; loopne 0xf8ed1 ; ret
0x00000000000f8f58 : js 0xf8ee4 ; loopne 0xf8f65 ; movzx eax, ax ; ret
0x00000000000f9258 : js 0xf91e4 ; loopne 0xf9267 ; movzx eax, ax ; ret
0x00000000000f9721 : js 0xf96ad ; loopne 0xf9734 ; movzx eax, ax ; ret
0x00000000000f9821 : js 0xf97aa ; loopne 0xf982a ; ret
0x00000000000f98a1 : js 0xf982d ; loopne 0xf98ae ; movzx eax, ax ; ret
0x00000000000f9b21 : js 0xf9aad ; loopne 0xf9b30 ; movzx eax, ax ; ret
0x00000000000a0768 : js 0xffffffffed3a09ce ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0796 : js 0xffffffffed3a0bfc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a07e8 : js 0xffffffffed3a104e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000010eb2d : lahf ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000197521 : lahf ; add byte ptr [rax], al ; fsubr st(2), st(0) ; out dx, al ; call qword ptr [rdx]
0x000000000018ad15 : lahf ; add dword ptr [rax], eax ; fsubr qword ptr [rbx - 0xa] ; jmp rsp
0x00000000001a75b5 : lahf ; add dword ptr [rax], eax ; pop rax ; sahf ; idiv bh ; retf 0
0x0000000000187475 : lahf ; cld ; call qword ptr [rax - 0x1f000360]
0x00000000001a0695 : lahf ; hlt ; call rcx
0x00000000000216fd : lahf ; mov bh, byte ptr [rcx] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000001764c3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000ff866 : lahf ; mov eax, 0xffffffff ; ret
0x0000000000151d9d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000175db2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000188779 : lahf ; out dx, al ; inc esp ; ret 0
0x00000000001765b4 : lahf ; push -0x57d3205 ; call 0xffffffffab2530b6
0x00000000001745c0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000061862 : lahf ; ret
0x0000000000055d39 : lahf ; ret 0x2941
0x000000000007df32 : lahf ; ret 0x3949
0x00000000000f0ffd : lahf ; ret 0x8545
0x0000000000173d1d : lahf ; ret 0x871e
0x000000000004bcb0 : lahf ; ret 0x87e
0x000000000004b898 : lahf ; ret 0x8e0f
0x000000000007e062 : lahf ; ret 0xcbe9
0x00000000000533af : lahf ; ret 0xd629
0x0000000000053c11 : lahf ; ret 0xd729
0x00000000000a1839 : lahf ; ret 0xea81
0x00000000000c199d : lahf ; retf
0x00000000000534ff : lahf ; rol byte ptr [rax + rcx*4 + 0x11], 0x29 ; ret
0x00000000001181c1 : lahf ; sbb dword ptr [rdx], ebp ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000831dd : lahf ; sub dword ptr [rbx], esi ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000015242d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018c27d : lar eax, word ptr [rax] ; cld ; idiv al ; call qword ptr [rax]
0x00000000000f1487 : lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000016458f : lcall [rax + 0x68ffec8a] ; mov esp, ebp ; call rax
0x0000000000188893 : lcall [rax + rcx*8 - 0x45f40000] ; out dx, al ; jmp rax
0x0000000000187507 : lcall [rax - 0x12000274] ; mov bh, ch ; jmp rax
0x0000000000188d03 : lcall [rax - 0x63ffff1c] ; out dx, eax ; jmp rsp
0x000000000018863b : lcall [rax - 0x63ffff47] ; insd dword ptr [rdi], dx ; out dx, al ; jmp rax
0x0000000000177827 : lcall [rax] ; retf
0x00000000001882bb : lcall [rbp + 0x359c0000] ; in al, dx ; call qword ptr [rax]
0x000000000011680d : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000109a40 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000ed049 : lcall [rbp + 0x41] ; pop rsp ; ret
0x0000000000179e1b : lcall [rbp + rcx*2 - 0xc] ; jmp qword ptr [rcx]
0x0000000000088a45 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c538d : lcall [rbx + 0x41] ; pop rsp ; pop rbp ; ret
0x000000000002b6a3 : lcall [rbx + 0x41] ; pop rsp ; ret
0x00000000000386c4 : lcall [rbx + 0x44] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a28b6 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036b27 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000036d57 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ab743 : lcall [rbx + 0x5d] ; pop r14 ; ret
0x0000000000070b60 : lcall [rbx + 0x5d] ; ret
0x000000000018d103 : lcall [rbx + rsi*4 + 1] ; add ah, bh ; jle 0x18d10d ; jmp rsp
0x000000000012a982 : lcall [rbx - 0x3d] ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000017a083 : lcall [rbx] ; hlt ; call qword ptr [rdi]
0x0000000000179eb3 : lcall [rcx - 0x38000bb2] ; hlt ; jmp rdx
0x000000000018c02b : lcall [rdi + rdi*8 + 1] ; add byte ptr [rsi + rdx*4 - 8], bh ; call rsp
0x0000000000187167 : lcall [rdx + 0x2afffb54] ; push rsp ; sti ; call rax
0x000000000017a593 : lcall [rdx] ; hlt ; inc dword ptr [rbp - 0xd] ; hlt ; jmp rdi
0x0000000000179cf3 : lcall [rip + 0x67fff410] ; adc dh, ah ; call rax
0x0000000000177a8b : lcall [rsi - 0x61001237] ; leave ; in eax, dx ; call qword ptr [rbx]
0x0000000000139866 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000731bf : lea eax, [r8 - 1] ; ret
0x00000000001101bb : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000b1c0a : lea eax, [rax + rax - 1] ; ret
0x00000000000df0cb : lea eax, [rax + rax*8 + 5] ; ret
0x00000000000a24c5 : lea eax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091a74 : lea eax, [rax + rdi + 0x10] ; ret
0x0000000000091a84 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000091f54 : lea eax, [rax + rdi + 0x30] ; ret
0x0000000000091a54 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000bfdb2 : lea eax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000731c0 : lea eax, [rax - 1] ; ret
0x00000000001963b9 : lea eax, [rax] ; add ah, al ; jge 0x1963b3 ; jmp qword ptr [rbx]
0x0000000000196321 : lea eax, [rax] ; add ah, bh ; jp 0x19631b ; call qword ptr [rdx]
0x00000000001962f1 : lea eax, [rax] ; add ah, ch ; jp 0x1962eb ; call qword ptr [rdx]
0x00000000000ecfd1 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x000000000011a28b : lea eax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c9441 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9331 : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110370 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000001101bc : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x000000000009735d : lea eax, [rcx + rsi] ; ret
0x00000000000a0f04 : lea eax, [rcx - 1] ; ret
0x00000000000885df : lea eax, [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000018d0e5 : lea eax, [rcx] ; add byte ptr [rsp + rdi*2], ch ; cli ; call rsp
0x000000000009de5c : lea eax, [rdi + 0x10] ; ret
0x000000000009de71 : lea eax, [rdi + 0x11] ; ret
0x000000000009de8f : lea eax, [rdi + 0x12] ; ret
0x000000000009deaf : lea eax, [rdi + 0x13] ; ret
0x000000000009ded2 : lea eax, [rdi + 0x14] ; ret
0x000000000009def1 : lea eax, [rdi + 0x15] ; ret
0x000000000009df11 : lea eax, [rdi + 0x16] ; ret
0x000000000009df31 : lea eax, [rdi + 0x17] ; ret
0x000000000009df54 : lea eax, [rdi + 0x18] ; ret
0x000000000009df79 : lea eax, [rdi + 0x19] ; ret
0x000000000009df97 : lea eax, [rdi + 0x1a] ; ret
0x000000000009dfb7 : lea eax, [rdi + 0x1b] ; ret
0x000000000009dfd3 : lea eax, [rdi + 0x1c] ; ret
0x000000000009dff3 : lea eax, [rdi + 0x1d] ; ret
0x000000000009e013 : lea eax, [rdi + 0x1e] ; ret
0x000000000009e033 : lea eax, [rdi + 0x1f] ; ret
0x000000000009ee93 : lea eax, [rdi + 0x20] ; ret
0x000000000009f0f9 : lea eax, [rdi + 0x40] ; ret
0x0000000000157319 : lea eax, [rdi + 0x41] ; vzeroupper ; ret
0x00000000001574bc : lea eax, [rdi + 0x80] ; vzeroupper ; ret
0x000000000009ddad : lea eax, [rdi + 0xa] ; ret
0x000000000009ddcd : lea eax, [rdi + 0xb] ; ret
0x000000000009ddef : lea eax, [rdi + 0xc] ; ret
0x000000000009de0f : lea eax, [rdi + 0xd] ; ret
0x000000000009de2f : lea eax, [rdi + 0xe] ; ret
0x000000000009de49 : lea eax, [rdi + 0xf] ; ret
0x000000000009dcf7 : lea eax, [rdi + 1] ; ret
0x0000000000156b77 : lea eax, [rdi + 1] ; vzeroupper ; ret
0x000000000009dd0a : lea eax, [rdi + 2] ; ret
0x0000000000156b8b : lea eax, [rdi + 2] ; vzeroupper ; ret
0x000000000009dd15 : lea eax, [rdi + 3] ; ret
0x0000000000156ba5 : lea eax, [rdi + 3] ; vzeroupper ; ret
0x000000000009dd28 : lea eax, [rdi + 4] ; ret
0x000000000009dd3d : lea eax, [rdi + 5] ; ret
0x000000000009dd5b : lea eax, [rdi + 6] ; ret
0x000000000009dd67 : lea eax, [rdi + 7] ; ret
0x000000000009dd7a : lea eax, [rdi + 8] ; ret
0x000000000010f8a0 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009dd8f : lea eax, [rdi + 9] ; ret
0x0000000000091aa9 : lea eax, [rdi + rax + 0x10] ; ret
0x0000000000091ab9 : lea eax, [rdi + rax + 0x20] ; ret
0x00000000000919b3 : lea eax, [rdi + rax + 0x30] ; ret
0x00000000001545d5 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000008e446 : lea eax, [rdi + rax - 1] ; mov qword ptr [rdi], rdx ; ret
0x000000000008e434 : lea eax, [rdi + rax - 1] ; ret
0x0000000000096fa7 : lea eax, [rdi + rax] ; ret
0x0000000000157273 : lea eax, [rdi + rax] ; vzeroupper ; ret
0x000000000014f91a : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000156bbd : lea eax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000110620 : lea eax, [rdi + rsi + 8] ; ret
0x000000000002e835 : lea eax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000097259 : lea eax, [rdi + rsi] ; ret
0x00000000000b303e : lea eax, [rdi - 0x10] ; ret
0x00000000000b31a1 : lea eax, [rdi - 0xc] ; ret
0x00000000000b31c1 : lea eax, [rdi - 4] ; ret
0x00000000000b31b1 : lea eax, [rdi - 8] ; ret
0x000000000009dce3 : lea eax, [rdi] ; ret
0x0000000000156af5 : lea eax, [rdi] ; vzeroupper ; ret
0x0000000000146b7d : lea eax, [rdx + 0xa] ; ret
0x0000000000146b9d : lea eax, [rdx + 0xb] ; ret
0x0000000000146bbf : lea eax, [rdx + 0xc] ; ret
0x0000000000146bdf : lea eax, [rdx + 0xd] ; ret
0x0000000000146bff : lea eax, [rdx + 0xe] ; ret
0x0000000000146a8f : lea eax, [rdx + 0xf] ; ret
0x0000000000146ab7 : lea eax, [rdx + 1] ; ret
0x0000000000146acd : lea eax, [rdx + 2] ; ret
0x0000000000146ae5 : lea eax, [rdx + 3] ; ret
0x0000000000146afb : lea eax, [rdx + 4] ; ret
0x0000000000146b0d : lea eax, [rdx + 5] ; ret
0x0000000000146b2b : lea eax, [rdx + 6] ; ret
0x0000000000146a37 : lea eax, [rdx + 7] ; ret
0x0000000000146b3d : lea eax, [rdx + 8] ; ret
0x0000000000146b5d : lea eax, [rdx + 9] ; ret
0x00000000000731ae : lea eax, [rdx + rdi] ; ret
0x00000000000a1953 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000084e81 : lea eax, [rdx - 0x10] ; ret
0x0000000000084e68 : lea eax, [rdx - 8] ; ret
0x0000000000146aa5 : lea eax, [rdx] ; ret
0x0000000000063697 : lea eax, [rip + 0x114943] ; jmp rax
0x000000000002db50 : lea eax, [rip + 0x14fcc7] ; ret
0x0000000000021ef1 : lea eax, [rip + 0x15b467] ; ret
0x0000000000021f01 : lea eax, [rip + 0x15d1f9] ; ret
0x00000000000886ba : lea eax, [rip + 0x18ff0] ; cmovne rax, rdx ; ret
0x00000000000f13fb : lea eax, [rip + 0x2c74ff] ; pop rbp ; pop r12 ; ret
0x00000000000ee5f4 : lea eax, [rip + 0x2ca046] ; pop rbx ; ret
0x00000000000f3769 : lea eax, [rip + 0x8bb59] ; pop rbx ; ret
0x00000000000a2410 : lea eax, [rip + 0xb57ca] ; je 0xa23da ; ret
0x0000000000088580 : lea eax, [rip + 0xc86ea] ; je 0x8854a ; ret
0x00000000000b460a : lea eax, [rip - 0x100] ; ret
0x00000000000b472a : lea eax, [rip - 0x110] ; ret
0x00000000001030ea : lea eax, [rip - 0x61a50] ; cmovne rax, rdx ; ret
0x0000000000162085 : lea eax, [rip - 0x76b80000] ; ret 0x8949
0x00000000000cee60 : lea eax, [rsi + 1] ; ret
0x0000000000114b25 : lea ebp, [rbp + rax + 1] ; call 0x215a6
0x0000000000037144 : lea ebp, [rdi + rax] ; mov rdi, rbp ; call r12
0x00000000000620e5 : lea ebx, [rax] ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000620b0 : lea ebx, [rax] ; idiv edi ; dec dword ptr [rcx - 0x77] ; ret 0xbd83
0x00000000001745d1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000010b800 : lea ebx, [rsp + 0x150] ; call 0xe7a79
0x00000000000a266b : lea ecx, [rax + 1] ; call rbx
0x00000000000a279d : lea ecx, [rax + 4] ; call rbx
0x00000000000a2b6e : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000012de50 : lea ecx, [rbp + 2] ; jmp 0x12de24
0x00000000000c81a0 : lea ecx, [rbp + 2] ; jmp 0xc8174
0x0000000000131f50 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000009c59e : lea ecx, [rbx + rcx] ; jmp rcx
0x00000000000d737f : lea ecx, [rbx - 2] ; add rdx, rcx ; jmp 0xd7399
0x00000000000f62ca : lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000012f04a : lea ecx, [rdi] ; mov bh, 0x48 ; adc byte ptr [rbx + rcx*4 + 5], cl ; ret 0x2877
0x0000000000144386 : lea ecx, [rdx + 0x10] ; jne 0x1448d9 ; ret
0x0000000000144684 : lea ecx, [rdx + 0xa] ; jne 0x1448d9 ; ret
0x00000000001446a4 : lea ecx, [rdx + 0xb] ; jne 0x1448d9 ; ret
0x00000000001446c4 : lea ecx, [rdx + 0xc] ; jne 0x1448d9 ; ret
0x00000000001446e6 : lea ecx, [rdx + 0xd] ; jne 0x1448d9 ; ret
0x0000000000144706 : lea ecx, [rdx + 0xe] ; jne 0x1448d9 ; ret
0x0000000000144726 : lea ecx, [rdx + 0xf] ; jne 0x1448d9 ; ret
0x000000000014457c : lea ecx, [rdx + 1] ; jne 0x1448d9 ; ret
0x000000000014459e : lea ecx, [rdx + 2] ; jne 0x1448d9 ; ret
0x00000000001445c4 : lea ecx, [rdx + 3] ; jne 0x1448d9 ; ret
0x00000000001445dc : lea ecx, [rdx + 4] ; jne 0x1448d9 ; ret
0x0000000000070cf6 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000144602 : lea ecx, [rdx + 5] ; jne 0x1448d9 ; ret
0x0000000000144624 : lea ecx, [rdx + 6] ; jne 0x1448d9 ; ret
0x0000000000144642 : lea ecx, [rdx + 7] ; jne 0x1448d9 ; ret
0x000000000014431e : lea ecx, [rdx + 8] ; jne 0x1448d9 ; ret
0x0000000000144664 : lea ecx, [rdx + 9] ; jne 0x1448d9 ; ret
0x0000000000084e76 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000087957 : lea ecx, [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000085f61 : lea ecx, [rip + 0xf78b6] ; mov rdx, rcx ; jmp 0x85f0e
0x00000000000f96a7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000075724 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000118ba8 : lea ecx, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001189e9 : lea ecx, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000a2b0e : lea ecx, [rsp + 0x20] ; call rbx
0x00000000000a2798 : lea ecx, [rsp + 0x20] ; lea rcx, [rax + 4] ; call rbx
0x00000000000a2666 : lea ecx, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x00000000000a2fd5 : lea ecx, [rsp + 0x28] ; mov rdi, r12 ; call rbx
0x0000000000119012 : lea ecx, [rsp + 0x30] ; call qword ptr [rax]
0x00000000000a2944 : lea ecx, [rsp + 0x30] ; call r12
0x00000000001227fb : lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a2cfa : lea ecx, [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x000000000012f3ff : lea ecx, [rsp + 8] ; call 0xdbe26
0x000000000011825f : lea edi, [rax + 0x18] ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000221ca : lea edi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000005af93 : lea edi, [rax - 0x17000006] ; retf
0x000000000011e7de : lea edi, [rbp + 0x10] ; call rax
0x0000000000120e22 : lea edi, [rbx + 0x58] ; call rax
0x0000000000120412 : lea edi, [rbx + 0x68] ; call rax
0x000000000011dc55 : lea edi, [rbx + 0xc8] ; call rax
0x000000000009d10d : lea edi, [rdi + 0x10] ; jne 0x9d7e9 ; ret
0x000000000009e801 : lea edi, [rdi + 0x10] ; jne 0x9f009 ; ret
0x000000000009d130 : lea edi, [rdi + 0x11] ; jne 0x9d7e9 ; ret
0x000000000009e824 : lea edi, [rdi + 0x11] ; jne 0x9f009 ; ret
0x000000000009d155 : lea edi, [rdi + 0x12] ; jne 0x9d7e9 ; ret
0x000000000009e849 : lea edi, [rdi + 0x12] ; jne 0x9f009 ; ret
0x000000000009d173 : lea edi, [rdi + 0x13] ; jne 0x9d7e9 ; ret
0x000000000009e877 : lea edi, [rdi + 0x13] ; jne 0x9f009 ; ret
0x000000000009d193 : lea edi, [rdi + 0x14] ; jne 0x9d7e9 ; ret
0x000000000009e8a7 : lea edi, [rdi + 0x14] ; jne 0x9f009 ; ret
0x000000000009d1b6 : lea edi, [rdi + 0x15] ; jne 0x9d7e9 ; ret
0x000000000009e8da : lea edi, [rdi + 0x15] ; jne 0x9f009 ; ret
0x000000000009d1d5 : lea edi, [rdi + 0x16] ; jne 0x9d7e9 ; ret
0x000000000009e909 : lea edi, [rdi + 0x16] ; jne 0x9f009 ; ret
0x000000000009d1f5 : lea edi, [rdi + 0x17] ; jne 0x9d7e9 ; ret
0x000000000009e939 : lea edi, [rdi + 0x17] ; jne 0x9f009 ; ret
0x000000000009d215 : lea edi, [rdi + 0x18] ; jne 0x9d7e9 ; ret
0x000000000009e969 : lea edi, [rdi + 0x18] ; jne 0x9f009 ; ret
0x000000000009d238 : lea edi, [rdi + 0x19] ; jne 0x9d7e9 ; ret
0x000000000009e99c : lea edi, [rdi + 0x19] ; jne 0x9f009 ; ret
0x000000000009d26d : lea edi, [rdi + 0x1a] ; jne 0x9d7e9 ; ret
0x000000000009e9d1 : lea edi, [rdi + 0x1a] ; jne 0x9f009 ; ret
0x000000000009d29b : lea edi, [rdi + 0x1b] ; jne 0x9d7e9 ; ret
0x000000000009e9ff : lea edi, [rdi + 0x1b] ; jne 0x9f009 ; ret
0x000000000009d2cb : lea edi, [rdi + 0x1c] ; jne 0x9d7e9 ; ret
0x000000000009ea2f : lea edi, [rdi + 0x1c] ; jne 0x9f009 ; ret
0x000000000009d2f7 : lea edi, [rdi + 0x1d] ; jne 0x9d7e9 ; ret
0x000000000009ea5b : lea edi, [rdi + 0x1d] ; jne 0x9f009 ; ret
0x000000000009d327 : lea edi, [rdi + 0x1e] ; jne 0x9d7e9 ; ret
0x000000000009ea8b : lea edi, [rdi + 0x1e] ; jne 0x9f009 ; ret
0x000000000009d357 : lea edi, [rdi + 0x1f] ; jne 0x9d7e9 ; ret
0x000000000009eabb : lea edi, [rdi + 0x1f] ; jne 0x9f009 ; ret
0x000000000009d387 : lea edi, [rdi + 0x20] ; jne 0x9d7e9 ; ret
0x000000000009eaeb : lea edi, [rdi + 0x20] ; jne 0x9f009 ; ret
0x000000000009d053 : lea edi, [rdi + 0xa] ; jne 0x9d7e9 ; ret
0x000000000009e707 : lea edi, [rdi + 0xa] ; jne 0x9f009 ; ret
0x000000000009d071 : lea edi, [rdi + 0xb] ; jne 0x9d7e9 ; ret
0x000000000009e735 : lea edi, [rdi + 0xb] ; jne 0x9f009 ; ret
0x000000000009d091 : lea edi, [rdi + 0xc] ; jne 0x9d7e9 ; ret
0x000000000009e755 : lea edi, [rdi + 0xc] ; jne 0x9f009 ; ret
0x000000000009d0b3 : lea edi, [rdi + 0xd] ; jne 0x9d7e9 ; ret
0x000000000009e777 : lea edi, [rdi + 0xd] ; jne 0x9f009 ; ret
0x000000000009d0d3 : lea edi, [rdi + 0xe] ; jne 0x9d7e9 ; ret
0x000000000009e7a7 : lea edi, [rdi + 0xe] ; jne 0x9f009 ; ret
0x000000000009d0f3 : lea edi, [rdi + 0xf] ; jne 0x9d7e9 ; ret
0x000000000009e7d7 : lea edi, [rdi + 0xf] ; jne 0x9f009 ; ret
0x000000000009cf27 : lea edi, [rdi + 1] ; jne 0x9d7e9 ; ret
0x000000000009e5da : lea edi, [rdi + 1] ; jne 0x9f009 ; ret
0x000000000009cf4b : lea edi, [rdi + 2] ; jne 0x9d7e9 ; ret
0x000000000009e5ff : lea edi, [rdi + 2] ; jne 0x9f009 ; ret
0x000000000009cf6e : lea edi, [rdi + 3] ; jne 0x9d7e9 ; ret
0x000000000009e622 : lea edi, [rdi + 3] ; jne 0x9f009 ; ret
0x000000000009cf89 : lea edi, [rdi + 4] ; jne 0x9d7e9 ; ret
0x000000000009e63d : lea edi, [rdi + 4] ; jne 0x9f009 ; ret
0x000000000009cfac : lea edi, [rdi + 5] ; jne 0x9d7e9 ; ret
0x000000000009e660 : lea edi, [rdi + 5] ; jne 0x9f009 ; ret
0x000000000009cfd1 : lea edi, [rdi + 6] ; jne 0x9d7e9 ; ret
0x000000000009e685 : lea edi, [rdi + 6] ; jne 0x9f009 ; ret
0x000000000009cfef : lea edi, [rdi + 7] ; jne 0x9d7e9 ; ret
0x000000000009e6a3 : lea edi, [rdi + 7] ; jne 0x9f009 ; ret
0x000000000009d00b : lea edi, [rdi + 8] ; jne 0x9d7e9 ; ret
0x000000000009e6bf : lea edi, [rdi + 8] ; jne 0x9f009 ; ret
0x000000000009d02e : lea edi, [rdi + 9] ; jne 0x9d7e9 ; ret
0x000000000009e6e2 : lea edi, [rdi + 9] ; jne 0x9f009 ; ret
0x00000000000c1b26 : lea edi, [rip + 0x2f683c] ; call 0x7e548
0x00000000001027e1 : lea edi, [rip - 0x167] ; call rax
0x0000000000064532 : lea edi, [rip - 0x890] ; add rax, rdi ; jmp rax
0x00000000000b4c46 : lea edi, [rsi + 0x11] ; call 0x2166d
0x000000000007d591 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000732e7 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005c724 : lea edx, [rax - 0x17000006] ; ret 0x165
0x0000000000036959 : lea edx, [rax - 1] ; mov dword ptr [rip + 0x37e846], edx ; ret
0x0000000000132024 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000001021dc : lea edx, [rcx + 0x70] ; call rax
0x00000000000da4c0 : lea edx, [rdx + rax*8] ; jmp 0xda4df
0x000000000008e8f6 : lea edx, [rdx + rcx] ; jmp r10
0x00000000000f9483 : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000132418 : lea edx, [rdx - 0x40] ; jmp r9
0x00000000000872fa : lea edx, [rip + 0x10520] ; cmovne rax, rdx ; ret
0x00000000000878ea : lea edx, [rip + 0x11b50] ; cmovne rax, rdx ; ret
0x00000000001220a6 : lea edx, [rip + 0x2b54] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000873aa : lea edx, [rip + 0xa8130] ; cmovne rax, rdx ; ret
0x0000000000087954 : lea edx, [rip + 0xa8de6] ; cmovne rax, rdx ; ret
0x000000000008741a : lea edx, [rip + 0xb9cb0] ; cmovne rax, rdx ; ret
0x00000000000879aa : lea edx, [rip + 0xbaed0] ; cmovne rax, rdx ; ret
0x000000000008884a : lea edx, [rip + 0xbcbb0] ; cmovne rax, rdx ; ret
0x00000000000888aa : lea edx, [rip + 0xbe360] ; cmovne rax, rdx ; ret
0x000000000008734d : lea edx, [rip + 0xd573d] ; cmovne rax, rdx ; ret
0x00000000000a349a : lea edx, [rip + 0xfd40] ; cmovne rax, rdx ; ret
0x00000000000ee81a : lea edx, [rsi + 1] ; jne 0xee7f6 ; ret
0x00000000000d737b : lea edx, [rsi + rdx + 2] ; lea ecx, [rbx - 2] ; add rdx, rcx ; jmp 0xd739d
0x0000000000055dde : lea esi, [rax - 0x77000005] ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000071b63 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000003012 : lea esi, [rdi] ; ret 0x793b
0x000000000006a2b8 : lea esi, [rip + 0x11a] ; add rax, rsi ; jmp rax
0x0000000000042d49 : lea esi, [rip + 0x1f1] ; call rax
0x000000000006f4c7 : lea esi, [rip + 0x243] ; call rax
0x000000000006a0d3 : lea esi, [rip + 0x2ff] ; add rax, rsi ; jmp rax
0x0000000000069a53 : lea esi, [rip + 0x97f] ; add rax, rsi ; jmp rax
0x000000000007b683 : lea esi, [rip - 0x119] ; call rax
0x000000000007cbef : lea esi, [rip - 0x1685] ; call rax
0x000000000006f887 : lea esi, [rip - 0x17d] ; call rax
0x000000000007cef5 : lea esi, [rip - 0x198b] ; call rax
0x000000000007d278 : lea esi, [rip - 0x1d0e] ; call rax
0x000000000006a5c6 : lea esi, [rip - 0x1f4] ; add rax, rsi ; jmp rax
0x000000000006a623 : lea esi, [rip - 0x251] ; add rax, rsi ; jmp rax
0x000000000006a684 : lea esi, [rip - 0x2b2] ; add rax, rsi ; jmp rax
0x000000000006a6d7 : lea esi, [rip - 0x305] ; add rax, rsi ; jmp rax
0x000000000007b9c1 : lea esi, [rip - 0x457] ; call rax
0x000000000006b1f6 : lea esi, [rip - 0xe24] ; add rax, rsi ; jmp rax
0x00000000000a1324 : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000011a695 : lea esi, [rsp + 8] ; call qword ptr [rax]
0x0000000000110a95 : lea esi, [rsp + 8] ; mov rdi, rbp ; call rax
0x0000000000124e0f : lea esi, [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001109ea : lea esi, [rsp + 8] ; mov rdi, rbx ; call rax
0x0000000000104f00 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000c364d : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000037cb3 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000008e8f5 : lea r10, [r10 + r9] ; jmp r10
0x0000000000114b24 : lea r13, [r13 + rax + 1] ; call 0x215a7
0x0000000000063696 : lea r8, [rip + 0x114943] ; jmp rax
0x0000000000131f4f : lea r9, [r11 + r9] ; jmp r9
0x0000000000075723 : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000118ba7 : lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001189e8 : lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000a2b0d : lea r9, [rsp + 0x20] ; call rbx
0x00000000000a2797 : lea r9, [rsp + 0x20] ; lea rcx, [rax + 4] ; call rbx
0x00000000000a2665 : lea r9, [rsp + 0x28] ; lea rcx, [rax + 1] ; call rbx
0x00000000000a2fd4 : lea r9, [rsp + 0x28] ; mov rdi, r12 ; call rbx
0x0000000000119011 : lea r9, [rsp + 0x30] ; call qword ptr [rax]
0x00000000000a2943 : lea r9, [rsp + 0x30] ; call r12
0x00000000001227fa : lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a2cf9 : lea r9, [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000a2942 : lea r9, ds:[rsp + 0x30] ; call r12
0x00000000000c63f1 : lea rax, [rax + rax - 1] ; ret
0x00000000000a24c4 : lea rax, [rax + rbx*4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091a73 : lea rax, [rax + rdi + 0x10] ; ret
0x0000000000091a83 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000091f53 : lea rax, [rax + rdi + 0x30] ; ret
0x0000000000091a53 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000bfdb1 : lea rax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011a28a : lea rax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c9440 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9330 : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009735c : lea rax, [rcx + rsi] ; ret
0x00000000000a0f03 : lea rax, [rcx - 1] ; ret
0x000000000009de5b : lea rax, [rdi + 0x10] ; ret
0x000000000009de70 : lea rax, [rdi + 0x11] ; ret
0x000000000009de8e : lea rax, [rdi + 0x12] ; ret
0x000000000009deae : lea rax, [rdi + 0x13] ; ret
0x000000000009ded1 : lea rax, [rdi + 0x14] ; ret
0x000000000009def0 : lea rax, [rdi + 0x15] ; ret
0x000000000009df10 : lea rax, [rdi + 0x16] ; ret
0x000000000009df30 : lea rax, [rdi + 0x17] ; ret
0x000000000009df53 : lea rax, [rdi + 0x18] ; ret
0x000000000009df78 : lea rax, [rdi + 0x19] ; ret
0x000000000009df96 : lea rax, [rdi + 0x1a] ; ret
0x000000000009dfb6 : lea rax, [rdi + 0x1b] ; ret
0x000000000009dfd2 : lea rax, [rdi + 0x1c] ; ret
0x000000000009dff2 : lea rax, [rdi + 0x1d] ; ret
0x000000000009e012 : lea rax, [rdi + 0x1e] ; ret
0x000000000009e032 : lea rax, [rdi + 0x1f] ; ret
0x000000000009ee92 : lea rax, [rdi + 0x20] ; ret
0x000000000009f0f8 : lea rax, [rdi + 0x40] ; ret
0x0000000000157318 : lea rax, [rdi + 0x41] ; vzeroupper ; ret
0x000000000009ddac : lea rax, [rdi + 0xa] ; ret
0x000000000009ddcc : lea rax, [rdi + 0xb] ; ret
0x000000000009ddee : lea rax, [rdi + 0xc] ; ret
0x000000000009de0e : lea rax, [rdi + 0xd] ; ret
0x000000000009de2e : lea rax, [rdi + 0xe] ; ret
0x000000000009de48 : lea rax, [rdi + 0xf] ; ret
0x000000000009dcf6 : lea rax, [rdi + 1] ; ret
0x0000000000156b76 : lea rax, [rdi + 1] ; vzeroupper ; ret
0x000000000009dd09 : lea rax, [rdi + 2] ; ret
0x0000000000156b8a : lea rax, [rdi + 2] ; vzeroupper ; ret
0x000000000009dd14 : lea rax, [rdi + 3] ; ret
0x0000000000156ba4 : lea rax, [rdi + 3] ; vzeroupper ; ret
0x000000000009dd27 : lea rax, [rdi + 4] ; ret
0x000000000009dd3c : lea rax, [rdi + 5] ; ret
0x000000000009dd5a : lea rax, [rdi + 6] ; ret
0x000000000009dd66 : lea rax, [rdi + 7] ; ret
0x000000000009dd79 : lea rax, [rdi + 8] ; ret
0x000000000009dd8e : lea rax, [rdi + 9] ; ret
0x0000000000157272 : lea rax, [rdi + r8] ; vzeroupper ; ret
0x0000000000091aa8 : lea rax, [rdi + rax + 0x10] ; ret
0x0000000000091ab8 : lea rax, [rdi + rax + 0x20] ; ret
0x00000000000919b2 : lea rax, [rdi + rax + 0x30] ; ret
0x00000000001545d4 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000008e445 : lea rax, [rdi + rax - 1] ; mov qword ptr [rdi], rdx ; ret
0x000000000008e433 : lea rax, [rdi + rax - 1] ; ret
0x0000000000096fa6 : lea rax, [rdi + rax] ; ret
0x000000000014f919 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000156bbc : lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000011061f : lea rax, [rdi + rsi + 8] ; ret
0x000000000002e834 : lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000097258 : lea rax, [rdi + rsi] ; ret
0x00000000000b303d : lea rax, [rdi - 0x10] ; ret
0x00000000000b31a0 : lea rax, [rdi - 0xc] ; ret
0x00000000000b31c0 : lea rax, [rdi - 4] ; ret
0x00000000000b31b0 : lea rax, [rdi - 8] ; ret
0x000000000009dce2 : lea rax, [rdi] ; ret
0x0000000000156af4 : lea rax, [rdi] ; vzeroupper ; ret
0x0000000000146b7c : lea rax, [rdx + 0xa] ; ret
0x0000000000146b9c : lea rax, [rdx + 0xb] ; ret
0x0000000000146bbe : lea rax, [rdx + 0xc] ; ret
0x0000000000146bde : lea rax, [rdx + 0xd] ; ret
0x0000000000146bfe : lea rax, [rdx + 0xe] ; ret
0x0000000000146a8e : lea rax, [rdx + 0xf] ; ret
0x0000000000146ab6 : lea rax, [rdx + 1] ; ret
0x0000000000146acc : lea rax, [rdx + 2] ; ret
0x0000000000146ae4 : lea rax, [rdx + 3] ; ret
0x0000000000146afa : lea rax, [rdx + 4] ; ret
0x0000000000146b0c : lea rax, [rdx + 5] ; ret
0x0000000000146b2a : lea rax, [rdx + 6] ; ret
0x0000000000146a36 : lea rax, [rdx + 7] ; ret
0x0000000000146b3c : lea rax, [rdx + 8] ; ret
0x0000000000146b5c : lea rax, [rdx + 9] ; ret
0x0000000000084e80 : lea rax, [rdx - 0x10] ; ret
0x0000000000084e67 : lea rax, [rdx - 8] ; ret
0x0000000000146aa4 : lea rax, [rdx] ; ret
0x000000000002db4f : lea rax, [rip + 0x14fcc7] ; ret
0x0000000000021ef0 : lea rax, [rip + 0x15b467] ; ret
0x0000000000021f00 : lea rax, [rip + 0x15d1f9] ; ret
0x00000000000ee5f3 : lea rax, [rip + 0x2ca046] ; pop rbx ; ret
0x00000000000f3768 : lea rax, [rip + 0x8bb59] ; pop rbx ; ret
0x00000000000b4609 : lea rax, [rip - 0x100] ; ret
0x00000000000b4729 : lea rax, [rip - 0x110] ; ret
0x00000000000b3179 : lea rax, es:[rdi - 0x10] ; ret
0x0000000000037143 : lea rbp, [rdi + rax] ; mov rdi, rbp ; call r12
0x000000000009c59d : lea rcx, [r11 + rcx] ; jmp rcx
0x000000000012de4f : lea rcx, [r13 + 2] ; jmp 0x12de25
0x00000000000c819f : lea rcx, [r13 + 2] ; jmp 0xc8175
0x00000000000a266a : lea rcx, [rax + 1] ; call rbx
0x00000000000a279c : lea rcx, [rax + 4] ; call rbx
0x00000000000a2b6d : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000070cf5 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000084e75 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000085f60 : lea rcx, [rip + 0xf78b6] ; mov rdx, rcx ; jmp 0x85f0f
0x00000000000f96a6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000012f3fe : lea rcx, [rsp + 8] ; call 0xdbe27
0x00000000000b4c45 : lea rdi, [r14 + 0x11] ; call 0x2166e
0x000000000011825e : lea rdi, [rax + 0x18] ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000011e7dd : lea rdi, [rbp + 0x10] ; call rax
0x0000000000120e21 : lea rdi, [rbx + 0x58] ; call rax
0x0000000000120411 : lea rdi, [rbx + 0x68] ; call rax
0x000000000011dc54 : lea rdi, [rbx + 0xc8] ; call rax
0x00000000000c1b25 : lea rdi, [rip + 0x2f683c] ; call 0x7e549
0x00000000001027e0 : lea rdi, [rip - 0x167] ; call rax
0x00000000000da4bf : lea rdx, [r10 + rax*8] ; jmp 0xda4e0
0x0000000000132023 : lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001021db : lea rdx, [rcx + 0x70] ; call rax
0x00000000000f9482 : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000132417 : lea rdx, [rdx - 0x40] ; jmp r9
0x00000000000ee819 : lea rdx, [rsi + 1] ; jne 0xee7f7 ; ret
0x000000000011a717 : lea rsi, [r12 + 8] ; call qword ptr [rax]
0x0000000000042d48 : lea rsi, [rip + 0x1f1] ; call rax
0x000000000006f4c6 : lea rsi, [rip + 0x243] ; call rax
0x000000000007b682 : lea rsi, [rip - 0x119] ; call rax
0x000000000007cbee : lea rsi, [rip - 0x1685] ; call rax
0x000000000006f886 : lea rsi, [rip - 0x17d] ; call rax
0x000000000007cef4 : lea rsi, [rip - 0x198b] ; call rax
0x000000000007d277 : lea rsi, [rip - 0x1d0e] ; call rax
0x000000000007b9c0 : lea rsi, [rip - 0x457] ; call rax
0x00000000000a1323 : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000011a694 : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000110a94 : lea rsi, [rsp + 8] ; mov rdi, rbp ; call rax
0x0000000000124e0e : lea rsi, [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001109e9 : lea rsi, [rsp + 8] ; mov rdi, rbx ; call rax
0x00000000000c364c : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000131bb7 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007fe03 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001888dd : leave ; add byte ptr [rax], al ; sub al, 0xbe ; out dx, al ; inc dword ptr [rax] ; retf 0
0x00000000000c8545 : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000018b6d5 : leave ; add dword ptr [rax], eax ; pushfq ; sub bh, dh ; jmp rax
0x000000000014b887 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000036461 : leave ; add edi, esi ; ret 0
0x000000000002b242 : leave ; call r15
0x0000000000002ce0 : leave ; clc ; ret
0x00000000000a11c6 : leave ; cmove rax, rdx ; ret
0x00000000001a14a5 : leave ; hlt ; jmp qword ptr [rcx]
0x000000000018ba81 : leave ; idiv edi ; rcr bh, 1 ; add dword ptr [rax], eax ; pop rsp ; retf
0x0000000000177a91 : leave ; in eax, dx ; call qword ptr [rbx]
0x0000000000178e39 : leave ; int1 ; jmp rax
0x0000000000163482 : leave ; je 0x16348a ; call rcx
0x000000000002c5b7 : leave ; je 0x2c5bf ; call rcx
0x000000000003684c : leave ; je 0x36844 ; ret
0x000000000008e283 : leave ; jmp rcx
0x000000000011254c : leave ; jne 0x112530 ; ret
0x000000000008e099 : leave ; jne 0x8e08c ; ret
0x000000000008e1e8 : leave ; jne 0x8e1de ; xor eax, eax ; ret
0x00000000000a0ce0 : leave ; jne 0xa0cd3 ; ret
0x00000000000a0d90 : leave ; jne 0xa0d83 ; ret
0x00000000000a1050 : leave ; jne 0xa1047 ; sub rax, 1 ; ret
0x00000000000a21ac : leave ; jne 0xa21a4 ; ret
0x00000000000a227f : leave ; jne 0xa2278 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000e7caa : leave ; jne 0xe7ce0 ; mov eax, 0x10d ; syscall
0x00000000000fdb53 : leave ; jne 0xfdb44 ; ret
0x000000000014f918 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000009bec1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000858f0 : leave ; mov dword ptr fs:[rax], 0xc ; jmp 0x858ce
0x000000000011f226 : leave ; mov edx, 8 ; call 0x11b508
0x00000000001891e1 : leave ; out dx, eax ; dec dword ptr [rax + 0x5c0000fb] ; retf 0xffef
0x0000000000040222 : leave ; ret
0x00000000000347d3 : leave ; retf
0x0000000000028673 : leave ; retf 0x15
0x0000000000174781 : leave ; retf 0x6ee8
0x0000000000172f69 : leave ; retf 0xcccb
0x000000000011d3ae : leave ; sub dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x00000000000fc43e : leave ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000a2b0a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000f6f11 : leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x00000000000f6cf1 : leave ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000001891eb : ljmp [rax + 0x6c0000fb] ; retf
0x000000000018a1eb : ljmp [rax + 0xc00015a] ; sbb al, 0xf4 ; call rax
0x000000000018880b : ljmp [rax - 0x13ffff3b] ; lodsb al, byte ptr [rsi] ; out dx, al ; jmp rsp
0x0000000000188c53 : ljmp [rax - 0x3ffff21] ; sub edi, ebp ; jmp rsp
0x0000000000164593 : ljmp [rax - 0x77] ; in al, dx ; call rax
0x000000000012a6f6 : ljmp [rax] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000018b523 : ljmp [rax] ; ret
0x0000000000188943 : ljmp [rbp + rcx*8] ; add ah, cl ; fldz ; jmp rsp
0x000000000018c54b : ljmp [rbx + 0x3a5c0002] ; stc ; call rax
0x000000000018d473 : ljmp [rbx + 2] ; add ah, bl ; mov dl, 0xfd ; call rsp
0x0000000000189f3b : ljmp [rbx + rcx*2 - 0x5783ffff] ; call qword ptr [rax]
0x000000000017a0e7 : ljmp [rbx] ; hlt ; dec ecx ; ret
0x00000000001730d3 : ljmp [rbx] ; or al, 0xec ; call rsi
0x000000000018722f : ljmp [rcx + rcx*2 + 0x5152fffb] ; sti ; call rdx
0x000000000017b195 : ljmp [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x000000000014ffd8 : ljmp [rcx] ; enter -0x73b, 0x77 ; ret
0x000000000005437e : ljmp [rcx] ; ret
0x00000000000d9dbc : ljmp [rcx] ; ret 0x6348
0x00000000000bf1c7 : ljmp [rcx] ; ret 0xf44
0x000000000018a86b : ljmp [rdi + rax*4 - 0x43ffff] ; cmc ; jmp rax
0x0000000000187aab : ljmp [rdi + rdi*2] ; add byte ptr [rax], al ; pushfq ; retf
0x00000000000f36e0 : ljmp [rdi] ; jne 0xf3714 ; mov rdx, rax ; jmp 0xf36fc
0x00000000000896a6 : ljmp [rdx] ; cmp rdx, rsi ; jne 0x896a8 ; ret
0x000000000018716b : ljmp [rdx] ; push rsp ; sti ; call rax
0x00000000001870e7 : ljmp [rsi + 0x3efffb54] ; push rsp ; sti ; jmp rsp
0x0000000000186b27 : ljmp [rsi + rbp + 0x2e3cfffb] ; sti ; jmp rdx
0x000000000018c56b : ljmp [rsp + 0x3d8c0002] ; stc ; jmp rax
0x000000000017a13b : ljmp [rsp + rax*8 - 0x3809000c] ; hlt ; call rdx
0x000000000018be2b : ljmp [rsp + rsi*8 + 0x4d4c0001] ; clc ; call rsp
0x000000000010adc5 : lock add byte ptr [rax], al ; add al, ch ; ret 0xf166
0x000000000015987e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000087156 : lock add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000001ac619 : lock add dword ptr [rax], eax ; push rsp ; ja 0x1ac620 ; jmp qword ptr [rdx]
0x00000000001a3ab8 : lock add dword ptr fs:[rax], eax ; test byte ptr [rbx - 0xb], cl ; call qword ptr [rdx]
0x00000000000ec3c8 : lock and byte ptr [rax - 0x77], cl ; ret
0x00000000001140f5 : lock dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; jmp qword ptr [rdi]
0x000000000011adf9 : lock inc dword ptr [rbx - 0x76b79c03] ; ret
0x0000000000189508 : lodsb al, byte ptr [rsi] ; adc al, 0xf0 ; call qword ptr [rax]
0x000000000010ec67 : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000014a980 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000006df90 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000118f98 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000015df90 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000018edf4 : lodsb al, byte ptr [rsi] ; add dl, ch ; call qword ptr [rcx]
0x0000000000189f3c : lodsb al, byte ptr [rsi] ; add qword ptr [r8], rax ; jl 0x189ef1 ; call qword ptr [rax]
0x00000000001a1e74 : lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; sub ch, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000d19b3 : lodsb al, byte ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000abb3a : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000a5f19 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x00000000000da108 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000001230b4 : lodsb al, byte ptr [rsi] ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019fa74 : lodsb al, byte ptr [rsi] ; and al, 1 ; add byte ptr [rax + 0x72], bl ; hlt ; call qword ptr [rdx]
0x000000000018c54c : lodsb al, byte ptr [rsi] ; and eax, dword ptr [rdx] ; add byte ptr [rdx + rdi - 7], bl ; call rax
0x000000000017ab99 : lodsb al, byte ptr [rsi] ; cmc ; call qword ptr [rdi]
0x000000000018a490 : lodsb al, byte ptr [rsi] ; cmc ; call rax
0x000000000017ac05 : lodsb al, byte ptr [rsi] ; cmc ; inc dword ptr [rdx - 0x54] ; cmc ; jmp rsi
0x000000000017ac09 : lodsb al, byte ptr [rsi] ; cmc ; jmp rsi
0x000000000018c838 : lodsb al, byte ptr [rsi] ; cwde ; stc ; call qword ptr [rax]
0x000000000018a040 : lodsb al, byte ptr [rsi] ; fdiv st(3) ; call rax
0x000000000018be2c : lodsb al, byte ptr [rsi] ; hlt ; add dword ptr [rax], eax ; clc ; call rsp
0x00000000001a67c4 : lodsb al, byte ptr [rsi] ; idiv r15b ; ret
0x0000000000189911 : lodsb al, byte ptr [rsi] ; int1 ; jmp rsp
0x000000000018b890 : lodsb al, byte ptr [rsi] ; js 0x18b88d ; call qword ptr [rax]
0x0000000000175ea6 : lodsb al, byte ptr [rsi] ; loop 0x175e73 ; retf
0x000000000018cb88 : lodsb al, byte ptr [rsi] ; loopne 0x18cb87 ; jmp rsp
0x00000000000bd22b : lodsb al, byte ptr [rsi] ; mov rsi, r15 ; call 0xf9d06
0x0000000000197a74 : lodsb al, byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv st(3) ; out dx, al ; jmp rbx
0x000000000014afa4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000176c5d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000018a108 : lodsb al, byte ptr [rsi] ; out 0xf3, al ; jmp rax
0x0000000000188811 : lodsb al, byte ptr [rsi] ; out dx, al ; jmp rsp
0x00000000001891c0 : lodsb al, byte ptr [rsi] ; ret
0x0000000000066750 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000188128 : lodsb al, byte ptr [rsi] ; ret 0xffeb
0x000000000018b128 : lodsb al, byte ptr [rsi] ; ret 0xfff6
0x000000000018d510 : lodsb al, byte ptr [rsi] ; ret 0xfffd
0x00000000000573bd : lodsb al, byte ptr [rsi] ; ret 0xffff
0x000000000005197b : lodsb al, byte ptr [rsi] ; retf
0x0000000000074bc8 : lodsb al, byte ptr [rsi] ; retf 0xfffa
0x00000000001891a8 : lodsb al, byte ptr [rsi] ; shr edi, 0xff ; or al, 0xfa ; add byte ptr [rax], al ; ret 0xffef
0x000000000018c8c1 : lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000000b6440 : lodsb al, byte ptr [rsi] ; sub esp, edi ; dec dword ptr [rax + 0x39] ; ret
0x00000000001744db : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000001635c0 : lodsb al, byte ptr [rsi] ; xor al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001a3004 : lodsb al, byte ptr [rsi] ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000007edd0 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr fs:[rax] ; ret
0x000000000003b21c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000075c2f : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000188435 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; or al, 0xa0 ; in al, dx ; jmp rax
0x00000000000c670f : lodsd eax, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000192d95 : lodsd eax, dword ptr [rsi] ; in eax, dx ; jmp rbx
0x00000000000e8bcf : lodsd eax, dword ptr [rsi] ; mov eax, 0x5c ; syscall
0x0000000000118c4f : lodsd eax, dword ptr [rsi] ; mov edi, 0x8d4c0000 ; and al, 0x18 ; call qword ptr [rax]
0x0000000000176285 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000185a0a : lodsd eax, dword ptr [rsi] ; mov esi, 0x697769 ; pop rdi ; retf
0x000000000014eb10 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a208f : lodsd eax, dword ptr [rsi] ; or eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000468d2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000011f05e : lodsd eax, dword ptr [rsi] ; sub dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x000000000003b21b : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010ab93 : loop 0x10ab25 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000122206 : loop 0x122198 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000012239a : loop 0x12232c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000013914a : loop 0x139145 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139149 : loop 0x139146 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bc6a : loop 0x13bc65 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bc69 : loop 0x13bc66 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000175ea7 : loop 0x175e72 ; retf
0x0000000000176ffa : loop 0x17704f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000197525 : loop 0x197517 ; call qword ptr [rdx]
0x000000000019b7e1 : loop 0x19b7e9 ; add byte ptr [rax + rsi*8], bl ; int1 ; call qword ptr [rax]
0x0000000000022836 : loop 0x227bd ; retf 0x8508
0x0000000000002685 : loop 0x265f ; ret 0x943d
0x000000000002b66c : loop 0x2b5fc ; fucomip st(0) ; pop rsp ; ret
0x0000000000002cee : loop 0x2d01 ; retf
0x0000000000038df7 : loop 0x38e20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000042c1b : loop 0x42c07 ; sysenter
0x000000000005218a : loop 0x5211c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000075d91 : loop 0x75d66 ; mov dword ptr [rdi], edx ; ret
0x000000000007afc6 : loop 0x7afcc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000085b27 : loop 0x85b75 ; mov edi, ecx ; call rax
0x000000000008879a : loop 0x887de ; or eax, 0x450f4800 ; ret 0xfc3
0x000000000008ff4d : loop 0x8ff85 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000009d1fa : loop 0x9d205 ; add byte ptr [rax], al ; ret
0x00000000000a191f : loop 0xa1939 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000b7832 : loop 0xb77c5 ; enter -0x2fd7, -0x2f ; call 0xffffffffeacd3a46
0x00000000000c15c8 : loop 0xc15b4 ; ret 0xfffc
0x00000000000dec67 : loop 0xdec7a ; retf 0x8348
0x00000000000faaae : loop 0xfaae3 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000ff83f : loop 0xff846 ; jmp 0xff809
0x0000000000102eaf : loope 0x102ebe ; cmovne rax, rdx ; ret
0x0000000000102eaf : loope 0x102ec0 ; cmovne rax, rdx ; ret
0x0000000000102f6f : loope 0x102f7e ; cmovne rax, rdx ; ret
0x0000000000102f6f : loope 0x102f80 ; cmovne rax, rdx ; ret
0x000000000010302f : loope 0x10303e ; cmovne rax, rdx ; ret
0x000000000010302f : loope 0x103040 ; cmovne rax, rdx ; ret
0x000000000011b124 : loope 0x11b111 ; retf 0xffff
0x000000000011bc02 : loope 0x11bc0b ; add bh, bh ; dec dword ptr [rax + 9] ; retf 0xc149
0x000000000011dc1e : loope 0x11dbb3 ; ret
0x00000000001390ba : loope 0x1390b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001390b9 : loope 0x1390b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bbda : loope 0x13bbd5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013bbd9 : loope 0x13bbd6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001446eb : loope 0x1446f2 ; add byte ptr [rax], al ; ret
0x000000000014fede : loope 0x14ff0f ; enter -0x73b, 0x77 ; ret
0x0000000000156c23 : loope 0x156c75 ; lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000015ccbb : loope 0x15ccc5 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000015fbab : loope 0x15fb98 ; ret
0x000000000016360e : loope 0x163670 ; pop rbp ; pop r12 ; ret
0x0000000000163926 : loope 0x163985 ; ret
0x0000000000175fb1 : loope 0x176033 ; pop rdx ; leave ; retf
0x000000000017b909 : loope 0x17b913 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000188969 : loope 0x18895b ; call qword ptr [rax]
0x0000000000188c9d : loope 0x188ca5 ; add byte ptr [rbx + rsi - 0x11], bh ; call rax
0x000000000018bb0d : loope 0x18bb16 ; add ah, ch ; sal edi, 1 ; call rax
0x000000000019b739 : loope 0x19b741 ; add byte ptr [rax + rax*8], dl ; int1 ; call qword ptr [rdx]
0x0000000000022dc3 : loope 0x22e3c ; cmp dword ptr [rax], eax ; ret
0x000000000000276a : loope 0x2725 ; hlt ; out 0xdf, eax ; syscall
0x000000000003520f : loope 0x35206 ; ret
0x00000000000392ee : loope 0x3932f ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000045f76 : loope 0x45f36 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000046056 : loope 0x46016 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000046767 : loope 0x467b9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000046798 : loope 0x467eb ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000004680d : loope 0x46860 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000068e8a : loope 0x68e90 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000007b5db : loope 0x7b5a7 ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000885ff : loope 0x8860e ; cmovne rax, rdx ; ret
0x00000000000885ff : loope 0x88610 ; cmovne rax, rdx ; ret
0x000000000008876f : loope 0x8877e ; cmovne rax, rdx ; ret
0x000000000008876f : loope 0x88780 ; cmovne rax, rdx ; ret
0x0000000000088abf : loope 0x88ace ; cmovne rax, rdx ; ret
0x0000000000088abf : loope 0x88ad0 ; cmovne rax, rdx ; ret
0x00000000000a0bd9 : loope 0xa0c48 ; nop dword ptr [rax + rax] ; ret
0x00000000000a1dfe : loope 0xa1df5 ; ret
0x00000000000b3413 : loope 0xb3410 ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000b361e : loope 0xb3633 ; je 0xb3644 ; ret
0x00000000000c354a : loope 0xc3546 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000c63d9 : loope 0xc6399 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c91df : loope 0xc9166 ; retf 0xeb04
0x00000000000d1890 : loope 0xd1819 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000d1890 : loope 0xd181b ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000d1864 : loope 0xd1869 ; add esi, esi ; ret
0x00000000000d8066 : loope 0xd806b ; add esi, esi ; ret
0x00000000000ededa : loope 0xedee1 ; mov eax, 0xa9 ; syscall
0x00000000000fab66 : loope 0xfab9b ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000010262b : loopne 0x102630 ; ret
0x00000000001027df : loopne 0x102831 ; lea edi, [rip - 0x167] ; call rax
0x000000000010f7fb : loopne 0x10f85d ; pop rbp ; pop r12 ; ret
0x000000000010f80d : loopne 0x10f86f ; pop rbp ; pop r12 ; ret
0x000000000010f8a4 : loopne 0x10f8a3 ; add eax, 0x10 ; ret
0x000000000010fe10 : loopne 0x10fe07 ; ret
0x00000000001105eb : loopne 0x1105f9 ; shr rax, 4 ; and eax, 0x7f ; ret
0x00000000001105f2 : loopne 0x110675 ; ret
0x00000000001153b6 : loopne 0x1153c5 ; mov word ptr [rbp + rax + 0x14], dx ; call 0x21671
0x000000000011598e : loopne 0x115a0e ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000117cb1 : loopne 0x117d21 ; nop dword ptr [rax + rax] ; ret
0x000000000011855f : loopne 0x1185c5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011f93f : loopne 0x11f9a5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000122110 : loopne 0x12211d ; sub eax, 1 ; add rsp, 0x18 ; ret
0x0000000000122b27 : loopne 0x122b30 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000132471 : loopne 0x132488 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132470 : loopne 0x132489 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001325c1 : loopne 0x1325d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001325c0 : loopne 0x1325d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132711 : loopne 0x132728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132710 : loopne 0x132729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132861 : loopne 0x132878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132860 : loopne 0x132879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001329b1 : loopne 0x1329c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001329b0 : loopne 0x1329c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132b01 : loopne 0x132b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132b00 : loopne 0x132b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132c51 : loopne 0x132c68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132c50 : loopne 0x132c69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132d9f : loopne 0x132db6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132d9e : loopne 0x132db7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132ef1 : loopne 0x132f08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000132ef0 : loopne 0x132f09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133041 : loopne 0x133058 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133040 : loopne 0x133059 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133191 : loopne 0x1331a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133190 : loopne 0x1331a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001332e1 : loopne 0x1332f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001332e0 : loopne 0x1332f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133431 : loopne 0x133448 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133430 : loopne 0x133449 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133581 : loopne 0x133598 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000133580 : loopne 0x133599 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001336d1 : loopne 0x1336e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001336d0 : loopne 0x1336e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000134e41 : loopne 0x134e58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000134e40 : loopne 0x134e59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000134f91 : loopne 0x134fa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000134f90 : loopne 0x134fa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001350e1 : loopne 0x1350f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001350e0 : loopne 0x1350f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135231 : loopne 0x135248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135230 : loopne 0x135249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135381 : loopne 0x135398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135380 : loopne 0x135399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001354d1 : loopne 0x1354e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001354d0 : loopne 0x1354e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135621 : loopne 0x135638 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135620 : loopne 0x135639 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013576f : loopne 0x135786 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013576e : loopne 0x135787 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001358c1 : loopne 0x1358d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001358c0 : loopne 0x1358d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135a11 : loopne 0x135a28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135a10 : loopne 0x135a29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135b61 : loopne 0x135b78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135b60 : loopne 0x135b79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135cb1 : loopne 0x135cc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135cb0 : loopne 0x135cc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135e01 : loopne 0x135e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135e00 : loopne 0x135e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135f51 : loopne 0x135f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000135f50 : loopne 0x135f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001360a1 : loopne 0x1360b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001360a0 : loopne 0x1360b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155a15 : loopne 0x155a62 ; mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x00000000001572f5 : loopne 0x157349 ; lea eax, [rdi + rax] ; vzeroupper ; ret
0x00000000001745d4 : loopne 0x1745b4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000178de0 : loopne 0x178e23 ; cld ; jmp rax
0x0000000000178de4 : loopne 0x178e29 ; cld ; jmp rax
0x0000000000178de8 : loopne 0x178e2f ; cld ; jmp rax
0x0000000000178dec : loopne 0x178e35 ; cld ; jmp rax
0x0000000000178df0 : loopne 0x178e3b ; cld ; jmp rax
0x0000000000178df4 : loopne 0x178e41 ; cld ; jmp rax
0x0000000000178df8 : loopne 0x178e47 ; cld ; jmp rax
0x0000000000178dfc : loopne 0x178e4d ; cld ; jmp rax
0x0000000000178e00 : loopne 0x178e53 ; cld ; jmp rax
0x0000000000178e04 : loopne 0x178e59 ; cld ; jmp rax
0x0000000000178e08 : loopne 0x178e5f ; cld ; jmp rax
0x0000000000178e0c : loopne 0x178e65 ; cld ; jmp rax
0x0000000000178e10 : loopne 0x178e6b ; cld ; jmp rax
0x0000000000178e14 : loopne 0x178e71 ; cld ; jmp rax
0x00000000001863cc : loopne 0x186421 ; cld ; call rax
0x0000000000186488 : loopne 0x1864ca ; std ; call rax
0x0000000000186824 : loopne 0x186802 ; cli ; jmp rax
0x0000000000186828 : loopne 0x186808 ; cli ; jmp rax
0x000000000018682c : loopne 0x186812 ; cli ; call qword ptr [rax - 0x2f000549]
0x00000000001868c0 : loopne 0x1868c6 ; sti ; jmp rax
0x00000000001868c4 : loopne 0x1868cc ; sti ; jmp rax
0x00000000001868c8 : loopne 0x1868d2 ; sti ; jmp rax
0x00000000001873ac : loopne 0x1873fe ; sti ; push qword ptr [rax + 0x49] ; sti ; call qword ptr [rax]
0x0000000000187510 : loopne 0x1874a2 ; std ; jmp rax
0x0000000000187514 : loopne 0x1874a6 ; std ; jmp qword ptr [rax]
0x0000000000187520 : loopne 0x1874af ; std ; jmp rax
0x0000000000187524 : loopne 0x1874b3 ; std ; jmp rax
0x0000000000187528 : loopne 0x1874b7 ; std ; call qword ptr [rax]
0x0000000000188644 : loopne 0x188606 ; add byte ptr [rax], al ; pop rsp ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rax]
0x000000000018ba14 : loopne 0x18b9f8 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret
0x000000000018ba8d : loopne 0x18ba94 ; add ah, bh ; retf
0x000000000018cb81 : loopne 0x18cb7e ; call rax
0x000000000018cb89 : loopne 0x18cb86 ; jmp rsp
0x000000000018d50c : loopne 0x18d49f ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xfffd
0x000000000018d504 : loopne 0x18d588 ; add byte ptr [rax], al ; jl 0x18d4d3 ; std ; jmp rax
0x0000000000193fa8 : loopne 0x19401a ; add byte ptr [rax], al ; and al, 0xf4 ; in eax, dx ; jmp rsp
0x0000000000195990 : loopne 0x1959f0 ; out dx, al ; call rsp
0x00000000001964a8 : loopne 0x19643f ; add byte ptr [rax], al ; push rsp ; jle 0x1964a4 ; jmp qword ptr [rbx]
0x00000000001963d0 : loopne 0x196452 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000198ba8 : loopne 0x198b66 ; add byte ptr [rax], al ; test byte ptr [rdx - 0x11], bl ; call qword ptr [rax]
0x000000000019912d : loopne 0x199120 ; jmp rdx
0x000000000019912c : loopne 0x199121 ; jmp rdx
0x00000000001995b9 : loopne 0x1995b8 ; call rsp
0x000000000019b669 : loopne 0x19b671 ; add byte ptr [rax + rdi*4 - 0xf], dh ; jmp qword ptr [rcx]
0x000000000019b691 : loopne 0x19b699 ; add byte ptr [rbp + rbx - 7], bh ; jmp qword ptr [rbx]
0x000000000019d5a8 : loopne 0x19d5b0 ; add byte ptr [rax], al ; adc al, 5 ; call rsi
0x000000000019daa8 : loopne 0x19dab5 ; add dword ptr [rax], eax ; sbb dh, bl ; jmp rdx
0x000000000019eea8 : loopne 0x19eec9 ; add dword ptr [rax], eax ; je 0x19eeb5 ; hlt ; jmp rcx
0x000000000019f930 : loopne 0x19f99f ; hlt ; call qword ptr [rax]
0x00000000001a02a8 : loopne 0x1a02dd ; add dword ptr [rax], eax ; push rsp ; mov esp, esi ; jmp qword ptr [rcx]
0x00000000001a1ef0 : loopne 0x1a1ee2 ; hlt ; jmp qword ptr [rcx]
0x00000000001a1fa8 : loopne 0x1a1ffa ; add dword ptr [rax], eax ; add al, 0xef ; hlt ; jmp qword ptr [rdx]
0x00000000001a30e0 : loopne 0x1a311a ; cmc ; jmp qword ptr [rcx]
0x0000000000002e5d : loopne 0x2e48 ; stc ; out dx, al ; clc ; ret
0x0000000000002e5c : loopne 0x2e49 ; stc ; out dx, al ; clc ; ret
0x000000000002eac3 : loopne 0x2ead2 ; movzx eax, ax ; ret
0x000000000002eb03 : loopne 0x2eb0c ; movzx eax, ax ; ret
0x000000000002eba3 : loopne 0x2ebae ; movzx eax, ax ; ret
0x000000000002ec83 : loopne 0x2ec88 ; ret
0x000000000002ecfc : loopne 0x2ed01 ; ret
0x000000000002ed0c : loopne 0x2ed1b ; movzx eax, ax ; ret
0x000000000002ed4c : loopne 0x2ed55 ; movzx eax, ax ; ret
0x000000000002ecd3 : loopne 0x2ed56 ; ret
0x000000000002edec : loopne 0x2edf7 ; movzx eax, ax ; ret
0x000000000002f748 : loopne 0x2f7ac ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000034c37 : loopne 0x34c1e ; fsub dword ptr [rip + 0x200] ; ret
0x00000000000353b5 : loopne 0x353c1 ; ret
0x0000000000035904 : loopne 0x35910 ; ret
0x000000000003594c : loopne 0x35955 ; adc eax, 0x6f0f6600 ; ret 0xc7e8
0x00000000000366bc : loopne 0x3670c ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000004629d : loopne 0x462a6 ; sub eax, 1 ; ret
0x000000000004e858 : loopne 0x4e7e5 ; ret
0x0000000000065284 : loopne 0x652c0 ; rol byte ptr [rcx - 0x47], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000006528e : loopne 0x652d8 ; mov ebx, 1 ; jmp rax
0x00000000000662ed : loopne 0x66353 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006b220 : loopne 0x6b1e1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000006b218 : loopne 0x6b262 ; mov ecx, 1 ; jmp rax
0x000000000006c0d2 : loopne 0x6c138 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006c4e9 : loopne 0x6c54d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006df40 : loopne 0x6df47 ; add byte ptr [rax], al ; ret
0x000000000006e0ac : loopne 0x6e0b2 ; add byte ptr [rax], al ; jmp rax
0x000000000006e0e8 : loopne 0x6e0ee ; add byte ptr [rax], al ; call rax
0x000000000006e0b1 : loopne 0x6e103 ; mov eax, 0xffffffff ; ret
0x000000000006e13a : loopne 0x6e140 ; add byte ptr [rax], al ; call rax
0x000000000006e17c : loopne 0x6e182 ; add byte ptr [rax], al ; jmp rax
0x000000000006e181 : loopne 0x6e1f2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007211d : loopne 0x72182 ; pop r12 ; pop r13 ; ret
0x000000000007303c : loopne 0x730a3 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074c0c : loopne 0x74c16 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000075e94 : loopne 0x75e99 ; ret
0x0000000000075fa4 : loopne 0x75fa9 ; ret
0x0000000000077157 : loopne 0x771bc ; pop r12 ; pop r13 ; ret
0x00000000000781fa : loopne 0x7825c ; pop rbp ; pop r12 ; ret
0x0000000000078b56 : loopne 0x78b5b ; ret
0x0000000000078b66 : loopne 0x78b6b ; ret
0x0000000000079267 : loopne 0x7926e ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007c5a6 : loopne 0x7c60d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e608 : loopne 0x7e61d ; cmp eax, 4 ; je 0x7e617 ; ret
0x000000000007e768 : loopne 0x7e77b ; pop rbp ; pop r12 ; ret
0x000000000007ec64 : loopne 0x7ec6d ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007eca6 : loopne 0x7ecaf ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007ecc2 : loopne 0x7ecc9 ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000837a7 : loopne 0x83809 ; pop rbp ; pop r12 ; ret
0x0000000000089dc3 : loopne 0x89e25 ; pop rbp ; pop r12 ; ret
0x0000000000089dd5 : loopne 0x89e37 ; pop rbp ; pop r12 ; ret
0x000000000008a6a8 : loopne 0x8a6f2 ; cmp bh, 0x3d ; jne 0x8a674 ; pop rbx ; ret
0x000000000009d2fc : loopne 0x9d306 ; add byte ptr [rax], al ; ret
0x00000000000a188d : loopne 0xa18a7 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000c4f66 : loopne 0xc4fc8 ; pop rbp ; pop r12 ; ret
0x00000000000c4f98 : loopne 0xc4ffa ; pop rbp ; pop r12 ; ret
0x00000000000c91ef : loopne 0xc91af ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000cc601 : loopne 0xcc5cc ; cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000d13e6 : loopne 0xd13eb ; ret 0xc085
0x00000000000d17c1 : loopne 0xd17ca ; add eax, 8 ; ret
0x00000000000d39e1 : loopne 0xd3a48 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d8be4 : loopne 0xd8bed ; inc dword ptr [rbx - 0x76beff08] ; ret 0x8b4c
0x00000000000df0b5 : loopne 0xdf0c8 ; ret
0x00000000000e21d4 : loopne 0xe223b ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e6734 : loopne 0xe672e ; ret 0x7504
0x00000000000e6d9c : loopne 0xe6dfe ; pop rbp ; pop r12 ; ret
0x00000000000e6dad : loopne 0xe6e0f ; pop rbp ; pop r12 ; ret
0x00000000000ea8d1 : loopne 0xea937 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ee4cc : loopne 0xee52e ; pop rbp ; pop r12 ; ret
0x00000000000f3649 : loopne 0xf36af ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f3667 : loopne 0xf36ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f597c : loopne 0xf59a6 ; and rax, rdi ; or rax, rsi ; ret
0x00000000000f62d0 : loopne 0xf62d7 ; ret
0x00000000000f8d7e : loopne 0xf8d84 ; ret
0x00000000000f8d9a : loopne 0xf8da9 ; movzx eax, ax ; ret
0x00000000000f8e0e : loopne 0xf8e14 ; ret
0x00000000000f8eae : loopne 0xf8eb4 ; ret
0x00000000000f8eca : loopne 0xf8ecf ; ret
0x00000000000f8f3e : loopne 0xf8f44 ; ret
0x00000000000f8f5a : loopne 0xf8f63 ; movzx eax, ax ; ret
0x00000000000f8fce : loopne 0xf8fd4 ; ret
0x00000000000f905e : loopne 0xf9064 ; ret
0x00000000000f90fe : loopne 0xf9104 ; ret
0x00000000000f919e : loopne 0xf91a4 ; ret
0x00000000000f923e : loopne 0xf9244 ; ret
0x00000000000f925a : loopne 0xf9265 ; movzx eax, ax ; ret
0x00000000000f92ce : loopne 0xf92d4 ; ret
0x00000000000f9369 : loopne 0xf936f ; ret
0x00000000000f93fe : loopne 0xf9404 ; ret
0x00000000000f95da : loopne 0xf95e0 ; ret
0x00000000000f9710 : loopne 0xf9716 ; ret
0x00000000000f9723 : loopne 0xf9732 ; movzx eax, ax ; ret
0x00000000000f9790 : loopne 0xf9796 ; ret
0x00000000000f9810 : loopne 0xf9816 ; ret
0x00000000000f9823 : loopne 0xf9828 ; ret
0x00000000000f9890 : loopne 0xf9896 ; ret
0x00000000000f98a3 : loopne 0xf98ac ; movzx eax, ax ; ret
0x00000000000f9910 : loopne 0xf9916 ; ret
0x00000000000f9990 : loopne 0xf9996 ; ret
0x00000000000f9a10 : loopne 0xf9a16 ; ret
0x00000000000f9a90 : loopne 0xf9a96 ; ret
0x00000000000f9b10 : loopne 0xf9b16 ; ret
0x00000000000f9b23 : loopne 0xf9b2e ; movzx eax, ax ; ret
0x00000000000f9b90 : loopne 0xf9b96 ; ret
0x00000000000f9c0d : loopne 0xf9c13 ; ret
0x00000000000f9c90 : loopne 0xf9c96 ; ret
0x00000000000f9e3a : loopne 0xf9e40 ; ret
0x00000000000fac96 : loopne 0xfaccb ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000fd6b1 : loopne 0xfd713 ; pop rbp ; pop r12 ; ret
0x00000000000fd6d3 : loopne 0xfd735 ; pop rbp ; pop r12 ; ret
0x00000000000fee42 : loopne 0xfeea9 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000198a95 : mov ah, 0 ; add byte ptr [rax + 0x56], bh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000011dcb7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000019d128 : mov ah, 0 ; add byte ptr [rax], al ; sti ; add byte ptr [rax], al ; nop ; retf 0xfff2
0x00000000000f66c1 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x0000000000066a36 : mov ah, 0x11 ; add al, ch ; ret 0x115
0x0000000000173fea : mov ah, 0x13 ; ret
0x000000000003cc32 : mov ah, 0x24 ; add byte ptr [rax], 0 ; add cl, ch ; ret
0x00000000000443bf : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xf66
0x0000000000186c14 : mov ah, 0x30 ; sti ; inc dword ptr [rax + rsi - 5] ; call rsp
0x0000000000189aec : mov ah, 0x31 ; add dword ptr [rax], eax ; push -0xe ; jmp rax
0x00000000001a2f3c : mov ah, 0x33 ; cmc ; jmp qword ptr [rcx]
0x0000000000189fc4 : mov ah, 0x50 ; add dword ptr [rax], eax ; fadd st(7), st(0) ; call rax
0x000000000018a03c : mov ah, 0x53 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; fdiv st(3) ; call rax
0x000000000018a104 : mov ah, 0x56 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; out 0xf3, al ; jmp rax
0x0000000000178c80 : mov ah, 0x57 ; int1 ; call rsp
0x000000000018710c : mov ah, 0x57 ; sti ; inc dword ptr [rdi + rdx*2 - 5] ; call rsp
0x00000000001a317c : mov ah, 0x5b ; add dword ptr [rax], eax ; sal byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x000000000018a634 : mov ah, 0x7a ; add dword ptr [rax], eax ; cmp al, 0xa8 ; cmc ; jmp rsp
0x00000000001a587c : mov ah, 0x82 ; add dword ptr [rax], eax ; cmc ; call qword ptr [rbx]
0x0000000000088438 : mov ah, 0x87 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000174490 : mov ah, 0xa5 ; ret
0x0000000000188434 : mov ah, 0xad ; add byte ptr [rax], al ; or al, 0xa0 ; in al, dx ; jmp rax
0x000000000019903c : mov ah, 0xb6 ; out dx, eax ; call qword ptr [rax]
0x000000000017a2d8 : mov ah, 0xc8 ; hlt ; jmp rsi
0x000000000018b724 : mov ah, 0xcb ; add dword ptr [rax], eax ; or al, 0x37 ; idiv edi ; hlt ; retf
0x00000000001a538c : mov ah, 0xe5 ; cmc ; call qword ptr [rax]
0x000000000019e57c : mov ah, 0xf ; add dword ptr [rax], eax ; nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax]
0x00000000001ac87c : mov ah, 0xf2 ; add dword ptr [rax], eax ; push rax ; jne 0x1ac885 ; jmp qword ptr [rdx]
0x000000000000276b : mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x000000000018b081 : mov ah, 0xf6 ; jmp qword ptr [rax]
0x000000000018b15d : mov ah, 1 ; add ah, ch ; ret
0x000000000018b195 : mov ah, 1 ; add byte ptr [rbp + rax*8 - 0xa], bh ; jmp rax
0x00000000000ae025 : mov ah, 4 ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x0000000000173de4 : mov ah, bl ; push rsi ; ret
0x0000000000024067 : mov al, 0 ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000f6451 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001884ed : mov al, 0 ; add byte ptr [rcx + rsi*4 - 0x14], ch ; call qword ptr [rax]
0x00000000000029ac : mov al, 0x1f ; retf
0x000000000011a13c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000011a0f4 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000186ce8 : mov al, 0x24 ; sti ; jmp qword ptr [rax]
0x0000000000186c70 : mov al, 0x2d ; sti ; jmp qword ptr [rax]
0x0000000000186aa0 : mov al, 0x2f ; sti ; inc dword ptr [rax + 0x2f] ; sti ; call rax
0x0000000000186c78 : mov al, 0x33 ; sti ; inc dword ptr [rax + 0x33] ; sti ; call rax
0x0000000000039d55 : mov al, 0x37 ; add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x8ce8
0x0000000000178ebc : mov al, 0x38 ; inc eax ; cmp dl, dh ; call rax
0x000000000018659c : mov al, 0x42 ; std ; inc dword ptr [rax + 0x43] ; std ; call rax
0x000000000019ab40 : mov al, 0x44 ; int1 ; call qword ptr [rbx]
0x0000000000186570 : mov al, 0x45 ; std ; inc dword ptr [rax + 0x3c] ; std ; call qword ptr [rax]
0x0000000000063e7a : mov al, 0x48 ; add eax, edi ; jmp rax
0x000000000008dab2 : mov al, 0x48 ; mov edx, eax ; jmp 0x8da3c
0x0000000000189fe4 : mov al, 0x51 ; add dword ptr [rax], eax ; fcom st(0), st(2) ; call qword ptr [rax]
0x0000000000186f98 : mov al, 0x56 ; sti ; inc dword ptr [rax + 0x56] ; sti ; call rax
0x00000000001a3578 : mov al, 0x5f ; add dword ptr [rax], eax ; add al, 0x3c ; cmc ; jmp qword ptr [rcx]
0x0000000000178cf0 : mov al, 0x6d ; sti ; call rax
0x000000000018a48c : mov al, 0x70 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; cmc ; call rax
0x0000000000001db4 : mov al, 0x72 ; retf
0x0000000000178d10 : mov al, 0x76 ; sti ; call rax
0x0000000000178d6c : mov al, 0x7f ; sti ; jmp qword ptr [rax]
0x00000000001a5778 : mov al, 0x81 ; add dword ptr [rax], eax ; adc al, 0xf0 ; cmc ; call qword ptr [rdi]
0x0000000000192acc : mov al, 0x84 ; add al, byte ptr [rbx] ; retf 0xa01
0x00000000001967c0 : mov al, 0x84 ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a5b78 : mov al, 0x85 ; add dword ptr [rax], eax ; div ebp ; call qword ptr [rcx]
0x000000000000396d : mov al, 0x85 ; jbe 0x391c ; outsb dx, byte ptr [rsi] ; retf
0x00000000000b027a : mov al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret 0x16
0x0000000000178da0 : mov al, 0x99 ; int1 ; inc eax ; wait ; int1 ; call rax
0x000000000008741c : mov al, 0x9c ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000197978 : mov al, 0xa3 ; add byte ptr [rax], al ; out dx, al ; jmp qword ptr [rdx]
0x000000000010ea76 : mov al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018b4f4 : mov al, 0xc2 ; add dword ptr [rax], eax ; mov esp, 0xc4fff702 ; ret 1
0x000000000018b54c : mov al, 0xc3 ; add dword ptr [rax], eax ; cld ; or edi, esi ; dec eax ; ret
0x000000000015426f : mov al, 0xc5 ; std ; xlatb ; ret
0x00000000001888f4 : mov al, 0xca ; add byte ptr [rax], al ; cmp al, 0xc2 ; out dx, al ; inc esp ; retf 0
0x000000000008884c : mov al, 0xcb ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000001030ec : mov al, 0xe5 ; stc ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x000000000008689c : mov al, 0xe6 ; xor al, byte ptr [rax] ; call qword ptr [rax]
0x00000000001a1d60 : mov al, 0xea ; hlt ; call qword ptr [rdi]
0x0000000000176296 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000018c27c : mov al, 0xf ; add al, byte ptr [rax] ; cld ; idiv al ; call qword ptr [rax]
0x00000000001874a9 : mov al, 0xfc ; jmp rax
0x000000000018b0b5 : mov al, 1 ; add ah, bl ; mov dh, 0xf6 ; call rax
0x00000000001a86a1 : mov al, 1 ; add byte ptr [rbp + rbp*8 - 0xa], bl ; call rdi
0x000000000007238f : mov al, 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d32c : mov al, 4 ; add byte ptr [rax], al ; ret
0x000000000009cf2c : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000019606d : mov al, byte ptr [rax] ; add al, dh ; jne 0x196067 ; jmp qword ptr [rdx]
0x0000000000000760 : mov al, byte ptr [rax] ; add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x00000000000e74e1 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000042762 : mov al, byte ptr [rbx] ; add byte ptr [rax], al ; call 0x2e9f6
0x000000000009929b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000992c9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009934d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000001a6005 : mov al, byte ptr [rcx] ; add byte ptr [rax], ch ; adc al, 0xf6 ; call rdx
0x0000000000146aa0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000099275 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000002f0f : mov al, byte ptr [rsi - 0x73] ; ret 0xc1bb
0x00000000000dd411 : mov al, ch ; mov dword ptr [rax - 0xc], eax ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000099285 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000198da5 : mov bh, 0 ; add byte ptr [rax], cl ; mov ch, bh ; jmp qword ptr [rbx]
0x0000000000139e81 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000001550e1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000176320 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000002b5bc : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0xc76
0x000000000012f04c : mov bh, 0x48 ; adc byte ptr [rbx + rcx*4 + 5], cl ; ret 0x2877
0x000000000015cb58 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000000cd5f8 : mov bh, 0x48 ; mov esi, ebx ; mov rdi, rbp ; call r12
0x00000000000b49fe : mov bh, 0x4c ; dec byte ptr [r13 - 0x77] ; retf 0x694d
0x00000000001765f8 : mov bh, 0x4e ; retf 0x9d7d
0x000000000008e302 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x000000000008e4b4 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b4ac2 : mov bh, 0x57 ; adc byte ptr [rcx], ch ; ret 0x428d
0x0000000000045d18 : mov bh, 0x5b ; ret
0x000000000002e837 : mov bh, 0x8b ; add al, 0x10 ; ret
0x00000000000cd3f1 : mov bh, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000d5913 : mov bh, 0xa8 ; add byte ptr [rax], al ; add bl, ch ; fisttp word ptr [rcx - 0x7d] ; ret
0x0000000000002cdc : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00000000001752c4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002eac6 : mov bh, 0xc0 ; ret
0x00000000001050ac : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000172f66 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x00000000000fa2bd : mov bh, 0xe9 ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000186831 : mov bh, 0xfa ; call rax
0x00000000000f75f3 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001ae3b8 : mov bh, 1 ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; retf
0x000000000002eabf : mov bh, 4 ; js 0x2ea4f ; loopne 0x2ead6 ; movzx eax, ax ; ret
0x000000000002eaff : mov bh, 4 ; js 0x2ea8f ; loopne 0x2eb10 ; movzx eax, ax ; ret
0x000000000002eb9f : mov bh, 4 ; js 0x2eb2f ; loopne 0x2ebb2 ; movzx eax, ax ; ret
0x000000000002ec7f : mov bh, 4 ; js 0x2ec0c ; loopne 0x2ec8c ; ret
0x000000000002ecf8 : mov bh, 4 ; js 0x2ec85 ; loopne 0x2ed05 ; ret
0x000000000002ed08 : mov bh, 4 ; js 0x2ec98 ; loopne 0x2ed1f ; movzx eax, ax ; ret
0x000000000002ed48 : mov bh, 4 ; js 0x2ecd8 ; loopne 0x2ed59 ; movzx eax, ax ; ret
0x000000000002ede8 : mov bh, 4 ; js 0x2ed78 ; loopne 0x2edfb ; movzx eax, ax ; ret
0x00000000000f8d96 : mov bh, 4 ; js 0xf8d26 ; loopne 0xf8dad ; movzx eax, ax ; ret
0x00000000000f8ec6 : mov bh, 4 ; js 0xf8e53 ; loopne 0xf8ed3 ; ret
0x00000000000f8f56 : mov bh, 4 ; js 0xf8ee6 ; loopne 0xf8f67 ; movzx eax, ax ; ret
0x00000000000f9256 : mov bh, 4 ; js 0xf91e6 ; loopne 0xf9269 ; movzx eax, ax ; ret
0x00000000000f971f : mov bh, 4 ; js 0xf96af ; loopne 0xf9736 ; movzx eax, ax ; ret
0x00000000000f981f : mov bh, 4 ; js 0xf97ac ; loopne 0xf982c ; ret
0x00000000000f989f : mov bh, 4 ; js 0xf982f ; loopne 0xf98b0 ; movzx eax, ax ; ret
0x00000000000f9b1f : mov bh, 4 ; js 0xf9aaf ; loopne 0xf9b32 ; movzx eax, ax ; ret
0x00000000001769d3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000e63b1 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000216fe : mov bh, byte ptr [rcx] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000187529 : mov bh, ch ; call qword ptr [rax]
0x000000000018750d : mov bh, ch ; jmp rax
0x0000000000088a43 : mov bh, cl ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000f6784 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x000000000015e44e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000139f8c : mov bl, 0x27 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000017665b : mov bl, 0x29 ; retf 0xbf4b
0x00000000000c6407 : mov bl, 0x48 ; cmp eax, 0x414a53 ; jne 0xc63e2 ; jmp 0xc63c3
0x0000000000001b13 : mov bl, 0x5a ; ret 0x2a63
0x00000000001763a3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000000ff61d : mov bl, 0x90 ; ret
0x0000000000176640 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000188849 : mov bl, 0xee ; call qword ptr [rax]
0x0000000000002e4b : mov bl, 0xee ; clc ; ret
0x0000000000003cb5 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000018d105 : mov bl, 1 ; add ah, bh ; jle 0x18d10b ; jmp rsp
0x000000000018b135 : mov bl, 1 ; add ah, bh ; ret 0xfff6
0x000000000018b12d : mov bl, 1 ; add ah, cl ; ret 0xfff6
0x00000000000ae079 : mov bl, 4 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000c11dd : mov bl, 6 ; add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x00000000001891e4 : mov bl, bh ; add byte ptr [rax], al ; pop rsp ; retf 0xffef
0x00000000000c4fcd : mov bl, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c4fb7 : mov bl, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000019e778 : mov bl, dl ; call qword ptr [rax]
0x0000000000173fc1 : mov bx, 0xf32d ; retf
0x0000000000112608 : mov byte ptr [r10], 0 ; ret
0x00000000000ec9fa : mov byte ptr [r8 + 0x23], cl ; ret
0x000000000002fe11 : mov byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x00000000000ef508 : mov byte ptr [r8 - 1], 0 ; ret
0x000000000011473e : mov byte ptr [rax + 0x18], 0 ; add rsp, 8 ; ret
0x00000000000ec9fb : mov byte ptr [rax + 0x23], cl ; ret
0x000000000008d3b0 : mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000008cf7b : mov byte ptr [rax + 0x29], cl ; ret 0x4890
0x000000000008d54a : mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x000000000008bc33 : mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000bb26b : mov byte ptr [rax + 0x4c], 0x89 ; retf 0x8948
0x00000000001104f6 : mov byte ptr [rax + 1], bl ; mov byte ptr [rax + 2], 0 ; pop rbx ; ret
0x00000000001104f9 : mov byte ptr [rax + 2], 0 ; pop rbx ; ret
0x0000000000103322 : mov byte ptr [rax + 3], cl ; jne 0x1032c4 ; mov rax, rdi ; ret
0x0000000000103321 : mov byte ptr [rax + 3], r9b ; jne 0x1032c5 ; mov rax, rdi ; ret
0x000000000017196c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000016c74c : mov byte ptr [rax + rax], 0 ; retf 4
0x00000000000436b4 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007ef34 : mov byte ptr [rax + rsi], bh ; ret
0x000000000007ef33 : mov byte ptr [rax + rsi], dil ; ret
0x00000000000c4fc4 : mov byte ptr [rax - 0x76b70005], cl ; ret
0x000000000002fe12 : mov byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000ef509 : mov byte ptr [rax - 1], 0 ; ret
0x00000000000f1546 : mov byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x0000000000188845 : mov byte ptr [rax], 0 ; insb byte ptr [rdi], dx ; mov bl, 0xee ; call qword ptr [rax]
0x00000000000f370e : mov byte ptr [rax], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000002218a : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000000221cd : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000012b6f9 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000035ded : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000036354 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001233ba : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f3078 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000045be9 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000526e0 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000526e1 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009bec2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000672f9 : mov byte ptr [rbp - 0x8e8], bh ; add rax, rdx ; jmp rax
0x0000000000196498 : mov byte ptr [rbp - 7], ch ; jmp qword ptr [rbx]
0x00000000000cee42 : mov byte ptr [rbx + rbx - 0xd], dh ; ret
0x00000000000ee246 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000030c2 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007f5a4 : mov byte ptr [rbx], dh ; add byte ptr [rsi - 0x5d], dh ; add rsp, 8 ; ret
0x00000000001a1f50 : mov byte ptr [rcx + 1], cl ; add byte ptr [rsi + rbp*8 - 0xc], ch ; jmp qword ptr [rcx]
0x00000000000b4ae1 : mov byte ptr [rcx + 1], cl ; retf
0x0000000000144763 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000144782 : mov byte ptr [rcx + 4], dl ; ret
0x00000000001447c3 : mov byte ptr [rcx + 8], dl ; ret
0x00000000001031e2 : mov byte ptr [rcx + rax + 1], cl ; jne 0x1031d9 ; mov rax, rdi ; ret
0x000000000002cf73 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x00000000001199d1 : mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000318f6 : mov byte ptr [rcx - 0x75], 0x47 ; add al, 0xeb ; ret
0x0000000000186514 : mov byte ptr [rcx - 3], 0xff ; push rsi ; std ; jmp rsi
0x000000000018b5f5 : mov byte ptr [rcx], 0 ; in al, dx ; sbb dh, bh ; jmp rax
0x000000000008dec0 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000008e007 : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000003319f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe35d : mov byte ptr [rcx], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010f882 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000f1e91 : mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x0000000000028467 : mov byte ptr [rcx], 9 ; ret 0x3948
0x0000000000088a9f : mov byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000071d41 : mov byte ptr [rcx], bh ; ret
0x0000000000071d40 : mov byte ptr [rcx], dil ; ret
0x000000000007f01d : mov byte ptr [rcx], dl ; je 0x7f069 ; mov qword ptr [rsi], rcx ; ret
0x0000000000144740 : mov byte ptr [rcx], dl ; ret
0x00000000000a08ca : mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009ecab : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x000000000009d4bb : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a08db : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009de58 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000009c7e8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a08e0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0902 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a0920 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a0940 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009dece : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000009c83e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009ed31 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x000000000009d511 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a0961 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0966 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0982 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a09a2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a09c2 : mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009edb3 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x000000000009d593 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a09e3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009df50 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000009c8c0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a09e8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0a0a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0a28 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a0a48 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0a64 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a0a84 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a0aa4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0ac4 : mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009d695 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a0ae5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a0aea : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a0b3a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000001565e5 : mov byte ptr [rdi + 0x40], cl ; vzeroupper ; ret
0x0000000000155a38 : mov byte ptr [rdi + 0x41], 0 ; vzeroupper ; ret
0x00000000000a0810 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a082e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a084e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a0870 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a0890 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a08b0 : mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000155965 : mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000a0746 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000110106 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000110105 : mov byte ptr [rdi + 1], sil ; ret
0x00000000001550f6 : mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x000000000008e39d : mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000a0758 : mov byte ptr [rdi + 2], ch ; ret
0x000000000009dd06 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000009c706 : mov byte ptr [rdi + 2], dh ; ret
0x000000000009eb39 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x000000000008e2d0 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a0769 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a076e : mov byte ptr [rdi + 3], ch ; ret
0x000000000008e3bb : mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a0786 : mov byte ptr [rdi + 4], ch ; ret
0x000000000009dd22 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000009c722 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009eb67 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x000000000008e2ee : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a0797 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a079c : mov byte ptr [rdi + 5], ch ; ret
0x000000000008e3f4 : mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x00000000000a07ae : mov byte ptr [rdi + 6], ch ; ret
0x000000000008e327 : mov byte ptr [rdi + 6], dl ; ret
0x00000000000a07cc : mov byte ptr [rdi + 7], ch ; ret
0x00000000000cd040 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000ccfb9 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000cd030 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000ccff4 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000cd070 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000cd085 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000cd00d : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000ccfc8 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a07d8 : mov byte ptr [rdi + 8], ch ; ret
0x000000000009c763 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000009ebb9 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x000000000009d439 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a07e9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a07ee : mov byte ptr [rdi + 9], ch ; ret
0x0000000000155992 : mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000155993 : mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x00000000000b9d4c : mov byte ptr [rdi + rax], ch ; add byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000001102de : mov byte ptr [rdi + rdx], 0 ; ret
0x00000000001959d8 : mov byte ptr [rdi - 0x12], bl ; call qword ptr [rdx]
0x0000000000176655 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x00000000000ace6e : mov byte ptr [rdi - 0x76fffffb], dh ; ret
0x000000000011bf3e : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x11bf39 ; ret
0x0000000000133a9b : mov byte ptr [rdi - 1], dl ; ret
0x000000000008e430 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rax - 1] ; ret
0x0000000000156af1 : mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x000000000006de60 : mov byte ptr [rdi], 0 ; mov r8, rdi ; mov rax, r8 ; ret
0x0000000000078fb0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000002218d : mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000000221d0 : mov byte ptr [rdi], 0 ; ret
0x0000000000155061 : mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000cd024 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000cd05e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a0732 : mov byte ptr [rdi], ch ; ret
0x00000000000a13bb : mov byte ptr [rdi], cl ; ret
0x0000000000157ba5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000008e291 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x000000000009dce0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000009c6e0 : mov byte ptr [rdi], dh ; ret
0x000000000018ed50 : mov byte ptr [rdi], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dl, ch ; call qword ptr [rbx]
0x000000000019ed50 : mov byte ptr [rdi], dl ; add dword ptr [rax], eax ; sub al, 0xf3 ; jmp qword ptr [rcx]
0x000000000009eb12 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x0000000000157243 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x0000000000155963 : mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x000000000009d3b2 : mov byte ptr [rdi], dl ; ret
0x0000000000156513 : mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000a0742 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000008e290 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x000000000009c04a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000146ac9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x000000000009929e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000146af7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000992cc : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009bfe0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000099350 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000109ae8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000112609 : mov byte ptr [rdx], 0 ; ret
0x00000000000fe345 : mov byte ptr [rdx], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000573ba : mov byte ptr [rdx], al ; jmp 0x53671
0x0000000000146aa2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000099277 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000076068 : mov byte ptr [rdx], bh ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000018c1ec : mov byte ptr [rdx], cl ; add al, byte ptr [rax] ; fcomp st(0), st(4) ; clc ; call rsp
0x000000000010c136 : mov byte ptr [rip + 0x2ad28b], 1 ; pop rbx ; ret
0x000000000002db28 : mov byte ptr [rip + 0x388fcf], dl ; ret
0x0000000000002504 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x0000000000089592 : mov byte ptr [rsi + 2], dl ; cmp rax, rdi ; jne 0x89589 ; ret
0x00000000001105d1 : mov byte ptr [rsi + 3], cl ; xor eax, eax ; ret
0x0000000000104353 : mov byte ptr [rsi*2 - 0x776b717], al ; ret
0x0000000000104352 : mov byte ptr [rsi*2 - 0x776b717], r8b ; ret
0x000000000004b1df : mov byte ptr [rsi], al ; jne 0x4b1cf ; mov rax, rsi ; ret
0x000000000004b263 : mov byte ptr [rsi], al ; jne 0x4b247 ; mov rax, rsi ; ret
0x00000000001a3158 : mov byte ptr [rsi], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000a1e49 : mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x00000000000ec91f : mov byte ptr [rsp - 0x15], al ; mov eax, 0x10 ; syscall
0x0000000000002752 : mov ch, 0x24 ; retf 0x54da
0x0000000000173de2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000175123 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000175db6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001764bf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000176e6a : mov ch, 0xab ; ret
0x0000000000188869 : mov ch, 0xee ; jmp rax
0x000000000018c931 : mov ch, 0xf9 ; jmp rsp
0x0000000000001b74 : mov ch, 4 ; retf
0x000000000015a3f6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000104f35 : mov ch, 7 ; add al, ch ; ret
0x0000000000027335 : mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000164591 : mov ch, ah ; ljmp [rax - 0x77] ; in al, dx ; call rax
0x0000000000198da9 : mov ch, bh ; jmp qword ptr [rbx]
0x00000000000efcbd : mov ch, byte ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000198749 : mov cl, 0 ; add ah, ah ; sbb ebp, edi ; call rdi
0x00000000000f6511 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000048734 : mov cl, 0x12 ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x00000000000fba07 : mov cl, 0x15 ; call rdx
0x000000000011d175 : mov cl, 0x15 ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000010729f : mov cl, 0x15 ; retf
0x000000000006d6b1 : mov cl, 0x15 ; stc ; retf 0x34
0x00000000000fc396 : mov cl, 0x15 ; xchg eax, esp ; retf 0x2b
0x0000000000003d78 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000006f8b7 : mov cl, 0x35 ; ret
0x00000000000841d2 : mov cl, 0x3c ; xor eax, dword ptr [rax] ; add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000001768c1 : mov cl, 0x3f ; retf
0x000000000011dca9 : mov cl, 0x48 ; add eax, ecx ; jmp rax
0x0000000000117ca8 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000802cb : mov cl, 0x58 ; xor eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000002cdd : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000d57eb : mov cl, 0xbb ; hlt ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000012bf00 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001884f1 : mov cl, 0xec ; call qword ptr [rax]
0x000000000018c0d1 : mov cl, 0xf8 ; jmp qword ptr [rax]
0x000000000002d8d9 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000000392d : mov cl, byte ptr [rbp + 2] ; ret
0x000000000007eb72 : mov cl, byte ptr [rbx + rsi + 0xcab800] ; add byte ptr [rax], al ; syscall
0x00000000000946c5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000008e8f4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000176292 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000150df4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000015bab0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000b361b : mov cl, dl ; and cl, 0xf ; je 0xb3647 ; ret
0x00000000000b68cc : mov cs, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017654c : mov cs, edi ; ret 0x8b36
0x000000000003b2dd : mov cs, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000008847e : mov cs, word ptr [rdi + 0x148fff9] ; ret
0x00000000001518ae : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000009c700 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001885bd : mov dh, 0 ; add ah, cl ; pop rbp ; out dx, al ; call rax
0x0000000000198c1d : mov dh, 0 ; add byte ptr [rax], dh ; pop rbx ; out dx, eax ; call qword ptr [rbx]
0x000000000007a49d : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007663e : mov dh, 0 ; mov eax, r8d ; ret
0x00000000000767cd : mov dh, 0 ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000078bb3 : mov dh, 0 ; ret
0x0000000000139ef1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000156511 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x0000000000092184 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000033eb4 : mov dh, 0x17 ; test dl, dl ; jne 0x33e9a ; ret
0x00000000000c6df5 : mov dh, 0x17 ; test dl, dl ; jne 0xc6ddf ; xor eax, eax ; ret
0x00000000000dc0b5 : mov dh, 0x17 ; test dl, dl ; jne 0xdc09f ; xor eax, eax ; ret
0x0000000000033ad9 : mov dh, 0x24 ; or cl, ch ; ret 0xfffc
0x0000000000119f32 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000c8541 : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x00000000000c7d8c : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003ba11 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008dab0 : mov dh, 0x45 ; mov al, 0x48 ; mov edx, eax ; jmp 0x8da3e
0x00000000000501d8 : mov dh, 0x46 ; or eax, 0x8118e383 ; ret
0x0000000000089c05 : mov dh, 0x47 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000015e021 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000015e011 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000015dfe1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015e001 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000015dff1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000061528 : mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000011b31d : mov dh, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000027441 : mov dh, 0x48 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ba9e1 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008b298 : mov dh, 0x4e ; add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x0000000000175282 : mov dh, 0x4e ; ret 0x474c
0x00000000000d0075 : mov dh, 0x50 ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x00000000000c93c4 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c93f1 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008e323 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008e4d5 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008e2ea : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x000000000008e2cc : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000014fd86 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000550b6 : mov dh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010f919 : mov dh, 0x55 ; add dh, dh ; ret
0x00000000000c819c : mov dh, 0x55 ; add dword ptr [rcx - 0x73], ecx ; add r13b, r11b ; retf
0x0000000000186fe0 : mov dh, 0x55 ; sti ; inc dword ptr [rsi + 0x55] ; sti ; call rsi
0x000000000015e025 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000000d9d74 : mov dh, 0x56 ; cmp dh, dh ; ret 0xf08
0x000000000015e015 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000015dfe5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00000000000670ed : mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000005039a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf01
0x000000000006707a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000505fc : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf40
0x000000000015dff5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000004e842 : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf01
0x0000000000110442 : mov dh, 0x58 ; add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x000000000007ede6 : mov dh, 0x64 ; xor eax, dword ptr [rax] ; ret
0x0000000000024e22 : mov dh, 0x70 ; dec dword ptr [rcx + 0x39] ; ret
0x000000000008a1c6 : mov dh, 0x71 ; stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000025aab : mov dh, 0x72 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000003332a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000085f63 : mov dh, 0x78 ; str word ptr [rax - 0x77] ; retf 0x9aeb
0x00000000000c5163 : mov dh, 0x86 ; or eax, dword ptr [rax] ; mov eax, 0x142 ; syscall
0x00000000000e186c : mov dh, 0x9d ; ret
0x00000000000e1c81 : mov dh, 0x9d ; ret 0xfffa
0x000000000011ea27 : mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000011a688 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000124de8 : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011a21b : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b1c08 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000c63ef : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x000000000006c2e4 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000005309b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000052e24 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000052c28 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000e95a5 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051b6d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000051b3a : mov dh, 0xc0 ; neg eax ; ret
0x000000000011a77a : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000011b2eb : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000f1a26 : mov dh, 0xc0 ; pop rbx ; ret
0x000000000003673c : mov dh, 0xc0 ; ret
0x000000000007ebde : mov dh, 0xc0 ; sub eax, 2 ; add rsp, 8 ; ret
0x0000000000022c61 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000ba980 : mov dh, 0xc1 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000a18f1 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000007b3c2 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010509e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000001764c4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000aac87 : mov dh, 0xd ; add cl, ch ; retf 0xffe9
0x00000000000b7b22 : mov dh, 0xd2 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000529fa : mov dh, 0xd2 ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x00000000000921aa : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000085cf4 : mov dh, 0xdb ; neg ebx ; mov eax, ebx ; pop rbx ; ret
0x00000000000a13b9 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x000000000008fca1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000150e04 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000000d337e : mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000019903d : mov dh, 0xef ; call qword ptr [rax]
0x0000000000178dd9 : mov dh, 0xf1 ; push qword ptr [rax] ; cwde ; int1 ; jmp rax
0x00000000000e600a : mov dh, 0xf3 ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000018b0b9 : mov dh, 0xf6 ; call rax
0x00000000000d342b : mov dh, 0xf6 ; movsxd rax, dword ptr [rdx + r14*4] ; add rax, rdx ; jmp rax
0x0000000000033935 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000007b141 : mov dh, 2 ; ret
0x00000000000675d8 : mov dh, 3 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e0704 : mov dh, 5 ; ret 0x2d9e
0x0000000000150e01 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000092181 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008fca4 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000001503c4 : mov dh, 7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000000a1dfc : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000001a71a5 : mov dh, dh ; jmp qword ptr [rdx]
0x00000000000f6754 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003c60 : mov dl, 0x1e ; ret
0x0000000000186d38 : mov dl, 0x2a ; sti ; jmp qword ptr [rdx]
0x0000000000186b4c : mov dl, 0x31 ; sti ; inc dword ptr [rdx + 0x31] ; sti ; call rdx
0x0000000000088aea : mov dl, 0x38 ; or eax, 0x450f4800 ; ret 0xfc3
0x0000000000001f91 : mov dl, 0x3a ; jrcxz 0x1f73 ; retf 0xbe35
0x00000000000c64de : mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000187044 : mov dl, 0x58 ; sti ; inc dword ptr [rdx + 0x58] ; sti ; call rdx
0x0000000000115ecd : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119b1d : mov dl, 0x8b ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000102eda : mov dl, 0x94 ; add eax, 0x450f4800 ; ret 0xfc3
0x0000000000192f05 : mov dl, 0xed ; call qword ptr [rax]
0x000000000018d479 : mov dl, 0xfd ; call rsp
0x00000000000f9485 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000f94a2 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x000000000018b4e4 : mov dl, al ; add dword ptr [rax], eax ; jl 0x18b4f5 ; idiv edi ; pushfq ; ret 1
0x0000000000024af5 : mov dl, byte ptr [rip + 0x3d8d4800] ; int1 ; retf 0x15
0x000000000009d3d3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009d3f2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009d433 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000133b20 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000009eb10 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000009d3b0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a0740 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000001904d5 : mov dl, ch ; call qword ptr [rcx]
0x0000000000193368 : mov dl, cl ; in eax, dx ; jmp qword ptr [rdi]
0x000000000004541d : mov dr6, rdi ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000004afb1 : mov ds, word ptr [rbx + 0x5d] ; ret
0x00000000000cd450 : mov ds, word ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001768de : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000010443d : mov dword ptr [r11 + 0xc], eax ; jne 0x1043e7 ; mov rax, rdi ; ret
0x00000000000b3a86 : mov dword ptr [r11 + 0xc], r8d ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000011997e : mov dword ptr [r14], 0 ; ret
0x00000000000ec9f6 : mov dword ptr [r8 + 0x38], edx ; mov byte ptr [r8 + 0x23], cl ; ret
0x00000000000c17c4 : mov dword ptr [r8], ebx ; mov rax, r9 ; pop rbx ; ret
0x00000000001103cf : mov dword ptr [r8], ecx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000039463 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000bf840 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000110457 : mov dword ptr [r8], r11d ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000001069f2 : mov dword ptr [r8], r9d ; add rsp, 0x18 ; ret
0x00000000000c1e8c : mov dword ptr [r8], r9d ; add rsp, 8 ; ret
0x000000000015baa6 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000015ba91 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000072689 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000726c9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072c58 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000007faf7 : mov dword ptr [rax + 0x20], edx ; add rsp, 8 ; ret
0x0000000000077cdc : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000cf05b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000ec9f7 : mov dword ptr [rax + 0x38], edx ; mov byte ptr [r8 + 0x23], cl ; ret
0x000000000007268d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000072cda : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000011ad54 : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x000000000011443f : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007c8c5 : mov dword ptr [rax + 8], 0 ; ret
0x00000000000b5318 : mov dword ptr [rax + 8], esi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000104351 : mov dword ptr [rax + rcx*4 + 4], ecx ; jne 0x104349 ; mov rax, rdi ; ret
0x00000000000dd413 : mov dword ptr [rax - 0xc], eax ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000cef8a : mov dword ptr [rax - 4], edx ; cmp esi, dword ptr [rdi + 4] ; jl 0xcef89 ; ret
0x0000000000125fcd : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000001126a2 : mov dword ptr [rax], 0 ; ret
0x00000000000ed8c8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000000e730d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000004dfbe : mov dword ptr [rax], 0x16 ; mov eax, r8d ; ret
0x00000000000f1a98 : mov dword ptr [rax], 0x16 ; ret
0x00000000000ebbe0 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000000eda7e : mov dword ptr [rax], 0x24 ; jmp 0xeda58
0x000000000012d2f8 : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x0000000000034128 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x00000000000858f2 : mov dword ptr [rax], 0xc ; jmp 0x858cc
0x00000000000822fa : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000008476f : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000086c28 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x0000000000188865 : mov dword ptr [rax], 0xeeb5cc00 ; jmp rax
0x00000000000ed0c4 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c04a8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000022628 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x0000000000026009 : mov dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x00000000000b2b93 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e74b1 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000de144 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000059d24 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f436 : mov dword ptr [rax], ebx ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000110458 : mov dword ptr [rax], ebx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000000c17c5 : mov dword ptr [rax], ebx ; mov rax, r9 ; pop rbx ; ret
0x00000000001069f3 : mov dword ptr [rax], ecx ; add rsp, 0x18 ; ret
0x00000000000c1e8d : mov dword ptr [rax], ecx ; add rsp, 8 ; ret
0x0000000000070cfa : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000001103d0 : mov dword ptr [rax], ecx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000000e2061 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x000000000008399c : mov dword ptr [rax], edi ; ret
0x00000000000f5a31 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000000953 : mov dword ptr [rax], edx ; and cl, byte ptr [rdx] ; ret 0x68a2
0x00000000001101b9 : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000039464 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000de192 : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x000000000002e7d5 : mov dword ptr [rax], edx ; ret
0x00000000000732eb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000002e34 : mov dword ptr [rax], esp ; mov eax, 0xf3f8ec1c ; ret
0x00000000000de143 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000114970 : mov dword ptr [rbp + 0x18], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a985 : mov dword ptr [rbp + 0x68], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001153b9 : mov dword ptr [rbp + rax + 0x14], edx ; call 0x2166e
0x00000000000b72a4 : mov dword ptr [rbp - 0x148], eax ; call 0xb3cc8
0x000000000005d2bf : mov dword ptr [rbp - 0x548], edx ; call 0x59ce8
0x000000000005d4ee : mov dword ptr [rbp - 0x54c], ebx ; jmp 0x59fd8
0x0000000000058d41 : mov dword ptr [rbp - 0x5a0], edx ; jmp 0x55838
0x0000000000055274 : mov dword ptr [rbp - 0x628], edx ; call 0x21498
0x00000000000f7cef : mov dword ptr [rbp - 0x6d0], eax ; mov eax, r10d ; syscall
0x0000000000101e04 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x0000000000101aa1 : mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001021d8 : mov dword ptr [rbp - 0x80], edx ; lea rdx, [rcx + 0x70] ; call rax
0x0000000000101c98 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000101f63 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000010210c : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000101fe8 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000062922 : mov dword ptr [rbp - 0x8e8], edx ; call 0x6f378
0x00000000001005e4 : mov dword ptr [rbp - 0x98], ebx ; call 0xfd078
0x0000000000100d79 : mov dword ptr [rbp - 0xc8], edx ; call 0xfd078
0x000000000010061a : mov dword ptr [rbp - 0xc8], r10d ; call 0xfd079
0x0000000000085837 : mov dword ptr [rbp], eax ; je 0x85911 ; call rax
0x0000000000087058 : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000429d1 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010f71f : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116a13 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000038d6a : mov dword ptr [rbp], edx ; call rax
0x000000000010e622 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e621 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002bc3e : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000079207 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012c5a6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007967f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000fd96a : mov dword ptr [rbx + 0x10], esi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125c35 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000012c55e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007736a : mov dword ptr [rbx + 0x18], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fd9aa : mov dword ptr [rbx + 0x18], esi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125c98 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbcdb : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b5674 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077d01 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000086885 : mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000cd6ca : mov dword ptr [rbx + 0x34], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035abd : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000007c2ad : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008693d : mov dword ptr [rbx + 0x48], ecx ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000007bf6b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000007a722 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000072714 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010443e : mov dword ptr [rbx + 0xc], eax ; jne 0x1043e6 ; mov rax, rdi ; ret
0x00000000000b3a87 : mov dword ptr [rbx + 0xc], eax ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000e6298 : mov dword ptr [rbx + 4], edx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e622a : mov dword ptr [rbx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e6185 : mov dword ptr [rbx + 4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd74b : mov dword ptr [rbx + 8], eax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xcd71f
0x00000000000b6ff3 : mov dword ptr [rbx + 8], edx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000364fe : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000fd92a : mov dword ptr [rbx + 8], esi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000086bcd : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cf80 : mov dword ptr [rbx], 0 ; mov rdi, rdx ; call rsi
0x00000000000f1a82 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000125e63 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007c23c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000e4c3e : mov dword ptr [rbx], eax ; call 0x2167c
0x000000000012c8f1 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007c2b0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122a15 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f1a20 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000012216a : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000121e69 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000854a0 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000071115 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010fb21 : mov dword ptr [rbx], ecx ; add rsp, 0x10 ; ret
0x0000000000072c5b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000086889 : mov dword ptr [rbx], edi ; call rcx
0x0000000000110abe : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000526de : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059d22 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d150 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000ae1fc : mov dword ptr [rbx], esi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000086941 : mov dword ptr [rbx], esi ; mov rdi, r9 ; call rcx
0x000000000006e252 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000006df3e : mov dword ptr [rcx + 0xe0], edx ; ret
0x00000000001447a2 : mov dword ptr [rcx + 3], edx ; ret
0x0000000000144793 : mov dword ptr [rcx + 4], edx ; ret
0x0000000000144804 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000144814 : mov dword ptr [rcx + 6], edx ; ret
0x00000000001447e3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000010011b : mov dword ptr [rcx + 8], 0xf6df75f8 ; ret 0x7508
0x00000000001447d4 : mov dword ptr [rcx + 8], edx ; ret
0x000000000008e280 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000001102c9 : mov dword ptr [rcx + rax - 2], edx ; mov eax, r8d ; ret
0x000000000008e247 : mov dword ptr [rcx - 0x7c], 0xf3db75f9 ; ret
0x000000000015baa7 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000015ba92 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000015ba81 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000051c25 : mov dword ptr [rcx], 0x16 ; ret
0x000000000018b63d : mov dword ptr [rcx], 0xf71fec00 ; jmp rax
0x00000000001a5f01 : mov dword ptr [rcx], eax ; add byte ptr [rbp + rcx - 0xa], ch ; call rsi
0x00000000000cf108 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001103d3 : mov dword ptr [rcx], eax ; mov eax, edx ; ret
0x000000000003611a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071b6a : mov dword ptr [rcx], eax ; ret
0x0000000000075b5a : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000070b4c : mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071961 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000011042a : mov dword ptr [rcx], edi ; ret
0x0000000000144761 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000144780 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001447c1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001447a0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001447e1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001447f1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000144801 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000144811 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000144821 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000144831 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000144790 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000001447d1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000144751 : mov dword ptr [rcx], edx ; ret
0x00000000000e6cc2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000011477d : mov dword ptr [rdi + 0x10], eax ; je 0x114799 ; add rsp, 8 ; ret
0x000000000007f244 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000009de6d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000009eccd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000009deab : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009ed0b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x000000000009df2d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000009ed8d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x000000000009c83b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009d50e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009c8bd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000004691f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a08fd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a093b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a09bd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009d590 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009c900 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009c920 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009c8e1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e6caa : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000ecb85 : mov dword ptr [rdi + 0x16], eax ; ret
0x000000000009df93 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000009edf3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000009c903 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a0a23 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000125920 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007be63 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000078057 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000009df75 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x000000000009edd5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000009dfb3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000009ee13 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x000000000009c8e5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a0a05 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0a43 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000001259b2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x00000000001258e6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000b4b3f : mov dword ptr [rdi + 0x20], ecx ; ret
0x000000000007f241 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x00000000001258c3 : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000125a61 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ce2f4 : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000ce2f7 : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000001204f8 : mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x000000000007be93 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000120465 : mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x0000000000120525 : mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000007f289 : mov dword ptr [rdi + 0x60], ecx ; ret
0x000000000010f8ca : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009deed : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000009ed4d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000009c85d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a097d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009de8b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000009eceb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000009df0d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000009ed6d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000009c81b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a091b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a099d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000139d35 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000139b78 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139e18 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000139cc5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000139b08 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000039b03 : mov dword ptr [rdi + 2], edx ; ret
0x000000000009dd57 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000009eb97 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x0000000000139c55 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000139a98 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009c747 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a07c7 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000008e3d4 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x0000000000039afd : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009dd39 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x000000000009eb79 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x0000000000139a28 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000008e307 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a07a9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000e63f0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ddeb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x000000000009ec3b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000001399b8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009c7ab : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a086b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009de0b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x000000000009ec5b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000139948 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009c7bb : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a088b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009dda9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000009ebf9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009de2b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x000000000009ec7b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x00000000001398d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009c789 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a0829 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a08ab : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ef468 : mov dword ptr [rdi + 8], 0 ; ret
0x0000000000087180 : mov dword ptr [rdi + 8], 0 ; xor eax, eax ; ret
0x0000000000047c4e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000011b856 : mov dword ptr [rdi + 8], eax ; pop rbx ; ret
0x000000000007be67 : mov dword ptr [rdi + 8], eax ; ret
0x000000000007ecc4 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000468a4 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000039444 : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000003942c : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; ret
0x000000000009ebdb : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000009ddc9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009ec19 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x000000000009dd8b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000046124 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000078baf : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000009c77b : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a080b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a0849 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000ec7a2 : mov dword ptr [rdi + 8], esi ; ret
0x000000000015653d : mov dword ptr [rdi + r8 - 2], edx ; vzeroupper ; ret
0x0000000000156559 : mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x000000000015653e : mov dword ptr [rdi + rax - 2], edx ; vzeroupper ; ret
0x000000000015655a : mov dword ptr [rdi + rax - 4], edx ; vzeroupper ; ret
0x000000000015657c : mov dword ptr [rdi + rax - 8], edx ; vzeroupper ; ret
0x00000000000a180b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000a13e5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000155118 : mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000000a1803 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000157bc5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000a13d5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015512c : mov dword ptr [rdi + rdx - 7], ecx ; vzeroupper ; ret
0x00000000000a17fb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a13c7 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x00000000001337e5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000133823 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004680f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000133b6c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139388 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133d4c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139308 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133f3c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139288 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013410d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001391f9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013430d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000139169 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013450d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001390d9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009d6d0 : mov dword ptr [rdi - 1], edx ; ret
0x0000000000133eed : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000133d05 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000133ee9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x00000000001342c9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000013399f : mov dword ptr [rdi - 4], edx ; ret
0x00000000001342c6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001344c6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001346c6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004679a : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000133827 : mov dword ptr [rdi - 8], edx ; ret
0x000000000013399c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133a98 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001339e4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139408 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001b119c : mov dword ptr [rdi], 0 ; add byte ptr [rax], al ; retf
0x0000000000071140 : mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000038f02 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000008e2d9 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x00000000000377ff : mov dword ptr [rdi], eax ; jmp 0x377c9
0x000000000011b853 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000039429 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x00000000000ef455 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004b10b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000035398 : mov dword ptr [rdi], eax ; movd xmm0, dword ptr [rsp - 4] ; ret
0x000000000003944a : mov dword ptr [rdi], eax ; ret
0x0000000000046794 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000004689e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000ec7fe : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000005002a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009dd25 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000009dd77 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x000000000008e480 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x00000000001550f4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x000000000009dd04 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000009c704 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009eb37 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x000000000009d3d7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009eb65 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x000000000009d3f5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009ebb7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x000000000009d437 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009dd55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000009eb95 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x000000000009c745 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009dda7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000009ebf7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009c787 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009ddc7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000009ec17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x000000000009c797 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000015c167 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000009c7a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009c7b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009c7c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008e3a8 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009c736 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009c778 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000015c173 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000046769 : mov dword ptr [rdi], ecx ; ret
0x0000000000157bbf : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000008e2b1 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x000000000009dcf4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x0000000000156b74 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x000000000009eb24 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x0000000000157254 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x000000000009dd12 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000156ba2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x000000000009eb52 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x000000000009dd64 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x000000000009eba4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x0000000000155974 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x000000000009d6f0 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009d731 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009d751 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009d761 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000011269f : mov dword ptr [rdi], edx ; mov qword ptr [rax], 0 ; ret
0x000000000009d771 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009d781 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009d700 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009d741 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008e013 : mov dword ptr [rdi], edx ; pop rbx ; ret
0x0000000000034e36 : mov dword ptr [rdi], edx ; ret
0x00000000001550e4 : mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000a0754 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0782 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a07d4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000008e451 : mov dword ptr [rdi], esi ; lea rax, [rdi + rax - 1] ; ret
0x000000000015ba8f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000047a16 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000087069 : mov dword ptr [rdi], esi ; mov eax, 1 ; ret
0x000000000015ba7e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000008716e : mov dword ptr [rdi], esi ; mov rax, r8 ; ret
0x000000000008e381 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000015baa3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000479fb : mov dword ptr [rdi], esi ; ret
0x00000000000e63cd : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x0000000000132402 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000008e2d8 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x0000000000120dcc : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000007fb2a : mov dword ptr [rdx + 0x20], eax ; jmp 0x7fafe
0x000000000007195e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071b67 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000011a7f0 : mov dword ptr [rdx + 0x20], esi ; ret
0x00000000000cf081 : mov dword ptr [rdx + 0x20], esi ; xor eax, eax ; ret
0x0000000000071d3d : mov dword ptr [rdx + 0x28], esi ; mov byte ptr [rcx], dil ; ret
0x000000000011a7cc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011a7d0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000011dd3e : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000120ccc : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x0000000000079265 : mov dword ptr [rdx + 0xe0], edi ; pop rbx ; ret
0x0000000000146b27 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x000000000009930c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000051ce9 : mov dword ptr [rdx + 4], 1 ; ret
0x0000000000146b09 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000992ee : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000aef7f : mov dword ptr [rdx + 4], ecx ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000000000146bbb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000146b39 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000001427e9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000146bdb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000146b59 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000001427f9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000146b79 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000146bfb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000099390 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b5586 : mov dword ptr [rdx + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000146b99 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000146a8b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x0000000000099372 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000002bc5a : mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x00000000000d21f7 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e1e6e : mov dword ptr [rdx + rax*8], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2975 : mov dword ptr [rdx - 6], 0x75c084ff ; ret
0x000000000012a637 : mov dword ptr [rdx], 0 ; mov eax, r8d ; ret
0x0000000000146ab4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000146ae2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000146a34 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000003615a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000047a18 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000047c33 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000039bba : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000099289 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000002ef4d : mov dword ptr [rdx], eax ; ret
0x000000000007698c : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000aef82 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000dde97 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000008deb5 : mov dword ptr [rdx], ecx ; ret
0x00000000000f1f05 : mov dword ptr [rdx], edi ; pop rbx ; pop rbp ; ret
0x00000000000db45b : mov dword ptr [rdx], edi ; ret
0x0000000000088c21 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016391f : mov dword ptr [rip + 0x253e7b], ebx ; jne 0x163911 ; pop rbx ; ret
0x000000000012d3f2 : mov dword ptr [rip + 0x28aa98], esi ; xor eax, eax ; ret
0x0000000000102768 : mov dword ptr [rip + 0x2b670a], eax ; pop rbp ; ret
0x00000000000f81a0 : mov dword ptr [rip + 0x2bd1ba], ebx ; pop rbx ; ret
0x00000000000f092a : mov dword ptr [rip + 0x2c4a18], edi ; ret
0x00000000000efc19 : mov dword ptr [rip + 0x2c8b71], edx ; ret
0x0000000000087a78 : mov dword ptr [rip + 0x3304ca], eax ; ret
0x000000000007ee64 : mov dword ptr [rip + 0x33647e], eax ; ret
0x000000000007ee4c : mov dword ptr [rip + 0x33648e], eax ; ret
0x000000000007ee32 : mov dword ptr [rip + 0x336498], edx ; ret
0x000000000007edf4 : mov dword ptr [rip + 0x33649e], eax ; ret
0x000000000007edce : mov dword ptr [rip + 0x3364ac], eax ; ret
0x000000000007ede4 : mov dword ptr [rip + 0x3364b6], eax ; ret
0x000000000007ed9e : mov dword ptr [rip + 0x3364e4], eax ; ret
0x000000000007ed7d : mov dword ptr [rip + 0x336529], eax ; ret
0x000000000007ee8e : mov dword ptr [rip + 0x33900c], edx ; ret
0x000000000007edb3 : mov dword ptr [rip + 0x3390d3], eax ; ret
0x000000000003696b : mov dword ptr [rip + 0x37e83b], eax ; mov eax, edx ; ret
0x000000000003695c : mov dword ptr [rip + 0x37e846], edx ; ret
0x00000000000216fb : mov dword ptr [rip + 0x398a9f], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000002175c : mov dword ptr [rip + 0x398bc6], eax ; ret
0x00000000000dc044 : mov dword ptr [rsi + 0x10], eax ; ret
0x00000000000393ad : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000d2214 : mov dword ptr [rsi + 0x18], edx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000393b1 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000d2217 : mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000ec3cb : mov dword ptr [rsi + 0x48], eax ; ret
0x0000000000073205 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000eba86 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x0000000000039a2b : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000039ab7 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000dc027 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000119961 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000dc040 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000015c176 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000015c169 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000011997f : mov dword ptr [rsi], 0 ; ret
0x0000000000119a10 : mov dword ptr [rsi], 0xa ; ret
0x0000000000119a00 : mov dword ptr [rsi], 0xb ; ret
0x0000000000119a30 : mov dword ptr [rsi], 0xc ; ret
0x000000000011995b : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000119a20 : mov dword ptr [rsi], 8 ; ret
0x000000000007805b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007f022 : mov dword ptr [rsi], ecx ; ret
0x000000000010f8ce : mov dword ptr [rsi], edi ; ret
0x0000000000039466 : mov dword ptr [rsi], edx ; ret
0x0000000000034a25 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000081afb : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rsi
0x0000000000081b4e : mov dword ptr [rsp + 0x10], ecx ; mov qword ptr [rsp + 8], rax ; call rdx
0x000000000011900d : mov dword ptr [rsp + 0x18], edx ; lea r9, [rsp + 0x30] ; call qword ptr [rax]
0x00000000000e4a08 : mov dword ptr [rsp + 0x20], ecx ; call 0x21456
0x00000000000375f3 : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000000000d3cea : mov dword ptr [rsp + 0x38], edi ; add rax, rcx ; jmp rax
0x000000000004fc94 : mov dword ptr [rsp + 0x50], eax ; call 0x7bf86
0x00000000000b3e38 : mov dword ptr [rsp + 0x58], ebp ; mov rdi, rbp ; call rbx
0x0000000000035da1 : mov dword ptr [rsp + 0x80], eax ; syscall
0x00000000000449bc : mov dword ptr [rsp + 0x98], esi ; call 0x21499
0x00000000001232d4 : mov dword ptr [rsp + 0xc8], edx ; call rax
0x0000000000125431 : mov dword ptr [rsp + 0xc], edx ; call 0x2166e
0x0000000000081b53 : mov dword ptr [rsp + 8], eax ; call rdx
0x0000000000081b00 : mov dword ptr [rsp + 8], eax ; call rsi
0x0000000000079b9f : mov dword ptr [rsp + 8], eax ; mov rdi, rbx ; call rax
0x0000000000125d6c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x000000000008170a : mov dword ptr [rsp + 8], ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000819f2 : mov dword ptr [rsp + 8], ecx ; xor edi, edi ; call qword ptr [rax]
0x000000000007c503 : mov dword ptr [rsp + 8], edi ; call 0x787c6
0x0000000000081965 : mov dword ptr [rsp + 8], edi ; call qword ptr [rax]
0x0000000000081986 : mov dword ptr [rsp + 8], esi ; xor edi, edi ; call qword ptr [rax]
0x0000000000034af4 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000047b8a : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000f5afe : mov dword ptr [rsp - 0x30], ecx ; syscall
0x00000000000f78dd : mov dword ptr [rsp - 0x38], eax ; jmp 0xf78b3
0x00000000000ee421 : mov dword ptr [rsp - 0x48], 0x18 ; syscall
0x0000000000035a35 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000008570d : mov dword ptr [rsp], eax ; je 0x857f1 ; call rax
0x000000000007463a : mov dword ptr [rsp], eax ; mov rdi, r15 ; call rax
0x00000000000859e2 : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c17c3 : mov dword ptr fs:[r8], ebx ; mov rax, r9 ; pop rbx ; ret
0x00000000001069f1 : mov dword ptr fs:[r8], r9d ; add rsp, 0x18 ; ret
0x00000000000c1e8b : mov dword ptr fs:[r8], r9d ; add rsp, 8 ; ret
0x00000000000ed8c7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000e730c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x00000000000f1a97 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000ebbdf : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000eda7d : mov dword ptr fs:[rax], 0x24 ; jmp 0xeda59
0x000000000012d2f7 : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x00000000000858f1 : mov dword ptr fs:[rax], 0xc ; jmp 0x858cd
0x0000000000086c27 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c04a7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000022627 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000de191 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000de142 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x000000000010e620 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051c24 : mov dword ptr fs:[rcx], 0x16 ; ret
0x0000000000036119 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036159 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000a13d4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000133d00 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000009c6f0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ebd73 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000118274 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a196b : mov eax, 0x10 ; pop rbx ; ret
0x0000000000051cf8 : mov eax, 0x10 ; ret
0x00000000000ec923 : mov eax, 0x10 ; syscall
0x00000000000ed9f0 : mov eax, 0x100 ; add rsp, 0x18 ; ret
0x00000000000ecb7f : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000e77e1 : mov eax, 0x101 ; syscall
0x00000000000e76e0 : mov eax, 0x102 ; syscall
0x00000000000e740a : mov eax, 0x103 ; syscall
0x00000000000e8c63 : mov eax, 0x104 ; syscall
0x00000000000ef345 : mov eax, 0x105 ; syscall
0x00000000000e7462 : mov eax, 0x106 ; syscall
0x00000000000e94d0 : mov eax, 0x107 ; syscall
0x0000000000051bb3 : mov eax, 0x108 ; syscall
0x00000000000e93b3 : mov eax, 0x109 ; syscall
0x00000000000e9410 : mov eax, 0x10a ; syscall
0x00000000000e9473 : mov eax, 0x10b ; syscall
0x00000000000e764d : mov eax, 0x10c ; syscall
0x00000000000e7cad : mov eax, 0x10d ; syscall
0x00000000000edc59 : mov eax, 0x10e ; syscall
0x00000000000ebcc7 : mov eax, 0x10f ; syscall
0x00000000000e5ddf : mov eax, 0x11 ; syscall
0x00000000000f67e0 : mov eax, 0x110 ; syscall
0x00000000000f605f : mov eax, 0x113 ; syscall
0x00000000000f5eff : mov eax, 0x114 ; syscall
0x00000000000ec3df : mov eax, 0x115 ; syscall
0x00000000000f5faf : mov eax, 0x116 ; syscall
0x00000000000ec2b3 : mov eax, 0x118 ; syscall
0x00000000000f5c85 : mov eax, 0x119 ; syscall
0x00000000000f6840 : mov eax, 0x11b ; syscall
0x00000000000ec47f : mov eax, 0x11d ; syscall
0x00000000000f6873 : mov eax, 0x11e ; syscall
0x00000000000f68a0 : mov eax, 0x11f ; syscall
0x00000000000e5e8f : mov eax, 0x12 ; syscall
0x00000000000f73ff : mov eax, 0x120 ; syscall
0x00000000000f5d70 : mov eax, 0x122 ; syscall
0x00000000000f64b0 : mov eax, 0x123 ; syscall
0x00000000000e8250 : mov eax, 0x124 ; syscall
0x00000000000e82b0 : mov eax, 0x125 ; syscall
0x00000000000f65d0 : mov eax, 0x126 ; syscall
0x00000000000ed322 : mov eax, 0x127 ; syscall
0x00000000000ed3d2 : mov eax, 0x128 ; syscall
0x00000000000f749f : mov eax, 0x12b ; syscall
0x00000000000f68d0 : mov eax, 0x12c ; syscall
0x00000000000f6363 : mov eax, 0x12d ; syscall
0x00000000000f5df3 : mov eax, 0x12e ; syscall
0x00000000000ecc47 : mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000000f6903 : mov eax, 0x12f ; syscall
0x00000000000ed1dc : mov eax, 0x13 ; syscall
0x00000000000f611c : mov eax, 0x130 ; syscall
0x00000000000f63f0 : mov eax, 0x131 ; syscall
0x00000000000edea0 : mov eax, 0x132 ; syscall
0x00000000000f754f : mov eax, 0x133 ; syscall
0x00000000000f6930 : mov eax, 0x134 ; syscall
0x00000000000e6e7f : mov eax, 0x135 ; syscall
0x00000000000f6963 : mov eax, 0x136 ; syscall
0x00000000000f6993 : mov eax, 0x137 ; syscall
0x0000000000039b4c : mov eax, 0x13e ; syscall
0x00000000000f69c0 : mov eax, 0x13f ; syscall
0x00000000000ed27c : mov eax, 0x14 ; syscall
0x00000000000c5167 : mov eax, 0x142 ; syscall
0x00000000000ec1ff : mov eax, 0x146 ; syscall
0x00000000000ed4a2 : mov eax, 0x147 ; syscall
0x00000000000ed602 : mov eax, 0x148 ; syscall
0x00000000000f6238 : mov eax, 0x149 ; syscall
0x00000000000f69f0 : mov eax, 0x14a ; syscall
0x00000000000f6a20 : mov eax, 0x14b ; syscall
0x00000000000e7b40 : mov eax, 0x15 ; syscall
0x000000000007ec90 : mov eax, 0x16 ; ret
0x00000000000e8280 : mov eax, 0x16 ; syscall
0x00000000000edb6f : mov eax, 0x17 ; syscall
0x000000000007ebf0 : mov eax, 0x18 ; syscall
0x00000000000f6693 : mov eax, 0x19 ; syscall
0x00000000000f0c0c : mov eax, 0x1a ; syscall
0x00000000000f0cd0 : mov eax, 0x1b ; syscall
0x00000000000e6cd7 : mov eax, 0x1c ; syscall
0x00000000000f7993 : mov eax, 0x1d ; syscall
0x00000000000f7930 : mov eax, 0x1e ; syscall
0x00000000000f79c0 : mov eax, 0x1f ; syscall
0x000000000005662f : mov eax, 0x1fffff9 ; retf
0x00000000000c6382 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000a1979 : mov eax, 0x20 ; pop rbx ; ret
0x00000000000c62a7 : mov eax, 0x20 ; ret
0x00000000000e81f0 : mov eax, 0x20 ; syscall
0x000000000002eca7 : mov eax, 0x200 ; ret
0x00000000000e8220 : mov eax, 0x21 ; syscall
0x00000000000c4ddc : mov eax, 0x22 ; syscall
0x00000000000b6ee0 : mov eax, 0x24 ; syscall
0x00000000000c4d50 : mov eax, 0x25 ; syscall
0x00000000000b6f10 : mov eax, 0x26 ; syscall
0x00000000000c5a50 : mov eax, 0x27 ; syscall
0x00000000000ec1c3 : mov eax, 0x28 ; syscall
0x00000000000f7180 : mov eax, 0x29 ; syscall
0x00000000000f6b8c : mov eax, 0x2a ; syscall
0x00000000000f6abc : mov eax, 0x2b ; syscall
0x00000000000f6f15 : mov eax, 0x2c ; syscall
0x00000000000f6cf5 : mov eax, 0x2d ; syscall
0x00000000000f6fcc : mov eax, 0x2e ; syscall
0x00000000000f6e6c : mov eax, 0x2f ; syscall
0x00000000000a1972 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000f7150 : mov eax, 0x30 ; syscall
0x00000000000f6b50 : mov eax, 0x31 ; syscall
0x00000000000f6cb0 : mov eax, 0x32 ; syscall
0x00000000000f6c50 : mov eax, 0x33 ; syscall
0x00000000000f6c20 : mov eax, 0x34 ; syscall
0x00000000000f71b3 : mov eax, 0x35 ; syscall
0x00000000000f7123 : mov eax, 0x36 ; syscall
0x00000000000f6c83 : mov eax, 0x37 ; syscall
0x00000000000c4ed1 : mov eax, 0x38 ; syscall
0x00000000000c5061 : mov eax, 0x3a ; syscall
0x00000000000c50f0 : mov eax, 0x3b ; syscall
0x00000000000f5b82 : mov eax, 0x3c ; syscall
0x00000000000c4c0f : mov eax, 0x3d ; syscall
0x0000000000036100 : mov eax, 0x3e ; syscall
0x00000000000c4b30 : mov eax, 0x3f ; syscall
0x00000000000a1987 : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c62d6 : mov eax, 0x40 ; ret
0x00000000000f7860 : mov eax, 0x40 ; syscall
0x00000000000f78ae : mov eax, 0x42 ; syscall
0x00000000000f7960 : mov eax, 0x43 ; syscall
0x00000000000f77f0 : mov eax, 0x44 ; syscall
0x000000000005c9c8 : mov eax, 0x44fffffa ; mov edi, esi ; call 0xf9439
0x00000000000f76af : mov eax, 0x45 ; syscall
0x00000000001743db : mov eax, 0x45155e93 ; ret 0x591c
0x00000000000f774f : mov eax, 0x46 ; syscall
0x00000000000f7820 : mov eax, 0x47 ; syscall
0x00000000000e7e6b : mov eax, 0x48 ; syscall
0x00000000000e7f00 : mov eax, 0x49 ; syscall
0x00000000000edd7c : mov eax, 0x4a ; syscall
0x00000000000ede2c : mov eax, 0x4b ; syscall
0x00000000000ef380 : mov eax, 0x4c ; syscall
0x0000000000196480 : mov eax, 0x4c00008e ; jle 0x19647c ; jmp qword ptr [rbx]
0x00000000000ef3b0 : mov eax, 0x4d ; syscall
0x00000000000e844b : mov eax, 0x4f ; syscall
0x00000000000e8370 : mov eax, 0x50 ; syscall
0x00000000000e83a0 : mov eax, 0x51 ; syscall
0x0000000000051b80 : mov eax, 0x52 ; syscall
0x00000000000e76b0 : mov eax, 0x53 ; syscall
0x00000000000e9500 : mov eax, 0x54 ; syscall
0x00000000000e82ec : mov eax, 0x55 ; syscall
0x00000000000e9380 : mov eax, 0x56 ; syscall
0x00000000000e94a0 : mov eax, 0x57 ; syscall
0x00000000000e93e0 : mov eax, 0x58 ; syscall
0x00000000000e9440 : mov eax, 0x59 ; syscall
0x00000000000e75c0 : mov eax, 0x5a ; syscall
0x00000000000e75f0 : mov eax, 0x5b ; syscall
0x00000000000e8bd0 : mov eax, 0x5c ; syscall
0x00000000000e8c00 : mov eax, 0x5d ; syscall
0x00000000000e8c30 : mov eax, 0x5e ; syscall
0x00000000000e75b0 : mov eax, 0x5f ; syscall
0x00000000000a1980 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000b4625 : mov eax, 0x60 ; syscall
0x00000000000eccc0 : mov eax, 0x62 ; syscall
0x00000000000f67b0 : mov eax, 0x63 ; syscall
0x0000000000003674 : mov eax, 0x637514da ; jle 0x36b2 ; retf 0x8792
0x00000000000c4b60 : mov eax, 0x64 ; syscall
0x00000000000c5a70 : mov eax, 0x66 ; syscall
0x00000000000f6630 : mov eax, 0x67 ; syscall
0x00000000000c5a90 : mov eax, 0x68 ; syscall
0x00000000000c5aea : mov eax, 0x69 ; syscall
0x00000000000c5b5a : mov eax, 0x6a ; syscall
0x00000000001885fd : mov eax, 0x6adc0000 ; out dx, al ; call rsp
0x00000000000c5a80 : mov eax, 0x6b ; syscall
0x00000000000c5aa0 : mov eax, 0x6c ; syscall
0x00000000000c5c80 : mov eax, 0x6d ; syscall
0x00000000000c5a60 : mov eax, 0x6e ; syscall
0x00000000000c5cb0 : mov eax, 0x6f ; syscall
0x00000000000c5d10 : mov eax, 0x70 ; syscall
0x00000000000ed73a : mov eax, 0x71 ; syscall
0x00000000000ed7ba : mov eax, 0x72 ; syscall
0x00000000000c5ab0 : mov eax, 0x73 ; syscall
0x00000000000c16fa : mov eax, 0x74 ; syscall
0x000000000006f7dc : mov eax, 0x74f63941 ; retf
0x00000000000e6a25 : mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000c5daa : mov eax, 0x75 ; syscall
0x00000000000c5d40 : mov eax, 0x76 ; syscall
0x00000000000e6a4d : mov eax, 0x77 ; mov edi, edx ; syscall
0x00000000000c5e2a : mov eax, 0x77 ; syscall
0x00000000000c5d70 : mov eax, 0x78 ; syscall
0x00000000000c5c50 : mov eax, 0x79 ; syscall
0x00000000000f5c10 : mov eax, 0x7a ; syscall
0x00000000000f5c40 : mov eax, 0x7b ; syscall
0x00000000000c5ce0 : mov eax, 0x7c ; syscall
0x0000000000190680 : mov eax, 0x7c000030 ; mov edx, gs ; jmp rsp
0x0000000000189dfc : mov eax, 0x7c000143 ; test bl, dh ; call rsp
0x000000000018c354 : mov eax, 0x7c000216 ; or ecx, edi ; call rsp
0x00000000000f6390 : mov eax, 0x7d ; syscall
0x00000000000c6226 : mov eax, 0x7d00 ; ret
0x00000000000c61e0 : mov eax, 0x7e ; ret
0x00000000000f63c0 : mov eax, 0x7e ; syscall
0x0000000000198e31 : mov eax, 0x7e3c0000 ; sti ; call rsp
0x00000000000c634a : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000c6196 : mov eax, 0x7f ; ret
0x0000000000036135 : mov eax, 0x7f ; syscall
0x0000000000110840 : mov eax, 0x7fffffff ; ret
0x00000000000a195d : mov eax, 0x80 ; pop rbx ; ret
0x0000000000036af2 : mov eax, 0x81 ; syscall
0x0000000000036181 : mov eax, 0x82 ; syscall
0x0000000000036510 : mov eax, 0x83 ; syscall
0x00000000000e6f10 : mov eax, 0x84 ; syscall
0x00000000000e73a6 : mov eax, 0x85 ; syscall
0x00000000000f6810 : mov eax, 0x86 ; syscall
0x00000000000f5e20 : mov eax, 0x87 ; syscall
0x00000000000f3077 : mov eax, 0x88 ; syscall
0x00000000000e74b0 : mov eax, 0x89 ; syscall
0x0000000000069d11 : mov eax, 0x89000020 ; ret 0x349
0x00000000000e74e0 : mov eax, 0x8a ; syscall
0x00000000000ecf90 : mov eax, 0x8c ; syscall
0x00000000000ecfd0 : mov eax, 0x8d ; syscall
0x00000000000ddf60 : mov eax, 0x8e ; syscall
0x00000000000ddf90 : mov eax, 0x8f ; syscall
0x00000000000ddfc0 : mov eax, 0x90 ; syscall
0x00000000000ddff0 : mov eax, 0x91 ; syscall
0x00000000000de050 : mov eax, 0x92 ; syscall
0x00000000000de080 : mov eax, 0x93 ; syscall
0x00000000000de0b0 : mov eax, 0x94 ; syscall
0x00000000000f0d30 : mov eax, 0x95 ; syscall
0x00000000000f0d60 : mov eax, 0x96 ; syscall
0x00000000000f0d90 : mov eax, 0x97 ; syscall
0x00000000000f0dc0 : mov eax, 0x98 ; syscall
0x00000000000ee1a0 : mov eax, 0x99 ; syscall
0x00000000000f6320 : mov eax, 0x9a ; syscall
0x00000000000f66f0 : mov eax, 0x9b ; syscall
0x00000000000f6723 : mov eax, 0x9d ; syscall
0x00000000000f62f0 : mov eax, 0x9e ; syscall
0x00000000000f42bb : mov eax, 0xa ; pop rbx ; pop rbp ; ret
0x00000000000f0bd0 : mov eax, 0xa ; syscall
0x00000000000edd40 : mov eax, 0xa1 ; syscall
0x00000000000032d8 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000eddf0 : mov eax, 0xa2 ; syscall
0x00000000000edd10 : mov eax, 0xa3 ; syscall
0x00000000000b47a3 : mov eax, 0xa4 ; xor edi, edi ; syscall
0x00000000000f6663 : mov eax, 0xa5 ; syscall
0x00000000000f5bb0 : mov eax, 0xa6 ; syscall
0x00000000000ee1d0 : mov eax, 0xa7 ; syscall
0x00000000000ee200 : mov eax, 0xa8 ; syscall
0x00000000000ededc : mov eax, 0xa9 ; syscall
0x00000000000eda90 : mov eax, 0xaa ; syscall
0x00000000000edb30 : mov eax, 0xab ; syscall
0x00000000000f5a90 : mov eax, 0xac ; syscall
0x00000000000f5a60 : mov eax, 0xad ; syscall
0x00000000000f6420 : mov eax, 0xae ; syscall
0x00000000000f6543 : mov eax, 0xaf ; syscall
0x00000000000f0ba0 : mov eax, 0xb ; syscall
0x00000000000f6450 : mov eax, 0xb0 ; syscall
0x00000000000f6510 : mov eax, 0xb1 ; syscall
0x00000000000f6753 : mov eax, 0xb2 ; syscall
0x00000000000f6783 : mov eax, 0xb3 ; syscall
0x00000000000f66c0 : mov eax, 0xb4 ; syscall
0x000000000011ddcf : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035db6 : mov eax, 0xba ; syscall
0x00000000000f5be0 : mov eax, 0xbb ; syscall
0x00000000000f3a83 : mov eax, 0xbc ; syscall
0x0000000000193f80 : mov eax, 0xbc000069 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019ad80 : mov eax, 0xbc0000d7 ; outsb dx, byte ptr [rsi] ; int1 ; jmp qword ptr [rbx]
0x00000000000f3a23 : mov eax, 0xbd ; syscall
0x00000000000f3903 : mov eax, 0xbe ; syscall
0x00000000000f3933 : mov eax, 0xbf ; syscall
0x00000000000cd6f1 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000e5f6c : mov eax, 0xc ; pop rbx ; pop rbp ; ret
0x00000000000854c8 : mov eax, 0xc ; pop rbx ; ret
0x00000000000f3993 : mov eax, 0xc0 ; syscall
0x00000000001a3280 : mov eax, 0xc00015c ; cmp ch, dh ; call qword ptr [rsi]
0x00000000000f3873 : mov eax, 0xc1 ; syscall
0x00000000000f3960 : mov eax, 0xc2 ; syscall
0x00000000000f39c0 : mov eax, 0xc3 ; syscall
0x00000000000f38a0 : mov eax, 0xc4 ; syscall
0x00000000000f3a50 : mov eax, 0xc5 ; syscall
0x00000000000f39f0 : mov eax, 0xc6 ; syscall
0x00000000000f38d0 : mov eax, 0xc7 ; syscall
0x00000000001778c1 : mov eax, 0xc761ffed ; in eax, dx ; call qword ptr [rdx]
0x00000000000b4510 : mov eax, 0xc9 ; syscall
0x0000000000023ba5 : mov eax, 0xca ; syscall
0x000000000019d880 : mov eax, 0xcc000102 ; adc esi, ebx ; jmp rdx
0x00000000000f6480 : mov eax, 0xd5 ; syscall
0x00000000000f0d03 : mov eax, 0xd8 ; syscall
0x00000000000c06b0 : mov eax, 0xd9 ; syscall
0x00000000000f7903 : mov eax, 0xdc ; syscall
0x000000000018b0b4 : mov eax, 0xdc0001b0 ; mov dh, 0xf6 ; call rax
0x00000000000ebd63 : mov eax, 0xdd ; syscall
0x0000000000035de3 : mov eax, 0xe ; syscall
0x0000000000122b26 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bf93a : mov eax, 0xe3 ; syscall
0x00000000000bf915 : mov eax, 0xe4 ; syscall
0x00000000000bf8a5 : mov eax, 0xe5 ; syscall
0x00000000000bf9a3 : mov eax, 0xe6 ; syscall
0x00000000000f5e5f : mov eax, 0xe8 ; syscall
0x000000000005af94 : mov eax, 0xe8fffffa ; retf
0x00000000000f64e3 : mov eax, 0xe9 ; syscall
0x0000000000035dc1 : mov eax, 0xea ; syscall
0x00000000000ef1c0 : mov eax, 0xeb ; syscall
0x0000000000035e51 : mov eax, 0xf ; syscall
0x0000000000002e36 : mov eax, 0xf3f8ec1c ; ret
0x00000000000c4cb2 : mov eax, 0xf7 ; syscall
0x00000000000c6246 : mov eax, 0xfa ; ret
0x00000000000c6250 : mov eax, 0xfc17 ; ret
0x00000000000f65a0 : mov eax, 0xfd ; syscall
0x00000000000c61c4 : mov eax, 0xfde8 ; jne 0xc619e ; ret
0x00000000000f6570 : mov eax, 0xfe ; syscall
0x00000000000f6600 : mov eax, 0xff ; syscall
0x00000000000c61f0 : mov eax, 0xfffa ; ret
0x0000000000110a34 : mov eax, 0xfffffff5 ; pop rbx ; pop rbp ; ret
0x0000000000110a21 : mov eax, 0xfffffff6 ; pop rbx ; pop rbp ; ret
0x000000000012d401 : mov eax, 0xfffffffe ; ret
0x00000000000360ec : mov eax, 0xffffffff ; add rsp, 0x10 ; ret
0x00000000000365e0 : mov eax, 0xffffffff ; jmp 0x365b8
0x00000000000f188b : mov eax, 0xffffffff ; jmp 0xf1863
0x00000000000c54ed : mov eax, 0xffffffff ; leave ; ret
0x0000000000045a81 : mov eax, 0xffffffff ; mov eax, r8d ; ret
0x0000000000059cc8 : mov eax, 0xffffffff ; mov qword ptr [rdi], rsi ; ret
0x0000000000110797 : mov eax, 0xffffffff ; mov rdx, rax ; ret
0x00000000000ed045 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000c5389 : mov eax, 0xffffffff ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000002b69f : mov eax, 0xffffffff ; pop rbx ; pop r12 ; ret
0x000000000003811e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab73f : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000070b5c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003418e : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000002b730 : mov eax, 0xffffffff ; ret
0x00000000000bf7fe : mov eax, 1 ; add rsp, 8 ; ret
0x000000000015eb20 : mov eax, 1 ; jg 0x15eb39 ; neg eax ; ret
0x00000000000b2c20 : mov eax, 1 ; jg 0xb2c32 ; neg eax ; ret
0x000000000015b8f6 : mov eax, 1 ; jl 0x15b909 ; neg eax ; ret
0x00000000000c66a2 : mov eax, 1 ; js 0xc66b8 ; ret
0x000000000011b038 : mov eax, 1 ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000479f5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000120d14 : mov eax, 1 ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x0000000000120cdc : mov eax, 1 ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x000000000011dccc : mov eax, 1 ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000011dce5 : mov eax, 1 ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000e1f4d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000007c7c2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024224 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000072bef : mov eax, 1 ; pop rbx ; ret
0x0000000000036858 : mov eax, 1 ; ret
0x00000000000e7a7c : mov eax, 1 ; syscall
0x0000000000036d64 : mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4118 : mov eax, 2 ; pop rbx ; pop rbp ; ret
0x0000000000047c35 : mov eax, 2 ; ret
0x00000000000bf835 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000b3691 : mov eax, 3 ; ret
0x00000000000e817c : mov eax, 3 ; syscall
0x00000000000b36a1 : mov eax, 4 ; ret
0x00000000000e6fae : mov eax, 4 ; syscall
0x00000000001026e7 : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000000e24fc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000b36b1 : mov eax, 5 ; ret
0x00000000000e6ffc : mov eax, 5 ; syscall
0x00000000000b36c1 : mov eax, 6 ; ret
0x00000000000e704e : mov eax, 6 ; syscall
0x000000000010122c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000b36d1 : mov eax, 7 ; ret
0x00000000000ebbfc : mov eax, 7 ; syscall
0x00000000000a1964 : mov eax, 8 ; pop rbx ; ret
0x0000000000022cb0 : mov eax, 8 ; ret
0x00000000000e7b10 : mov eax, 8 ; syscall
0x00000000000e6190 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0afc : mov eax, 9 ; syscall
0x000000000007eb92 : mov eax, dword ptr [0x10] ; ret
0x00000000000318f7 : mov eax, dword ptr [r15 + 4] ; jmp 0x318c5
0x0000000000124b88 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000f8608 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000124bc5 : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000f85f0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000114247 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x114258 ; ret
0x00000000000ed998 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xed9ab ; ret
0x00000000000f3af1 : mov eax, dword ptr [rax + 0x1c8] ; ret
0x000000000012c4cf : mov eax, dword ptr [rax + 0x1d8] ; jmp rax
0x0000000000074c11 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000001025d9 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000f8c47 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000f385c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000001203ad : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120c5d : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000038e86 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007c808 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x7c809 ; ret
0x000000000002dbae : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000f3aea : mov eax, dword ptr [rax + 8] ; ret
0x000000000007ea58 : mov eax, dword ptr [rax + rbx] ; test rax, rax ; je 0x7ea6a ; call rax
0x000000000002eca5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002ee67 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e7ef : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002e838 : mov eax, dword ptr [rax + rdx] ; ret
0x00000000000f95d4 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002c425 : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2c437 ; call rax
0x0000000000068981 : mov eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001961c5 : mov eax, dword ptr [rax] ; add byte ptr [rax + 0x77], ch ; out dx, al ; call qword ptr [rdi]
0x000000000002dbac : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002ec7c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000038e83 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000114319 : mov eax, dword ptr [rax] ; ret
0x000000000007f882 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7f892 ; call rax
0x00000000000f2d82 : mov eax, dword ptr [rax] ; test rax, rax ; je 0xf2dd7 ; call rax
0x0000000000001ac9 : mov eax, dword ptr [rbp + 0x7872a51b] ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000007bfbd : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000101a9e : mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000077cfd : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007c4e9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000086afc : mov eax, dword ptr [rbx + 0x40] ; jne 0x86b18 ; mov rdi, r13 ; call rax
0x0000000000086ba0 : mov eax, dword ptr [rbx + 0x40] ; jne 0x86b80 ; mov rdi, rsi ; call rax
0x000000000011a723 : mov eax, dword ptr [rbx + 8] ; mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001229ba : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1229d0 ; pop rbx ; ret
0x0000000000099309 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001427e6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001427f6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000009938d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000993ad : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000ff650 : mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x000000000014beea : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014d7c2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000008874f : mov eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000059963 : mov eax, dword ptr [rcx] ; jmp 0x56384
0x0000000000146ae0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000000992b5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000146a31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000142701 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000146ab1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000099286 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000007325e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000007d5a0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007d5c8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000114421 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x114438 ; pop rbx ; ret
0x0000000000125c5e : mov eax, dword ptr [rdi + 0x18] ; jbe 0x125c78 ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000125881 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c0691 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000016357d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x163594 ; call rax
0x00000000000b2ba0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xb2c28 ; ret
0x00000000000b2bb5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xb2c28 ; ret
0x00000000001199b7 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000125be0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000077d41 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000b2bc0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xb2c28 ; ret
0x00000000000b2bdb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xb2c28 ; ret
0x00000000000b2bf0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xb2c28 ; ret
0x00000000000b2c05 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xb2c28 ; ret
0x00000000000b2c10 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xb2c28 ; ret
0x00000000001199ef : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077c31 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000d1798 : mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1790 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007d851 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000076018 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x76030 ; ret
0x00000000000318f8 : mov eax, dword ptr [rdi + 4] ; jmp 0x318c4
0x00000000000e63e0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000ec750 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000124d16 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000011a691 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x00000000001230c9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbp ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000124dfe : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000a21bd : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xa2199 ; ret
0x0000000000077ca0 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000077c70 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000011dd50 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007edb1 : mov eax, dword ptr [rdi] ; mov dword ptr [rip + 0x3390d3], eax ; ret
0x000000000007ece0 : mov eax, dword ptr [rdi] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007d595 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000007ee61 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x33647e], rax ; ret
0x000000000007edf1 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x33649e], rax ; ret
0x000000000007ede1 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x3364b6], rax ; ret
0x00000000000c06e0 : mov eax, dword ptr [rdi] ; ret
0x0000000000078b50 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000078b60 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000011ea04 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11ea17 ; ret
0x000000000011ea03 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11ea18 ; ret
0x0000000000123744 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x123757 ; ret
0x0000000000123743 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x123758 ; ret
0x000000000007eafe : mov eax, dword ptr [rdx + 0x10] ; test rax, rax ; je 0x7eadd ; call rax
0x00000000000df051 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000007eb11 : mov eax, dword ptr [rdx + 8] ; test rax, rax ; je 0x7eadd ; call rax
0x000000000002ec33 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000a1df7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa1de9 ; ret
0x00000000000946c6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002db7e : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000074cc1 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000072dc7 : mov eax, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000db458 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000070cfc : mov eax, dword ptr [rdx] ; ret
0x000000000007d581 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7d580 ; ret
0x000000000012c698 : mov eax, dword ptr [rip + 0x28daea] ; call qword ptr [rax]
0x000000000010d669 : mov eax, dword ptr [rip + 0x2a9289] ; ret
0x00000000000f8c41 : mov eax, dword ptr [rip + 0x2bc219] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000086a1a : mov eax, dword ptr [rip + 0x32e530] ; call qword ptr [rax]
0x0000000000086955 : mov eax, dword ptr [rip + 0x32e5f5] ; call qword ptr [rax]
0x000000000008689a : mov eax, dword ptr [rip + 0x32e6b0] ; call qword ptr [rax]
0x0000000000083995 : mov eax, dword ptr [rip + 0x331545] ; mov qword ptr [rax], rdi ; ret
0x000000000007d831 : mov eax, dword ptr [rip + 0x338d69] ; ret
0x0000000000036930 : mov eax, dword ptr [rip + 0x37e872] ; ret
0x0000000000036920 : mov eax, dword ptr [rip + 0x37e886] ; ret
0x000000000002e7ce : mov eax, dword ptr [rip + 0x386614] ; mov qword ptr [rax], rdx ; ret
0x000000000002b4d1 : mov eax, dword ptr [rip + 0x38b491] ; ret
0x0000000000022dc1 : mov eax, dword ptr [rip + 0x3973e1] ; ret
0x0000000000022db1 : mov eax, dword ptr [rip + 0x397401] ; ret
0x00000000000de2aa : mov eax, dword ptr [rsi + 0x14] ; pop rbx ; pop rbp ; ret
0x00000000001149bb : mov eax, dword ptr [rsi + 0x18] ; cmp dword ptr [rdi + 0x18], eax ; sete al ; ret
0x000000000002ee61 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ee71 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002db89 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000012c6bc : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x0000000000021dc7 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000024d32 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000025833 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000125d87 : mov eax, dword ptr [rsp + 0x28] ; sub rsp, -0x80 ; pop rbx ; ret
0x00000000000361c9 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000051af1 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000012c65d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000ee59b : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002f40d : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000037669 : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000000375ee : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000ee44f : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000ec595 : mov eax, dword ptr [rsp - 4] ; jne 0xec55c ; neg eax ; ret
0x00000000000c4dc0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e6d06 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000016304d : mov eax, dword ptr [rsp] ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f8ca3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000f8d04 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000010cbe5 : mov eax, dword ptr [rsp] ; call rax
0x000000000006fa21 : mov eax, dword ptr [rsp] ; mov edi, dword ptr [rsp + rax*4 + 0x28] ; call 0xec519
0x00000000000fba39 : mov eax, eax ; add rsp, 8 ; ret
0x00000000001102dc : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000e7a09 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000000224ab : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000038df9 : mov eax, eax ; or rax, rdx ; ret
0x000000000006ffc0 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003891b : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000386a1 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000381e1 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004fe15 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004defc : mov eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000035df2 : mov eax, eax ; pop rbx ; ret
0x0000000000045a87 : mov eax, eax ; ret
0x0000000000159314 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x00000000000c50c2 : mov eax, eax ; syscall
0x00000000001549a1 : mov eax, eax ; vzeroupper ; ret
0x000000000008720d : mov eax, ebp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x000000000002e5d6 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e2454 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007812e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002f4f1 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004b3ab : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000077f0c : mov eax, ebp ; syscall
0x0000000000046263 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000e1f90 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000785bf : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000edc57 : mov eax, ebx ; mov eax, 0x10e ; syscall
0x0000000000116920 : mov eax, ebx ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008a9b6 : mov eax, ebx ; pop rbx ; cmovne rax, rdx ; ret
0x00000000000eff07 : mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000006f260 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002bd9a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032b35 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000045111 : mov eax, ebx ; pop rbx ; ret
0x00000000000f148a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000046127 : mov eax, ecx ; adc eax, eax ; ret
0x000000000004b2c1 : mov eax, ecx ; add rsp, 0x28 ; ret
0x00000000000de0f7 : mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x00000000000ef506 : mov eax, ecx ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000f0950 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000e60f6 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000066507 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006644c : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000858ca : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000000c17c8 : mov eax, ecx ; pop rbx ; ret
0x000000000003411c : mov eax, ecx ; ret
0x0000000000035daf : mov eax, ecx ; syscall
0x000000000002ecd0 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000105056 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000105030 : mov eax, edi ; bswap eax ; ret
0x0000000000038e01 : mov eax, edi ; cqo ; idiv rsi ; ret
0x00000000000a26dc : mov eax, edi ; ja 0xa26ed ; ret
0x00000000000ef573 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000071113 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006de64 : mov eax, edi ; mov rax, r8 ; ret
0x000000000002261b : mov eax, edi ; neg eax ; ret
0x000000000007f6b8 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000008e815 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002262e : mov eax, edi ; ret
0x0000000000105040 : mov eax, edi ; rol ax, 8 ; ret
0x0000000000038da2 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000104f6a : mov eax, edi ; sar rax, 6 ; ret
0x00000000001050d6 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000156871 : mov eax, edi ; vzeroupper ; ret
0x000000000004b2ba : mov eax, edx ; add rax, r9 ; ret
0x0000000000035ccb : mov eax, edx ; add rsp, 0x148 ; ret
0x00000000000b3c18 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000ee337 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000515e0 : mov eax, edx ; add rsp, 0x98 ; ret
0x00000000000b772c : mov eax, edx ; add rsp, 8 ; ret
0x0000000000089fac : mov eax, edx ; cmovne rax, rdi ; ret
0x00000000000de213 : mov eax, edx ; je 0xde220 ; pop rbx ; pop rbp ; ret
0x0000000000110427 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000110783 : mov eax, edx ; movsxd rdx, esi ; ret
0x00000000000fb405 : mov eax, edx ; pop r12 ; ret
0x00000000001208d8 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb3ef : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000fd814 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ece4f : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000729e2 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000046df5 : mov eax, edx ; pop rbx ; ret
0x0000000000036971 : mov eax, edx ; ret
0x00000000000ff83b : mov eax, edx ; shl rdx, 2 ; jmp 0xff80d
0x0000000000021e12 : mov eax, edx ; syscall
0x000000000011a901 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c11e1 : mov eax, esi ; call rax
0x0000000000035bc6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000012aeb9 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f59c1 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004b1e4 : mov eax, esi ; ret
0x00000000000c50b2 : mov eax, esi ; syscall
0x000000000007303b : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007211c : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002f747 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781f9 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039c15 : mov eax, r10d ; syscall
0x000000000007211b : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c4f64 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2453 : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e240e : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000077f0b : mov eax, r13d ; syscall
0x00000000000fba38 : mov eax, r8d ; add rsp, 8 ; ret
0x00000000001102db : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000003891a : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000386a0 : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000381e0 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004fe14 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004defb : mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000035df1 : mov eax, r8d ; pop rbx ; ret
0x0000000000045a86 : mov eax, r8d ; ret
0x00000000000c50c1 : mov eax, r8d ; syscall
0x00000000000c205a : mov eax, r9d ; pop rbx ; ret
0x000000000004b6d4 : mov eax, r9d ; ret
0x000000000007e6b1 : mov ebp, 0x10033 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000091f41 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000091f51 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000091f31 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000104fcf : mov ebp, 0x48fff1c5 ; add esp, 8 ; ret
0x0000000000150b41 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x00000000001762d4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000000e34ec : mov ebp, 0x83000001 ; ret
0x0000000000114857 : mov ebp, 0xb8002a51 ; retf 0
0x000000000003133f : mov ebp, 0xb8003858 ; retf 0
0x000000000011580d : mov ebp, 0xc031fff0 ; ret
0x0000000000172f5d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000091fb1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000150b71 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000091f91 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000091f71 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000118c8f : mov ebp, 0xeb000075 ; retf
0x00000000000036aa : mov ebp, 0xef5aa220 ; nop ; retf 0xe9ee
0x0000000000092057 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x0000000000091e87 : mov ebp, 0xf80148c0 ; ret
0x0000000000150a30 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x000000000009744c : mov ebp, 0xf80148c6 ; ret
0x0000000000175006 : mov ebp, 0xfb67d10d ; ret
0x00000000000672fa : mov ebp, 0xfffff718 ; add rax, rdx ; jmp rax
0x0000000000066d7e : mov ebp, 0xfffff750 ; call rax
0x0000000000061183 : mov ebp, 0xfffff768 ; call rax
0x000000000005dbec : mov ebp, 0xfffffab8 ; jmp 0x59eb4
0x00000000000e1865 : mov ebp, 0xfffffac2 ; add byte ptr [rdi], cl ; mov dh, 0x9d ; ret
0x00000000000697ca : mov ebp, 0xfffffaf0 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dfe69 : mov ebp, 0xfffffe68 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000e0ba2 : mov ebp, 0xfffffe68 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc9e9
0x000000000012b459 : mov ebp, 0xffffffff ; jmp 0x12b431
0x00000000000e3419 : mov ebp, 1 ; jmp 0xe33e9
0x0000000000189a40 : mov ebp, cs ; int1 ; call rsp
0x00000000000efc4a : mov ebp, dword ptr [rax + r8] ; add rsp, 8 ; ret
0x00000000000efc4b : mov ebp, dword ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000000efc1c : mov ebp, dword ptr [rax + rax] ; ret
0x00000000001169fd : mov ebp, eax ; mov rdi, rbx ; call rax
0x00000000000c0c4c : mov ebp, ebp ; mov rdi, rbx ; call r12
0x00000000000ac9d6 : mov ebp, ebx ; adc byte ptr [rcx], al ; retf 0x894c
0x0000000000035bcc : mov ebp, ecx ; jmp rdx
0x000000000003b7aa : mov ebp, ecx ; sub rdx, rcx ; jmp 0x3b7f2
0x000000000003e19a : mov ebp, ecx ; sub rdx, rcx ; jmp 0x3e1e2
0x0000000000040b5a : mov ebp, ecx ; sub rdx, rcx ; jmp 0x40ba2
0x0000000000048b2a : mov ebp, ecx ; sub rdx, rcx ; jmp 0x48b72
0x00000000000e7332 : mov ebp, edx ; mov rbx, rsi ; mov eax, ecx ; syscall
0x0000000000056a5e : mov ebp, esi ; jmp 0x52ce4
0x0000000000102674 : mov ebp, esp ; pop rbp ; ret
0x0000000000176024 : mov ebx, 0x1b5c347e ; jmp 0x175ffc
0x00000000000f361c : mov ebx, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000002e0a : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000008907a : mov ebx, 0x29485075 ; retf 0x8b4c
0x00000000001395c7 : mov ebx, 0x46f00ff2 ; retf
0x00000000000e7e81 : mov ebx, 0x48000046 ; add esp, 0x68 ; ret
0x0000000000105143 : mov ebx, 0x4858fff4 ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000134124 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000134142 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000000d57ec : mov ebx, 0x8548fff4 ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000c5879 : mov ebx, 0x8948fff5 ; ret 0x8949
0x00000000000037f5 : mov ebx, 0x952a6c41 ; ret
0x000000000007e5a4 : mov ebx, 0xafb8341 ; je 0x7e5b3 ; ret
0x0000000000172f5b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000011dc56 : mov ebx, 0xc8 ; call rax
0x0000000000001f53 : mov ebx, 0xd6ca3977 ; sbb al, 0x3a ; jrcxz 0x1fde ; retf 0x6321
0x0000000000199129 : mov ebx, 0xe0440000 ; out dx, eax ; jmp rdx
0x00000000000e5374 : mov ebx, 0xe8c78948 ; sti ; ret 0xfff3
0x000000000008d827 : mov ebx, 0xffed11e9 ; inc dword ptr [rbp - 0x77] ; ret 0x8941
0x000000000012b747 : mov ebx, 0xffffffff ; call 0xe8177
0x0000000000064bec : mov ebx, 1 ; jmp rax
0x000000000005dd65 : mov ebx, dword ptr [rbp - 0x54c] ; jmp 0x59fd8
0x00000000000c54d6 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000126002 : mov ebx, dword ptr [rbp] ; test ebx, ebx ; jne 0x126079 ; call 0x122ab9
0x0000000000176644 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000011a2ab : mov ebx, eax ; jne 0x11a249 ; xor eax, eax ; pop rbx ; ret
0x0000000000078e2f : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104167 : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ecd8f : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000008bde3 : mov ebx, ebp ; cmp r11b, r10b ; jb 0x8bdcf ; mov rdx, rax ; jmp 0x8bd86
0x0000000000001cc1 : mov ebx, ebx ; cmp eax, 0xf9a7750 ; retf
0x00000000000b5272 : mov ebx, edi ; call 0x21494
0x00000000000f599d : mov ebx, edi ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x000000000002d3f6 : mov ebx, edi ; test rax, rax ; je 0x2d406 ; call rax
0x00000000000cd621 : mov ebx, edx ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000018879c : mov ebx, es ; add byte ptr [rax], al ; pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp rax
0x00000000000e89ad : mov ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e7335 : mov ebx, esi ; mov eax, ecx ; syscall
0x0000000000078e41 : mov ebx, esp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051be8 : mov ecx, 0x13c ; mov eax, ecx ; syscall
0x00000000000f61c8 : mov ecx, 0x145 ; mov eax, ecx ; syscall
0x0000000000035daa : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x0000000000198fc1 : mov ecx, 0x3a5c0000 ; cli ; call qword ptr [rax]
0x00000000001744d9 : mov ecx, 0x5b92ac50 ; retf
0x000000000018863d : mov ecx, 0x6d9c0000 ; out dx, al ; jmp rax
0x0000000000188645 : mov ecx, 0x6f5c0000 ; out dx, al ; jmp qword ptr [rax]
0x0000000000001db1 : mov ecx, 0x72b02084 ; retf
0x0000000000175fae : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000000ca473 : mov ecx, 0x890002ef ; ret
0x0000000000052235 : mov ecx, 0x89480012 ; ret 0x8948
0x00000000001221bb : mov ecx, 0x90ffeff4 ; pop rbx ; ret
0x0000000000198fad : mov ecx, 0x95100000 ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000198f99 : mov ecx, 0x95140000 ; out dx, eax ; call qword ptr [rax]
0x00000000001778a8 : mov ecx, 0xa6ffedc8 ; retf
0x00000000000ed080 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000000de150 : mov ecx, 0xcb ; mov eax, ecx ; syscall
0x0000000000065288 : mov ecx, 1 ; jmp rax
0x000000000018ba80 : mov ecx, cs ; idiv edi ; rcr bh, 1 ; add dword ptr [rax], eax ; pop rsp ; retf
0x000000000016347d : mov ecx, dword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x16348f ; call rcx
0x000000000002c5b2 : mov ecx, dword ptr [rax + rsi*8] ; test rcx, rcx ; je 0x2c5c4 ; call rcx
0x0000000000117dc7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x000000000015ba8c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000001259c0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x1259d9 ; xor eax, eax ; ret
0x0000000000125a00 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x125a19 ; xor eax, eax ; ret
0x0000000000131f4e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000007588a : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000000946c3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000036849 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; je 0x36847 ; ret
0x00000000000a21a9 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xa21a7 ; ret
0x0000000000176464 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x176499 ; retf 0x32dd
0x00000000001342c3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001344c3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001346c3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009c720 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009c761 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000139d33 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000139cc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000139c53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000139b75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139b05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139a95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139a25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001399b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139945 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001398d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139e15 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000009c701 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000012cfd2 : mov ecx, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x20] ; call rcx
0x000000000011e0f1 : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000011df1b : mov ecx, dword ptr [rsp + 0x28] ; call rcx
0x00000000000f0953 : mov ecx, dword ptr [rsp + 8] ; syscall
0x00000000001195ff : mov ecx, dword ptr [rsp] ; call rcx
0x0000000000086d21 : mov ecx, eax ; jmp 0x86ceb
0x00000000000da4bd : mov ecx, eax ; lea rdx, [r10 + rax*8] ; jmp 0xda4e2
0x000000000008dec4 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000008e27b : mov ecx, eax ; movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000001199cc : mov ecx, eax ; movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x0000000000022beb : mov ecx, ebp ; call rbx
0x0000000000075912 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call r12
0x000000000018c799 : mov ecx, edi ; jmp rsp
0x00000000000f8d79 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000007c740 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000000a13a2 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007c77a : mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000000a2e45 : mov ecx, esi ; call rbx
0x0000000000116923 : mov ecx, esi ; mov rdi, r13 ; call r12
0x0000000000121cc2 : mov ecx, esi ; mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x000000000011b123 : mov ecx, esp ; call 0x117b94
0x000000000007d8fc : mov edi, 0x100339e ; ret
0x00000000000fde08 : mov edi, 0x2000004 ; call rcx
0x000000000019393c : mov edi, 0x4000001 ; ret
0x0000000000087b74 : mov edi, 0x63480032 ; ret
0x0000000000057ff6 : mov edi, 0x83000012 ; ret 0xbf08
0x000000000005777a : mov edi, 0x8300001f ; ret 0xbe08
0x000000000003a127 : mov edi, 0x870f263c ; ret
0x0000000000039eef : mov edi, 0x870f263c ; retf
0x00000000000ff58d : mov edi, 0x89000000 ; ret 0xf789
0x000000000005f741 : mov edi, 0x89000001 ; ret 0x348
0x000000000016350b : mov edi, 0x89480001 ; ret
0x00000000000f7d60 : mov edi, 0x89ee894c ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000118c50 : mov edi, 0x8d4c0000 ; and al, 0x18 ; call qword ptr [rax]
0x000000000011d465 : mov edi, 0xb80029c8 ; retf 0
0x0000000000045a6d : mov edi, 0xb800371c ; retf 0
0x000000000017bdd5 : mov edi, 0xbf00fff9 ; stc ; jmp rax
0x000000000017bdcd : mov edi, 0xbfc0fff9 ; stc ; call rax
0x00000000001874cd : mov edi, 0xc080fffc ; cld ; inc dword ptr [rax] ; ret 0xfffc
0x00000000001a94f9 : mov edi, 0xdc40001 ; idiv edi ; retf
0x000000000006e0e7 : mov edi, 0xe0 ; call rax
0x000000000006e0ab : mov edi, 0xe0 ; jmp rax
0x00000000001995b5 : mov edi, 0xe0980000 ; sti ; call rsp
0x00000000000cfe5d : mov edi, 0xf6000000 ; ret
0x00000000000e7778 : mov edi, 0xffffff9c ; syscall
0x000000000010b76f : mov edi, 2 ; call 0xe7a77
0x0000000000077f06 : mov edi, 2 ; mov eax, r13d ; syscall
0x0000000000003ea2 : mov edi, cs ; retf
0x00000000000bd228 : mov edi, dword ptr [r12 + r13*4] ; mov rsi, r15 ; call 0xf9d09
0x00000000000384a4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000010ea74 : mov edi, dword ptr [rbp - 0x50] ; mov eax, 3 ; syscall
0x000000000005dbeb : mov edi, dword ptr [rbp - 0x548] ; jmp 0x59eb5
0x0000000000061182 : mov edi, dword ptr [rbp - 0x898] ; call rax
0x0000000000066d7d : mov edi, dword ptr [rbp - 0x8b0] ; call rax
0x00000000000aeda6 : mov edi, dword ptr [rbp] ; lea r9, [rsp + 0x30] ; call r12
0x0000000000037665 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000eb906 : mov edi, dword ptr [rbx + 0x3c] ; jne 0xeb922 ; call 0xe83a7
0x0000000000086b79 : mov edi, dword ptr [rbx + 0x48] ; call rax
0x0000000000086b11 : mov edi, dword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000010e9c0 : mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x0000000000042f52 : mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000034175 : mov edi, dword ptr [rdi + 0x28] ; call 0xf0ba5
0x0000000000086a09 : mov edi, dword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x000000000006e0e6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006e0aa : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000007e64b : mov edi, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000010e930 : mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x00000000001015a9 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001752c6 : mov edi, dword ptr [rdx] ; ret
0x00000000000b53c6 : mov edi, dword ptr [rip + 0x302d64] ; call 0x21680
0x00000000000a2941 : mov edi, dword ptr [rsi] ; lea r9, [rsp + 0x30] ; call r12
0x00000000000e5468 : mov edi, dword ptr [rsp + 0x10] ; call 0xe1eb6
0x00000000001157c2 : mov edi, dword ptr [rsp + 0x10] ; mov eax, 0x81 ; syscall
0x00000000000f2019 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000e548c : mov edi, dword ptr [rsp + 0x10] ; xor esi, esi ; call 0xe1eb8
0x000000000012cfd7 : mov edi, dword ptr [rsp + 0x20] ; call rcx
0x00000000000c1363 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002b121 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x00000000000276a0 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000000db910 : mov edi, dword ptr [rsp + 0x38] ; mov eax, 0xca ; syscall
0x000000000002727e : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026555 : mov edi, dword ptr [rsp + 0x40] ; call r14
0x00000000000282db : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000029e14 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026336 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000024f83 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x0000000000029337 : mov edi, dword ptr [rsp + 0x48] ; call r15
0x00000000000259c4 : mov edi, dword ptr [rsp + 0x48] ; call rbx
0x0000000000024d2d : mov edi, dword ptr [rsp + 0x48] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002582e : mov edi, dword ptr [rsp + 0x48] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002681f : mov edi, dword ptr [rsp + 0x50] ; call r14
0x000000000002a5a1 : mov edi, dword ptr [rsp + 0x50] ; call r15
0x000000000002557a : mov edi, dword ptr [rsp + 0x58] ; call r14
0x0000000000025242 : mov edi, dword ptr [rsp + 0x58] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000e53c5 : mov edi, dword ptr [rsp + 0x98] ; call 0x21681
0x000000000007c51b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000003715c : mov edi, dword ptr [rsp + 8] ; call r12
0x000000000011961a : mov edi, dword ptr [rsp + 8] ; call rax
0x00000000000e7eac : mov edi, dword ptr [rsp + 8] ; mov eax, 0x48 ; syscall
0x00000000000c09ea : mov edi, dword ptr [rsp + 8] ; mov eax, 0xca ; syscall
0x00000000001195fa : mov edi, dword ptr [rsp + 8] ; mov rcx, qword ptr [rsp] ; call rcx
0x000000000006fa24 : mov edi, dword ptr [rsp + rax*4 + 0x28] ; call 0xec516
0x00000000000bd229 : mov edi, dword ptr [rsp + rbp*4] ; mov rsi, r15 ; call 0xf9d08
0x000000000007bfe6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000bf9f7 : mov edi, dword ptr [rsp] ; mov eax, 0xe6 ; syscall
0x0000000000036a15 : mov edi, dword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000010ea73 : mov edi, dword ptr ds:[rbp - 0x50] ; mov eax, 3 ; syscall
0x00000000000e5376 : mov edi, eax ; call 0x2167c
0x0000000000109d1c : mov edi, eax ; call 0x76014
0x00000000000efe22 : mov edi, eax ; call 0xec8a4
0x0000000000121cc8 : mov edi, eax ; call qword ptr [r10]
0x00000000000221b9 : mov edi, eax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000000c4df9 : mov edi, eax ; mov eax, 0x22 ; syscall
0x00000000000f5b80 : mov edi, eax ; mov eax, 0x3c ; syscall
0x000000000012d2cd : mov edi, eax ; mov eax, 0x3e ; syscall
0x00000000000e73a4 : mov edi, eax ; mov eax, 0x85 ; syscall
0x0000000000035db4 : mov edi, eax ; mov eax, 0xba ; syscall
0x000000000007e564 : mov edi, eax ; mov eax, 0xca ; syscall
0x0000000000083860 : mov edi, eax ; mov eax, ebp ; syscall
0x0000000000117dc4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000bce36 : mov edi, eax ; movsxd rdx, dword ptr [r8 + rdi*4] ; add rdx, r8 ; jmp rdx
0x0000000000039c10 : mov edi, eax ; sub rsi, r8 ; mov eax, r10d ; syscall
0x0000000000045376 : mov edi, ebp ; call 0x215c4
0x00000000001053cc : mov edi, ebp ; call 0x2167c
0x000000000003aff1 : mov edi, ebp ; call 0x47ae4
0x000000000004f48e : mov edi, ebp ; call 0x7bf84
0x000000000002df9f : mov edi, ebp ; call 0x8a1f4
0x000000000010a8c0 : mov edi, ebp ; call 0xf6b84
0x000000000011a34a : mov edi, ebp ; call qword ptr [rbx]
0x0000000000037148 : mov edi, ebp ; call r12
0x00000000000f2794 : mov edi, ebp ; call r14
0x0000000000086ae1 : mov edi, ebp ; call rax
0x00000000000b3e3d : mov edi, ebp ; call rbx
0x0000000000125a91 : mov edi, ebp ; call rcx
0x0000000000119ef5 : mov edi, ebp ; call rdx
0x0000000000118ba5 : mov edi, ebp ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001189e6 : mov edi, ebp ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000e793e : mov edi, ebp ; mov eax, 0x101 ; syscall
0x00000000000ebd09 : mov edi, ebp ; mov eax, 0x10f ; syscall
0x0000000000038bbd : mov edi, ebp ; mov eax, 0xca ; syscall
0x00000000000f0afa : mov edi, ebp ; mov eax, 9 ; syscall
0x00000000000376b9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000010cbe2 : mov edi, ebp ; mov rax, qword ptr [rsp] ; call rax
0x000000000011b120 : mov edi, ebp ; mov rcx, r12 ; call 0x117b97
0x0000000000086015 : mov edi, ebp ; mov rdx, rbx ; mov rsi, r14 ; call rax
0x00000000000f21ca : mov edi, ebp ; mov rsi, qword ptr [rax] ; call r14
0x00000000000feece : mov edi, ebp ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000021e78 : mov edi, ebp ; shl rdi, 4 ; add rdi, r13 ; call rax
0x000000000011982d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000006dfe2 : mov edi, ebx ; call 0x7aaa4
0x000000000003858c : mov edi, ebx ; call 0xc5094
0x00000000000d2061 : mov edi, ebx ; call 0xce2a4
0x000000000011a72a : mov edi, ebx ; call qword ptr [rax]
0x000000000002b49b : mov edi, ebx ; call r12
0x0000000000022f84 : mov edi, ebx ; call r15
0x000000000004d0f9 : mov edi, ebx ; call rax
0x0000000000084996 : mov edi, ebx ; call rdx
0x0000000000178d8d : mov edi, ebx ; jmp qword ptr [rax + 0x10fffb8c]
0x000000000011480d : mov edi, ebx ; jne 0x114805 ; pop rbx ; ret
0x00000000001636eb : mov edi, ebx ; jne 0x1636e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016387a : mov edi, ebx ; jne 0x16386d ; pop rbx ; ret
0x00000000000ecab9 : mov edi, ebx ; mov eax, 0x10 ; syscall
0x00000000000e5e16 : mov edi, ebx ; mov eax, 0x11 ; syscall
0x00000000000f60a9 : mov edi, ebx ; mov eax, 0x113 ; syscall
0x00000000000f5f34 : mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000000ec416 : mov edi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f5fe6 : mov edi, ebx ; mov eax, 0x116 ; syscall
0x00000000000f5cd5 : mov edi, ebx ; mov eax, 0x119 ; syscall
0x00000000000ec4b4 : mov edi, ebx ; mov eax, 0x11d ; syscall
0x00000000000e5ec6 : mov edi, ebx ; mov eax, 0x12 ; syscall
0x00000000000f7436 : mov edi, ebx ; mov eax, 0x120 ; syscall
0x00000000000ed361 : mov edi, ebx ; mov eax, 0x127 ; syscall
0x00000000000ed411 : mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000000f74de : mov edi, ebx ; mov eax, 0x12b ; syscall
0x00000000000ed20e : mov edi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f614e : mov edi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f7586 : mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e6e7d : mov edi, ebx ; mov eax, 0x135 ; syscall
0x0000000000039b80 : mov edi, ebx ; mov eax, 0x13e ; syscall
0x00000000000ed2ae : mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000000ec249 : mov edi, ebx ; mov eax, 0x146 ; syscall
0x00000000000edbae : mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f0c40 : mov edi, ebx ; mov eax, 0x1a ; syscall
0x00000000000f6bbe : mov edi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f6aee : mov edi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f6f5d : mov edi, ebx ; mov eax, 0x2c ; syscall
0x00000000000f6d3d : mov edi, ebx ; mov eax, 0x2d ; syscall
0x00000000000f6ffe : mov edi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f6e9e : mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000c4c46 : mov edi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f76e6 : mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f778e : mov edi, ebx ; mov eax, 0x46 ; syscall
0x00000000000e8315 : mov edi, ebx ; mov eax, 0x55 ; syscall
0x00000000000361ad : mov edi, ebx ; mov eax, 0x82 ; syscall
0x000000000003870a : mov edi, ebx ; mov eax, 0xca ; syscall
0x00000000000bf913 : mov edi, ebx ; mov eax, 0xe4 ; syscall
0x00000000000bf8a3 : mov edi, ebx ; mov eax, 0xe5 ; syscall
0x00000000000f5e96 : mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000c4cef : mov edi, ebx ; mov eax, 0xf7 ; syscall
0x00000000000e7aae : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000000ebc30 : mov edi, ebx ; mov eax, 7 ; syscall
0x00000000000f7d64 : mov edi, ebx ; mov eax, r10d ; syscall
0x000000000012b745 : mov edi, ebx ; mov ebx, 0xffffffff ; call 0xe8179
0x00000000000edd9c : mov edi, ebx ; mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000000ede4c : mov edi, ebx ; mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000000e819c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000011e0ee : mov edi, ebx ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011df18 : mov edi, ebx ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000006fe7c : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000072a3f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000798ea : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000e7a0e : mov edi, ebx ; xor eax, eax ; syscall
0x00000000000700c4 : mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000071ab2 : mov edi, ecx ; call 0x7e544
0x0000000000038a89 : mov edi, ecx ; call r8
0x0000000000085b29 : mov edi, ecx ; call rax
0x0000000000086944 : mov edi, ecx ; call rcx
0x000000000012542f : mov edi, ecx ; mov dword ptr [rsp + 0xc], edx ; call 0x21670
0x00000000000e7408 : mov edi, ecx ; mov eax, 0x103 ; syscall
0x0000000000075ddd : mov edi, ecx ; mov eax, 0xca ; syscall
0x00000000000f59a0 : mov edi, ecx ; sub rsp, 8 ; call rsi
0x000000000008170f : mov edi, edi ; call qword ptr [rax]
0x000000000002f9e4 : mov edi, edi ; call rax
0x00000000000e4c3b : mov edi, edi ; mov qword ptr [rbx], rax ; call 0x2167f
0x0000000000081962 : mov edi, edi ; mov qword ptr [rsp + 8], r15 ; call qword ptr [rax]
0x0000000000037254 : mov edi, edi ; mov rdx, r13 ; call r12
0x00000000000f981c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000075915 : mov edi, edi ; xor r8d, r8d ; call r12
0x00000000000ef6c2 : mov edi, edx ; call 0x7c104
0x00000000000d0c9b : mov edi, edx ; call 0xcd764
0x000000000012cf87 : mov edi, edx ; call rsi
0x000000000004b261 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4b249 ; mov rax, rsi ; ret
0x00000000000c50b0 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000c50bf : mov edi, edx ; mov eax, r8d ; syscall
0x00000000000bf823 : mov edi, edx ; syscall
0x00000000000d5433 : mov edi, esi ; call 0x2167c
0x000000000010b738 : mov edi, esi ; call 0xe79d4
0x000000000005c951 : mov edi, esi ; call 0xf9434
0x00000000001005a1 : mov edi, esi ; call 0xfd074
0x0000000000100c46 : mov edi, esi ; call 0xfd6e4
0x0000000000037187 : mov edi, esi ; call r12
0x0000000000086165 : mov edi, esi ; call rax
0x00000000000384ed : mov edi, esi ; mov eax, 0xca ; syscall
0x0000000000023540 : mov edi, esi ; mov rsi, qword ptr [rbp - 0x60] ; call rsi
0x0000000000024ad5 : mov edi, esp ; call 0x215a4
0x0000000000074bc5 : mov edi, esp ; call 0x2167c
0x00000000000862a9 : mov edi, esp ; call rax
0x0000000000075729 : mov edi, esp ; call rbx
0x0000000000124bf1 : mov edi, esp ; call rdx
0x000000000018645d : mov edi, esp ; inc dword ptr [rax - 0x73] ; cld ; jmp qword ptr [rax]
0x0000000000114b22 : mov edi, esp ; lea r13, [r13 + rax + 1] ; call 0x215a9
0x00000000000edcaa : mov edi, esp ; mov eax, 0x10e ; syscall
0x00000000000ed528 : mov edi, esp ; mov eax, 0x147 ; syscall
0x00000000000ed688 : mov edi, esp ; mov eax, 0x148 ; syscall
0x00000000000e8449 : mov edi, esp ; mov eax, 0x4f ; syscall
0x0000000000036af0 : mov edi, esp ; mov eax, 0x81 ; syscall
0x0000000000083f62 : mov edi, esp ; mov eax, 0xca ; syscall
0x00000000000a2e42 : mov edi, esp ; mov r9, r14 ; call rbx
0x00000000000edca9 : mov edi, r12d ; mov eax, 0x10e ; syscall
0x00000000000ed527 : mov edi, r12d ; mov eax, 0x147 ; syscall
0x00000000000ed687 : mov edi, r12d ; mov eax, 0x148 ; syscall
0x0000000000036aef : mov edi, r12d ; mov eax, 0x81 ; syscall
0x000000000010b737 : mov edi, r14d ; call 0xe79d5
0x000000000005c950 : mov edi, r14d ; call 0xf9435
0x00000000000e7407 : mov edi, r9d ; mov eax, 0x103 ; syscall
0x00000000000f7636 : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a18a6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000008a706 : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000008a6d0 : mov edx, 0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000198fe9 : mov edx, 0x2c840000 ; sti ; call qword ptr [rax]
0x0000000000042761 : mov edx, 0x38a ; call 0x2e9f7
0x0000000000042723 : mov edx, 0x392 ; call 0x2e9f7
0x00000000000427cb : mov edx, 0x39e ; call 0x2e9f7
0x00000000000427ac : mov edx, 0x44c ; call 0x2e9f7
0x0000000000139547 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000199089 : mov edx, 0x47940000 ; sti ; call qword ptr [rax]
0x0000000000134324 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000134342 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000042704 : mov edx, 0x550 ; call 0x2e9f7
0x00000000000f81a2 : mov edx, 0x5b002bd1 ; ret
0x0000000000199061 : mov edx, 0x5b0c0000 ; cli ; call qword ptr [rax]
0x0000000000042742 : mov edx, 0x6ac ; call 0x2e9f7
0x0000000000042780 : mov edx, 0x6d6 ; call 0x2e9f7
0x000000000018865d : mov edx, 0x745c0000 ; out dx, al ; jmp rax
0x0000000000199011 : mov edx, 0x803c0000 ; sti ; call qword ptr [rax]
0x000000000005f0b2 : mov edx, 0x8300355d ; retf
0x0000000000068448 : mov edx, 0x83ffffea ; ret
0x0000000000001b0e : mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x000000000005210a : mov edx, 0x89480012 ; ret 0x8948
0x00000000001990b1 : mov edx, 0x960c0000 ; sti ; call qword ptr [rax]
0x0000000000199039 : mov edx, 0xb6b40000 ; out dx, eax ; call qword ptr [rax]
0x0000000000079266 : mov edx, 0xe0 ; pop rbx ; ret
0x00000000000c0aec : mov edx, 0xf8830002 ; push qword ptr [rdx + rdi - 0x77] ; ret 0xe283
0x0000000000002e69 : mov edx, 0xf8f07c9a ; ret
0x0000000000087553 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x0000000000024b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000001249b5 : mov edx, 0xffffffff ; mov rdi, rbp ; call r14
0x0000000000038e4f : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000125316 : mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x0000000000064808 : mov edx, 1 ; jmp rax
0x00000000000df09e : mov edx, 2 ; cmove eax, edx ; ret
0x000000000011f227 : mov edx, 8 ; call 0x11b507
0x0000000000035f01 : mov edx, 8 ; mov eax, ecx ; syscall
0x00000000000f5d38 : mov edx, 8 ; syscall
0x0000000000102108 : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000077cd8 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000021dc4 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000102109 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000102484 : mov edx, dword ptr [rbp + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000005e8ed : mov edx, dword ptr [rbp - 0x448] ; jmp 0x5b30e
0x00000000000fb401 : mov edx, dword ptr [rbx] ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000014d7bf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014beed : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000007fb26 : mov edx, dword ptr [rdi + 0x28] ; mov qword ptr [rdx + 0x20], rax ; jmp 0x7fb02
0x0000000000157d12 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x157d02 ; ret
0x0000000000045be7 : mov edx, dword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x0000000000086bf5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x86bf9 ; ret
0x00000000000573b8 : mov edx, dword ptr [rdx] ; mov byte ptr [rdx], al ; jmp 0x53673
0x00000000000cf057 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x000000000009c742 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009c733 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009c783 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b1c31 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xb1c0d ; ret
0x000000000009c793 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000101c95 : mov edx, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000133d01 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001340c0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133951 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009dd10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000009eb50 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x000000000009c710 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000155100 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000a0780 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009dd61 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x000000000009eba1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x000000000009c751 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009dcf1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000009eb21 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x000000000009c6f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fde04 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rcx
0x00000000001186f9 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000d4b22 : mov edx, dword ptr [rsp + 0x60] ; call 0x215c6
0x00000000001106f5 : mov edx, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f5b66 : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x00000000000fb400 : mov edx, dword ptr fs:[rbx] ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000012163d : mov edx, eax ; jmp 0x1215e2
0x0000000000021968 : mov edx, eax ; jmp 0x21932
0x0000000000029d86 : mov edx, eax ; jmp 0x29d42
0x000000000008bdeb : mov edx, eax ; jmp 0x8bd7e
0x000000000008dab4 : mov edx, eax ; jmp 0x8da3a
0x00000000000ba921 : mov edx, eax ; jmp 0xba8ea
0x00000000000ea531 : mov edx, eax ; jmp 0xea4f1
0x00000000000f36e5 : mov edx, eax ; jmp 0xf36f7
0x00000000000feed5 : mov edx, eax ; jmp rcx
0x00000000000edd9e : mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000000ede4e : mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000000e819e : mov edx, eax ; mov eax, 3 ; syscall
0x000000000008e420 : mov edx, eax ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000011079e : mov edx, eax ; ret
0x0000000000037257 : mov edx, ebp ; call r12
0x0000000000101e08 : mov edx, ebp ; call rax
0x0000000000190561 : mov edx, ebp ; jmp qword ptr [rsi]
0x000000000012258c : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000fdaa6 : mov edx, ebp ; mov rsi, r15 ; mov rdi, rbx ; call r12
0x0000000000037181 : mov edx, ebp ; mov rsi, rbp ; mov rdi, r14 ; call r12
0x00000000000372c4 : mov edx, ebp ; mov rsi, rbp ; mov rdi, rbx ; call r12
0x000000000003719c : mov edx, ebp ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000101fec : mov edx, ebx ; call rax
0x00000000000ebcc5 : mov edx, ebx ; mov eax, 0x10f ; syscall
0x0000000000035dbf : mov edx, ebx ; mov eax, 0xea ; syscall
0x00000000000862a3 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000086018 : mov edx, ebx ; mov rsi, r14 ; call rax
0x000000000011b0c6 : mov edx, ebx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000087210 : mov edx, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ec2e4 : mov edx, ecx ; je 0xec31b ; mov eax, 0x118 ; syscall
0x00000000000f6234 : mov edx, ecx ; je 0xf6271 ; mov eax, 0x149 ; syscall
0x0000000000085f68 : mov edx, ecx ; jmp 0x85f07
0x00000000000bcd59 : mov edx, ecx ; jmp 0xbcd29
0x00000000000bcd59 : mov edx, ecx ; jmp 0xbcd2b
0x00000000000e8c61 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x00000000000e7460 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000051bb1 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x00000000000e93b1 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x00000000000e9471 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000000ec6f1 : mov edx, ecx ; mov eax, 0x11 ; syscall
0x00000000000ec2b1 : mov edx, ecx ; mov eax, 0x118 ; syscall
0x00000000000f6871 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x00000000000f6361 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x00000000000f5df1 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x00000000000f6901 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x00000000000f6961 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000000f6991 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000000f6691 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000000ec1c1 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x00000000000f71b1 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x00000000000f7121 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000000f6c81 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000f6721 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x00000000000f6661 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x00000000000f6541 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x00000000000f6751 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x00000000000f6781 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x00000000000f3a81 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x00000000000f3a21 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x00000000000f3901 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x00000000000f3931 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x00000000000f3991 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x00000000000f3871 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x00000000000f0d01 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000000f7901 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x00000000000ebd61 : mov edx, ecx ; mov eax, 0xdd ; syscall
0x00000000000f64e1 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x0000000000051be6 : mov edx, ecx ; mov ecx, 0x13c ; mov eax, ecx ; syscall
0x00000000000bcdc5 : mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000003afee : mov edx, edi ; mov rdi, rbp ; call 0x47ae7
0x000000000010ca45 : mov edx, edi ; mov rsi, r14 ; call 0x128ce7
0x000000000010989f : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000a1711 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000de0f5 : mov edx, edx ; mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x00000000000fba7d : mov edx, edx ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000102110 : mov edx, esi ; call rax
0x000000000012ee16 : mov edx, esi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x00000000000a30aa : mov edx, esi ; mov rdi, r12 ; call rbx
0x0000000000044726 : mov edx, esi ; sub rdx, rdi ; add rdx, rcx ; jmp 0x44740
0x0000000000044a36 : mov edx, esi ; sub rdx, rdi ; add rdx, rcx ; jmp 0x44a50
0x00000000000ebf60 : mov edx, esi ; xor esi, esi ; syscall
0x0000000000101c9c : mov edx, esp ; call rax
0x0000000000085b26 : mov edx, esp ; mov rdi, rcx ; call rax
0x0000000000190685 : mov edx, gs ; jmp rsp
0x000000000003afed : mov edx, r15d ; mov rdi, rbp ; call 0x47ae8
0x00000000001963e1 : mov es, word ptr [rax] ; add ah, bh ; jge 0x1963db ; jmp qword ptr [rbx]
0x00000000001963cd : mov es, word ptr [rax] ; add al, ah ; jge 0x1963c7 ; jmp qword ptr [rbx]
0x0000000000196445 : mov es, word ptr [rax] ; add byte ptr [rax + 0x6d], bh ; stc ; jmp qword ptr [rbx]
0x000000000019641d : mov es, word ptr [rax] ; add byte ptr [rax + 0x6d], dh ; stc ; jmp qword ptr [rbx]
0x00000000000ddf61 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001963f5 : mov es, word ptr [rax] ; add byte ptr [rax], bl ; jle 0x1963ef ; jmp qword ptr [rbx]
0x0000000000196459 : mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], al ; jmp qword ptr [rbx]
0x0000000000196481 : mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], cl ; jmp qword ptr [rbx]
0x00000000001964a9 : mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], dl ; jmp qword ptr [rbx]
0x0000000000196431 : mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2], bh ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196409 : mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2], dh ; out dx, al ; jmp qword ptr [rbx]
0x00000000000f96a9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000009e96e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000008598c : mov esi, 0x3148feda ; retf 0x8948
0x000000000008e196 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000221ba : mov esi, 0x415b0007 ; pop rsi ; ret
0x00000000000b30de : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x0000000000088a9e : mov esi, 0x48000188 ; cmovne eax, edx ; ret
0x0000000000102e8e : mov esi, 0x48fff9e4 ; cmovne eax, edx ; ret
0x0000000000176286 : mov esi, 0x497b96cc ; retf 0x99e0
0x00000000000e4a05 : mov esi, 0x4c894831 ; and al, 0x20 ; call 0x21459
0x000000000003b217 : mov esi, 0x4c8d4803 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007b8e9 : mov esi, 0x4fe80033 ; sub al, 0 ; add cl, ch ; ret
0x00000000000ec97d : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x0000000000003196 : mov esi, 0x614a3e5c ; call qword ptr [rax]
0x0000000000176323 : mov esi, 0x6400fd4c ; retf 0xf64
0x0000000000185a0b : mov esi, 0x697769 ; pop rdi ; retf
0x000000000017440a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000008e071 : mov esi, 0x74c08407 ; xor dword ptr [rcx], edi ; ret 0x2d74
0x000000000008e1e5 : mov esi, 0x75c98408 ; in eax, dx ; xor eax, eax ; ret
0x000000000012ee18 : mov esi, 0x80 ; mov eax, ecx ; syscall
0x000000000007e628 : mov esi, 0x80 ; syscall
0x00000000000242ba : mov esi, 0x83480147 ; ret
0x000000000003b9e2 : mov esi, 0x83480163 ; ret
0x0000000000100af6 : mov esi, 0x89480045 ; ret 0xe883
0x000000000008589f : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000008e111 : mov esi, 0x89c63907 ; ret 0xb8
0x00000000000c2d9c : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000006fd30 : mov esi, 0xa ; call 0x7bf87
0x000000000018683d : mov esi, 0xbfc0fffa ; cli ; call qword ptr [rax]
0x0000000000172f5e : mov esi, 0xc2c1c0bf ; ret
0x00000000000fd8d0 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008e095 : mov esi, 0xc984070c ; jne 0x8e090 ; ret
0x000000000003b7a7 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x3b7f5
0x000000000003e197 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x3e1e5
0x0000000000040b57 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x40ba5
0x0000000000048b27 : mov esi, 0xcd894821 ; sub rdx, rcx ; jmp 0x48b75
0x0000000000003e9f : mov esi, 0xcf8cb236 ; retf
0x000000000008e051 : mov esi, 0xd2840714 ; jne 0x8e050 ; ret
0x00000000000a8c25 : mov esi, 0xe8000003 ; ret 0xf85d
0x00000000000a1834 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000002ce5 : mov esi, 0xf8cbeb8f ; ret
0x00000000000de91f : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x00000000000651a7 : mov esi, 1 ; jmp rax
0x000000000006c6a4 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000f1cf8 : mov esi, 2 ; jmp rax
0x00000000000efe1d : mov esi, 2 ; mov edi, eax ; call 0xec8a9
0x00000000000f1d0b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000051ae1 : mov esi, 4 ; call 0x6e507
0x00000000000d0c97 : mov esi, dword ptr [rax + rdi] ; mov rdi, rdx ; call 0xcd768
0x00000000000f21cd : mov esi, dword ptr [rax] ; call r14
0x0000000000024ad0 : mov esi, dword ptr [rbp + rax] ; mov rdi, r12 ; call 0x215a9
0x00000000000572da : mov esi, dword ptr [rbp - 0x440] ; jmp 0x53dd8
0x0000000000023543 : mov esi, dword ptr [rbp - 0x60] ; call rsi
0x000000000010a8bd : mov esi, dword ptr [rbx + 0x18] ; mov edi, ebp ; call 0xf6b87
0x00000000000e4900 : mov esi, dword ptr [rbx] ; add r12, 1 ; call 0x213e9
0x0000000000034171 : mov esi, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x28] ; call 0xf0ba9
0x000000000006bfcc : mov esi, dword ptr [rip + 0x348f96] ; call rax
0x0000000000069113 : mov esi, dword ptr [rip + 0x34be4f] ; call rax
0x00000000000661f1 : mov esi, dword ptr [rip + 0x34ed71] ; call rax
0x0000000000063431 : mov esi, dword ptr [rip + 0x351b31] ; call rax
0x0000000000059e33 : mov esi, dword ptr [rip + 0x35b12f] ; call rax
0x000000000005281c : mov esi, dword ptr [rip + 0x362746] ; call rax
0x00000000000a13d3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000001186fe : mov esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000b4269 : mov esi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000003744e : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x00000000000840c1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000022be6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000118320 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x0000000000083af1 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000084991 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbx ; call rdx
0x00000000000259bf : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000012cb38 : mov esi, dword ptr [rsp + 0xc] ; add r9, qword ptr [rsp] ; call rax
0x000000000010c952 : mov esi, dword ptr [rsp + 8] ; mov rdi, rbp ; call r12
0x000000000010c561 : mov esi, dword ptr [rsp] ; mov rdi, r13 ; call r12
0x0000000000120fa9 : mov esi, dword ptr [rsp] ; mov rdi, rbp ; call rbx
0x00000000000ee7c8 : mov esi, eax ; jne 0xee797 ; xor eax, eax ; pop rbx ; ret
0x00000000000e6a23 : mov esi, eax ; mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000e6a4b : mov esi, eax ; mov eax, 0x77 ; mov edi, edx ; syscall
0x0000000000035dbd : mov esi, eax ; mov edx, ebx ; mov eax, 0xea ; syscall
0x000000000012beff : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000012b0ad : mov esi, ebp ; call 0xe7b14
0x0000000000086a0d : mov esi, ebp ; call rax
0x00000000000e5e14 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x00000000000f5f32 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000000ec414 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f5fe4 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x00000000000ec4b2 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x00000000000e5ec4 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x00000000000f7434 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x00000000000ed35f : mov esi, ebp ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x00000000000ed40f : mov esi, ebp ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000000f74dc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x00000000000ed20c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f614c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f7584 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000ed2ac : mov esi, ebp ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000000edbac : mov esi, ebp ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f6bbc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f6aec : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f6ffc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f6e9c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000c4c44 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f76e4 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f778c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x00000000000bf911 : mov esi, ebp ; mov edi, ebx ; mov eax, 0xe4 ; syscall
0x00000000000bf8a1 : mov esi, ebp ; mov edi, ebx ; mov eax, 0xe5 ; syscall
0x00000000000f5e94 : mov esi, ebp ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000c4ced : mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x00000000000e7aac : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x00000000000f7d62 : mov esi, ebp ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000000e7a0c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000037159 : mov esi, ebp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x00000000000862a6 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000037184 : mov esi, ebp ; mov rdi, r14 ; call r12
0x00000000001230cd : mov esi, ebp ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000037251 : mov esi, ebp ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x00000000000372c7 : mov esi, ebp ; mov rdi, rbx ; call r12
0x000000000004d0f6 : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000fdcf8 : mov esi, ebp ; xor r15d, r15d ; call rax
0x000000000010b76d : mov esi, ebx ; mov edi, 2 ; call 0xe7a79
0x000000000010b789 : mov esi, ebx ; mov edi, r14d ; call 0xe79d7
0x0000000000036a12 : mov esi, ebx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000f2791 : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000086162 : mov esi, ebx ; mov rdi, r14 ; call rax
0x0000000000121cc5 : mov esi, ebx ; mov rdi, rax ; call qword ptr [r10]
0x000000000003719f : mov esi, ebx ; mov rdi, rbp ; call r12
0x0000000000125a8e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000bd22d : mov esi, edi ; call 0xf9d04
0x0000000000037064 : mov esi, edi ; call r14
0x00000000000ecc45 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000000ed848 : mov esi, edi ; mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000ed8f8 : mov esi, edi ; mov eax, 0x77 ; mov edi, edx ; syscall
0x00000000000b47a1 : mov esi, edi ; mov eax, 0xa4 ; xor edi, edi ; syscall
0x00000000000e7776 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x00000000001169fa : mov esi, edi ; mov rbp, r8 ; mov rdi, rbx ; call rax
0x000000000002df9c : mov esi, edi ; mov rdi, r13 ; call 0x8a1f7
0x00000000000b3eb4 : mov esi, edi ; mov rdi, rbp ; call rbx
0x00000000000fdaa9 : mov esi, edi ; mov rdi, rbx ; call r12
0x000000000011e77a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00000000001015ad : mov esi, edx ; call rax
0x00000000000e6fac : mov esi, edx ; mov eax, 4 ; syscall
0x00000000000e6ffa : mov esi, edx ; mov eax, 5 ; syscall
0x00000000000e704c : mov esi, edx ; mov eax, 6 ; syscall
0x000000000010ca48 : mov esi, esi ; call 0x128ce4
0x000000000008601b : mov esi, esi ; call rax
0x00000000001a714d : mov esi, esi ; call rsi
0x00000000001098a2 : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000045373 : mov esi, esi ; mov rdi, rbp ; call 0x215c7
0x000000000011dca4 : mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c64d9 : mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000124e02 : mov esi, esp ; call qword ptr [rax]
0x00000000000c6fe1 : mov esi, esp ; call qword ptr [rdx]
0x00000000000e793c : mov esi, esp ; mov edi, ebp ; mov eax, 0x101 ; syscall
0x00000000000f60a7 : mov esi, esp ; mov edi, ebx ; mov eax, 0x113 ; syscall
0x00000000000f5cd3 : mov esi, esp ; mov edi, ebx ; mov eax, 0x119 ; syscall
0x00000000000ec247 : mov esi, esp ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x00000000000f6f5b : mov esi, esp ; mov edi, ebx ; mov eax, 0x2c ; syscall
0x00000000000f6d3b : mov esi, esp ; mov edi, ebx ; mov eax, 0x2d ; syscall
0x000000000012258f : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000006dfdf : mov esi, esp ; mov rdi, rbx ; call 0x7aaa7
0x000000000011a727 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000072a3c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000000396b : mov esi, fs ; mov al, 0x85 ; jbe 0x391e ; outsb dx, byte ptr [rsi] ; retf
0x0000000000188938 : mov esi, ss ; out dx, al ; jmp qword ptr [rax]
0x000000000018b518 : mov esp, 0x14fff703 ; ret
0x000000000009ccce : mov esp, 0x1d8d4cd2 ; ret 0xd
0x00000000000029a9 : mov esp, 0x1fb02742 ; retf
0x00000000000336e3 : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000196584 : mov esp, 0x2800008f ; jg 0x196580 ; jmp qword ptr [rbx]
0x000000000018785c : mov esp, 0x3c000074 ; jb 0x187854 ; call rax
0x000000000018cf54 : mov esp, 0x3c00025e ; cli ; call rax
0x000000000018b158 : mov esp, 0x40fff6c3 ; mov ah, 1 ; add ah, ch ; ret
0x00000000000887e7 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000091a51 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000091a81 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000091a71 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000018796c : mov esp, 0x5c000077 ; js 0x187964 ; call rax
0x0000000000179e18 : mov esp, 0x5cfff449 ; hlt ; jmp qword ptr [rcx]
0x000000000018a408 : mov esp, 0x5cfff4bc ; imul eax, dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret
0x0000000000196284 : mov esp, 0x6800008c ; jp 0x196280 ; call qword ptr [rsi]
0x000000000018a409 : mov esp, 0x6b5cfff4 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret
0x0000000000197784 : mov esp, 0x780000a1 ; in al, dx ; out dx, al ; jmp rcx
0x0000000000189754 : mov esp, 0x7c00011b ; add dh, cl ; jmp qword ptr [rax]
0x000000000018d2e4 : mov esp, 0x7c00011f ; add ch, bh ; call rax
0x000000000018c454 : mov esp, 0x7c00021d ; sub cl, bh ; call rax
0x00000000000ebd5d : mov esp, 0x89419066 ; retf 0xddb8
0x00000000001883d4 : mov esp, 0x8c0000ab ; cdq ; in al, dx ; call rax
0x000000000018a91c : mov esp, 0x8c00018a ; or esi, esi ; call rax
0x000000000007cb52 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000000e53c6 : mov esp, 0x9824 ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff3
0x0000000000188770 : mov esp, 0xb0ffee9f ; ret 0
0x000000000018b548 : mov esp, 0xb0fff709 ; ret
0x0000000000186875 : mov esp, 0xbd90fffa ; cli ; jmp rax
0x000000000018cf1c : mov esp, 0xc00025d ; cli ; call rax
0x00000000000887d6 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000009ce25 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x000000000018b4f8 : mov esp, 0xc4fff702 ; ret 1
0x0000000000155081 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x155032
0x00000000001557a1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x155752
0x0000000000155e21 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x155dd2
0x0000000000156271 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156212
0x0000000000156b11 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156ac2
0x0000000000156f91 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x156f27
0x00000000000975f3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000189904 : mov esp, 0xdc000125 ; stosd dword ptr [rdi], eax ; int1 ; call rax
0x0000000000189b94 : mov esp, 0xec000135 ; jp 0x189b93 ; call rsp
0x0000000000189b94 : mov esp, 0xec000135 ; jp 0x189b94 ; call rsp
0x000000000018bb0c : mov esp, 0xec0001e1 ; sal edi, 1 ; call rax
0x0000000000119f20 : mov esp, 0xf6000000 ; ret 0xf04
0x0000000000001ee8 : mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x0000000000091b3b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000091a61 : mov esp, 0xf80148c0 ; ret
0x0000000000150762 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x000000000018c824 : mov esp, 0xfc000235 ; xchg eax, esi ; stc ; call rax
0x000000000010b66d : mov esp, dword ptr [rsp + 0x38] ; call 0xe8176
0x0000000000035bc9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x0000000000164595 : mov esp, ebp ; call rax
0x00000000000c54d3 : mov esp, ebx ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001a0299 : mov esp, esi ; jmp qword ptr [rcx]
0x000000000011a715 : mov esp, esp ; lea rsi, [r12 + 8] ; call qword ptr [rax]
0x000000000018a0a8 : mov esp, fs ; call rax
0x0000000000189298 : mov esp, fs ; out dx, eax ; call rsp
0x000000000007ee4e : mov fs, word ptr [rbx + rsi] ; ret
0x00000000000039c1 : mov gs, word ptr [rbx] ; retf 0x707d
0x000000000006cebc : mov gs, word ptr [rdi - 0x18000000] ; retf 0xfb45
0x000000000010fb20 : mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x00000000000859e1 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000377fe : mov qword ptr [r15], rax ; jmp 0x377ca
0x00000000000e2060 : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x000000000015ba80 : mov qword ptr [r9 - 8], rcx ; ret
0x00000000001103d2 : mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000110429 : mov qword ptr [r9], rdi ; ret
0x0000000000072688 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000726c8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072c57 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000007faf6 : mov qword ptr [rax + 0x20], rdx ; add rsp, 8 ; ret
0x0000000000077cdb : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cf05a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x000000000007268c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072cd9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000011ad53 : mov qword ptr [rax + 0x58], r8 ; mov eax, 1 ; ret
0x000000000011443e : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007c8c4 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000b5317 : mov qword ptr [rax + 8], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ed0c3 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000001126a1 : mov qword ptr [rax], 0 ; ret
0x00000000001101b8 : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000070cf9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000008399b : mov qword ptr [rax], rdi ; ret
0x00000000000f5a30 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e7d4 : mov qword ptr [rax], rdx ; ret
0x00000000000732ea : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000011496f : mov qword ptr [rbp + 0x18], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a984 : mov qword ptr [rbp + 0x68], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b72a3 : mov qword ptr [rbp - 0x148], rax ; call 0xb3cc9
0x0000000000058d40 : mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x55839
0x0000000000055273 : mov qword ptr [rbp - 0x628], r10 ; call 0x21499
0x0000000000101e03 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000062921 : mov qword ptr [rbp - 0x8e8], r10 ; call 0x6f379
0x00000000001005e3 : mov qword ptr [rbp - 0x98], r11 ; call 0xfd079
0x0000000000038d69 : mov qword ptr [rbp], rdx ; call rax
0x000000000002bc3d : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000079206 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000012c5a5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007967e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000fd969 : mov qword ptr [rbx + 0x10], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125c34 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000012c55d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000fd9a9 : mov qword ptr [rbx + 0x18], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125c97 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbcda : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b5673 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077d00 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007bf6a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000cd74a : mov qword ptr [rbx + 8], rax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xcd720
0x00000000000fd929 : mov qword ptr [rbx + 8], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000086bcc : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1a81 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000e4c3d : mov qword ptr [rbx], rax ; call 0x2167d
0x000000000012c8f0 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000122a14 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000008549f : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000086888 : mov qword ptr [rbx], rdi ; call rcx
0x0000000000110abd : mov qword ptr [rbx], rdx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000059d21 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ae1fb : mov qword ptr [rbx], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000086940 : mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000006df3d : mov qword ptr [rcx + 0xe0], rdx ; ret
0x0000000000144803 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000144813 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000144823 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000144833 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000cf107 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000075b59 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001447c0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001447e0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001447f0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000144800 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000144810 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000144820 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000144830 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001447d0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001447b0 : mov qword ptr [rcx], rdx ; ret
0x000000000004691e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009df2c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000009ed8c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x000000000009c8bc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009c89c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a09bc : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009d58f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009c8ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009c91f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009c8e0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007be62 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000078056 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001258e5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000b4b3e : mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000007be92 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007f288 : mov qword ptr [rdi + 0x60], rcx ; ret
0x000000000009deec : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000009ed4c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000009c85c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a097c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009df0c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000009ed6c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000009c87c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a099c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000139b77 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139b07 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139a97 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000139a27 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ddea : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x000000000009ec3a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000001399b7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009c7aa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a086a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009de0a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x000000000009ec5a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000139947 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009c7ba : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a088a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009de2a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x000000000009ec7a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x00000000001398d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009c7ca : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a08aa : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ef467 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000046123 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000468a3 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000047c4d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000011b855 : mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x000000000007be66 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000039443 : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000003942b : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x0000000000078bae : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00000000000ef457 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000015657b : mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x000000000015512b : mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000a17fa : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a13c6 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000001337e4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000133822 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004680e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000133b6b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139387 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133d4b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139307 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133f3b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139287 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013410c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001391f8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013430c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000139168 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000013450c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001390d8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000009d710 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000046799 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001337e8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000133826 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000013399b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133a97 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001339e3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000139407 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000050029 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011b852 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000039428 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x0000000000039449 : mov qword ptr [rdi], r8 ; ret
0x0000000000046768 : mov qword ptr [rdi], r9 ; ret
0x00000000000ef454 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004b10a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000011490e : mov qword ptr [rdi], rax ; ret
0x000000000010f871 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000009dd76 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000009d436 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009c786 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009c796 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009c7a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009c7b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009c7c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000009c777 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009c766 : mov qword ptr [rdi], rcx ; ret
0x0000000000157bbe : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000009dd63 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x000000000009eba3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x000000000009d730 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009d750 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009d760 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009d770 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009d780 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009d740 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008e012 : mov qword ptr [rdi], rdx ; pop rbx ; ret
0x0000000000034e35 : mov qword ptr [rdi], rdx ; ret
0x00000000000a07d3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000087068 : mov qword ptr [rdi], rsi ; mov eax, 1 ; ret
0x000000000015ba7d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000008716d : mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x00000000000479fa : mov qword ptr [rdi], rsi ; ret
0x000000000007fb29 : mov qword ptr [rdx + 0x20], rax ; jmp 0x7faff
0x000000000007195d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071b66 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000011a7ef : mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000cf080 : mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x0000000000071d3c : mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000011a7cb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011a7cf : mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000079264 : mov qword ptr [rdx + 0xe0], rdi ; pop rbx ; ret
0x0000000000146bba : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000014282a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000146bda : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000014284a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000146bfa : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000014286a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000146a8a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000014275a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000000e1e6d : mov qword ptr [rdx + rax*8], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000146a33 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000000f79fe : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000142703 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002ef4c : mov qword ptr [rdx], rax ; ret
0x000000000007698b : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008deb4 : mov qword ptr [rdx], rcx ; ret
0x00000000000f1f04 : mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000000db45a : mov qword ptr [rdx], rdi ; ret
0x000000000012d3f1 : mov qword ptr [rip + 0x28aa98], rsi ; xor eax, eax ; ret
0x0000000000102767 : mov qword ptr [rip + 0x2b670a], rax ; pop rbp ; ret
0x00000000000f819f : mov qword ptr [rip + 0x2bd1ba], rbx ; pop rbx ; ret
0x00000000000efc18 : mov qword ptr [rip + 0x2c8b71], rdx ; ret
0x0000000000087a77 : mov qword ptr [rip + 0x3304ca], rax ; ret
0x000000000007ee63 : mov qword ptr [rip + 0x33647e], rax ; ret
0x000000000007ee4b : mov qword ptr [rip + 0x33648e], rax ; ret
0x000000000007ee31 : mov qword ptr [rip + 0x336498], rdx ; ret
0x000000000007edf3 : mov qword ptr [rip + 0x33649e], rax ; ret
0x000000000007edcd : mov qword ptr [rip + 0x3364ac], rax ; ret
0x000000000007ede3 : mov qword ptr [rip + 0x3364b6], rax ; ret
0x000000000007ed9d : mov qword ptr [rip + 0x3364e4], rax ; ret
0x000000000007ee8d : mov qword ptr [rip + 0x33900c], rdx ; ret
0x000000000002175b : mov qword ptr [rip + 0x398bc6], rax ; ret
0x00000000000dc043 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000011999e : mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000d2213 : mov qword ptr [rsi + 0x18], rdx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000393b0 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000ec3ca : mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000073204 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000039a2a : mov qword ptr [rsi + 0xc], rax ; xor eax, eax ; ret
0x00000000000dc026 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000011996e : mov qword ptr [rsi + 8], rax ; ret
0x00000000000dc03f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000007805a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000007f021 : mov qword ptr [rsi], rcx ; ret
0x000000000010f8cd : mov qword ptr [rsi], rdi ; ret
0x00000000000375f2 : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000000000e4a07 : mov qword ptr [rsp + 0x20], rcx ; call 0x21457
0x00000000000d3ce9 : mov qword ptr [rsp + 0x38], rdi ; add rax, rcx ; jmp rax
0x000000000004fc93 : mov qword ptr [rsp + 0x50], r8 ; call 0x7bf87
0x00000000000b3e37 : mov qword ptr [rsp + 0x58], r13 ; mov rdi, rbp ; call rbx
0x0000000000035da0 : mov qword ptr [rsp + 0x80], r8 ; syscall
0x00000000001232d3 : mov qword ptr [rsp + 0xc8], rdx ; call rax
0x0000000000081709 : mov qword ptr [rsp + 8], r11 ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000081964 : mov qword ptr [rsp + 8], r15 ; call qword ptr [rax]
0x0000000000079b9e : mov qword ptr [rsp + 8], r8 ; mov rdi, rbx ; call rax
0x0000000000081b52 : mov qword ptr [rsp + 8], rax ; call rdx
0x0000000000081aff : mov qword ptr [rsp + 8], rax ; call rsi
0x0000000000125d6b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000819f1 : mov qword ptr [rsp + 8], rcx ; xor edi, edi ; call qword ptr [rax]
0x000000000007c502 : mov qword ptr [rsp + 8], rdi ; call 0x787c7
0x0000000000081985 : mov qword ptr [rsp + 8], rsi ; xor edi, edi ; call qword ptr [rax]
0x00000000000f5afd : mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000000f78dc : mov qword ptr [rsp - 0x38], rax ; jmp 0xf78b4
0x0000000000074639 : mov qword ptr [rsp], r8 ; mov rdi, r15 ; call rax
0x00000000001228ee : mov qword ptr fs:[rax], rdx ; ret
0x0000000000038d68 : mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000122a13 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002ef4b : mov qword ptr fs:[rdx], rax ; ret
0x00000000000a13c5 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000e8c60 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x0000000000051bb0 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x00000000000e93b0 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x00000000000e9470 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000000ec6f0 : mov r10, rcx ; mov eax, 0x11 ; syscall
0x00000000000f6870 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x00000000000f6360 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000000f5df0 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x00000000000f6900 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000000f6960 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000000f6990 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000f6690 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000ec1c0 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000f71b0 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x00000000000f7120 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000000f6c80 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000f6720 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x00000000000f6660 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x00000000000f6540 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x00000000000f6750 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000f6780 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x00000000000f3a80 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x00000000000f3a20 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x00000000000f3900 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x00000000000f3930 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000f3990 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000000f3870 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000f0d00 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000000f7900 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000000f64e0 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x00000000000de0f4 : mov r10, rdx ; mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x0000000000139546 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000134341 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x0000000000035f00 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000021967 : mov r10d, eax ; jmp 0x21933
0x00000000000ba920 : mov r10d, eax ; jmp 0xba8eb
0x00000000000bcd58 : mov r10d, ecx ; jmp 0xbcd2a
0x00000000000bcd58 : mov r10d, ecx ; jmp 0xbcd2c
0x00000000000ec2b0 : mov r10d, ecx ; mov eax, 0x118 ; syscall
0x00000000000ebd60 : mov r10d, ecx ; mov eax, 0xdd ; syscall
0x00000000000ff61c : mov r11b, 0x90 ; ret
0x00000000001395c6 : mov r11d, 0x46f00ff2 ; retf
0x0000000000134141 : mov r11d, 0x4f7f0ff3 ; retf
0x0000000000064beb : mov r11d, 1 ; jmp rax
0x000000000010b66c : mov r12, qword ptr [rsp + 0x38] ; call 0xe8177
0x000000000011a714 : mov r12, rsp ; lea rsi, [r12 + 8] ; call qword ptr [rax]
0x0000000000056a5d : mov r13, r14 ; jmp 0x52ce5
0x000000000012b458 : mov r13d, 0xffffffff ; jmp 0x12b432
0x00000000000e3418 : mov r13d, 1 ; jmp 0xe33ea
0x00000000000651a6 : mov r14d, 1 ; jmp rax
0x000000000005dbea : mov r15, qword ptr [rbp - 0x548] ; jmp 0x59eb6
0x000000000003a126 : mov r15d, 0x870f263c ; ret
0x0000000000039eee : mov r15d, 0x870f263c ; retf
0x00000000000f094f : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000edc56 : mov r8, rbx ; mov eax, 0x10e ; syscall
0x00000000000ef505 : mov r8, rcx ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000006de63 : mov r8, rdi ; mov rax, r8 ; ret
0x00000000000ff83a : mov r8, rdx ; shl rdx, 2 ; jmp 0xff80e
0x0000000000024066 : mov r8b, 0 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000008dab1 : mov r8b, 0x48 ; mov edx, eax ; jmp 0x8da3d
0x00000000000e764c : mov r8d, 0x10c ; syscall
0x0000000000045a80 : mov r8d, 0xffffffff ; mov eax, r8d ; ret
0x00000000000f0952 : mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000022bea : mov r9, r13 ; call rbx
0x00000000000a2e44 : mov r9, r14 ; call rbx
0x0000000000065287 : mov r9d, 1 ; jmp rax
0x0000000000035cfc : mov rax, -1 ; ret
0x0000000000035e50 : mov rax, 0xf ; syscall
0x00000000000b3670 : mov rax, 1 ; ret
0x00000000000b3680 : mov rax, 2 ; ret
0x00000000000b3690 : mov rax, 3 ; ret
0x00000000000b36a0 : mov rax, 4 ; ret
0x00000000000b36b0 : mov rax, 5 ; ret
0x00000000000b36c0 : mov rax, 6 ; ret
0x00000000000b36d0 : mov rax, 7 ; ret
0x000000000007eb91 : mov rax, qword ptr [0x10] ; ret
0x00000000000f8607 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f85ef : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000000f3af0 : mov rax, qword ptr [rax + 0x1c8] ; ret
0x000000000012c4ce : mov rax, qword ptr [rax + 0x1d8] ; jmp rax
0x0000000000074c10 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000001025d8 : mov rax, qword ptr [rax + 0x30] ; ret
0x00000000001203ac : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120c5c : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f3b00 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000f3ae9 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002c424 : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2c438 ; call rax
0x000000000007ea57 : mov rax, qword ptr [rax + rbx] ; test rax, rax ; je 0x7ea6b ; call rax
0x000000000002ecc4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e7ee : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002dbab : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000038e82 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000114318 : mov rax, qword ptr [rax] ; ret
0x000000000007f881 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7f893 ; call rax
0x00000000000f2d81 : mov rax, qword ptr [rax] ; test rax, rax ; je 0xf2dd8 ; call rax
0x000000000007bfbc : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000077cfc : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007c4e8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000086afb : mov rax, qword ptr [rbx + 0x40] ; jne 0x86b19 ; mov rdi, r13 ; call rax
0x0000000000086b9f : mov rax, qword ptr [rbx + 0x40] ; jne 0x86b81 ; mov rdi, rsi ; call rax
0x00000000001229b9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1229d1 ; pop rbx ; ret
0x0000000000059962 : mov rax, qword ptr [rcx] ; jmp 0x56385
0x0000000000142700 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000125c5d : mov rax, qword ptr [rdi + 0x18] ; jbe 0x125c79 ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000125880 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c0690 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000016357c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x163595 ; call rax
0x00000000001199b6 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077d40 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000001199ee : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000077c30 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000007d850 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000124d15 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000011a690 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000124dfd : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000007edb0 : mov rax, qword ptr [rdi] ; mov dword ptr [rip + 0x3390d3], eax ; ret
0x000000000007d594 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000007eafd : mov rax, qword ptr [rdx + 0x10] ; test rax, rax ; je 0x7eade ; call rax
0x000000000007eb10 : mov rax, qword ptr [rdx + 8] ; test rax, rax ; je 0x7eade ; call rax
0x000000000002ec62 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002db7d : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000db457 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007d580 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7d581 ; ret
0x000000000012c697 : mov rax, qword ptr [rip + 0x28daea] ; call qword ptr [rax]
0x000000000010d668 : mov rax, qword ptr [rip + 0x2a9289] ; ret
0x0000000000086a19 : mov rax, qword ptr [rip + 0x32e530] ; call qword ptr [rax]
0x0000000000086954 : mov rax, qword ptr [rip + 0x32e5f5] ; call qword ptr [rax]
0x0000000000086899 : mov rax, qword ptr [rip + 0x32e6b0] ; call qword ptr [rax]
0x000000000007d830 : mov rax, qword ptr [rip + 0x338d69] ; ret
0x000000000002b4d0 : mov rax, qword ptr [rip + 0x38b491] ; ret
0x0000000000022dc0 : mov rax, qword ptr [rip + 0x3973e1] ; ret
0x0000000000022db0 : mov rax, qword ptr [rip + 0x397401] ; ret
0x000000000002db88 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000012c6bb : mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x0000000000021dc6 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024d31 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000025832 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002f40c : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000037668 : mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000ee44e : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000e6d05 : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000016304c : mov rax, qword ptr [rsp] ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f8ca2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000f8d03 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000010cbe4 : mov rax, qword ptr [rsp] ; call rax
0x000000000007eb90 : mov rax, qword ptr fs:[0x10] ; ret
0x0000000000114317 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000088c23 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002f746 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781f8 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f214d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c11e0 : mov rax, r14 ; call rax
0x0000000000084962 : mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000083a47 : mov rax, r8 ; pop rbp ; pop r12 ; ret
0x000000000006de30 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e8cc : mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000006de66 : mov rax, r8 ; ret
0x00000000001549a0 : mov rax, r8 ; vzeroupper ; ret
0x000000000004b2c0 : mov rax, r9 ; add rsp, 0x28 ; ret
0x0000000000066506 : mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006644b : mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c17c7 : mov rax, r9 ; pop rbx ; ret
0x000000000008720c : mov rax, rbp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x000000000007812d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002f4f0 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051413 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000e1f8f : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000785be : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a9b5 : mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x000000000006f25f : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002bd99 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032b34 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000045110 : mov rax, rbx ; pop rbx ; ret
0x00000000000f1489 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000858c9 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000003411b : mov rax, rcx ; ret
0x0000000000038e00 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000ef572 : mov rax, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000071112 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f6b7 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000008e814 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004b10d : mov rax, rdi ; ret
0x0000000000104f69 : mov rax, rdi ; sar rax, 6 ; ret
0x0000000000156870 : mov rax, rdi ; vzeroupper ; ret
0x000000000004b2b9 : mov rax, rdx ; add rax, r9 ; ret
0x00000000000b3c17 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000b772b : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000089fab : mov rax, rdx ; cmovne rax, rdi ; ret
0x0000000000110782 : mov rax, rdx ; movsxd rdx, esi ; ret
0x00000000000fd813 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046df4 : mov rax, rdx ; pop rbx ; ret
0x00000000000462f9 : mov rax, rdx ; ret
0x00000000000f59c0 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004b1e3 : mov rax, rsi ; ret
0x00000000000c0c4b : mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000001169fc : mov rbp, r8 ; mov rdi, rbx ; call rax
0x0000000000035bcb : mov rbp, r9 ; jmp rdx
0x000000000003b7a9 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x3b7f3
0x000000000003e199 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x3e1e3
0x0000000000040b59 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x40ba3
0x0000000000048b29 : mov rbp, rcx ; sub rdx, rcx ; jmp 0x48b73
0x0000000000102673 : mov rbp, rsp ; pop rbp ; ret
0x00000000000c54d5 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000011a2aa : mov rbx, rax ; jne 0x11a24a ; xor eax, eax ; pop rbx ; ret
0x0000000000104166 : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ecd8e : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000b5271 : mov rbx, rdi ; call 0x21495
0x000000000002d3f5 : mov rbx, rdi ; test rax, rax ; je 0x2d407 ; call rax
0x00000000000e7334 : mov rbx, rsi ; mov eax, ecx ; syscall
0x000000000002c5b1 : mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x2c5c5 ; call rcx
0x000000000016347c : mov rcx, qword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x163490 ; call rcx
0x0000000000117dc6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000009c760 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000011e0f0 : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011df1a : mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000001195fe : mov rcx, qword ptr [rsp] ; call rcx
0x000000000011b122 : mov rcx, r12 ; call 0x117b95
0x0000000000116922 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008dec3 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000086d20 : mov rcx, rax ; jmp 0x86cec
0x00000000000da4bc : mov rcx, rax ; lea rdx, [r10 + rax*8] ; jmp 0xda4e3
0x00000000000a13a1 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000a2940 : mov rdi, qword ptr [r14] ; lea r9, [rsp + 0x30] ; call r12
0x00000000000384a3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000061181 : mov rdi, qword ptr [rbp - 0x898] ; call rax
0x0000000000066d7c : mov rdi, qword ptr [rbp - 0x8b0] ; call rax
0x0000000000037664 : mov rdi, qword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000086b78 : mov rdi, qword ptr [rbx + 0x48] ; call rax
0x0000000000086b10 : mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x0000000000034174 : mov rdi, qword ptr [rdi + 0x28] ; call 0xf0ba6
0x0000000000086a08 : mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x000000000006e0e5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006e0a9 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000007e64a : mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001015a8 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000b53c5 : mov rdi, qword ptr [rip + 0x302d64] ; call 0x21681
0x00000000000e5467 : mov rdi, qword ptr [rsp + 0x10] ; call 0xe1eb7
0x00000000000e548b : mov rdi, qword ptr [rsp + 0x10] ; xor esi, esi ; call 0xe1eb9
0x000000000012cfd6 : mov rdi, qword ptr [rsp + 0x20] ; call rcx
0x000000000002b120 : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000002769f : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026554 : mov rdi, qword ptr [rsp + 0x40] ; call r14
0x00000000000282da : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000024f82 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000029336 : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000259c3 : mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x000000000002681e : mov rdi, qword ptr [rsp + 0x50] ; call r14
0x000000000002a5a0 : mov rdi, qword ptr [rsp + 0x50] ; call r15
0x0000000000025579 : mov rdi, qword ptr [rsp + 0x58] ; call r14
0x000000000003715b : mov rdi, qword ptr [rsp + 8] ; call r12
0x0000000000119619 : mov rdi, qword ptr [rsp + 8] ; call rax
0x00000000001195f9 : mov rdi, qword ptr [rsp + 8] ; mov rcx, qword ptr [rsp] ; call rcx
0x000000000007bfe5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000036a14 : mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x0000000000024ad4 : mov rdi, r12 ; call 0x215a5
0x0000000000074bc4 : mov rdi, r12 ; call 0x2167d
0x00000000000862a8 : mov rdi, r12 ; call rax
0x0000000000075728 : mov rdi, r12 ; call rbx
0x00000000000e8448 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000083f61 : mov rdi, r12 ; mov eax, 0xca ; syscall
0x00000000000a2e41 : mov rdi, r12 ; mov r9, r14 ; call rbx
0x00000000001053cb : mov rdi, r13 ; call 0x2167d
0x000000000004f48d : mov rdi, r13 ; call 0x7bf85
0x000000000002df9e : mov rdi, r13 ; call 0x8a1f5
0x000000000010c564 : mov rdi, r13 ; call r12
0x00000000000f2793 : mov rdi, r13 ; call r14
0x0000000000086b01 : mov rdi, r13 ; call rax
0x0000000000038bbc : mov rdi, r13 ; mov eax, 0xca ; syscall
0x0000000000086014 : mov rdi, r13 ; mov rdx, rbx ; mov rsi, r14 ; call rax
0x00000000000f21c9 : mov rdi, r13 ; mov rsi, qword ptr [rax] ; call r14
0x00000000000d5432 : mov rdi, r14 ; call 0x2167d
0x00000000001005a0 : mov rdi, r14 ; call 0xfd075
0x0000000000100c45 : mov rdi, r14 ; call 0xfd6e5
0x0000000000037186 : mov rdi, r14 ; call r12
0x0000000000086164 : mov rdi, r14 ; call rax
0x00000000000384ec : mov rdi, r14 ; mov eax, 0xca ; syscall
0x000000000002353f : mov rdi, r14 ; mov rsi, qword ptr [rbp - 0x60] ; call rsi
0x000000000008170e : mov rdi, r15 ; call qword ptr [rax]
0x000000000002f9e3 : mov rdi, r15 ; call rax
0x00000000000e4c3a : mov rdi, r15 ; mov qword ptr [rbx], rax ; call 0x21680
0x0000000000081961 : mov rdi, r15 ; mov qword ptr [rsp + 8], r15 ; call qword ptr [rax]
0x0000000000037253 : mov rdi, r15 ; mov rdx, r13 ; call r12
0x0000000000075914 : mov rdi, r15 ; xor r8d, r8d ; call r12
0x00000000000e73a3 : mov rdi, r8 ; mov eax, 0x85 ; syscall
0x000000000007e563 : mov rdi, r8 ; mov eax, 0xca ; syscall
0x000000000008385f : mov rdi, r8 ; mov eax, ebp ; syscall
0x0000000000039c0f : mov rdi, r8 ; sub rsi, r8 ; mov eax, r10d ; syscall
0x0000000000038a88 : mov rdi, r9 ; call r8
0x0000000000086943 : mov rdi, r9 ; call rcx
0x00000000000e5375 : mov rdi, rax ; call 0x2167d
0x0000000000109d1b : mov rdi, rax ; call 0x76015
0x0000000000121cc7 : mov rdi, rax ; call qword ptr [r10]
0x00000000000221b8 : mov rdi, rax ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x00000000000f5b7f : mov rdi, rax ; mov eax, 0x3c ; syscall
0x0000000000035db3 : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000117dc3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000045375 : mov rdi, rbp ; call 0x215c5
0x00000000001253f0 : mov rdi, rbp ; call 0x2167d
0x000000000003aff0 : mov rdi, rbp ; call 0x47ae5
0x000000000011a349 : mov rdi, rbp ; call qword ptr [rbx]
0x0000000000037147 : mov rdi, rbp ; call r12
0x0000000000118324 : mov rdi, rbp ; call r14
0x0000000000086ae0 : mov rdi, rbp ; call rax
0x00000000000b3e3c : mov rdi, rbp ; call rbx
0x0000000000125a90 : mov rdi, rbp ; call rcx
0x0000000000119ef4 : mov rdi, rbp ; call rdx
0x0000000000118ba4 : mov rdi, rbp ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001189e5 : mov rdi, rbp ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ebd08 : mov rdi, rbp ; mov eax, 0x10f ; syscall
0x00000000000811e2 : mov rdi, rbp ; mov eax, 0xca ; syscall
0x00000000000f0af9 : mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000000376b8 : mov rdi, rbp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000010cbe1 : mov rdi, rbp ; mov rax, qword ptr [rsp] ; call rax
0x000000000011b11f : mov rdi, rbp ; mov rcx, r12 ; call 0x117b98
0x000000000011982c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000006dfe1 : mov rdi, rbx ; call 0x7aaa5
0x00000000000d2060 : mov rdi, rbx ; call 0xce2a5
0x000000000011a729 : mov rdi, rbx ; call qword ptr [rax]
0x000000000002b49a : mov rdi, rbx ; call r12
0x0000000000022f83 : mov rdi, rbx ; call r15
0x000000000004d0f8 : mov rdi, rbx ; call rax
0x0000000000084995 : mov rdi, rbx ; call rdx
0x000000000011480c : mov rdi, rbx ; jne 0x114806 ; pop rbx ; ret
0x00000000001636ea : mov rdi, rbx ; jne 0x1636e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163879 : mov rdi, rbx ; jne 0x16386e ; pop rbx ; ret
0x00000000000e6e7c : mov rdi, rbx ; mov eax, 0x135 ; syscall
0x0000000000039b7f : mov rdi, rbx ; mov eax, 0x13e ; syscall
0x00000000000f0c3f : mov rdi, rbx ; mov eax, 0x1a ; syscall
0x00000000000e8314 : mov rdi, rbx ; mov eax, 0x55 ; syscall
0x00000000000361ac : mov rdi, rbx ; mov eax, 0x82 ; syscall
0x0000000000038709 : mov rdi, rbx ; mov eax, 0xca ; syscall
0x00000000000ebc2f : mov rdi, rbx ; mov eax, 7 ; syscall
0x000000000011e0ed : mov rdi, rbx ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011df17 : mov rdi, rbx ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000006fe7b : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000072a3e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000798e9 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000700c3 : mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000071ab1 : mov rdi, rcx ; call 0x7e545
0x0000000000085b28 : mov rdi, rcx ; call rax
0x0000000000075ddc : mov rdi, rcx ; mov eax, 0xca ; syscall
0x00000000000f599f : mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000000ef6c1 : mov rdi, rdx ; call 0x7c105
0x00000000000d0c9a : mov rdi, rdx ; call 0xcd765
0x000000000012cf86 : mov rdi, rdx ; call rsi
0x0000000000086ba5 : mov rdi, rsi ; call rax
0x0000000000124bf0 : mov rdi, rsp ; call rdx
0x0000000000077cd7 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000021dc3 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000005e8ec : mov rdx, qword ptr [rbp - 0x448] ; jmp 0x5b30f
0x000000000007fb25 : mov rdx, qword ptr [rdi + 0x28] ; mov qword ptr [rdx + 0x20], rax ; jmp 0x7fb03
0x0000000000045be6 : mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x00000000000573b7 : mov rdx, qword ptr [rdx] ; mov byte ptr [rdx], al ; jmp 0x53674
0x0000000000133950 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009c750 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000d4b21 : mov rdx, qword ptr [rsp + 0x60] ; call 0x215c7
0x0000000000101c9b : mov rdx, r12 ; call rax
0x0000000000085b25 : mov rdx, r12 ; mov rdi, rcx ; call rax
0x0000000000037256 : mov rdx, r13 ; call r12
0x0000000000101e07 : mov rdx, r13 ; call rax
0x000000000012258b : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000010210f : mov rdx, r14 ; call rax
0x00000000000a30a9 : mov rdx, r14 ; mov rdi, r12 ; call rbx
0x000000000010ca44 : mov rdx, r15 ; mov rsi, r14 ; call 0x128ce8
0x000000000010989e : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000012163c : mov rdx, rax ; jmp 0x1215e3
0x0000000000029d85 : mov rdx, rax ; jmp 0x29d43
0x000000000008bdea : mov rdx, rax ; jmp 0x8bd7f
0x000000000008dab3 : mov rdx, rax ; jmp 0x8da3b
0x00000000000ea530 : mov rdx, rax ; jmp 0xea4f2
0x00000000000f36e4 : mov rdx, rax ; jmp 0xf36f8
0x00000000000feed4 : mov rdx, rax ; jmp rcx
0x000000000011079d : mov rdx, rax ; ret
0x0000000000101feb : mov rdx, rbx ; call rax
0x00000000000ebcc4 : mov rdx, rbx ; mov eax, 0x10f ; syscall
0x00000000000862a2 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000086017 : mov rdx, rbx ; mov rsi, r14 ; call rax
0x000000000011b0c5 : mov rdx, rbx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008720f : mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x0000000000085f67 : mov rdx, rcx ; jmp 0x85f08
0x00000000000e745f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000a1710 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000044725 : mov rdx, rsi ; sub rdx, rdi ; add rdx, rcx ; jmp 0x44741
0x0000000000044a35 : mov rdx, rsi ; sub rdx, rdi ; add rdx, rcx ; jmp 0x44a51
0x00000000000ebf5f : mov rdx, rsi ; xor esi, esi ; syscall
0x00000000000f21cc : mov rsi, qword ptr [rax] ; call r14
0x00000000000572d9 : mov rsi, qword ptr [rbp - 0x440] ; jmp 0x53dd9
0x0000000000023542 : mov rsi, qword ptr [rbp - 0x60] ; call rsi
0x000000000010a8bc : mov rsi, qword ptr [rbx + 0x18] ; mov edi, ebp ; call 0xf6b88
0x000000000006bfcb : mov rsi, qword ptr [rip + 0x348f96] ; call rax
0x0000000000069112 : mov rsi, qword ptr [rip + 0x34be4f] ; call rax
0x00000000000661f0 : mov rsi, qword ptr [rip + 0x34ed71] ; call rax
0x0000000000063430 : mov rsi, qword ptr [rip + 0x351b31] ; call rax
0x0000000000059e32 : mov rsi, qword ptr [rip + 0x35b12f] ; call rax
0x000000000005281b : mov rsi, qword ptr [rip + 0x362746] ; call rax
0x00000000001186fd : mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000003744d : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r12
0x0000000000022be5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000011831f : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x0000000000083af0 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000084990 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbx ; call rdx
0x000000000010c951 : mov rsi, qword ptr [rsp + 8] ; mov rdi, rbp ; call r12
0x000000000010c560 : mov rsi, qword ptr [rsp] ; mov rdi, r13 ; call r12
0x0000000000120fa8 : mov rsi, qword ptr [rsp] ; mov rdi, rbp ; call rbx
0x000000000012258e : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000006dfde : mov rsi, r12 ; mov rdi, rbx ; call 0x7aaa8
0x000000000011a726 : mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000086b14 : mov rsi, r13 ; call rax
0x00000000000f7d61 : mov rsi, r13 ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000000862a5 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000004d0f5 : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000fdcf7 : mov rsi, r13 ; xor r15d, r15d ; call rax
0x000000000010ca47 : mov rsi, r14 ; call 0x128ce5
0x000000000008601a : mov rsi, r14 ; call rax
0x00000000001098a1 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000045372 : mov rsi, r14 ; mov rdi, rbp ; call 0x215c8
0x00000000000bd22c : mov rsi, r15 ; call 0xf9d05
0x0000000000037063 : mov rsi, r15 ; call r14
0x000000000002df9b : mov rsi, r15 ; mov rdi, r13 ; call 0x8a1f8
0x00000000000b3eb3 : mov rsi, r15 ; mov rdi, rbp ; call rbx
0x00000000000fdaa8 : mov rsi, r15 ; mov rdi, rbx ; call r12
0x00000000000ee7c7 : mov rsi, rax ; jne 0xee798 ; xor eax, eax ; pop rbx ; ret
0x000000000012befe : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000012b0ac : mov rsi, rbp ; call 0xe7b15
0x0000000000086a0c : mov rsi, rbp ; call rax
0x00000000000e7a0b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000037158 : mov rsi, rbp ; mov rdi, qword ptr [rsp + 8] ; call r12
0x0000000000037183 : mov rsi, rbp ; mov rdi, r14 ; call r12
0x00000000001230cc : mov rsi, rbp ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000372c6 : mov rsi, rbp ; mov rdi, rbx ; call r12
0x00000000000859d2 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000010b788 : mov rsi, rbx ; mov edi, r14d ; call 0xe79d8
0x0000000000036a11 : mov rsi, rbx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000f2790 : mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000086161 : mov rsi, rbx ; mov rdi, r14 ; call rax
0x0000000000121cc4 : mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x000000000003719e : mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000125a8d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000e7775 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x00000000001169f9 : mov rsi, rdi ; mov rbp, r8 ; mov rdi, rbx ; call rax
0x000000000011e779 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001015ac : mov rsi, rdx ; call rax
0x00000000000e6fab : mov rsi, rdx ; mov eax, 4 ; syscall
0x00000000000e6ff9 : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000000e704b : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000124e01 : mov rsi, rsp ; call qword ptr [rax]
0x00000000000c6fe0 : mov rsi, rsp ; call qword ptr [rdx]
0x0000000000035bc8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000c54d2 : mov rsp, rbx ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000018b15c : mov spl, 1 ; add ah, ch ; ret
0x0000000000040675 : mov ss, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000015baa5 : mov word ptr [r9 - 2], cx ; ret
0x0000000000119165 : mov word ptr [rax + rax*2 + 0x75000001], ss ; ret
0x000000000011351f : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000009cf50 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x000000000018c04c : mov word ptr [rax], es ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rsp
0x0000000000196285 : mov word ptr [rax], es ; add byte ptr [rax + 0x7a], ch ; out dx, al ; call qword ptr [rsi]
0x00000000000ecf91 : mov word ptr [rax], es ; add byte ptr [rax], al ; syscall
0x000000000018d2f0 : mov word ptr [rax], es ; std ; jmp rsp
0x00000000001153b8 : mov word ptr [rbp + rax + 0x14], dx ; call 0x2166f
0x0000000000187820 : mov word ptr [rbp - 0x16], fs ; call rsp
0x00000000000b6ff2 : mov word ptr [rbx + 8], dx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c1998 : mov word ptr [rcx + 0x2f], gs ; add al, ch ; lahf ; retf
0x0000000000144792 : mov word ptr [rcx + 4], dx ; ret
0x00000000001447d3 : mov word ptr [rcx + 8], dx ; ret
0x00000000001102c8 : mov word ptr [rcx + rax - 2], dx ; mov eax, r8d ; ret
0x0000000000144760 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000144750 : mov word ptr [rcx], dx ; ret
0x000000000009de6c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000009eccc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x000000000009c7fc : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a08fc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000ecb84 : mov word ptr [rdi + 0x16], ax ; ret
0x000000000009df74 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x000000000009edd4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x000000000009c8e4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a0a04 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000139e17 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000039b02 : mov word ptr [rdi + 2], dx ; ret
0x000000000008e3d3 : mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000009dd38 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x000000000009eb78 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x000000000008e306 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a07a8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009ebda : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x000000000009dd8a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000009c77a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a080a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000015653c : mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x00000000000a180a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000a13e4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000018b690 : mov word ptr [rdi + rsi*8], fs ; jmp rax
0x0000000000133eec : mov word ptr [rdi - 2], cx ; ret
0x0000000000133d04 : mov word ptr [rdi - 2], dx ; ret
0x0000000000133ee8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009c703 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009d3d6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000015c172 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000a180f : mov word ptr [rdi], cx ; ret
0x0000000000157bd4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x000000000008e2b0 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000009dcf3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000009eb23 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x000000000009c6f3 : mov word ptr [rdi], dx ; ret
0x00000000001550e3 : mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000a0753 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000008e450 : mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x000000000008e380 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000015baa2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a13e9 : mov word ptr [rdi], si ; ret
0x00000000000e63cc : mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000198054 : mov word ptr [rdx + 0x4780000], gs ; out dx, eax ; call qword ptr [rax]
0x000000000011dd3d : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000146b08 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000992ed : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000099371 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000023bd : mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000146ab3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000099288 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f85dd : mov word ptr [rdx], ax ; ret
0x000000000018987c : mov word ptr [rdx], fs ; add dword ptr [rax], eax ; cmp al, 0xa4 ; int1 ; call qword ptr [rax]
0x00000000000eba85 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000039ab6 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000015c175 : mov word ptr [rsi - 2], cx ; ret
0x00000000000e63b3 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001893a4 : mov word ptr [rsi], es ; add dword ptr [rax], eax ; in al, dx ; cld ; out dx, eax ; call rsp
0x000000000019b89c : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; retf 0xc0a
0x00000000001a4adc : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; retf
0x00000000000ac239 : mov word ptr [rsp + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000034af3 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035a34 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000000a13e3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000000acaf8 : movabs al, byte ptr [0x14400000152870f] ; retf 0x8348
0x000000000008c115 : movabs al, byte ptr [0x1450000022e870f] ; retf
0x000000000008c241 : movabs al, byte ptr [0x14500000251870f] ; ret 0x14d
0x000000000008d28f : movabs al, byte ptr [0x2948000000d2870f] ; ret
0x00000000000bf8d5 : movabs al, byte ptr [0x3274c08548000001] ; call rax
0x0000000000186858 : movabs al, byte ptr [0x40fffac8f0fffac7] ; retf 0xfffa
0x0000000000157857 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000000679f9 : movabs al, byte ptr [0x840fc08548000000] ; retf 0x11
0x000000000005cdb4 : movabs al, byte ptr [0x840fc08548000000] ; retf 1
0x000000000002a4f4 : movabs al, byte ptr [0x89410020247c8348] ; ret 0x8b48
0x000000000008db90 : movabs al, byte ptr [0x8945f98941ffffec] ; ret 0x3845
0x000000000004c124 : movabs al, byte ptr [0x8948e1014400000a] ; ret 0x894c
0x0000000000003c8b : movabs byte ptr [0xd0bd63067c9a2d95], al ; retf 0x6e33
0x00000000001763c3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000000ccea9 : movabs byte ptr [0xe8a87d8b48fffffe], al ; ret 0xf547
0x0000000000176021 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000002da9 : movabs dword ptr [0x1ad04fca8653d0e9], eax ; retf 0x2217
0x000000000012542e : movabs dword ptr [0x2ee80c245489cf89], eax ; ret 0xffef
0x0000000000008a18 : movabs dword ptr [0x30000d0012000043], eax ; syscall
0x0000000000121bc1 : movabs dword ptr [0x8948c08548ffeffa], eax ; ret
0x00000000000026a7 : movabs dword ptr [0xf19a27a8585af87c], eax ; ret
0x00000000000d18cd : movabs dword ptr [0xf3ffffff6b820fc8], eax ; ret
0x0000000000174467 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000001565c0 : movabs eax, dword ptr [0x77f8c5e0075c7f7e] ; ret
0x0000000000156645 : movabs eax, dword ptr [0x77f8c5f007447f7a] ; ret
0x00000000001565a0 : movabs eax, dword ptr [0x77f8c5f0075c7f7a] ; ret
0x000000000000087f : movabs eax, dword ptr [0x8000010c8449000e] ; ret 0x440c
0x00000000000c7303 : movabs eax, dword ptr [0x894801788d48fff5] ; ret
0x0000000000174d1a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000014fdf5 : movabs eax, dword ptr [0xdafdc520124c7465] ; ret 0xf5c5
0x0000000000127aeb : movabs eax, dword ptr [0xe91024548b00001a] ; ret
0x00000000000ced9b : movaps xmmword ptr [r12], xmm0 ; pop rbp ; pop r12 ; ret
0x0000000000132472 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000013246e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000cfc12 : movaps xmmword ptr [rdi], xmm0 ; ret
0x000000000013251c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000ced9c : movaps xmmword ptr [rsp], xmm0 ; pop rbp ; pop r12 ; ret
0x0000000000034db0 : movd dword ptr [rsp - 8], mm0 ; ret
0x00000000000351a4 : movd mm0, dword ptr [rsp - 4] ; ret
0x00000000000351a3 : movd xmm0, dword ptr [rsp - 4] ; ret
0x0000000000035987 : movdqa xmm0, xmm3 ; pop rbx ; ret
0x0000000000162aff : movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x0000000000035757 : movdqa xmm0, xmmword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000000e6350 : movdqu xmm0, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x00000000000e63a0 : movdqu xmm0, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x000000000009c7d0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000011053b : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000009e02d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009ee8d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x000000000009d690 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009c99d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009f0f3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x000000000009d8d3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x0000000000139aef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139a7f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139a0f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013999f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009dfcd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000009ee2d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009c93d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000013992f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009dfed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009ee4d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009c95d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000001398bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e00d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009ee6d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009c97d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000139edf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139e6f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139dff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139d8f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139d1f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139caf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139c3f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139bcf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139b5f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a177d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000013904b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000001390bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009d790 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009ec94 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x000000000009de44 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000009d4b7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009c7e4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009c827 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009c817 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c898 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009c858 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009c878 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009c7f8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009c999 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009c939 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009c959 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009c979 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009c7d4 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a08c4 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000001398c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000001f7b : movlhps xmm2, xmm3 ; ret
0x00000000000993d2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000993f2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000099412 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009925c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000099206 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000993d3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000993f3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000099413 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009925d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000099207 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000035900 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000010815e : movntps xmmword ptr [rax], xmm0 ; mov eax, 0xca ; syscall
0x0000000000035988 : movq mm0, mm3 ; pop rbx ; ret
0x00000000000e6351 : movq mm0, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x00000000000e63a1 : movq mm0, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x000000000009c7d1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000011053c : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x0000000000162b00 : movq mm0, qword ptr [rsp - 0x18] ; ret
0x00000000000358d0 : movq mm0, qword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000035758 : movq mm0, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x000000000009e02e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009ee8e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x000000000009d691 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009c99e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a0abe : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009f0f4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x000000000009d8d4 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a0b34 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000139af0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139a80 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139a10 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001399a0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009dfce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000009ee2e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009c93e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a0a5e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000139930 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009dfee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000009ee4e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009c95e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a0a7e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000001398c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009e00e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000009ee6e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000009c97e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a0a9e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000139ee0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139e70 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139e00 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139d90 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139d20 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139cb0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139c40 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139bd0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000139b60 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a16d9 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a177e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000013904c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000001390bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001397f7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139777 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001396e7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139667 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001395e7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139567 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001394e7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139467 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001393e7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139367 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001392e7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139267 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001391d7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139147 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001390b7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009d791 : movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009ec95 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x000000000009de45 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000009d4b8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009c7e5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009c838 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009d50b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009c828 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009c818 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c899 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009c859 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009c879 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009c7f9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009c99a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009c93a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009c95a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009c97a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009c7d5 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a08c5 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000001398c5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034daf : movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000197a75 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fdiv st(3) ; out dx, al ; jmp rbx
0x000000000018c051 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rsp
0x0000000000187485 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call rax
0x00000000000a132a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000001a316c : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a116c : movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x0000000000175142 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000192c05 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rax]
0x0000000000178db5 : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000194e6c : movsb byte ptr [rdi], byte ptr [rsi] ; js 0x194e76 ; add byte ptr [rax + 0x32], dl ; out dx, al ; jmp rdi
0x000000000019606c : movsb byte ptr [rdi], byte ptr [rsi] ; mov al, byte ptr [rax] ; add al, dh ; jne 0x196068 ; jmp qword ptr [rdx]
0x000000000018865c : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0x745c0000 ; out dx, al ; jmp rax
0x000000000018c244 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0xf0dc0002 ; clc ; call rsp
0x00000000000a131c : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000042748 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffe
0x00000000000879e8 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xc
0x000000000018b6fc : movsb byte ptr [rdi], byte ptr [rsi] ; retf 1
0x000000000019976c : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rax], 0 ; xor bl, ah ; sti ; call qword ptr [rbx]
0x000000000018c861 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; call qword ptr [rax]
0x0000000000174025 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000000346ea : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xeeb
0x00000000000e677b : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf20
0x0000000000187489 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000017663d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001769d5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000001acc : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4d ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000176291 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000001887a1 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp rax
0x00000000001887a9 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; push rsp ; ret
0x0000000000003970 : movsd dword ptr [rdi], dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; retf
0x00000000000467c2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001053cf : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfff1
0x000000000011d177 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x0000000000174d21 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000034e19 : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000b3c88 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000034ea2 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000012bf05 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000351be : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000001631c4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000003526e : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000fd8cf : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008751a : movsx eax, dl ; ret
0x000000000008e094 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x8e091 ; ret
0x00000000000fdb4f : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xfdb48 ; ret
0x000000000008e050 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x8e051 ; ret
0x000000000003b7a6 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3b7f6
0x000000000003e196 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3e1e6
0x0000000000040b56 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x40ba6
0x0000000000048b26 : movsx esp, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x48b76
0x000000000003b7a5 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3b7f7
0x000000000003e195 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x3e1e7
0x0000000000040b55 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x40ba7
0x0000000000048b25 : movsx r12, byte ptr [rcx] ; mov rbp, rcx ; sub rdx, rcx ; jmp 0x48b77
0x00000000000fdb4e : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xfdb49 ; ret
0x0000000000160bec : movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x00000000000d69f0 : movsxd r8, dword ptr [r10 + r8*4] ; add r8, r10 ; jmp r8
0x000000000008e8f1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000001374cb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000131f4b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x00000000000e67e6 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000063770 : movsxd rax, dword ptr [r8 + rax*4] ; add rax, rdi ; jmp rax
0x000000000006485c : movsxd rax, dword ptr [r8 + rax*4] ; add rax, rdx ; xor edx, edx ; jmp rax
0x0000000000063771 : movsxd rax, dword ptr [rax + rax*4] ; add rax, rdi ; jmp rax
0x000000000006485d : movsxd rax, dword ptr [rax + rax*4] ; add rax, rdx ; xor edx, edx ; jmp rax
0x0000000000063e78 : movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x000000000007c2ae : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f67b1 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ceab8 : movsxd rax, dword ptr [rax] ; jne 0xceac5 ; pop rbx ; ret
0x00000000001750c0 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000000e67e7 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x00000000000640a2 : movsxd rax, dword ptr [rbx - 0x4bf43] ; call qword ptr [rax]
0x0000000000052134 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000616ff : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rdx ; jmp rax
0x000000000011dca7 : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000b3039 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000a139d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000005309e : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000085419 : movsxd rax, dword ptr [rdi] ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000c96b7 : movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d342d : movsxd rax, dword ptr [rdx + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d69f1 : movsxd rax, dword ptr [rdx + rax*4] ; add r8, r10 ; jmp r8
0x00000000000224ae : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000c68a4 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000c64dc : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000018d475 : movsxd rax, dword ptr [rdx] ; add ah, bl ; mov dl, 0xfd ; call rsp
0x0000000000144669 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000c96b8 : movsxd rax, dword ptr [rdx] ; add rax, rdx ; jmp rax
0x0000000000052c2b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d3381 : movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000a1868 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000a1922 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000392a1 : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014f9f0 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014fb2d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014f8d7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000014f884 : movsxd rax, ecx ; ret
0x00000000000c1f96 : movsxd rbp, dword ptr [rdi] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000014f9e1 : movsxd rbx, dword ptr [rdi] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000175eea : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000000039be : movsxd rbx, ebp ; clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x000000000014f8c9 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000009ce0a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001594bd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009c599 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000008e27d : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000011adfd : movsxd rcx, dword ptr [rax - 0x77] ; ret
0x000000000009ce0b : movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001374cc : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x0000000000131f4c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x00000000001594be : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009c59a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000008e27e : movsxd rcx, dword ptr [rcx + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000008e8f2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000001a4b0c : movsxd rcx, dword ptr [rdx] ; ret
0x00000000000a1890 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000014f917 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000000d1f66 : movsxd rcx, edx ; jmp 0xd1f79
0x00000000000d1f65 : movsxd rcx, edx ; jmp 0xd1f7a
0x0000000000033937 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000033938 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000003678 : movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x000000000002ee65 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ecf5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000086883 : movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000186405 : movsxd rdi, esp ; call rax
0x000000000013201f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001199ce : movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000bce38 : movsxd rdx, dword ptr [r8 + rdi*4] ; add rdx, r8 ; jmp rdx
0x000000000008e422 : movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000001199cf : movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000bce39 : movsxd rdx, dword ptr [rax + rdi*4] ; add rdx, r8 ; jmp rdx
0x000000000008e423 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000008e352 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000000cd74f : movsxd rdx, dword ptr [rbx + 4] ; jmp 0xcd71b
0x00000000000cd74e : movsxd rdx, dword ptr [rbx + 4] ; jmp 0xcd71c
0x00000000000d6395 : movsxd rdx, dword ptr [rbx + rdx*4] ; add rdx, rbx ; jmp rdx
0x0000000000132020 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000003366c : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000529fd : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x00000000001102d9 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000110786 : movsxd rdx, esi ; ret
0x000000000002cf70 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000002cf71 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x000000000007ef90 : movsxd rsi, dword ptr [rbx] ; add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x00000000000cd6cb : movsxd rsi, dword ptr [rcx + rsi] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000189789 : movsxd rsi, ecx ; call qword ptr [rax]
0x000000000018b811 : movsxd rsi, edi ; jmp rsp
0x000000000015dfac : movsxd rsi, esi ; ret 0x7520
0x0000000000125c99 : movsxd rsp, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160bed : movsxd rsp, dword ptr [rdx] ; add rdx, r12 ; jmp rdx
0x00000000000ec76c : movups xmm0, xmmword ptr [rax] ; add bl, dh ; ret
0x0000000000039789 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000b3c89 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000003526f : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000034ea3 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000a14ff : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000a1586 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000039911 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a1587 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000a1500 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000a14fb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000a14fa : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000120d19 : movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000000e5f91 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000120ce1 : movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x00000000000a1582 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000e5f95 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x000000000003666f : movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000036673 : movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000000e63a5 : movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x00000000000e6c8a : movups xmmword ptr [rdi + 0xf8], xmm0 ; ret
0x000000000011dcd1 : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000011053f : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000a12c2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000a1469 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000a1446 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000a12bf : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000cfaf6 : movups xmmword ptr [rdi], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034e1a : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000351bf : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000011dcea : movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000e6355 : movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x00000000001631c5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000011ea26 : movzx eax, al ; add eax, 1 ; ret
0x000000000011a687 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000124de7 : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011a21a : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b1c07 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000c63ee : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x00000000000e95a4 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051b6c : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000051b39 : movzx eax, al ; neg eax ; ret
0x000000000011a779 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000011b2ea : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000f1a25 : movzx eax, al ; pop rbx ; ret
0x000000000003673b : movzx eax, al ; ret
0x0000000000022c60 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000002eac5 : movzx eax, ax ; ret
0x000000000007b3c0 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a49c : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007663d : movzx eax, byte ptr [rax] ; mov eax, r8d ; ret
0x0000000000078bb2 : movzx eax, byte ptr [rax] ; ret
0x000000000008daaf : movzx eax, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8da3f
0x00000000000df0b0 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000008fc88 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000150e00 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000092180 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008fca3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000001503c3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x000000000007b140 : movzx eax, byte ptr [rdx] ; ret
0x000000000007b3c1 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a18f0 : movzx eax, cl ; pop rbx ; ret
0x000000000010509d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000001050ab : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000010509c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002ec7e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e63b0 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000085cf3 : movzx ebx, bl ; neg ebx ; mov eax, ebx ; pop rbx ; ret
0x0000000000112547 : movzx ecx, byte ptr [rcx - 1] ; test cl, cl ; jne 0x112535 ; ret
0x00000000000a0cda : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa0cd9 ; ret
0x00000000000a0d8a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa0d89 ; ret
0x000000000015a374 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000a13b8 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008fca0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000150e03 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000f75f2 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000012de4b : movzx edx, byte ptr [rbp + 1] ; lea rcx, [r13 + 2] ; jmp 0x12de29
0x00000000000c819b : movzx edx, byte ptr [rbp + 1] ; lea rcx, [r13 + 2] ; jmp 0xc8179
0x0000000000033eb3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33e9b ; ret
0x00000000000c6df4 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xc6de0 ; xor eax, eax ; ret
0x00000000000dc0b4 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xdc0a0 ; xor eax, eax ; ret
0x000000000008fe61 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000014fd5b : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000001501fb : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x0000000000149fff : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000150d88 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000008fcf3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000014fbda : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x000000000015dfd4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000015e034 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000015e024 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000015e014 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000015e004 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000015dff4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000015dfe4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000139810 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015a127 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000015dfbb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000139ef0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000156510 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x0000000000092183 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008e322 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008e4d4 : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008e2e9 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x000000000008e2cb : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000529f9 : movzx edx, dl ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x00000000000921a9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000139790 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000139e80 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001550e0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x000000000008e301 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x000000000008e4b3 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rdi + 4], dx ; ret
0x000000000007663c : movzx r8d, byte ptr [rax] ; mov eax, r8d ; ret
0x000000000008daae : movzx r8d, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8da40
0x00000000000e9374 : movzx rax, al ; ret
0x0000000000001daf : mul byte ptr [rax] ; mov ecx, 0x72b02084 ; retf
0x0000000000097297 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008620d : neg dword ptr [rbx + rsi] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000ee131 : neg eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121db3 : neg eax ; add rsp, 0x18 ; ret
0x00000000001220cf : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b2cfd : neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x0000000000036117 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000157cff : neg eax ; or eax, 1 ; vzeroupper ; ret
0x00000000000cd2c4 : neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e95a7 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051b6f : neg eax ; pop rbx ; ret
0x000000000002261d : neg eax ; ret
0x0000000000085cf6 : neg ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000003c5cf : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000138f47 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000021f63 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016052f : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000001597dc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000196611 : nop ; add byte ptr [rax], al ; sub al, 0x80 ; out dx, al ; call qword ptr [rdx]
0x000000000018ed90 : nop ; add dl, ch ; call qword ptr [rbx]
0x00000000000edb0d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b49c9 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000ba0dd : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000051cff : nop ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000189f9c : nop ; add qword ptr [r8], r8 ; ret 0xfff3
0x0000000000069ae2 : nop ; add rax, rsi ; mov edx, 1 ; jmp rax
0x000000000008e425 : nop ; add rdx, r8 ; jmp rdx
0x000000000008e354 : nop ; add rdx, rax ; jmp rdx
0x00000000000840af : nop ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000022d9f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011a0ff : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000018c594 : nop ; and eax, 0x497c0002 ; stc ; jmp rax
0x0000000000091f1f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000cd08f : nop ; cmp byte ptr [rsi + 0x30], 0x11 ; je 0xcd0a9 ; xor eax, eax ; ret
0x000000000019e580 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax]
0x00000000001a59c0 : nop ; hlt ; cmc ; call qword ptr [rdi]
0x00000000001a04c5 : nop ; hlt ; jmp qword ptr [rcx]
0x00000000001964c0 : nop ; insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x00000000000cee5f : nop ; lea eax, [rsi + 1] ; ret
0x0000000000084e7f : nop ; lea rax, [rdx - 0x10] ; ret
0x0000000000178e38 : nop ; leave ; int1 ; jmp rax
0x0000000000186830 : nop ; mov bh, 0xfa ; call rax
0x0000000000178dd8 : nop ; mov dh, 0xf1 ; push qword ptr [rax] ; cwde ; int1 ; jmp rax
0x0000000000133b1f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000bf83f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000133cff : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f689f : nop ; mov eax, 0x11f ; syscall
0x00000000000f692f : nop ; mov eax, 0x134 ; syscall
0x00000000000f69bf : nop ; mov eax, 0x13f ; syscall
0x00000000000f0c9f : nop ; mov eax, 0x1c ; syscall
0x00000000000b6edf : nop ; mov eax, 0x24 ; syscall
0x00000000000c4d4f : nop ; mov eax, 0x25 ; syscall
0x00000000000f714f : nop ; mov eax, 0x30 ; syscall
0x00000000000f6b4f : nop ; mov eax, 0x31 ; syscall
0x00000000000f6caf : nop ; mov eax, 0x32 ; syscall
0x00000000000f6c1f : nop ; mov eax, 0x34 ; syscall
0x00000000000e836f : nop ; mov eax, 0x50 ; syscall
0x00000000000e76af : nop ; mov eax, 0x53 ; syscall
0x00000000000e949f : nop ; mov eax, 0x57 ; syscall
0x00000000000e93df : nop ; mov eax, 0x58 ; syscall
0x00000000000f67af : nop ; mov eax, 0x63 ; syscall
0x00000000000f638f : nop ; mov eax, 0x7d ; syscall
0x00000000000f5e1f : nop ; mov eax, 0x87 ; syscall
0x00000000000e74af : nop ; mov eax, 0x89 ; syscall
0x00000000000ecf8f : nop ; mov eax, 0x8c ; syscall
0x00000000000f0d2f : nop ; mov eax, 0x95 ; syscall
0x00000000000ee19f : nop ; mov eax, 0x99 ; syscall
0x00000000000f5a5f : nop ; mov eax, 0xad ; syscall
0x00000000000f650f : nop ; mov eax, 0xb1 ; syscall
0x00000000000f66bf : nop ; mov eax, 0xb4 ; syscall
0x00000000000f395f : nop ; mov eax, 0xc2 ; syscall
0x00000000000f39bf : nop ; mov eax, 0xc3 ; syscall
0x00000000000f389f : nop ; mov eax, 0xc4 ; syscall
0x00000000000f3a4f : nop ; mov eax, 0xc5 ; syscall
0x00000000000f656f : nop ; mov eax, 0xfe ; syscall
0x000000000011024f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000002b72f : nop ; mov eax, 0xffffffff ; ret
0x000000000010c0ef : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000008751f : nop ; mov eax, 1 ; ret
0x000000000011e75f : nop ; mov eax, 2 ; ret
0x00000000000ec50f : nop ; mov eax, 3 ; syscall
0x0000000000101a9d : nop ; mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000ff64f : nop ; mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x00000000000b2bbf : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xb2c29 ; ret
0x00000000000b2c0f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xb2c29 ; ret
0x0000000000078b4f : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000010502f : nop ; mov eax, edi ; bswap eax ; ret
0x000000000010503f : nop ; mov eax, edi ; rol ax, 8 ; ret
0x000000000003697f : nop ; mov eax, edx ; ret
0x000000000011580c : nop ; mov ebp, 0xc031fff0 ; ret
0x00000000000ed07f : nop ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000001340bf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009dd0f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000001550ff : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x0000000000196458 : nop ; mov es, word ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], al ; jmp qword ptr [rbx]
0x000000000006fd2f : nop ; mov esi, 0xa ; call 0x7bf88
0x000000000006fd2e : nop ; mov esi, 0xa ; call 0x7bf89
0x00000000000732e9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000cf07f : nop ; mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x00000000000ec6ef : nop ; mov r10, rcx ; mov eax, 0x11 ; syscall
0x00000000000f698f : nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000f668f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000ec1bf : nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000f674f : nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000f677f : nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x00000000000f392f : nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000f386f : nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000ebd5f : nop ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x00000000000f3aef : nop ; mov rax, qword ptr [rax + 0x1c8] ; ret
0x0000000000077d3f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000077c2f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000038dff : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000010059f : nop ; mov rdi, r14 ; call 0xfd076
0x0000000000086adf : nop ; mov rdi, rbp ; call rax
0x0000000000101e06 : nop ; mov rdx, r13 ; call rax
0x000000000008498f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbx ; call rdx
0x00000000000f7d7f : nop ; mov rsi, r13 ; mov edi, ebx ; mov eax, r10d ; syscall
0x000000000008e44f : nop ; mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x000000000009c7cf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000358ff : nop ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x00000000000043b8 : nop ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000009617d : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000186420 : nop ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax] ; jo 0x18642a ; call rax
0x00000000000bfc1f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000115ecf : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000867ff : nop ; pop rbx ; ret
0x000000000011a1bf : nop ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000194058 : nop ; push 0 ; add byte ptr [rdi + rsi*8 - 0x13], ah ; call qword ptr [rsi]
0x0000000000186f90 : nop ; push rdi ; sti ; jmp qword ptr [rax]
0x00000000001871a8 : nop ; push rsp ; sti ; jmp qword ptr [rax]
0x000000000000b468 : nop ; ret
0x00000000000030ca : nop ; ret 0x5bdb
0x0000000000006860 : nop ; retf
0x0000000000002232 : nop ; retf 0x3844
0x00000000000036af : nop ; retf 0xe9ee
0x000000000019d130 : nop ; retf 0xfff2
0x00000000000eb90c : nop ; retf 0xffff
0x000000000018658c : nop ; std ; call qword ptr [rax]
0x0000000000186594 : nop ; std ; jmp qword ptr [rax]
0x0000000000187380 : nop ; sti ; call qword ptr [rax]
0x0000000000187430 : nop ; sub al, 0xfb ; call rax
0x000000000007d5cf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001a5a58 : nop ; test byte ptr [rcx], al ; add byte ptr [rbp + rsi*8 - 0xb], al ; call qword ptr [rdi]
0x00000000000b31df : nop ; test rsi, rsi ; jne 0xb31f2 ; xor rax, rax ; ret
0x00000000001a2ff0 : nop ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000186a98 : nop ; xor bl, bh ; jmp qword ptr [rax]
0x0000000000190758 : nop ; xor dword ptr [rax], eax ; add byte ptr [rax + rdx*4 - 0x16], al ; jmp qword ptr [rax]
0x000000000007edb6 : nop ; xor eax, dword ptr [rax] ; ret
0x00000000000e61df : nop ; xor eax, eax ; pop rbx ; ret
0x000000000003685f : nop ; xor eax, eax ; ret
0x000000000008e00f : nop ; xor edx, edx ; mov qword ptr [rdi], rdx ; pop rbx ; ret
0x0000000000086b74 : nop dword ptr [r8] ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x0000000000163343 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000163a58 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000012cb6b : nop dword ptr [rax + rax] ; call r14
0x0000000000083ddb : nop dword ptr [rax + rax] ; jmp rax
0x0000000000112603 : nop dword ptr [rax + rax] ; mov byte ptr [r10], 0 ; ret
0x0000000000074ccb : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000010fe13 : nop dword ptr [rax + rax] ; mov eax, ecx ; ret
0x00000000000707ab : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000fba8b : nop dword ptr [rax + rax] ; mov eax, r8d ; ret
0x000000000009c70b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001025d3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000009d97b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000122e33 : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074c18 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000125fab : nop dword ptr [rax + rax] ; push rbx ; call 0x122ab8
0x0000000000035bf3 : nop dword ptr [rax + rax] ; ret
0x00000000000ee663 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000038373 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ec6bb : nop dword ptr [rax + rax] ; xor eax, eax ; syscall
0x00000000000b2c2b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000000363f : nop dword ptr [rax - 0x80] ; fcmove st(0), st(5) ; retf
0x00000000000b363c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000087ab5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000078b3d : nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000008098d : nop dword ptr [rax] ; call rax
0x00000000001565ec : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000008e3a4 : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000f5d6c : nop dword ptr [rax] ; mov eax, 0x122 ; syscall
0x00000000000ede9d : nop dword ptr [rax] ; mov eax, 0x132 ; syscall
0x00000000000e7b3c : nop dword ptr [rax] ; mov eax, 0x15 ; syscall
0x00000000000e81ed : nop dword ptr [rax] ; mov eax, 0x20 ; syscall
0x00000000000c4b2c : nop dword ptr [rax] ; mov eax, 0x3f ; syscall
0x00000000000f795c : nop dword ptr [rax] ; mov eax, 0x43 ; syscall
0x0000000000051b7d : nop dword ptr [rax] ; mov eax, 0x52 ; syscall
0x00000000000eccbc : nop dword ptr [rax] ; mov eax, 0x62 ; syscall
0x00000000000f5c0c : nop dword ptr [rax] ; mov eax, 0x7a ; syscall
0x00000000000e6f0c : nop dword ptr [rax] ; mov eax, 0x84 ; syscall
0x00000000000ecfcc : nop dword ptr [rax] ; mov eax, 0x8d ; syscall
0x00000000000f62ec : nop dword ptr [rax] ; mov eax, 0x9e ; syscall
0x00000000000edded : nop dword ptr [rax] ; mov eax, 0xa2 ; syscall
0x00000000000c624c : nop dword ptr [rax] ; mov eax, 0xfc17 ; ret
0x0000000000036974 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000cd30d : nop dword ptr [rax] ; mov eax, 1 ; ret
0x00000000000ec71c : nop dword ptr [rax] ; mov eax, 1 ; syscall
0x00000000000c06dc : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000003691d : nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x37e886] ; ret
0x000000000002eccd : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000009d3dd : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000e205c : nop dword ptr [rax] ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000000ba919 : nop dword ptr [rax] ; mov r10d, eax ; jmp 0xba8f2
0x00000000000bcd51 : nop dword ptr [rax] ; mov r10d, ecx ; jmp 0xbcd31
0x00000000000c068d : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000004510c : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000c6e3c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000086b75 : nop dword ptr [rax] ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000d205d : nop dword ptr [rax] ; mov rdi, rbx ; call 0xce2a8
0x00000000000ea529 : nop dword ptr [rax] ; mov rdx, rax ; jmp 0xea4f9
0x000000000006e0fd : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x00000000000ae1bc : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000021c2d : nop dword ptr [rax] ; ret
0x000000000007aa8d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x7aa5d
0x000000000012a985 : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039565 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000158f8d : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000021e0d : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x000000000009d397 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000074cca : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000fba8a : nop word ptr [rax + rax] ; mov eax, r8d ; ret
0x000000000009d97a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000001187da : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000007b96a : nop word ptr [rax + rax] ; ret
0x0000000000038372 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ec6ba : nop word ptr [rax + rax] ; xor eax, eax ; syscall
0x00000000000b2c2a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000125ed1 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000349ad : not eax ; and eax, ecx ; ret
0x0000000000034ce0 : not eax ; and eax, edx ; ret
0x000000000012d0d3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000fbcad : not eax ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000007f01b : not edx ; mov byte ptr [rcx], dl ; je 0x7f06b ; mov qword ptr [rsi], rcx ; ret
0x000000000012d0d2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000014af77 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014eb89 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014afa5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000d7c8 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43
0x000000000000c0b2 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000006322 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000004b82 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000043ba : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000858f4 : or al, 0 ; add byte ptr [rax], al ; jmp 0x858ca
0x00000000000ed0da : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ed081 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000822fc : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000cd6f2 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000e5f6d : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000854c9 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000119a32 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000084771 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000082c04 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rdx ; pop rbx ; pop rbp ; ret
0x0000000000086c2a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003ad38 : or al, 0 ; add byte ptr [rbp + 0x39], dh ; xor eax, eax ; ret
0x00000000001311a8 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x0000000000088648 : or al, 0 ; cmovne rax, rdx ; ret
0x0000000000088584 : or al, 0 ; je 0x88546 ; ret
0x00000000001586f7 : or al, 0x16 ; jne 0x1586cc ; vzeroupper ; ret
0x000000000008fc86 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000018a1f0 : or al, 0x1c ; hlt ; call rax
0x000000000018f6d4 : or al, 0x21 ; add byte ptr [rax], al ; or byte ptr [rdx - 0x16], bl ; jmp qword ptr [rbx]
0x000000000018989c : or al, 0x24 ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; test al, 0xf1 ; jmp qword ptr [rax]
0x000000000012cb3e : or al, 0x24 ; call rax
0x0000000000119600 : or al, 0x24 ; call rcx
0x000000000018995c : or al, 0x27 ; add dword ptr [rax], eax ; pushfq ; scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x00000000000f593a : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x00000000000d18a3 : or al, 0x31 ; sar byte ptr [rax], 0xe ; je 0xd1848 ; ret
0x000000000018c500 : or al, 0x35 ; stc ; jmp rax
0x000000000018b728 : or al, 0x37 ; idiv edi ; hlt ; retf
0x00000000001a3284 : or al, 0x38 ; cmc ; call qword ptr [rsi]
0x00000000000f62cb : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x0000000000189e94 : or al, 0x47 ; add dword ptr [rax], eax ; cmp al, 0x91 ; jmp qword ptr [rax]
0x00000000000ebc50 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000361cc : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000cf4b5 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000392a4 : or al, 0x48 ; add esp, 0x18 ; ret
0x0000000000124e1b : or al, 0x48 ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000002395a : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078815 : or al, 0x48 ; add esp, 0x38 ; ret
0x00000000000e795e : or al, 0x48 ; add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e77ff : or al, 0x48 ; add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000b2ce3 : or al, 0x48 ; cmp eax, edx ; jne 0xb2cd8 ; xor eax, eax ; ret
0x000000000010f8cc : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000018cf20 : or al, 0x49 ; cli ; call rax
0x000000000018be18 : or al, 0x4b ; clc ; jmp qword ptr [rax]
0x000000000012cb3b : or al, 0x4c ; add ecx, dword ptr [rsp] ; call rax
0x000000000010fe0b : or al, 0x4c ; cmp edx, eax ; jne 0x10fdf8 ; ret
0x0000000000199064 : or al, 0x5b ; cli ; call qword ptr [rax]
0x0000000000087613 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000001ed9 : or al, 0x5c ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000b3a89 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000007e769 : or al, 0x5d ; pop r12 ; ret
0x000000000018dbb4 : or al, 0x61 ; jmp 0x19a6be
0x000000000008e305 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x00000000000353e3 : or al, 0x75 ; or dh, bl ; addps xmm0, xmm0 ; ret
0x0000000000125447 : or al, 0x75 ; retf
0x0000000000111783 : or al, 0x75 ; retf 0x3944
0x0000000000104440 : or al, 0x75 ; wait ; mov rax, rdi ; ret
0x00000000000bfbd5 : or al, 0x7c ; ret 0x850f
0x0000000000196574 : or al, 0x7f ; out dx, al ; jmp qword ptr [rbx]
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000187bac : or al, 0x82 ; add byte ptr [rax], al ; fucomip st(2) ; jmp qword ptr [rax]
0x000000000002bc03 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x2bc17 ; ret
0x000000000009ce0c : or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000006152a : or al, 0x83 ; ret
0x00000000000a1bb3 : or al, 0x83 ; ret 0x8301
0x00000000001959d4 : or al, 0x84 ; add byte ptr [rax], al ; mov byte ptr [rdi - 0x12], bl ; call qword ptr [rdx]
0x0000000000187c24 : or al, 0x84 ; add byte ptr [rax], al ; pop rsp ; out 0xea, al ; jmp qword ptr [rax]
0x000000000018c778 : or al, 0x84 ; stc ; call rax
0x00000000000a1891 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000008e27f : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x00000000000edf39 : or al, 0x89 ; ret
0x00000000000a191b : or al, 0x89 ; ret 0xe283
0x00000000000c5f0a : or al, 0x89 ; retf 0x8948
0x000000000008e8f3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000000946c4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001374cd : or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000bf9f6 : or al, 0x8b ; cmp al, 0x24 ; mov eax, 0xe6 ; syscall
0x0000000000131f4d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000019afa4 : or al, 0x8c ; int1 ; call qword ptr [rcx]
0x00000000000f96a8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000001a04c4 : or al, 0x90 ; hlt ; jmp qword ptr [rcx]
0x000000000007ee90 : or al, 0x90 ; xor eax, dword ptr [rax] ; ret
0x000000000017ab94 : or al, 0x92 ; cmc ; inc dword ptr [rdx - 0x54] ; cmc ; call qword ptr [rdi]
0x00000000001594bf : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000009c59b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001a6ad4 : or al, 0x95 ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bl ; jmp qword ptr [rsi]
0x00000000001990b4 : or al, 0x96 ; sti ; call qword ptr [rax]
0x000000000019b2e4 : or al, 0x99 ; int1 ; jmp rbx
0x00000000001a6fd4 : or al, 0x9a ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bh ; jmp rcx
0x0000000000188438 : or al, 0xa0 ; in al, dx ; jmp rax
0x0000000000189850 : or al, 0xa1 ; int1 ; call qword ptr [rax]
0x0000000000192c04 : or al, 0xa4 ; in eax, dx ; jmp qword ptr [rax]
0x0000000000002cc2 : or al, 0xaf ; xbegin 0xfffffffff8c6f0c6 ; ret
0x000000000018bcd8 : or al, 0xb ; clc ; jmp rsp
0x0000000000131f51 : or al, 0xb ; jmp r9
0x000000000009c59f : or al, 0xb ; jmp rcx
0x0000000000120cce : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000188898 : or al, 0xba ; out dx, al ; jmp rax
0x0000000000051ae0 : or al, 0xbe ; add al, 0 ; add byte ptr [rax], al ; call 0x6e508
0x0000000000188120 : or al, 0xc2 ; jmp 0x188124
0x0000000000189a48 : or al, 0xd0 ; int1 ; jmp qword ptr [rax]
0x000000000016347e : or al, 0xd8 ; test rcx, rcx ; je 0x16348e ; call rcx
0x0000000000199734 : or al, 0xe3 ; sti ; call qword ptr [rdx]
0x00000000000dba9f : or al, 0xe8 ; ret
0x0000000000125434 : or al, 0xe8 ; ret 0xffef
0x00000000000f73cf : or al, 0xe8 ; retf
0x000000000018cc90 : or al, 0xe9 ; stc ; jmp rsp
0x00000000000730ec : or al, 0xeb ; ret 0x5590
0x00000000001730d5 : or al, 0xec ; call rsi
0x0000000000172fe1 : or al, 0xec ; jmp rsp
0x0000000000119b30 : or al, 0xf ; retf 0xd189
0x00000000000313ca : or al, 0xf ; retf 0xd289
0x00000000000b2b15 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009d093 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000002c5b3 : or al, 0xf0 ; test rcx, rcx ; je 0x2c5c3 ; call rcx
0x0000000000139a13 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000036143 : or al, 0xf3 ; ret
0x00000000000d092e : or al, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x000000000004e844 : or al, 0xf6 ; ret 0xf01
0x000000000006707c : or al, 0xf6 ; ret 0xf08
0x00000000000505fe : or al, 0xf6 ; ret 0xf40
0x00000000000eff83 : or al, 0xf7 ; ret 0xfc07
0x00000000001891ac : or al, 0xfa ; add byte ptr [rax], al ; ret 0xffef
0x00000000000e6c12 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f3af2 : or al, 1 ; add byte ptr [rax], al ; ret
0x00000000000e764e : or al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000e6cac : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000000971 : or al, 1 ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x000000000018c22d : or al, 2 ; add byte ptr [rbp + rbp*8 - 8], bl ; call qword ptr [rax]
0x000000000009d2d0 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000008e096 : or al, 7 ; test cl, cl ; jne 0x8e08f ; ret
0x000000000015f37e : or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000014a14d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cd61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a171 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000011170 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c
0x000000000006fd31 : or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x7bf86
0x00000000000f42bc : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000119a12 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f0bd1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000048902 : or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0x2975
0x000000000004092a : or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0x3175
0x0000000000090d28 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008876c : or al, byte ptr [rax] ; and ecx, 8 ; cmovne rax, rdx ; ret
0x00000000000873ae : or al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000cb184 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d4839 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000a21aa : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000003684a : or al, byte ptr [rbp - 0xc0e8b37] ; ret
0x000000000010ee31 : or al, byte ptr [rbx - 0x7bf00007] ; ret
0x00000000000d0077 : or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x00000000000e9411 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001894ad : or al, byte ptr [rcx] ; add byte ptr [rcx + rdx - 0x10], bl ; call qword ptr [rax]
0x0000000000189495 : or al, byte ptr [rcx] ; add byte ptr [rdi + rcx - 0x10], bh ; call rsp
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000018c1ed : or al, byte ptr [rdx] ; add ah, bl ; fdiv st(0), st(0) ; call rsp
0x0000000000153617 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ceb78 : or al, ch ; cli ; sub dh, ch ; dec dword ptr [rax - 0x7d] ; ret
0x000000000002e9af : or al, ch ; ret
0x00000000001139b0 : or al, ch ; ret 0xf0dc
0x0000000000113588 : or al, ch ; ret 0xf738
0x00000000000875b8 : or al, ch ; ret 0xf99d
0x00000000000fa50f : or al, ch ; retf
0x000000000011a8a8 : or al, ch ; retf 0xf06d
0x00000000000f6e10 : or al, ch ; retf 0xf877
0x000000000008e838 : or al, ch ; sub edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e48b3 : or al, ch ; xlatb ; retf
0x00000000000a2a4a : or al, dl ; or eax, 0x3d8d4800 ; ret
0x000000000007e64d : or bh, bh ; and bl, dh ; ret
0x0000000000125707 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007803d : or bh, byte ptr [rax - 1] ; ret
0x00000000000ae07f : or bh, byte ptr [rcx] ; ret
0x00000000000ab654 : or bh, byte ptr [rip + 0xff] ; je 0xab667 ; ret
0x00000000000d8045 : or bh, dh ; ret
0x00000000001174fe : or bl, al ; mov eax, 1 ; ret
0x00000000000de12c : or bl, al ; nop ; ret
0x00000000000c1f6a : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000110623 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000012b330 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000063238 : or bl, bpl ; ret 0x8d48
0x00000000000331bd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008a005 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000dde98 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x0000000000063239 : or bl, ch ; ret 0x8d48
0x0000000000045dcf : or bl, ch ; ror dword ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000139bd3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a26df : or bl, dh ; ret
0x00000000000ccff5 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000ccfc9 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000c9332 : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000007ec61 : or byte ptr [r11 + 0x68901e0], r8b ; xor eax, eax ; ret
0x00000000000f1ee8 : or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x00000000000340d8 : or byte ptr [r11 + r9*4 + 0x47], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f1e26 : or byte ptr [r11 + r9*4 + 0x57], r9b ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000009936f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ccfba : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000cd086 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000126f9d : or byte ptr [r15], 0x84 ; retf
0x000000000004aca5 : or byte ptr [r8 + 0x21], r9b ; retf 0xc689
0x0000000000074520 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000cd74c : or byte ptr [r8 + 0x63], cl ; push rbx ; add al, 0xeb ; ret
0x00000000000d17f2 : or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x00000000000cf565 : or byte ptr [r8 + 0x63], r9b ; retf 0x6348
0x0000000000047c4f : or byte ptr [r8 + 2], r15b ; ret
0x00000000000cd071 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000074743 : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000d225c : or byte ptr [r8 - 0x75], r9b ; jl 0xd2283 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000009934e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000142758 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000039682 : or byte ptr [r8 - 0x77], cl ; retf
0x00000000001230ca : or byte ptr [r8 - 0x77], r9b ; out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000007f536 : or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x00000000000cfbb0 : or byte ptr [r8 - 0x77], r9b ; ret 0xdb31
0x00000000001537f2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000d119 : or byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000d6d7c : or byte ptr [r9 + 0x63], cl ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000011a724 : or byte ptr [r9 + r9*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012c3aa : or byte ptr [r9 - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ret 0x3948
0x00000000000993ae : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000068fcf : or byte ptr [r9 - 0x77], r9b ; or cl, bpl ; ret 0xffdf
0x0000000000048224 : or byte ptr [r9 - 0x7d], r9b ; ret 0x4c01
0x0000000000128288 : or byte ptr [r9], dil ; ret 0x4275
0x00000000000cd031 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000cd00e : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000007ec81 : or byte ptr [r9], r8b ; xor eax, eax ; ret
0x0000000000118273 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000086ed3 : or byte ptr [rax + 0x19], cl ; fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x0000000000034e31 : or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x000000000004aca6 : or byte ptr [rax + 0x21], cl ; retf 0xc689
0x000000000003c8cd : or byte ptr [rax + 0x29], cl ; ret
0x00000000000d74b7 : or byte ptr [rax + 0x29], cl ; ret 0x6349
0x00000000000fd56f : or byte ptr [rax + 0x29], cl ; retf 0xb8e8
0x0000000000079665 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000001056f6 : or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x00000000000f5b69 : or byte ptr [rax + 0x38], bh ; syscall
0x0000000000042baa : or byte ptr [rax + 0x39], cl ; ret
0x0000000000085601 : or byte ptr [rax + 0x39], cl ; ret 0x5974
0x00000000000daef3 : or byte ptr [rax + 0x39], cl ; ret 0xea75
0x00000000000d542c : or byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000000469d2 : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x000000000012d399 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x0000000000089786 : or byte ptr [rax + 0x39], cl ; ret 0xf475
0x000000000007337e : or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000072d26 : or byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000dafe9 : or byte ptr [rax + 0x39], cl ; retf 0xd975
0x00000000000fb086 : or byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x000000000007d979 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000e7eaf : or byte ptr [rax + 0x48], bh ; syscall
0x00000000000cd74d : or byte ptr [rax + 0x63], cl ; push rbx ; add al, 0xeb ; ret
0x000000000011efc2 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000bbea2 : or byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000d17f3 : or byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000000cf566 : or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000f42ba : or byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; ret
0x000000000019594e : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000e5f6b : or byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; ret
0x00000000000c09ed : or byte ptr [rax + 0xca], bh ; syscall
0x00000000000ca98b : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000010509b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000088600 : or byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000b6006 : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000080506 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000006485f : or byte ptr [rax + 1], 0xd0 ; xor edx, edx ; jmp rax
0x0000000000063773 : or byte ptr [rax + 1], 0xf8 ; jmp rax
0x000000000011dce4 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000000000024223 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000f4117 : or byte ptr [rax + 2], bh ; pop rbx ; pop rbp ; ret
0x0000000000047c50 : or byte ptr [rax + 2], bh ; ret
0x000000000010122b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000c2d9d : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000cd072 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000035747 : or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000074744 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000001105d0 : or byte ptr [rax - 0x3fcefcb2], cl ; ret
0x00000000001448e7 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x0000000000073c26 : or byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], r9b ; retf 0x820f
0x000000000007f193 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000f8ca1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000f8d02 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000163aaf : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ff024 : or byte ptr [rax - 0x75], cl ; je 0xff055 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000d225d : or byte ptr [rax - 0x75], cl ; jl 0xd2282 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000006e0e4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00000000001199ed : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001195fd : or byte ptr [rax - 0x75], cl ; or al, 0x24 ; call rcx
0x000000000007f533 : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8348
0x000000000010c55f : or byte ptr [rax - 0x75], cl ; xor al, 0x24 ; mov rdi, r13 ; call r12
0x000000000009934f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000101fea : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000efc17 : or byte ptr [rax - 0x77], cl ; adc eax, 0x2c8b71 ; ret
0x0000000000099260 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000104f68 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000032b33 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000871ab : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 1] ; ret 0x772
0x00000000000828f1 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x0000000000072db1 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000142759 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001230cb : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000010c955 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x0000000000110a98 : or byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000011982b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000cf1c9 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000074612 : or byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000011b7fc : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x000000000012550f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000e15c0 : or byte ptr [rax - 0x77], cl ; ret 0x830f
0x0000000000041d04 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000cfbb1 : or byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000495a9 : or byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000039683 : or byte ptr [rax - 0x77], cl ; retf
0x000000000011ba89 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x8948
0x0000000000086bf7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000009f1c9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000082f38 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000368af : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x368a9 ; xor eax, eax ; ret
0x00000000000368ff : or byte ptr [rax - 0x7d], cl ; clc ; clc ; jne 0x368f9 ; xor eax, eax ; ret
0x0000000000037285 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000082677 : or byte ptr [rax - 0x7d], cl ; ret 0x4110
0x000000000003b38d : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012609d : or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000f1e8e : or byte ptr [rax - 0xa], al ; mov byte ptr [rcx], 0x75 ; or esi, ebx ; ret
0x000000000019fde8 : or byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x0000000000070b5b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007fdb1 : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000014a3ac : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000034115 : or byte ptr [rax], 0x48 ; add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x0000000000086e0e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000063226 : or byte ptr [rax], al ; add al, ch ; ret 0xfcb7
0x00000000001617d4 : or byte ptr [rax], al ; add byte ptr [rax + 9], cl ; fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000002b43b : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007fdb2 : or byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000014a3ad : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf01 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a3d1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000007c8c7 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000083916 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000198a8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000000a180 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001da00 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000006b62 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000052ea : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000083ad1 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001610ec : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x000000000011f228 : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x11b506
0x00000000000f5c81 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x0000000000036131 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003617d : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x0000000000036055 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000035f02 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000a1965 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000022cb1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001927c : or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5f
0x00000000001ae1f8 : or byte ptr [rax], al ; add byte ptr [rax], al ; retf 6
0x00000000000e7b11 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000090ea8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000b4824 : or byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000004b108 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000f75f0 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000f376d : or byte ptr [rax], al ; pop rbx ; ret
0x0000000000121e10 : or byte ptr [rax], al ; setne al ; add rsp, 0x78 ; ret
0x00000000000faedf : or byte ptr [rax], al ; xor edx, edx ; call 0x117996
0x0000000000194dd0 : or byte ptr [rax], bh ; add byte ptr [rdi + rbp - 0x12], bh ; jmp qword ptr [rbx]
0x000000000019fdd0 : or byte ptr [rax], ch ; add dword ptr [rax], eax ; in al, dx ; ja 0x19fdd2 ; jmp qword ptr [rcx]
0x00000000000a080d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a084b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a07eb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000005140f : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000151dee : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cd2e5 : or byte ptr [rbp + 0x39], al ; ret 0x457f
0x0000000000046540 : or byte ptr [rbp + 0x39], cl ; ret
0x00000000000cfd23 : or byte ptr [rbp + 0x39], cl ; retf 0x3f74
0x00000000000d000e : or byte ptr [rbp + 0x39], cl ; retf 0xdc75
0x000000000011036f : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x000000000007270a : or byte ptr [rbp + 0x708949c9], al ; xor byte ptr [rdi], cl ; ret 0x4389
0x00000000001a4b18 : or byte ptr [rbp + 0xb], cl ; ret
0x00000000001a32d0 : or byte ptr [rbp + 1], bl ; add byte ptr [rax + rdi - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000035087 : or byte ptr [rbp + 6], dh ; addsd xmm0, xmm0 ; ret
0x000000000011d006 : or byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x29cc
0x0000000000046355 : or byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000075801 : or byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000116344 : or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x00000000000b1c36 : or byte ptr [rbp - 0x35], dh ; ret
0x00000000001053c8 : or byte ptr [rbp - 0x6b], dh ; mov rdi, r13 ; call 0x21680
0x00000000000cfd10 : or byte ptr [rbp - 0x76be00be], cl ; retf
0x000000000005b3f5 : or byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000e895c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x00000000000e8473 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x000000000005183d : or byte ptr [rbx + 0x24182444], cl ; cmp al, 0xc ; ret 0x4489
0x00000000000d3b4b : or byte ptr [rbx + 0x468901c0], al ; cmp byte ptr [rax + 0x63], cl ; ret
0x0000000000003eb7 : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000011a91b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000124b8e : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000000245db : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000086bcf : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000022da3 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fe3e6 : or byte ptr [rbx + 0x5e0b185f], cl ; sbb dh, dh ; ret
0x000000000007ec62 : or byte ptr [rbx + 0x68901e0], al ; xor eax, eax ; ret
0x0000000000122bae : or byte ptr [rbx + 0x74fff878], al ; jae 0x122b41 ; ret 0x3901
0x00000000000f25be : or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x00000000000f1ee9 : or byte ptr [rbx + 0x94901e0], al ; ret 0x894d
0x00000000000f1f6b : or byte ptr [rbx + 0x94901e1], al ; retf 0x894c
0x00000000000340d9 : or byte ptr [rbx + rcx*4 + 0x47], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000cf562 : or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000cfbad : or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000f1e27 : or byte ptr [rbx + rcx*4 + 0x57], cl ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000004b407 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x0000000000072dc6 : or byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012773e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000cee90 : or byte ptr [rbx - 0x76bbfb83], cl ; retf 0x894c
0x000000000006d5de : or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x000000000019f8f8 : or byte ptr [rbx - 0xc], ch ; call qword ptr [rax]
0x000000000007e624 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000060984 : or byte ptr [rbx], cl ; cld ; dec dword ptr [rax + 0x29] ; ret
0x000000000004797b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000011b91a : or byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x00000000000d745a : or byte ptr [rcx + 0x39], cl ; ret
0x00000000001208bc : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000113751 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000d6d7d : or byte ptr [rcx + 0x63], cl ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x00000000001999ac : or byte ptr [rcx + 0xb], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, ch ; ret
0x000000000004625b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000f2534 : or byte ptr [rcx + 9], cl ; rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000046df0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000000c30c9 : or byte ptr [rcx + rcx*4 + 0x3c], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000001135cc : or byte ptr [rcx + rcx*4 + 0x50], al ; add al, 0xe9 ; retf 0xfffc
0x00000000000375f1 : or byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x000000000011a725 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006da94 : or byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000006e8cb : or byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; ret
0x000000000008170d : or byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x0000000000037062 : or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x000000000008e1e6 : or byte ptr [rcx + rcx*8 - 0x3fce128b], al ; ret
0x0000000000046262 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000f7bc3 : or byte ptr [rcx - 0x6bf73], cl ; dec dword ptr [rax + 0x63] ; retf 0x8b41
0x000000000012c3ab : or byte ptr [rcx - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ret 0x3948
0x00000000000993af : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000011a713 : or byte ptr [rcx - 0x77], cl ; in al, 0x49 ; lea esi, [rsp + 8] ; call qword ptr [rax]
0x0000000000063235 : or byte ptr [rcx - 0x77], cl ; or bl, bpl ; ret 0x8d48
0x0000000000068fd0 : or byte ptr [rcx - 0x77], cl ; or cl, bpl ; ret 0xffdf
0x000000000003c6b2 : or byte ptr [rcx - 0x77], cl ; ret
0x00000000000a7db0 : or byte ptr [rcx - 0x77], cl ; ret 0x6349
0x00000000000a55e6 : or byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000003382f : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000063234 : or byte ptr [rcx - 0x77], r9b ; or bl, bpl ; ret 0x8d48
0x00000000000f8d78 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf8d8a ; ret
0x00000000000f8e08 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf8e1a ; ret
0x00000000000f8ea8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf8eba ; ret
0x00000000000f8f38 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf8f4a ; ret
0x00000000000f8fc8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf8fda ; ret
0x00000000000f9058 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf906a ; ret
0x00000000000f90f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf910a ; ret
0x00000000000f9198 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf91aa ; ret
0x00000000000f9238 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf924a ; ret
0x00000000000f92c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf92da ; ret
0x00000000000f9363 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf9375 ; ret
0x00000000000f93f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf940a ; ret
0x00000000000f970a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf971c ; ret
0x00000000000f978a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf979c ; ret
0x00000000000f980a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf981c ; ret
0x00000000000f988a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf989c ; ret
0x00000000000f990a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf991c ; ret
0x00000000000f998a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf999c ; ret
0x00000000000f9a0a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf9a1c ; ret
0x00000000000f9a8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf9a9c ; ret
0x00000000000f9b0a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf9b1c ; ret
0x00000000000f9b8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf9b9c ; ret
0x00000000000f9c07 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf9c19 ; ret
0x00000000000f9c8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf9c9c ; ret
0x000000000003bf1f : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a234d : or byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x000000000008b5a1 : or byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x000000000008cf1e : or byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d0997 : or byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000048225 : or byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000008d0d1 : or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x00000000001ab148 : or byte ptr [rcx - 9], bh ; jmp qword ptr [rbx]
0x00000000000e11ab : or byte ptr [rcx], 0 ; add byte ptr [rcx - 0x75], al ; push rbp ; add al, 0xf7 ; ret 0xfffd
0x0000000000011290 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e6c22 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003629e : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000051bb4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e6cc4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cd05c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000cd00f : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x000000000007ec82 : or byte ptr [rcx], al ; xor eax, eax ; ret
0x00000000000b1c33 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x00000000000d4264 : or byte ptr [rcx], bh ; ret
0x0000000000128289 : or byte ptr [rcx], bh ; ret 0x4275
0x00000000000df2c9 : or byte ptr [rcx], bh ; retf 0x850f
0x00000000000cd032 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x0000000000086603 : or byte ptr [rcx], bl ; xor eax, dword ptr [rax] ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000000cf66b : or byte ptr [rcx], ch ; ret
0x00000000000d997f : or byte ptr [rcx], ch ; retf 0x3941
0x00000000000ce78b : or byte ptr [rcx], cl ; retf 0xd189
0x0000000000023d32 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000db51b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007d613 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000045198 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000176c5e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000d69ef : or byte ptr [rdi + 0x63], cl ; add al, 0x82 ; add r8, r10 ; jmp r8
0x00000000001964d0 : or byte ptr [rdi + 0x7e5c0000], cl ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196548 : or byte ptr [rdi + 0x7ed40000], 0xee ; jmp qword ptr [rbx]
0x0000000000193d9d : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x00000000000e10aa : or byte ptr [rdi + rcx - 0x49], al ; ret 0x2be9
0x000000000007663b : or byte ptr [rdi + rcx - 0x4a], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000053aa4 : or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000197cd0 : or byte ptr [rdi - 0x9140000], ah ; out dx, al ; call qword ptr [rax]
0x0000000000126f9e : or byte ptr [rdi], 0x84 ; retf
0x0000000000194d38 : or byte ptr [rdi], ch ; out dx, al ; jmp qword ptr [rdi]
0x000000000002eac4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000078bb1 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000003ba0f : or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011ea25 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x00000000000f5db8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000011b2e9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000430b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000045c5b : or byte ptr [rdi], cl ; ret 0x8d4c
0x00000000000313c0 : or byte ptr [rdi], cl ; retf 0x8941
0x0000000000119b20 : or byte ptr [rdi], cl ; retf 0xd189
0x000000000013251b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000da7ea : or byte ptr [rdi], cl ; test dword ptr [rax], edi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000000d5e9c : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000000000d621e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x0000000000021e00 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000008ba96 : or byte ptr [rdi], dh ; ret
0x000000000008ba95 : or byte ptr [rdi], sil ; ret
0x00000000001998b0 : or byte ptr [rdx + 0xb], cl ; add byte ptr [rax + rax], cl ; add al, dh ; ret 0
0x000000000018f38a : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x000000000008716a : or byte ptr [rdx + 0xb], dh ; mov qword ptr [rdi], rsi ; mov rax, r8 ; ret
0x000000000018f6d8 : or byte ptr [rdx - 0x16], bl ; jmp qword ptr [rbx]
0x00000000001a6fd8 : or byte ptr [rdx - 0xa], bh ; jmp rcx
0x00000000001a6ad8 : or byte ptr [rdx - 0xa], bl ; jmp qword ptr [rsi]
0x00000000000ccfca : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000ccff6 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000ec752 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000ec751 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000cd0a5 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009bf61 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000099370 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000019b2c3 : or byte ptr [rsi], 8 ; ret
0x0000000000000973 : or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000001788ac : or byte ptr [rsi], bh ; out dx, eax ; dec dword ptr [rax] ; out dx, eax ; jmp qword ptr [rax]
0x00000000001788b0 : or byte ptr [rsi], bh ; out dx, eax ; jmp qword ptr [rax]
0x00000000000cd087 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000ccfbb : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00000000000ae024 : or byte ptr [rsp + rax + 0x75db8500], dh ; fsubr qword ptr [rcx] ; ret
0x0000000000003eb6 : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001348ff : or ch, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000194319 : or ch, dh ; jmp rcx
0x0000000000002f54 : or cl, bh ; ret
0x0000000000034b7b : or cl, bl ; std ; fstp st(1) ; ret
0x0000000000068fd3 : or cl, bpl ; ret 0xffdf
0x0000000000087d04 : or cl, byte ptr [rax + 0x39] ; ret
0x000000000002b5be : or cl, byte ptr [rax + 0x39] ; ret 0xc76
0x00000000000dbd7a : or cl, byte ptr [rax - 0x77] ; ret 0x6de8
0x000000000014915c : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000006fcbd : or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000253cf : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000005218c : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000cf1c5 : or cl, byte ptr [rbp + rcx*4 + 0x75] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000001050d5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x00000000000de212 : or cl, byte ptr [rcx + 0x5b0374d0] ; pop rbp ; ret
0x00000000000ba7a5 : or cl, byte ptr [rcx - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0xf601
0x0000000000105055 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000144686 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000000e11be : or cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xd320
0x0000000000127741 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000193d9b : or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x0000000000068fd4 : or cl, ch ; ret 0xffdf
0x0000000000033adb : or cl, ch ; ret 0xfffc
0x0000000000089944 : or cl, ch ; retf 0xfffe
0x0000000000002cdf : or cl, cl ; clc ; ret
0x00000000000a11c5 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000176642 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000007ec7b : or dh, bh ; xor eax, eax ; ret
0x00000000000353e5 : or dh, bl ; addps xmm0, xmm0 ; ret
0x0000000000139af3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f3085 : or dh, bl ; ret
0x000000000017646a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000085129 : or dh, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000d1741 : or dh, byte ptr [rsp + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a5e61 : or dh, dh ; call rdx
0x000000000008238c : or dh, dh ; ret
0x00000000000f2408 : or dh, dh ; ret 0x7401
0x000000000007f336 : or dh, dh ; ret 0x7502
0x0000000000119f34 : or dh, dh ; ret 0x8802
0x0000000000196ec8 : or dl, al ; out dx, al ; jmp qword ptr [rsi]
0x00000000000e6cd6 : or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000d3a5b : or dword ptr [rax + 0x39], ecx ; ret 0x8d45
0x0000000000002503 : or dword ptr [rax + 0x41001835], 0xffffffdd ; out 0xa9, al ; ret 0xbd07
0x000000000002da13 : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x0000000000130a77 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000eca82 : or dword ptr [rax + rax], edx ; mov eax, 0x10 ; syscall
0x000000000011dc53 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x0000000000086a18 : or dword ptr [rax - 0x75], ecx ; add eax, 0x32e530 ; call qword ptr [rax]
0x0000000000086953 : or dword ptr [rax - 0x75], ecx ; add eax, 0x32e5f5 ; call qword ptr [rax]
0x0000000000086898 : or dword ptr [rax - 0x75], ecx ; add eax, 0x32e6b0 ; call qword ptr [rax]
0x000000000006e0a8 : or dword ptr [rax - 0x75], ecx ; mov edi, 0xe0 ; jmp rax
0x000000000010a1b9 : or dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000d4f8e : or dword ptr [rax - 0x77], ecx ; retf 0xe183
0x00000000000450d5 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc33d98e5
0x00000000000285ff : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000002d536 : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000ac72a : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000ad1e9 : or dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000009c28e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000014a2dd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000151c9f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a237 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000f310 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000007413f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002262a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000e6191 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0afd : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000963ce : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e11ac : or dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; push rbp ; add al, 0xf7 ; ret 0xfffd
0x00000000001ae195 : or dword ptr [rax], eax ; add byte ptr [rdx], al ; add byte ptr [rax], al ; retf
0x000000000009b4b5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000e4633 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000134955 : or dword ptr [rax], ebp ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000000ff9fe : or dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001735d7 : or dword ptr [rax], ecx ; retf
0x0000000000175db3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000015a8f6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000006e0f3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079690 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007de18 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000818f9 : or dword ptr [rcx + 0x39], ecx ; retf
0x0000000000048733 : or dword ptr [rcx + 0x63480012], esi ; ret 0xc749
0x000000000003bffb : or dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x000000000019df31 : or dword ptr [rcx], eax ; add ah, bl ; cmp ebx, esi ; call rcx
0x00000000000e93b4 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000002400 : or dword ptr [rdi + 0x2735a120], 0xffffff98 ; retf 0x7e0c
0x00000000000cf020 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x000000000007ec80 : or dword ptr [rdi + 8], 1 ; xor eax, eax ; ret
0x000000000012d0b3 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006e100 : or dword ptr [rdi], 0x20 ; ret
0x00000000000366be : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001097cd : or dword ptr [rdi], ecx ; retf
0x0000000000144666 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000a98c6 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi + rax + 0x39480000], ebp ; ret 0xd67d
0x00000000000a4a76 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi + rax + 0x39480000], edi ; ret 0xd67d
0x00000000000874c9 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x0000000000087471 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x0000000000112e75 : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x00000000000f1543 : or dword ptr [rdi], ecx ; xchg esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x000000000017660e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000087552 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x00000000000873ad : or dword ptr [rdx], 0x450f4800 ; ret 0xc3f3
0x00000000000db959 : or dword ptr [rip + 0x4cfffffe], 0x63 ; ret 0x8b49
0x0000000000059c8f : or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x000000000015370f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001ae194 : or dword ptr ds:[rax], eax ; add byte ptr [rdx], al ; add byte ptr [rax], al ; retf
0x00000000000f013e : or eax, 0x1002c87 ; ret
0x0000000000125a9a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034d4b : or eax, 0x150bf0 ; orpd xmm0, xmm1 ; ret
0x000000000009dfd1 : or eax, 0x1c478d48 ; ret
0x000000000009ee31 : or eax, 0x1d478d48 ; ret
0x00000000001446e8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000008855c : or eax, 0x2e58000 ; cmovne rax, rdx ; ret
0x00000000000b1762 : or eax, 0x358d4800 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xc
0x000000000012c632 : or eax, 0x38c48348 ; ret
0x00000000000a2a4c : or eax, 0x3d8d4800 ; ret
0x000000000006c8ea : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006c242 : or eax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000002d642 : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000886ec : or eax, 0x450f4800 ; ret 0x66c3
0x0000000000087351 : or eax, 0x450f4800 ; ret 0xc3f3
0x000000000008862c : or eax, 0x450f4800 ; ret 0xfc3
0x000000000008784f : or eax, 0x480000fc ; cmove eax, edx ; ret
0x00000000000ae1fa : or eax, 0x48338948 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000096fa2 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x00000000000b772a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x0000000000051532 : or eax, 0x5bd88948 ; ret
0x000000000009d0b5 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000ec7f9 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000501da : or eax, 0x8118e383 ; ret
0x000000000014ae87 : or eax, 0x83480000 ; ret 0x4910
0x000000000014ca21 : or eax, 0x83480000 ; ret 0xe910
0x000000000014aeb5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000efb1d : or eax, 0x834820eb ; ret
0x000000000002e17b : or eax, 0x83486274 ; ret
0x000000000009e779 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000064a2c : or eax, 0x894c0000 ; ret 0x894c
0x0000000000090a28 : or eax, 0x894d0000 ; retf
0x000000000012b872 : or eax, 0x8c48348 ; ret
0x0000000000124ba2 : or eax, 0x8c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001778b0 : or eax, 0xa6ffedcb ; retf
0x00000000000a9855 : or eax, 0xb8480000 ; ret 0xffff
0x00000000000b3302 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000174461 : or eax, 0xcad7947e ; jmp 0x17440d
0x000000000016cf95 : or eax, 0xdc00000 ; add byte ptr [rax], al ; ret
0x00000000001765f3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000176293 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000018c245 : or eax, 0xf0dc0002 ; clc ; call rsp
0x00000000000a1f26 : or eax, 0xf480001 ; ret 0x66c3
0x00000000000a2170 : or eax, 0xf480001 ; ret 0xfc3
0x0000000000085f62 : or eax, 0xf78b6 ; mov rdx, rcx ; jmp 0x85f0d
0x00000000001399a3 : or eax, 0xf7f0ff3 ; ret
0x0000000000002e49 : or eax, 0xf8eeb385 ; ret
0x000000000003611d : or eax, 0xffffffff ; ret
0x0000000000150dc9 : or eax, 1 ; ret
0x0000000000157d01 : or eax, 1 ; vzeroupper ; ret
0x000000000007ecd0 : or eax, 2 ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000001999ad : or eax, dword ptr [r8] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019a198 : or eax, dword ptr [r8] ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, bl ; retf
0x00000000000888fd : or eax, dword ptr [r8] ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000001999ae : or eax, dword ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000014a07d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cbc1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a0a1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001aa188 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf
0x000000000000e770 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000119a02 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001aa158 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cwde ; retf
0x00000000000f0ba1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000019a199 : or eax, dword ptr [rax] ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, bl ; retf
0x00000000001998b2 : or eax, dword ptr [rax] ; add byte ptr [rax], r8b ; add al, dh ; ret 0
0x0000000000090ba8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ffbc4 : or eax, dword ptr [rax] ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000888fe : or eax, dword ptr [rax] ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000000885fc : or eax, dword ptr [rax] ; and ecx, 8 ; cmovne rax, rdx ; ret
0x000000000008741e : or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000a2414 : or eax, dword ptr [rax] ; je 0xa23d6 ; ret
0x00000000000c5165 : or eax, dword ptr [rax] ; mov eax, 0x142 ; syscall
0x00000000000c96b5 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000c68a1 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000c9c78 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000193518 : or eax, dword ptr [rcx + 0xa] ; ret
0x000000000019e105 : or eax, dword ptr [rcx] ; add byte ptr [rax + 0x51], bl ; jmp rdx
0x00000000000a2090 : or eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000e9474 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000195950 : or eax, dword ptr [rdx] ; jno 0x195962 ; ret
0x000000000019dc61 : or eax, dword ptr [rdx] ; or byte ptr [rsi], 8 ; ret
0x00000000001ad992 : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000000350f9 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000001050a0 : or eax, edi ; bswap eax ; ret
0x0000000000043659 : or eax, edx ; cmp ecx, 0x24 ; jne 0x43643 ; ret
0x0000000000038dfc : or eax, edx ; ret
0x00000000000f5982 : or eax, esi ; ret
0x00000000000eac81 : or ebp, dword ptr [rax - 0xd] ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000119e51 : or ebp, dword ptr [rbp + 0x24ff0029] ; ret 0x1f0f
0x000000000010859e : or ebp, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000007d5c4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000e4da5 : or ebp, ecx ; retf
0x0000000000071130 : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001730d9 : or ebp, esp ; call rsi
0x00000000001730d1 : or ebp, esp ; ljmp [rbx] ; or al, 0xec ; call rsi
0x0000000000139b63 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000051b8e : or ebx, esi ; ret
0x00000000000eaf1c : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000079f67 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000000e6d04 : or ecx, dword ptr [rax - 0x75] ; add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000f59d6 : or ecx, dword ptr [rax - 0x77] ; out dx, eax ; call r12
0x00000000001157d4 : or ecx, dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b62d7 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000efc42 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000007de19 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000b2bb4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000b2c04 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x0000000000179ef4 : or ecx, dword ptr [rbx - 0xc] ; inc dword ptr [rbx + rcx*2] ; hlt ; call qword ptr [rdx]
0x00000000000e1e6c : or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x0000000000160f9c : or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x000000000010f917 : or ecx, dword ptr [rdi] ; mov dh, 0x55 ; add dh, dh ; ret
0x0000000000119b14 : or ecx, dword ptr [rdi] ; retf 0xd285
0x000000000009d073 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000018c359 : or ecx, edi ; call rsp
0x00000000000c61c3 : or edi, dword ptr [rax + 0xfde8] ; jne 0xc619f ; ret
0x00000000000fd6ec : or edi, dword ptr [rax + 1] ; ret
0x000000000018bcd9 : or edi, eax ; jmp rsp
0x00000000000f1f02 : or edi, eax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000000a0bd7 : or edi, edi ; loope 0xa0c4a ; nop dword ptr [rax + rax] ; ret
0x000000000018b551 : or edi, esi ; dec eax ; ret
0x0000000000060985 : or edi, esp ; dec dword ptr [rax + 0x29] ; ret
0x00000000000f0b60 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000002e27 : or edx, ebp ; clc ; ret
0x0000000000034b65 : or edx, esi ; je 0x34aed ; ret
0x00000000001a9300 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x00000000000b42c4 : or esi, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000117f34 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a9301 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000ec79e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000006e250 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139a83 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e73b4 : or esi, ebx ; ret
0x0000000000003c28 : or esi, edx ; push rbp ; jg 0x3c9b ; xchg eax, ebp ; retf 0x10bf
0x000000000018a921 : or esi, esi ; call rax
0x00000000000fe2e3 : or esi, esi ; jno 0xfe2f2 ; cmovne eax, edx ; ret
0x00000000000b9ad9 : or esi, esi ; ret
0x00000000001000ec : or esi, esi ; ret 0xf08
0x000000000006e0f4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079691 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000030c3 : or esp, dword ptr [rdx] ; js 0x307d ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000023ba1 : or esp, dword ptr [rsi + 0x39] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001943b2 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000eba84 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000000ff9fd : or qword ptr [rax], r9 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cf01f : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x000000000012d0b2 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000366bd : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000144665 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000f0b5f : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000139bd2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139b62 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139af2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139a82 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001ad991 : or r8d, dword ptr [r10] ; ret 0xe0a
0x0000000000193517 : or r8d, dword ptr [rcx + 0xa] ; ret
0x000000000002b5bd : or r9b, byte ptr [r8 + 0x39] ; ret 0xc76
0x00000000001446e7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000008855b : or rax, 0x2e58000 ; cmovne rax, rdx ; ret
0x000000000006c8e9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006c241 : or rax, 0x401f0f08 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000003611c : or rax, 0xffffffffffffffff ; ret
0x00000000001534f2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b107 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001998b1 : or rax, qword ptr [rax] ; add byte ptr [rax], r8b ; add al, dh ; ret 0
0x000000000019594f : or rax, qword ptr [rdx] ; jno 0x195963 ; ret
0x000000000019dc60 : or rax, qword ptr [rdx] ; or byte ptr [rsi], 8 ; ret
0x0000000000043658 : or rax, rdx ; cmp ecx, 0x24 ; jne 0x43644 ; ret
0x0000000000038dfb : or rax, rdx ; ret
0x00000000000f5981 : or rax, rsi ; ret
0x00000000000f1f01 : or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000001943b1 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x00000000001a5e60 : or sil, sil ; call rdx
0x0000000000119f33 : or sil, sil ; ret 0x8802
0x0000000000034d50 : orpd xmm0, xmm1 ; ret
0x0000000000034d51 : orps xmm0, xmm1 ; ret
0x000000000003515e : orps xmm0, xmm3 ; ret
0x00000000000bf9a4 : out 0, al ; add byte ptr [rax], al ; syscall
0x0000000000188d9d : out 0, eax ; add byte ptr [rbx + rdx*2], ch ; out dx, eax ; call qword ptr [rax]
0x00000000001050a9 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000117550 : out 0x31, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e6d99 : out 0x44, al ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010110c : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000024212 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b4608 : out 0x48, al ; lea eax, [rip - 0x100] ; ret
0x00000000000b4728 : out 0x48, al ; lea eax, [rip - 0x110] ; ret
0x0000000000122590 : out 0x48, al ; mov edi, ebp ; call rax
0x00000000000ebd07 : out 0x48, al ; mov edi, ebp ; mov eax, 0x10f ; syscall
0x000000000006dfe0 : out 0x48, al ; mov edi, ebx ; call 0x7aaa6
0x000000000011a728 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000072a3d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000a1f60 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000462f8 : out 0x48, eax ; mov eax, edx ; ret
0x00000000000ef6c0 : out 0x48, eax ; mov edi, edx ; call 0x7c106
0x0000000000084ef0 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000089dc0 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114b23 : out 0x4d, eax ; lea ebp, [rbp + rax + 1] ; call 0x215a8
0x00000000000a2e43 : out 0x4d, eax ; mov ecx, esi ; call rbx
0x0000000000066748 : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp 0x72a09
0x00000000000bfe68 : out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x00000000001234c8 : out 0x5b, eax ; ret
0x0000000000175e80 : out 0x78, al ; jnp 0x175ee2 ; retf
0x000000000002ece3 : out 0x80, eax ; sete al ; ret
0x00000000000f60a8 : out 0x89, al ; fistp qword ptr [rax + 0x113] ; syscall
0x00000000000f5cd4 : out 0x89, al ; fistp qword ptr [rax + 0x119] ; syscall
0x00000000000ec248 : out 0x89, al ; fistp qword ptr [rax + 0x146] ; syscall
0x00000000000f6f5c : out 0x89, al ; fistp qword ptr [rax + 0x2c] ; syscall
0x00000000000f6d3c : out 0x89, al ; fistp qword ptr [rax + 0x2d] ; syscall
0x0000000000111586 : out 0x89, al ; fucomip st(0) ; ret 0xfe56
0x00000000000e793d : out 0x89, al ; out dx, eax ; mov eax, 0x101 ; syscall
0x00000000000feecd : out 0x89, al ; out dx, eax ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000dba76 : out 0x89, eax ; ret
0x000000000006d99a : out 0x89, eax ; ret 0xc031
0x0000000000087956 : out 0x8d, al ; or al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000017ac0c : out 0x9a, al ; cmc ; jmp rsi
0x000000000000250a : out 0xa9, al ; ret 0xbd07
0x000000000000396c : out 0xb0, al ; test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x0000000000174411 : out 0xb3, al ; retf 0xe80
0x0000000000083f63 : out 0xb8, eax ; retf 0
0x0000000000077f05 : out 0xbf, al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, r13d ; syscall
0x0000000000175140 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000a1f25 : out 0xd, eax ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000000276d : out 0xdf, eax ; syscall
0x00000000000f0291 : out 0xe8, al ; cmp dword ptr [rbp + 0x5f6fff8], ecx ; ret 0x2c85
0x000000000008847c : out 0xe8, al ; mov cs, word ptr [rdi + 0x148fff9] ; ret
0x000000000006f607 : out 0xe8, al ; ret
0x00000000000c5c01 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x0000000000074bc6 : out 0xe8, eax ; lodsb al, byte ptr [rsi] ; retf 0xfffa
0x000000000002b438 : out 0xe8, eax ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000055141 : out 0xe8, eax ; ret
0x00000000000dd2e8 : out 0xe8, eax ; ret 0xf442
0x00000000000d0748 : out 0xe8, eax ; ret 0xfad9
0x00000000000a6c0f : out 0xe8, eax ; retf
0x000000000011e5e0 : out 0xe8, eax ; retf 0xffb2
0x000000000012ac70 : out 0xe8, eax ; retf 0xfffc
0x00000000000bd779 : out 0xe9, al ; ret
0x0000000000187c29 : out 0xea, al ; jmp qword ptr [rax]
0x0000000000032a0a : out 0xeb, eax ; retf 0x8b4d
0x00000000001975cd : out 0xee, al ; jmp rsp
0x00000000001892a1 : out 0xef, eax ; jmp qword ptr [rax]
0x0000000000100e11 : out 0xf2, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000018a109 : out 0xf3, al ; jmp rax
0x000000000013936a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000089599 : out 0xf3, al ; ret
0x00000000001393ea : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001a53f1 : out 0xf5, eax ; call rcx
0x000000000017a574 : out 0xf5, eax ; hlt ; jmp rdi
0x0000000000176e68 : out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000008778d : out 0xf7, al ; fucomi st(0) ; retf
0x000000000012f3fc : out 0xf8, eax ; lea rcx, [rsp + 8] ; call 0xdbe29
0x000000000018cc49 : out 0xf9, al ; call rsp
0x00000000001869fd : out 0xfa, al ; call rax
0x0000000000186a01 : out 0xfa, eax ; jmp qword ptr [rax]
0x000000000012936f : out 0xfb, al ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000021960 : out 0xfe, eax ; and eax, 0x3ff ; mov r10d, eax ; jmp 0x2193a
0x0000000000032cad : out 0xfe, eax ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000005c4c8 : out 0xff, al ; push rsi ; ret 0xf0a
0x000000000003ce31 : out 0xff, eax ; dec dword ptr [rax + 0x39] ; ret
0x000000000011061d : out 4, al ; lea rax, [rdi + rsi + 8] ; ret
0x0000000000021e7c : out 4, eax ; add rdi, r13 ; call rax
0x000000000010abf7 : out dx, al ; adc bh, dh ; ret 0x8080
0x000000000019c4bd : out dx, al ; add byte ptr [rax], al ; and byte ptr [rdi - 0xe], ch ; call rcx
0x0000000000064057 : out dx, al ; add dword ptr [rax - 0x4ef43], eax ; jmp qword ptr [rax]
0x0000000000110103 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x110110 ; ret
0x000000000008a683 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000012b0ae : out dx, al ; call 0xe7b13
0x0000000000188782 : out dx, al ; call qword ptr [rax]
0x0000000000194aaa : out dx, al ; call qword ptr [rdi]
0x00000000001959da : out dx, al ; call qword ptr [rdx]
0x0000000000177b7a : out dx, al ; call qword ptr [rsi]
0x0000000000086a0e : out dx, al ; call rax
0x0000000000177e5a : out dx, al ; call rbx
0x0000000000177c9e : out dx, al ; call rdi
0x0000000000177e02 : out dx, al ; call rsi
0x0000000000188602 : out dx, al ; call rsp
0x0000000000002e4c : out dx, al ; clc ; ret
0x0000000000186a55 : out dx, al ; cli ; jmp qword ptr [rax]
0x000000000018a749 : out dx, al ; cmc ; call qword ptr [rax]
0x0000000000186478 : out dx, al ; cmp eax, 0x3ef0fffd ; std ; jmp qword ptr [rcx]
0x0000000000177b26 : out dx, al ; dec dword ptr [rax + 0x2a] ; out dx, al ; dec dword ptr [rax + 0x2a] ; out dx, al ; jmp rax
0x0000000000177b2a : out dx, al ; dec dword ptr [rax + 0x2a] ; out dx, al ; jmp rax
0x0000000000177b72 : out dx, al ; dec dword ptr [rax + 0x2a] ; out dx, al ; push qword ptr [rax + 0x27] ; out dx, al ; call qword ptr [rsi]
0x000000000018879a : out dx, al ; dec dword ptr [rbx + rax*8 - 0x5a640000] ; out dx, al ; jmp rax
0x0000000000176297 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000001a1f19 : out dx, al ; hlt ; jmp qword ptr [rcx]
0x0000000000003c5d : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001885fa : out dx, al ; inc dword ptr [rax + rdi*4 + 0x6adc0000] ; out dx, al ; call rsp
0x00000000001888e2 : out dx, al ; inc dword ptr [rax] ; retf 0
0x0000000000177e56 : out dx, al ; inc dword ptr [rbp + 0x38] ; out dx, al ; call rbx
0x0000000000177e52 : out dx, al ; inc dword ptr [rbp + 0x38] ; out dx, al ; inc dword ptr [rbp + 0x38] ; out dx, al ; call rbx
0x0000000000177c9a : out dx, al ; inc dword ptr [rsi] ; out dx, al ; call rdi
0x0000000000177c96 : out dx, al ; inc dword ptr [rsi] ; out dx, al ; inc dword ptr [rsi] ; out dx, al ; call rdi
0x0000000000188842 : out dx, al ; inc esp ; mov byte ptr [rax], 0 ; insb byte ptr [rdi], dx ; mov bl, 0xee ; call qword ptr [rax]
0x0000000000177dfe : out dx, al ; inc esp ; out dx, al ; call rsi
0x0000000000177dfa : out dx, al ; inc esp ; out dx, al ; inc esp ; out dx, al ; call rsi
0x000000000018877a : out dx, al ; inc esp ; ret 0
0x00000000001888fa : out dx, al ; inc esp ; retf 0
0x000000000018864a : out dx, al ; jmp qword ptr [rax]
0x0000000000177df2 : out dx, al ; jmp qword ptr [rbx]
0x0000000000197992 : out dx, al ; jmp qword ptr [rcx]
0x0000000000194d3a : out dx, al ; jmp qword ptr [rdi]
0x0000000000196072 : out dx, al ; jmp qword ptr [rdx]
0x000000000019587a : out dx, al ; jmp qword ptr [rsi]
0x0000000000177b2e : out dx, al ; jmp rax
0x0000000000194fd6 : out dx, al ; jmp rbx
0x000000000019431a : out dx, al ; jmp rcx
0x0000000000194e72 : out dx, al ; jmp rdi
0x0000000000188812 : out dx, al ; jmp rsp
0x0000000000188892 : out dx, al ; lcall [rax + rcx*8 - 0x45f40000] ; out dx, al ; jmp rax
0x000000000018863a : out dx, al ; lcall [rax - 0x63ffff47] ; insd dword ptr [rdi], dx ; out dx, al ; jmp rax
0x00000000000f62c9 : out dx, al ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000018880a : out dx, al ; ljmp [rax - 0x13ffff3b] ; lodsb al, byte ptr [rsi] ; out dx, al ; jmp rsp
0x0000000000188942 : out dx, al ; ljmp [rbp + rcx*8] ; add ah, cl ; fldz ; jmp rsp
0x000000000006e251 : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000032d7 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000008874e : out dx, al ; mov eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000005dd64 : out dx, al ; mov ebx, dword ptr [rbp - 0x54c] ; jmp 0x59fd9
0x00000000000e5e15 : out dx, al ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x00000000000f5f33 : out dx, al ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000000ec415 : out dx, al ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f5fe5 : out dx, al ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x00000000000ec4b3 : out dx, al ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x00000000000e5ec5 : out dx, al ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x00000000000f7435 : out dx, al ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x00000000000ed360 : out dx, al ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x00000000000ed410 : out dx, al ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000000f74dd : out dx, al ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x00000000000ed20d : out dx, al ; mov edi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f614d : out dx, al ; mov edi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f7585 : out dx, al ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000ed2ad : out dx, al ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000000edbad : out dx, al ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f6bbd : out dx, al ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f6aed : out dx, al ; mov edi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f6ffd : out dx, al ; mov edi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f6e9d : out dx, al ; mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000c4c45 : out dx, al ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f76e5 : out dx, al ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f778d : out dx, al ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x00000000000bf912 : out dx, al ; mov edi, ebx ; mov eax, 0xe4 ; syscall
0x00000000000bf8a2 : out dx, al ; mov edi, ebx ; mov eax, 0xe5 ; syscall
0x00000000000f5e95 : out dx, al ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000c4cee : out dx, al ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x00000000000e7aad : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x00000000000f7d63 : out dx, al ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000000e7a0d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000000edca8 : out dx, al ; mov edi, r12d ; mov eax, 0x10e ; syscall
0x00000000000ed526 : out dx, al ; mov edi, r12d ; mov eax, 0x147 ; syscall
0x00000000000ed686 : out dx, al ; mov edi, r12d ; mov eax, 0x148 ; syscall
0x0000000000133b6a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000003715a : out dx, al ; mov rdi, qword ptr [rsp + 8] ; call r12
0x00000000000862a7 : out dx, al ; mov rdi, r12 ; call rax
0x0000000000037185 : out dx, al ; mov rdi, r14 ; call r12
0x00000000001230ce : out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000037252 : out dx, al ; mov rdi, r15 ; mov rdx, r13 ; call r12
0x00000000000f0af8 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000000372c8 : out dx, al ; mov rdi, rbx ; call r12
0x000000000004d0f7 : out dx, al ; mov rdi, rbx ; call rax
0x00000000000e6ef4 : out dx, al ; mov rdi, rbx ; mov eax, 0x135 ; syscall
0x0000000000039b7e : out dx, al ; mov rdi, rbx ; mov eax, 0x13e ; syscall
0x00000000000f0c3e : out dx, al ; mov rdi, rbx ; mov eax, 0x1a ; syscall
0x00000000000ebc2e : out dx, al ; mov rdi, rbx ; mov eax, 7 ; syscall
0x000000000013977a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000002231 : out dx, al ; nop ; retf 0x3844
0x00000000000887b7 : out dx, al ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000151b4e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001765f2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000175e7f : out dx, al ; out 0x78, al ; jnp 0x175ee3 ; retf
0x0000000000113ed2 : out dx, al ; pop rax ; sub al, byte ptr [rax] ; test eax, eax ; je 0x113ee9 ; ret
0x000000000003352d : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000177b76 : out dx, al ; push qword ptr [rax + 0x27] ; out dx, al ; call qword ptr [rsi]
0x00000000001888f2 : out dx, al ; push qword ptr [rax + 0x3c0000ca] ; ret 0xffee
0x0000000000188912 : out dx, al ; push qword ptr [rax] ; retf
0x00000000001887aa : out dx, al ; push rsp ; ret
0x00000000000cef91 : out dx, al ; ret
0x0000000000002951 : out dx, al ; retf 0x182c
0x00000000000a2281 : out dx, al ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000fdcf9 : out dx, al ; xor r15d, r15d ; call rax
0x00000000000b2ead : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000001ac529 : out dx, eax ; add dword ptr [rax], eax ; adc al, 0x78 ; sti ; jmp qword ptr [rdx]
0x0000000000083d9c : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000730be : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007311a : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000045377 : out dx, eax ; call 0x215c3
0x00000000001053cd : out dx, eax ; call 0x2167b
0x000000000003aff2 : out dx, eax ; call 0x47ae3
0x000000000004f48f : out dx, eax ; call 0x7bf83
0x000000000002dfa0 : out dx, eax ; call 0x8a1f3
0x000000000010a8c1 : out dx, eax ; call 0xf6b83
0x0000000000188da2 : out dx, eax ; call qword ptr [rax]
0x000000000011a34b : out dx, eax ; call qword ptr [rbx]
0x00000000001980fa : out dx, eax ; call qword ptr [rcx]
0x0000000000037149 : out dx, eax ; call r12
0x00000000000f2795 : out dx, eax ; call r14
0x0000000000021e80 : out dx, eax ; call rax
0x00000000000b3e3e : out dx, eax ; call rbx
0x0000000000125a92 : out dx, eax ; call rcx
0x000000000019874e : out dx, eax ; call rdi
0x0000000000119ef6 : out dx, eax ; call rdx
0x000000000018918a : out dx, eax ; call rsp
0x00000000001095d5 : out dx, eax ; cld ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000176ee5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000001891e2 : out dx, eax ; dec dword ptr [rax + 0x5c0000fb] ; retf 0xffef
0x000000000012ea70 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000128d12 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000012b8e4 : out dx, eax ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rcx*2 + 0x48], 0x89 ; ret
0x00000000001788aa : out dx, eax ; dec dword ptr [rax] ; out dx, eax ; dec dword ptr [rax] ; out dx, eax ; jmp qword ptr [rax]
0x00000000001788ae : out dx, eax ; dec dword ptr [rax] ; out dx, eax ; jmp qword ptr [rax]
0x00000000001891aa : out dx, eax ; dec dword ptr [rdx + rdi*8] ; add byte ptr [rax], al ; ret 0xffef
0x00000000001893a2 : out dx, eax ; dec dword ptr [rsi + rax - 0x313ffff] ; out dx, eax ; call rsp
0x0000000000001acf : out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001a1fad : out dx, eax ; hlt ; jmp qword ptr [rdx]
0x00000000001890da : out dx, eax ; inc dword ptr [rax] ; hlt ; add byte ptr [rax], al ; pop rsp ; jge 0x1890db ; jmp qword ptr [rax]
0x0000000000189152 : out dx, eax ; inc eax ; test byte ptr [rax], 0 ; cld ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x0000000000189212 : out dx, eax ; inc esp ; cld ; add byte ptr [rax], al ; jl 0x1891f4 ; out dx, eax ; jmp rax
0x00000000001788b2 : out dx, eax ; jmp qword ptr [rax]
0x0000000000198daa : out dx, eax ; jmp qword ptr [rbx]
0x0000000000197ffa : out dx, eax ; jmp qword ptr [rcx]
0x0000000000198a9a : out dx, eax ; jmp qword ptr [rdx]
0x0000000000198fb2 : out dx, eax ; jmp qword ptr [rsi]
0x0000000000188e02 : out dx, eax ; jmp rax
0x00000000001982e6 : out dx, eax ; jmp rcx
0x000000000019912e : out dx, eax ; jmp rdx
0x0000000000188baa : out dx, eax ; jmp rsp
0x0000000000188d02 : out dx, eax ; lcall [rax - 0x63ffff1c] ; out dx, eax ; jmp rsp
0x0000000000118ba6 : out dx, eax ; lea r9, [rsp + 0x18] ; call qword ptr [rax]
0x00000000001189e7 : out dx, eax ; lea r9, [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000fc43d : out dx, eax ; leave ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000001891ea : out dx, eax ; ljmp [rax + 0x6c0000fb] ; retf
0x0000000000188c52 : out dx, eax ; ljmp [rax - 0x3ffff21] ; sub edi, ebp ; jmp rsp
0x00000000000392ed : out dx, eax ; loope 0x39330 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000e793f : out dx, eax ; mov eax, 0x101 ; syscall
0x00000000000ebd0a : out dx, eax ; mov eax, 0x10f ; syscall
0x0000000000038bbe : out dx, eax ; mov eax, 0xca ; syscall
0x00000000000f0afb : out dx, eax ; mov eax, 9 ; syscall
0x00000000000df050 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000013399a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133a96 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001339e2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000f3ae8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000376ba : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000010cbe3 : out dx, eax ; mov rax, qword ptr [rsp] ; call rax
0x0000000000046960 : out dx, eax ; mov rax, rdx ; ret
0x000000000011b121 : out dx, eax ; mov rcx, r12 ; call 0x117b96
0x0000000000086016 : out dx, eax ; mov rdx, rbx ; mov rsi, r14 ; call rax
0x00000000000f21cb : out dx, eax ; mov rsi, qword ptr [rax] ; call r14
0x00000000001397fa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000036ae : out dx, eax ; nop ; retf 0xe9ee
0x0000000000151c4d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000002950 : out dx, eax ; out dx, al ; retf 0x182c
0x00000000000feecf : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000114810 : out dx, eax ; pop rbx ; ret
0x0000000000159943 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15991b
0x00000000001599c1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159999
0x0000000000159e53 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159e2b
0x0000000000159ed1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159ea9
0x000000000015af73 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15af4b
0x000000000015aff1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15afc9
0x000000000015b483 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b45b
0x000000000015b501 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4d9
0x0000000000159543 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000159558 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015956d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a0e23 : out dx, eax ; ret 0xf66
0x00000000000a0e06 : out dx, eax ; retf 0x4466
0x00000000001765bb : out dx, eax ; retf 0xab0d
0x000000000010a725 : out dx, eax ; ror byte ptr [rdi], 0xb7 ; retf
0x00000000000cfc0e : out dx, eax ; sal byte ptr [rcx], 0xc0 ; movaps xmmword ptr [rdi], xmm0 ; ret
0x000000000008e89a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000015aa5c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000015aa45 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015aa2e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001594ea : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000021e79 : out dx, eax ; shl rdi, 4 ; add rdi, r13 ; call rax
0x0000000000162d67 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000011982e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000045f50 : out dx, eax ; xor eax, eax ; ret
0x000000000014c32e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015cb7e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001a4425 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; jp 0x1a4426 ; call rcx
0x00000000001a4471 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; sub al, 0x7c ; cmc ; call rbx
0x00000000000351a5 : outsb dx, byte ptr [rsi] ; and al, 0xfc ; ret
0x0000000000186421 : outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax] ; jo 0x186429 ; call rax
0x000000000019ad85 : outsb dx, byte ptr [rsi] ; int1 ; jmp qword ptr [rbx]
0x0000000000176a43 : outsb dx, byte ptr [rsi] ; ja 0x1769cc ; ret 0x48f
0x0000000000003972 : outsb dx, byte ptr [rsi] ; retf
0x0000000000174784 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000175db8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000178cf5 : outsb dx, byte ptr [rsi] ; sti ; push rax ; outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x00000000000358d1 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000035759 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x28 ; ret
0x000000000006e94c : outsd dx, dword ptr [rsi] ; add al, 1 ; je 0x6e8ff ; jmp 0x6e91c
0x000000000007787c : outsd dx, dword ptr [rsi] ; add al, 1 ; je 0x7782f ; jmp 0x7784c
0x000000000007e920 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret 0xf20
0x000000000018a475 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; jl 0x18a49f ; cmc ; jmp qword ptr [rax]
0x0000000000102f6b : outsd dx, dword ptr [rsi] ; add eax, dword ptr [rax] ; and ecx, 8 ; cmovne rax, rdx ; ret
0x000000000007f242 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000004acba : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x0000000000162b01 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; ret
0x000000000008ea48 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000009287e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000e63a2 : outsd dx, dword ptr [rsi] ; jo 0xe63bc ; adc dword ptr [rdi + 0x78], eax ; ret
0x00000000000e6352 : outsd dx, dword ptr [rsi] ; js 0xe636c ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000fab65 : outsd dx, dword ptr [rsi] ; loope 0xfab9c ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000134122 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x0000000000134322 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000006b61 : outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006d5dd : outsd dx, dword ptr [rsi] ; or byte ptr [rbx - 0x76fefbb9], al ; ret 0xe281
0x0000000000188649 : outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rax]
0x000000000015a85d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000015a8fd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000015a422 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000015a4a2 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000009729a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000035989 : outsd dx, dword ptr [rsi] ; ret
0x000000000004e203 : outsd dx, dword ptr [rsi] ; ret 0x16e8
0x000000000004b800 : outsd dx, dword ptr [rsi] ; ret 0x19e8
0x0000000000035929 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000000359dc : outsd dx, dword ptr [rsi] ; ret 0x3de8
0x0000000000175146 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000005029b : outsd dx, dword ptr [rsi] ; ret 0x7ee8
0x00000000001342d7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000015a902 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000035952 : outsd dx, dword ptr [rsi] ; ret 0xc7e8
0x000000000004e1da : outsd dx, dword ptr [rsi] ; ret 0xe383
0x000000000005042a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000035654 : outsd dx, dword ptr [rsi] ; retf
0x000000000014bcd9 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x00000000001343a2 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x0000000000044e1d : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000015993a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000004b79e : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000178cf9 : outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x00000000000449e7 : outsd dx, dword ptr [rsi] ; xchg eax, esp ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x0000000000080f44 : outsd dx, dword ptr [rsi] ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x80f20
0x0000000000175145 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000c0a25 : paddb mm1, qword ptr [rcx - 0x1603f2ac] ; ret 0xfffe
0x0000000000149f72 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000b3634 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000b361f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000149f71 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000176545 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000176546 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000091e75 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000157ba6 : pextrw edi, mm0, 0x77 ; ret
0x0000000000154ef4 : pextrw edi, mm5, 0x74 ; retf
0x000000000004acbf : pinsrw mm0, eax, 6 ; ret
0x000000000004acbe : pinsrw xmm0, eax, 6 ; ret
0x00000000000ade49 : pmaddwd mm7, mm7 ; dec dword ptr [rax + 1] ; retf 0xfde9
0x0000000000035051 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x00000000000353b1 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000091e83 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000091a42 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x91aa9 ; xor eax, eax ; ret
0x0000000000091ee5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x91f69 ; xor eax, eax ; ret
0x0000000000091f14 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x91f99 ; xor eax, eax ; ret
0x00000000000b1ed2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xb1f39 ; xor eax, eax ; ret
0x0000000000035050 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00000000000353b0 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000022a7 : pmuludq mm4, mm7 ; retf
0x0000000000196549 : pop qword ptr [rax] ; add ah, dl ; jle 0x196543 ; jmp qword ptr [rbx]
0x000000000019655d : pop qword ptr [rax] ; add al, dh ; jle 0x196557 ; jmp qword ptr [rbx]
0x00000000001965ad : pop qword ptr [rax] ; add byte ptr [rax + 0x7f], ah ; out dx, al ; jmp qword ptr [rbx]
0x00000000000ddf91 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000196585 : pop qword ptr [rax] ; add byte ptr [rax], ch ; jg 0x19657f ; jmp qword ptr [rbx]
0x0000000000196599 : pop qword ptr [rax] ; add byte ptr [rdi + rdi*2 - 0x12], al ; jmp qword ptr [rbx]
0x0000000000196571 : pop qword ptr [rax] ; add byte ptr [rdi + rdi*2], cl ; out dx, al ; jmp qword ptr [rbx]
0x00000000001964f9 : pop qword ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], ah ; jmp qword ptr [rbx]
0x00000000001964d1 : pop qword ptr [rax] ; add byte ptr [rsi + rdi*2 - 0x12], bl ; jmp qword ptr [rbx]
0x000000000018aa25 : pop qword ptr [rcx] ; add ah, cl ; and dh, dh ; call rsp
0x00000000000886bd : pop qword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001769cf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000700ca : pop r12 ; jmp rax
0x00000000000f1cf6 : pop r12 ; mov esi, 2 ; jmp rax
0x00000000000feed2 : pop r12 ; mov rdx, rax ; jmp rcx
0x000000000006674b : pop r12 ; pop r13 ; jmp 0x72a06
0x00000000000798ee : pop r12 ; pop r13 ; jmp rax
0x00000000000844ab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000222f3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002187b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e5d9 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012533e : pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000037cb7 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000023d37 : pop r12 ; pop r13 ; ret
0x00000000000b39d9 : pop r12 ; pop r14 ; ret
0x00000000000c3651 : pop r12 ; pop rbp ; ret
0x0000000000021f69 : pop r12 ; ret
0x00000000000b3e01 : pop r12 ; sub rax, rdx ; ret
0x000000000006674d : pop r13 ; jmp 0x72a04
0x00000000000798f0 : pop r13 ; jmp rax
0x00000000000401c8 : pop r13 ; pop r14 ; fmul st(0) ; pop r15 ; ret
0x000000000004021b : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000844ad : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000222f5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002187d : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e5db : pop r13 ; pop r14 ; ret
0x0000000000125340 : pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000037cb9 : pop r13 ; pop rbp ; ret
0x0000000000023d39 : pop r13 ; ret
0x00000000000401ca : pop r14 ; fmul st(0) ; pop r15 ; ret
0x0000000000125314 : pop r14 ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000004021d : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000844af : pop r14 ; pop r15 ; jmp rax
0x00000000000222f7 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002187f : pop r14 ; pop r15 ; ret
0x0000000000022191 : pop r14 ; ret
0x0000000000125342 : pop r14 ; xor eax, eax ; jmp rcx
0x00000000000b4b39 : pop r15 ; add rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000004021f : pop r15 ; fmulp st(1) ; ret
0x00000000000844b1 : pop r15 ; jmp rax
0x00000000000222f9 : pop r15 ; pop rbp ; ret
0x0000000000021881 : pop r15 ; ret
0x0000000000120526 : pop r8 ; mov eax, 1 ; ret
0x000000000011afcf : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x0000000000185c4f : pop r9 ; clc ; ret 0x6e1f
0x0000000000120c7e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000110443 : pop rax ; add dword ptr [rcx + 0x38], eax ; retf 0x8d41
0x00000000001104f7 : pop rax ; add esi, eax ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000002557d : pop rax ; call r14
0x0000000000120e24 : pop rax ; call rax
0x0000000000178e15 : pop rax ; cld ; jmp rax
0x00000000001a58a8 : pop rax ; cmc ; jmp qword ptr [rdi]
0x00000000000cefa7 : pop rax ; cmp al, 0x11 ; je 0xcefb7 ; xor eax, eax ; ret
0x0000000000031340 : pop rax ; cmp byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000017a0e4 : pop rax ; hlt ; ljmp [rbx] ; hlt ; dec ecx ; ret
0x00000000001ad138 : pop rax ; in al, 0xf7 ; call qword ptr [rdx]
0x000000000019fa78 : pop rax ; jb 0x19fa72 ; call qword ptr [rdx]
0x00000000001a5520 : pop rax ; jg 0x1a552b ; add byte ptr [rcx + rbp*8 - 0xb], bh ; call qword ptr [rbx]
0x0000000000120c86 : pop rax ; jmp rcx
0x0000000000197520 : pop rax ; lahf ; add byte ptr [rax], al ; fsubr st(2), st(0) ; out dx, al ; call qword ptr [rdx]
0x0000000000196320 : pop rax ; lea eax, [rax] ; add ah, bh ; jp 0x19631c ; call qword ptr [rdx]
0x000000000011ad56 : pop rax ; mov eax, 1 ; ret
0x000000000002eca4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002ec32 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000003e9e : pop rax ; mov esi, 0xcf8cb236 ; retf
0x000000000011a7ce : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000025245 : pop rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f1488 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000002681d : pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call r14
0x000000000002a59f : pop rax ; mov rdi, qword ptr [rsp + 0x50] ; call r15
0x00000000000b3e3b : pop rax ; mov rdi, rbp ; call rbx
0x00000000000b3eb2 : pop rax ; mov rsi, r15 ; mov rdi, rbp ; call rbx
0x00000000000d8044 : pop rax ; or bh, dh ; ret
0x0000000000193d9a : pop rax ; or cl, byte ptr [rsi] ; or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x000000000008238b : pop rax ; or dh, dh ; ret
0x000000000009b4b4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000001a3320 : pop rax ; pop rbp ; add dword ptr [rax], eax ; cld ; cmp ch, dh ; jmp qword ptr [rcx]
0x0000000000021701 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000011afd0 : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000f5b7b : pop rax ; pop rdi ; call rax
0x000000000012c561 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000019e108 : pop rax ; push rcx ; jmp rdx
0x0000000000038e88 : pop rax ; ret
0x0000000000199820 : pop rax ; ret 0
0x0000000000057ac8 : pop rax ; ret 0xffff
0x0000000000176923 : pop rax ; retf
0x00000000001aa920 : pop rax ; rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*2 - 9], ch ; jmp rsi
0x00000000001a75b8 : pop rax ; sahf ; idiv bh ; retf 0
0x0000000000186f8d : pop rax ; sti ; call qword ptr [rax + 0x20fffb57]
0x0000000000187185 : pop rax ; sti ; call qword ptr [rax]
0x0000000000187049 : pop rax ; sti ; call rdx
0x0000000000187045 : pop rax ; sti ; inc dword ptr [rdx + 0x58] ; sti ; call rdx
0x0000000000186fc9 : pop rax ; sti ; jmp rsi
0x0000000000113ed3 : pop rax ; sub al, byte ptr [rax] ; test eax, eax ; je 0x113ee8 ; ret
0x0000000000196920 : pop rax ; xchg eax, ebx ; add byte ptr [rax], al ; test rsi, r13 ; jmp qword ptr [rsi]
0x0000000000001edb : pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000001a2fc8 : pop rax ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x00000000000802cc : pop rax ; xor eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000018cf1d : pop rbp ; add al, byte ptr [rax] ; or al, 0x49 ; cli ; call rax
0x000000000018cf25 : pop rbp ; add al, byte ptr [rax] ; sbb al, 0x49 ; cli ; jmp rsp
0x000000000007f9c2 : pop rbp ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000193365 : pop rbp ; add byte ptr [rax], al ; mov dl, cl ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3321 : pop rbp ; add dword ptr [rax], eax ; cld ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a32d1 : pop rbp ; add dword ptr [rax], eax ; jl 0x1a3314 ; cmc ; jmp qword ptr [rcx]
0x00000000001a335d : pop rbp ; add dword ptr [rax], eax ; push rax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001a3335 : pop rbp ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018a245 : pop rbp ; add dword ptr [rax], eax ; sub al, 0x5d ; hlt ; call qword ptr [rax]
0x000000000012b174 : pop rbp ; add eax, 0xe8f63100 ; ret 0xfbc9
0x000000000011a91d : pop rbp ; add eax, edx ; ret
0x00000000000c54d7 : pop rbp ; clc ; leave ; ret
0x000000000018a249 : pop rbp ; hlt ; call qword ptr [rax]
0x00000000001763c5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000006674e : pop rbp ; jmp 0x72a03
0x000000000006fe7f : pop rbp ; jmp rax
0x0000000000118265 : pop rbp ; jmp rcx
0x0000000000119832 : pop rbp ; jmp rdx
0x00000000000fb404 : pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000174d20 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000000a216f : pop rbp ; or eax, 0xf480001 ; ret 0xfc3
0x00000000001885c1 : pop rbp ; out dx, al ; call rax
0x00000000000700c9 : pop rbp ; pop r12 ; jmp rax
0x00000000000f1cf5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000feed1 : pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000006674a : pop rbp ; pop r12 ; pop r13 ; jmp 0x72a07
0x00000000000798ed : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000844aa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002187a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e5d8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012533d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000023d36 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b39d8 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000021f68 : pop rbp ; pop r12 ; ret
0x00000000000b3e00 : pop rbp ; pop r12 ; sub rax, rdx ; ret
0x0000000000118bd7 : pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000401c9 : pop rbp ; pop r14 ; fmul st(0) ; pop r15 ; ret
0x000000000004021c : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000844ae : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000000222f6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002187e : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000002e5dc : pop rbp ; pop r14 ; ret
0x0000000000125341 : pop rbp ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000037cba : pop rbp ; pop rbp ; ret
0x0000000000046268 : pop rbp ; pop rbx ; ret
0x0000000000021703 : pop rbp ; ret
0x0000000000022f7f : pop rbp ; xchg eax, ebp ; adc byte ptr [rax], al ; mov rdi, rbx ; call r15
0x00000000000225ee : pop rbx ; add byte ptr [rax], al ; add al, ch ; stc ; ret
0x00000000001a31b9 : pop rbx ; add dword ptr [rax], eax ; adc al, 0x37 ; cmc ; jmp qword ptr [rcx]
0x00000000001a31a5 : pop rbx ; add dword ptr [rax], eax ; clc ; cmc ; jmp qword ptr [rcx]
0x00000000001a3141 : pop rbx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a30dd : pop rbx ; add dword ptr [rax], eax ; loopne 0x1a311d ; cmc ; jmp qword ptr [rcx]
0x00000000001a3155 : pop rbx ; add dword ptr [rax], eax ; mov byte ptr [rsi], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a3169 : pop rbx ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a317d : pop rbx ; add dword ptr [rax], eax ; sal byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x0000000000173d18 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a1956 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000007e766 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000199065 : pop rbx ; cli ; call qword ptr [rax]
0x0000000000173d16 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000008a9b8 : pop rbx ; cmovne rax, rdx ; ret
0x000000000007bfc4 : pop rbx ; jmp rax
0x00000000000cd6f0 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000ed044 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000e1f4c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000cd026 : pop rbx ; mov eax, 1 ; ret
0x00000000001026e6 : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000000e24fb : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000038e85 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000a19a1 : pop rbx ; mov eax, eax ; ret
0x00000000001208d7 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb3ee : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000007211a : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e2452 : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038919 : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003869f : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000007c779 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000008e00a : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000084961 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000083a46 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000066505 : pop rbx ; mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007f6b6 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000ced9a : pop rbx ; movaps xmmword ptr [r12], xmm0 ; pop rbp ; pop r12 ; ret
0x000000000011a778 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x0000000000195991 : pop rbx ; out dx, al ; call rsp
0x0000000000198c21 : pop rbx ; out dx, eax ; call qword ptr [rbx]
0x0000000000037cb6 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000c3650 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000002b5fd : pop rbx ; pop r12 ; ret
0x0000000000022190 : pop rbx ; pop r14 ; ret
0x000000000011a91c : pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006fe7e : pop rbx ; pop rbp ; jmp rax
0x0000000000118264 : pop rbx ; pop rbp ; jmp rcx
0x0000000000119831 : pop rbx ; pop rbp ; jmp rdx
0x00000000000fb403 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000700c8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000f1cf4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000feed0 : pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x0000000000066749 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x72a08
0x00000000000798ec : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000003352e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000023d35 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b39d7 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000021f67 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b3dff : pop rbx ; pop rbp ; pop r12 ; sub rax, rdx ; ret
0x0000000000118bd6 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000ab744 : pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000021702 : pop rbx ; pop rbp ; ret
0x000000000002bc45 : pop rbx ; ret
0x0000000000177000 : pop rbx ; ret 0x6f9
0x00000000001744dd : pop rbx ; retf
0x000000000011afd1 : pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000030cd : pop rbx ; sub edi, esi ; retf 0x54f7
0x00000000000a2b37 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000001d55 : pop rbx ; test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x00000000001026d6 : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000331be : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007c742 : pop rbx ; xor edx, edx ; jmp rax
0x000000000011b87e : pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x00000000001a2f89 : pop rcx ; add dword ptr [rax], eax ; add al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x00000000000d724e : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000131d27 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001a2fb1 : pop rcx ; add dword ptr [rax], eax ; cmp al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2f39 : pop rcx ; add dword ptr [rax], eax ; mov ah, 0x33 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2fc5 : pop rcx ; add dword ptr [rax], eax ; pop rax ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a2f4d : pop rcx ; add dword ptr [rax], eax ; sal byte ptr [rbx], 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000118b0e : pop rcx ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000948b4 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000185960 : pop rcx ; clc ; ret 0x6e1f
0x000000000018642d : pop rcx ; cld ; call rax
0x000000000008c301 : pop rcx ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000f1888 : pop rcx ; je 0xf1861 ; mov eax, 0xffffffff ; jmp 0xf1866
0x000000000014b1f7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001266af : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f13cb : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dde9a : pop rcx ; pop rbx ; ret
0x00000000000e8c13 : pop rcx ; ret 0x2c
0x00000000000f106a : pop rcx ; retf
0x000000000018c611 : pop rcx ; stc ; jmp qword ptr [rax]
0x000000000018703d : pop rcx ; sti ; jmp qword ptr [rdx]
0x0000000000186f81 : pop rcx ; sti ; jmp rax
0x000000000007f8e3 : pop rcx ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x7f8f8 ; ret
0x0000000000132518 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000e769a : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000019279 : pop rdi ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x5f
0x00000000001a3579 : pop rdi ; add dword ptr [rax], eax ; add al, 0x3c ; cmc ; jmp qword ptr [rcx]
0x00000000001a3565 : pop rdi ; add dword ptr [rax], eax ; call 0x221a2aae
0x000000000002734e : pop rdi ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000001522dd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b4b3a : pop rdi ; add rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; ret
0x0000000000150982 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x00000000000f5b7c : pop rdi ; call rax
0x000000000002ef48 : pop rdi ; cmp byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000040220 : pop rdi ; fmulp st(1) ; ret
0x0000000000133f39 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133d49 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001762be : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000844b2 : pop rdi ; jmp rax
0x000000000012a6f5 : pop rdi ; ljmp [rax] ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000175281 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000000c5060 : pop rdi ; mov eax, 0x3a ; syscall
0x00000000001959d9 : pop rdi ; out dx, al ; call qword ptr [rdx]
0x0000000000133b69 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133999 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133a95 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001339e1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000222fa : pop rdi ; pop rbp ; ret
0x0000000000021882 : pop rdi ; ret
0x0000000000185a10 : pop rdi ; retf
0x0000000000001c3a : pop rdi ; retf 0x49f2
0x00000000000fe3e8 : pop rdi ; sbb byte ptr [rbx], cl ; pop rsi ; sbb dh, dh ; ret
0x000000000004b565 : pop rdi ; std ; dec dword ptr [rax + 0x29] ; ret
0x00000000001a3029 : pop rdx ; add dword ptr [rax], eax ; in al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x00000000001a2fd9 : pop rdx ; add dword ptr [rax], eax ; je 0x1a3018 ; cmc ; jmp qword ptr [rcx]
0x00000000001a308d : pop rdx ; add dword ptr [rax], eax ; jo 0x1a30cd ; cmc ; jmp qword ptr [rcx]
0x00000000001a3001 : pop rdx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a2fed : pop rdx ; add dword ptr [rax], eax ; nop ; xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018a1ed : pop rdx ; add dword ptr [rax], eax ; or al, 0x1c ; hlt ; call rax
0x000000000018a1f5 : pop rdx ; add dword ptr [rax], eax ; pushfq ; sbb al, 0xf4 ; jmp rsp
0x00000000001a3051 : pop rdx ; add dword ptr [rax], eax ; sbb al, 0x35 ; cmc ; jmp qword ptr [rcx]
0x000000000014b6f6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000003c5a : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000175ea1 : pop rdx ; je 0x175e6b ; ret 0xacfc
0x0000000000175fb3 : pop rdx ; leave ; retf
0x00000000000c6195 : pop rdx ; mov eax, 0x7f ; ret
0x0000000000176e67 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000198bad : pop rdx ; out dx, eax ; call qword ptr [rax]
0x00000000000036ad : pop rdx ; out dx, eax ; nop ; retf 0xe9ee
0x0000000000082c0a : pop rdx ; pop rbx ; pop rbp ; ret
0x00000000000f148c : pop rdx ; pop rbx ; ret
0x00000000000dde99 : pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000001b9a : pop rdx ; ret
0x0000000000001b14 : pop rdx ; ret 0x2a63
0x0000000000175e83 : pop rdx ; retf
0x0000000000187039 : pop rdx ; sti ; call qword ptr [rdx + 0x22fffb59]
0x0000000000186fb5 : pop rdx ; sti ; call qword ptr [rsi]
0x0000000000187175 : pop rdx ; sti ; call rax
0x00000000001870f5 : pop rdx ; sti ; jmp rsp
0x00000000001769d0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000b3175 : pop rdx ; test al, 0xf0 ; jne 0xb31a9 ; lea rax, [rdi - 0x10] ; ret
0x0000000000159944 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15991a
0x00000000001599c2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159998
0x0000000000159e54 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159e2a
0x0000000000159ed2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x159ea8
0x000000000015af74 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15af4a
0x000000000015aff2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15afc8
0x000000000015b484 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b45a
0x000000000015b502 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15b4d8
0x00000000001521de : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018cf55 : pop rsi ; add al, byte ptr [rax] ; cmp al, 0x4f ; cli ; call rax
0x000000000018cf5d : pop rsi ; add al, byte ptr [rax] ; jl 0x18cfb7 ; cli ; jmp rsp
0x00000000000fd49b : pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000000303f6 : pop rsi ; cmp byte ptr [eax], al ; mov eax, 0xca ; syscall
0x00000000000401cb : pop rsi ; fmul st(0) ; pop r15 ; ret
0x000000000016350a : pop rsi ; mov edi, 0x89480001 ; ret
0x0000000000125315 : pop rsi ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000004021e : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x00000000000844b0 : pop rsi ; pop r15 ; jmp rax
0x00000000000222f8 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000021880 : pop rsi ; pop r15 ; ret
0x0000000000022192 : pop rsi ; ret
0x00000000000024df : pop rsi ; retf 0x8a3f
0x00000000000fe3eb : pop rsi ; sbb dh, dh ; ret
0x0000000000125343 : pop rsi ; xor eax, eax ; jmp rcx
0x000000000014c540 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001894b0 : pop rsp ; adc eax, esi ; call qword ptr [rax]
0x000000000014b9f4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001893f8 : pop rsp ; add al, dh ; jmp rax
0x0000000000193241 : pop rsp ; add byte ptr [rax], al ; ret 0xffed
0x00000000001a3245 : pop rsp ; add dword ptr [rax], eax ; fdiv dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a3281 : pop rsp ; add dword ptr [rax], eax ; or al, 0x38 ; cmc ; call qword ptr [rsi]
0x000000000014d240 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000081afc : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rsi
0x00000000000b3c85 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000008170b : pop rsp ; and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000019f914 : pop rsp ; cmc ; clc ; call qword ptr [rax]
0x00000000000cc02b : pop rsp ; cmp al, 0x2e ; jne 0xcbffe ; jmp 0xcc03f
0x000000000018c550 : pop rsp ; cmp bh, cl ; call rax
0x0000000000198fc4 : pop rsp ; cmp bh, dl ; call qword ptr [rax]
0x000000000018c830 : pop rsp ; cwde ; stc ; jmp rsp
0x0000000000179e1c : pop rsp ; hlt ; jmp qword ptr [rcx]
0x000000000018a40c : pop rsp ; imul eax, dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret
0x000000000018c230 : pop rsp ; in eax, dx ; clc ; call qword ptr [rax]
0x000000000018c02c : pop rsp ; inc dword ptr [rcx] ; add byte ptr [rsi + rdx*4 - 8], bh ; call rsp
0x0000000000187868 : pop rsp ; jb 0x187858 ; jmp rsp
0x0000000000188660 : pop rsp ; je 0x188654 ; jmp rax
0x00000000001890e0 : pop rsp ; jge 0x1890d5 ; jmp qword ptr [rax]
0x00000000001964d4 : pop rsp ; jle 0x1964c8 ; jmp qword ptr [rbx]
0x00000000000700cb : pop rsp ; jmp rax
0x0000000000187970 : pop rsp ; js 0x187960 ; call rax
0x000000000018d104 : pop rsp ; mov bl, 1 ; add ah, bh ; jle 0x18d10c ; jmp rsp
0x00000000000f1cf7 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000000feed3 : pop rsp ; mov rdx, rax ; jmp rcx
0x00000000000cd2c3 : pop rsp ; neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014a3d0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000187c28 : pop rsp ; out 0xea, al ; jmp qword ptr [rax]
0x0000000000188e01 : pop rsp ; out dx, eax ; jmp rax
0x00000000001a4424 : pop rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; jp 0x1a4427 ; call rcx
0x0000000000188648 : pop rsp ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rax]
0x000000000006674c : pop rsp ; pop r13 ; jmp 0x72a05
0x00000000000798ef : pop rsp ; pop r13 ; jmp rax
0x00000000000401c7 : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; pop r15 ; ret
0x000000000004021a : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x00000000000844ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000222f4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002187c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e5da : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012533f : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000037cb8 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000023d38 : pop rsp ; pop r13 ; ret
0x00000000000b39da : pop rsp ; pop r14 ; ret
0x0000000000001eda : pop rsp ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000c3652 : pop rsp ; pop rbp ; ret
0x000000000018c610 : pop rsp ; pop rcx ; stc ; jmp qword ptr [rax]
0x00000000000039d4 : pop rsp ; ret
0x00000000000032e1 : pop rsp ; ret 0x2ec0
0x00000000000500c4 : pop rsp ; ret 0x64c0
0x000000000000379e : pop rsp ; ret 0xf84d
0x00000000001a4ed4 : pop rsp ; ret 0xfff5
0x000000000018ba88 : pop rsp ; retf
0x0000000000046149 : pop rsp ; retf 0x4df0
0x00000000001891e8 : pop rsp ; retf 0xffef
0x00000000001a7f24 : pop rsp ; retf 0xfff6
0x000000000012b0b0 : pop rsp ; retf 0xfffb
0x000000000005c9d0 : pop rsp ; retf 9
0x0000000000176027 : pop rsp ; sbb ebp, ebx ; retf
0x000000000018d3c0 : pop rsp ; std ; jmp qword ptr [rax]
0x0000000000188a58 : pop rsp ; sti ; out dx, al ; call qword ptr [rax]
0x00000000000b3e02 : pop rsp ; sub rax, rdx ; ret
0x00000000001acd24 : pop rsp ; test dword ptr [rcx], 0xf7d4a800 ; call qword ptr [rbx]
0x00000000000c1189 : pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000188370 : pop rsp ; xchg esp, ebp ; call rax
0x0000000000076a3f : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000621c3 : popfq ; add byte ptr [rax], al ; add byte ptr [rbx - 0x90343], al ; call qword ptr [rax]
0x000000000018d515 : popfq ; add byte ptr [rax], al ; in al, dx ; ret 0xfffd
0x00000000000a239f : popfq ; clc ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000178da9 : popfq ; int1 ; jmp rax
0x0000000000175fac : popfq ; jrcxz 0x175f71 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000000e186d : popfq ; ret
0x00000000000b562e : popfq ; ret 0x3948
0x0000000000002634 : popfq ; ret 0xb675
0x000000000011c83d : popfq ; ret 0xd284
0x00000000000e1c82 : popfq ; ret 0xfffa
0x000000000000275b : popfq ; retf
0x0000000000176d62 : popfq ; retf 0xde4f
0x000000000014dc20 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008850f : popfq ; xchg eax, edx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000035501 : por mm0, mm1 ; ret
0x0000000000035500 : por xmm0, xmm1 ; ret
0x00000000001398c2 : psllq mm1, qword ptr [r15] ; jg 0x1398dd ; ret
0x000000000013c3e2 : psllq mm1, qword ptr [r15] ; jg 0x13c3fd ; ret
0x00000000001398c3 : psllq mm1, qword ptr [rdi] ; jg 0x1398dc ; ret
0x000000000013c3e3 : psllq mm1, qword ptr [rdi] ; jg 0x13c3fc ; ret
0x000000000009c816 : psllq mm1, qword ptr [rdi] ; jg 0x9c82a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c815 : psllq mm1, qword ptr [rdi] ; jg 0x9c82b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c877 : psllq mm1, qword ptr [rdi] ; jg 0x9c88c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009d4e6 : psllq mm1, qword ptr [rdi] ; jg 0x9d4fa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d4e5 : psllq mm1, qword ptr [rdi] ; jg 0x9d4fb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009d547 : psllq mm1, qword ptr [rdi] ; jg 0x9d55c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009fac6 : psllq mm1, qword ptr [rdi] ; jg 0x9fada ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009fac5 : psllq mm1, qword ptr [rdi] ; jg 0x9fadb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009fb27 : psllq mm1, qword ptr [rdi] ; jg 0x9fb3c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0596 : psllq mm1, qword ptr [rdi] ; jg 0xa05aa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0595 : psllq mm1, qword ptr [rdi] ; jg 0xa05ab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a05f7 : psllq mm1, qword ptr [rdi] ; jg 0xa060c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000fbb4d : psrld mm5, qword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000017ce91 : psubd mm7, mm7 ; js 0x17ceab ; cli ; call rax
0x0000000000188601 : push -0x12 ; call rsp
0x00000000001a5330 : push -0x13fffe83 ; jrcxz 0x1a5333 ; call qword ptr [rdi]
0x0000000000191afd : push -0x15 ; call qword ptr [rdx]
0x00000000000d962c : push -0x16000001 ; ret 0
0x00000000001a2430 : push -0x23fffeb2 ; add dh, ch ; call qword ptr [rdx]
0x000000000019df30 : push -0x23fffef7 ; cmp ebx, esi ; call rcx
0x000000000011adf8 : push -0x27c0010 ; movsxd rcx, dword ptr [rax - 0x77] ; ret
0x0000000000174d84 : push -0x30 ; retf 0xe72e
0x00000000000d9d70 : push -0x49f0dd8c ; push rsi ; cmp dh, dh ; ret 0xf08
0x000000000017440e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000001765b5 : push -0x57d3205 ; call 0xffffffffab2530b5
0x00000000001745c1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000002cf5 : push -0x7329150 ; ret
0x00000000000a5595 : push -0x763076b4 ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x00000000000eac82 : push -0x76b7000d ; ret 0x348
0x000000000005317b : push -0x7c000006 ; ret 0x8908
0x000000000015cb64 : push -0x9ffffff ; ret 0x7501
0x000000000019f931 : push -0xc ; call qword ptr [rax]
0x0000000000189af1 : push -0xe ; jmp rax
0x00000000000b3167 : push -0xfb872b8 ; ret
0x00000000000c5b5b : push 0 ; add byte ptr [rax], al ; syscall
0x0000000000194059 : push 0 ; add byte ptr [rdi + rsi*8 - 0x13], ah ; call qword ptr [rsi]
0x0000000000175db5 : push 0x1b6e41b5 ; std ; retf
0x000000000011adc5 : push 0x1b804 ; add byte ptr [rax], al ; ret
0x00000000000c180e : push 0x2f ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000196430 : push 0x3c00008e ; jle 0x19642c ; jmp qword ptr [rbx]
0x0000000000198e30 : push 0x3c0000b8 ; jle 0x198e39 ; call rsp
0x0000000000195b3f : push 0x44180e0a ; ret
0x0000000000162fd8 : push 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000000000007502d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000011a987 : push 0x5c415d5b ; ret
0x0000000000176a42 : push 0x6e ; ja 0x1769cd ; ret 0x48f
0x0000000000003673 : push 0x7514dab8 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x000000000007c80a : push 0x75c08548 ; ret
0x00000000001a810e : push 0xa ; ret
0x0000000000199730 : push 0xc0000c1 ; jrcxz 0x199739 ; call qword ptr [rdx]
0x0000000000176322 : push 0xfd4cbe ; retf 0xf64
0x00000000000c1b29 : push 0xfe8002f ; retf 0xfffb
0x000000000002f976 : push 0xfffffff ; retf 0xc089
0x00000000001a4091 : push 1 ; add byte ptr [rdx - 0xb], ch ; call rcx
0x00000000001203ce : push 2 ; add rdi, 0x68 ; jmp rcx
0x000000000009d272 : push 5 ; add byte ptr [rax], al ; ret
0x00000000001895ab : push qword ptr [rax + 0x10] ; add dword ptr [rax], eax ; cld ; sub esi, eax ; call rax
0x0000000000186e9f : push qword ptr [rax + 0x25] ; sti ; jmp rax
0x0000000000177b77 : push qword ptr [rax + 0x27] ; out dx, al ; call qword ptr [rsi]
0x0000000000122a9d : push qword ptr [rax + 0x29] ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000186eb7 : push qword ptr [rax + 0x2a] ; sti ; jmp rax
0x00000000001888f3 : push qword ptr [rax + 0x3c0000ca] ; ret 0xffee
0x0000000000186c77 : push qword ptr [rax + 0x40fffb33] ; xor edi, ebx ; call rax
0x0000000000186f97 : push qword ptr [rax + 0x40fffb56] ; push rsi ; sti ; call rax
0x000000000018659b : push qword ptr [rax + 0x40fffd42] ; std ; call rax
0x000000000018656f : push qword ptr [rax + 0x40fffd45] ; cmp al, 0xfd ; call qword ptr [rax]
0x0000000000186387 : push qword ptr [rax + 0x41] ; cld ; inc dword ptr [rax + 0x42] ; cld ; call qword ptr [rax]
0x00000000001865a7 : push qword ptr [rax + 0x44] ; std ; call qword ptr [rax]
0x00000000001873af : push qword ptr [rax + 0x49] ; sti ; call qword ptr [rax]
0x00000000001873a7 : push qword ptr [rax + 0x4a] ; sti ; jmp rax
0x00000000001863e7 : push qword ptr [rax + 0x57] ; cld ; jmp qword ptr [rax + 0x10fffc49]
0x000000000018640b : push qword ptr [rax + 0x66] ; cld ; call qword ptr [rax]
0x00000000000d4262 : push qword ptr [rax + rcx + 0x39] ; ret
0x0000000000072b95 : push qword ptr [rax + rcx + 0x5b] ; ret
0x0000000000189fc3 : push qword ptr [rax + rdx*2 - 0x3823ffff] ; call rax
0x0000000000186c13 : push qword ptr [rax + rsi + 0x3044fffb] ; sti ; call rsp
0x0000000000189fe3 : push qword ptr [rax - 0x23fffeaf] ; sal bl, cl ; call qword ptr [rax]
0x0000000000178e4f : push qword ptr [rax - 0x29] ; int1 ; inc eax ; fyl2x ; call qword ptr [rax]
0x0000000000186813 : push qword ptr [rax - 0x2e] ; cli ; inc dword ptr [rax - 0x2c] ; cli ; jmp qword ptr [rax]
0x0000000000178ebb : push qword ptr [rax - 0x3f000dc8] ; cmp dl, dh ; call rax
0x0000000000178d9f : push qword ptr [rax - 0x3f000e67] ; wait ; int1 ; call rax
0x000000000018c27b : push qword ptr [rax - 0x3fffdf1] ; idiv al ; call qword ptr [rax]
0x000000000018b1c3 : push qword ptr [rax - 0x43fffe4b] ; in al, 0xf6 ; jmp rsp
0x000000000018a48b : push qword ptr [rax - 0x53fffe90] ; cmc ; call rax
0x0000000000178d7b : push qword ptr [rax - 0x7b] ; sti ; jmp rax
0x0000000000186a5b : push qword ptr [rax - 0xf] ; cli ; inc eax ; cli ; call qword ptr [rax]
0x00000000001868cf : push qword ptr [rax - 6] ; cli ; push qword ptr [rax] ; cld ; cli ; call qword ptr [rax]
0x00000000001868d3 : push qword ptr [rax] ; cld ; cli ; call qword ptr [rax]
0x00000000001863b7 : push qword ptr [rax] ; cld ; jmp qword ptr [rax]
0x000000000018690f : push qword ptr [rax] ; cli ; cli ; push rax ; sti ; cli ; call rax
0x0000000000178ddb : push qword ptr [rax] ; cwde ; int1 ; jmp rax
0x000000000017bdeb : push qword ptr [rax] ; fdiv st(1), st(0) ; jmp qword ptr [rax]
0x00000000001785c7 : push qword ptr [rax] ; idiv bh ; call rax
0x0000000000186423 : push qword ptr [rax] ; jo 0x186427 ; call rax
0x000000000009bebf : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000178d8b : push qword ptr [rax] ; mov edi, ebx ; jmp qword ptr [rax + 0x10fffb8c]
0x0000000000186403 : push qword ptr [rax] ; movsxd rdi, esp ; call rax
0x0000000000188913 : push qword ptr [rax] ; retf
0x000000000018687f : push qword ptr [rax] ; sar dl, 0xff ; add cl, 0xfa ; call rax
0x0000000000186977 : push qword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x000000000015e4e8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000162fd6 : push qword ptr [rbp + 0x6a] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000150d79 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000007c7ad : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000188433 : push qword ptr [rbp + rbp*4 - 0x5ff40000] ; in al, dx ; jmp rax
0x000000000012b870 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000004695e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000010c098 : push qword ptr [rbp - 0x13] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011428b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000462f6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000010110a : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007cb50 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010280a : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x000000000003610c : push qword ptr [rbx + 1] ; ret
0x00000000000733aa : push qword ptr [rbx + 2] ; mov eax, dword ptr [rdx] ; ret
0x0000000000045b56 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x000000000018a03b : push qword ptr [rbx + rdx*2 - 0x2753ffff] ; call rax
0x0000000000122bb2 : push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x00000000001777e7 : push qword ptr [rbx - 0x59001247] ; retf
0x00000000000f7e66 : push qword ptr [rbx - 0x77] ; fistp qword ptr [rax + 0x14] ; syscall
0x000000000006d801 : push qword ptr [rbx - 0x77] ; ret 0xe283
0x000000000017acaf : push qword ptr [rcx + rdi*8 - 0xb] ; call qword ptr [rdx]
0x000000000017acab : push qword ptr [rcx + rdi*8 - 0xb] ; push qword ptr [rcx + rdi*8 - 0xb] ; call qword ptr [rdx]
0x00000000000681d8 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x000000000006203e : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test eax, edi ; idiv bh ; jmp qword ptr [rax]
0x00000000000cfae4 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000005b0de : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000790ff : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000008cb81 : push qword ptr [rcx] ; shr cl, cl ; ret 0xfffe
0x000000000004268c : push qword ptr [rcx] ; shr cl, cl ; retf
0x00000000000ef2fd : push qword ptr [rdi + 0x10] ; ret
0x00000000000ec92f : push qword ptr [rdi + 0x1e] ; ret
0x00000000000c50bb : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000ec551 : push qword ptr [rdi + 0x24] ; ret
0x00000000000f78ba : push qword ptr [rdi + 0x2b] ; ret
0x00000000000ec677 : push qword ptr [rdi + 0x2e] ; ret
0x00000000000ec602 : push qword ptr [rdi + 0x33] ; ret
0x00000000000c4de8 : push qword ptr [rdi + 0x35] ; ret
0x00000000000c5af6 : push qword ptr [rdi + 0x37] ; ret
0x00000000000e8188 : push qword ptr [rdi + 0x3d] ; ret
0x00000000000c1706 : push qword ptr [rdi + 0x3f] ; ret
0x00000000000e82f8 : push qword ptr [rdi + 0x45] ; ret
0x00000000000c5db6 : push qword ptr [rdi + 0x47] ; ret
0x000000000003618d : push qword ptr [rdi + 0x48] ; ret
0x00000000000eca92 : push qword ptr [rdi + 0x4b] ; ret
0x00000000000ed858 : push qword ptr [rdi + 0x4d] ; ret
0x00000000000ec48b : push qword ptr [rdi + 0x52] ; ret
0x0000000000039b58 : push qword ptr [rdi + 0x55] ; ret
0x00000000000e7e77 : push qword ptr [rdi + 0x56] ; add rsp, 0x68 ; ret
0x00000000000c4c1b : push qword ptr [rdi + 0x5a] ; ret
0x00000000000c4cbe : push qword ptr [rdi + 0x5f] ; ret
0x00000000000edb7b : push qword ptr [rdi + 0x62] ; ret
0x00000000000f6d01 : push qword ptr [rdi + 0x6c] ; ret
0x00000000000ec20b : push qword ptr [rdi + 0x72] ; ret
0x00000000000f5c91 : push qword ptr [rdi + 0x74] ; ret
0x0000000000036065 : push qword ptr [rdi + 0x78] ; add rsp, 0x10 ; ret
0x00000000000f3083 : push qword ptr [rdi + 0xa] ; ret
0x00000000000e73b2 : push qword ptr [rdi + 0xb] ; ret
0x0000000000036141 : push qword ptr [rdi + 0xc] ; ret
0x00000000000ef256 : push qword ptr [rdi + 0xf] ; ret
0x00000000000e6fba : push qword ptr [rdi + 3] ; ret
0x00000000000e7659 : push qword ptr [rdi + 4] ; ret
0x00000000000e7008 : push qword ptr [rdi + 5] ; ret
0x0000000000051bbf : push qword ptr [rdi + 6] ; ret
0x00000000000bf946 : push qword ptr [rdi + 7] ; ret
0x00000000000ecc55 : push qword ptr [rdi + 8] ; ret
0x0000000000051b8c : push qword ptr [rdi + 9] ; ret
0x000000000017a56b : push qword ptr [rdi + rax*8] ; hlt ; inc eax ; hlt ; hlt ; jmp rdi
0x00000000001884b3 : push qword ptr [rdi + rbp*4 - 0x56b40000] ; in al, dx ; call rax
0x0000000000051bfe : push qword ptr [rdi + rcx - 0xd] ; ret
0x000000000018710b : push qword ptr [rdi + rdx*2 + 0x5744fffb] ; sti ; call rsp
0x0000000000178c7f : push qword ptr [rdi + rdx*2 + 0x57d4fff1] ; int1 ; jmp rsp
0x0000000000178c7b : push qword ptr [rdi - 0x4b000ea9] ; push rdi ; int1 ; call rsp
0x0000000000186497 : push qword ptr [rdx + 0x3d] ; std ; push qword ptr [rdx + 0x3e] ; std ; call qword ptr [rax]
0x000000000018649b : push qword ptr [rdx + 0x3e] ; std ; call qword ptr [rax]
0x0000000000186b4b : push qword ptr [rdx + 0x42fffb31] ; xor ebx, edi ; call rdx
0x0000000000187043 : push qword ptr [rdx + 0x42fffb58] ; pop rax ; sti ; call rdx
0x00000000000c0af1 : push qword ptr [rdx + rdi - 0x77] ; ret 0xe283
0x000000000018a633 : push qword ptr [rdx + rdi*2 - 0x57c3ffff] ; cmc ; jmp rsp
0x000000000004f48a : push qword ptr [rdx - 0x2d] ; mov rdi, r13 ; call 0x7bf88
0x0000000000187263 : push qword ptr [rdx] ; sti ; jmp qword ptr [rdx + 0x12fffb4a]
0x0000000000179d07 : push qword ptr [rsi + 0x14] ; hlt ; call rax
0x0000000000186fdf : push qword ptr [rsi + 0x46fffb55] ; push rbp ; sti ; call rsi
0x000000000018a103 : push qword ptr [rsi + rdx*2 - 0x1953ffff] ; jmp rax
0x00000000000f85d7 : push qword ptr [rsi + rsi - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000f13fd : push qword ptr [rsp + rbp] ; pop rbp ; pop r12 ; ret
0x0000000000120466 : push r12 ; mov eax, 1 ; ret
0x00000000001227f8 : push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000001227f6 : push r14 ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000007bf6c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000017446c : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000119cc5 : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000119b45 : push rax ; adc al, 0xf ; retf 0xd789
0x00000000000451ae : push rax ; adc al, ch ; ret
0x0000000000119cbc : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000007268a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000f1f52 : push rax ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000007d5d1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000119b3a : push rax ; adc byte ptr [rdi], cl ; retf 0xd189
0x00000000001188a9 : push rax ; adc dh, dh ; ret 0x7401
0x00000000001135cf : push rax ; add al, 0xe9 ; retf 0xfffc
0x0000000000096abd : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007bf6d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000078bac : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a24b4 : push rax ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000010b803 : push rax ; add dword ptr [rax], eax ; add al, ch ; ret 0xfffd
0x0000000000189fc5 : push rax ; add dword ptr [rax], eax ; fadd st(7), st(0) ; call rax
0x00000000001a2619 : push rax ; add dword ptr [rax], eax ; hlt ; add al, 0xf5 ; call qword ptr [rdi]
0x00000000001a2601 : push rax ; add dword ptr [rax], eax ; in al, dx ; add al, 0xf5 ; call qword ptr [rdi]
0x00000000000ad816 : push rax ; add dword ptr [rcx], edi ; retf
0x00000000001869eb : push rax ; add eax, 0xdfa0fffb ; cli ; jmp rax
0x0000000000042705 : push rax ; add eax, 0xe2e80000 ; ret 0xfffe
0x0000000000125709 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000073379 : push rax ; and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000186e9b : push rax ; and eax, 0x2570fffb ; sti ; jmp rax
0x000000000004fc97 : push rax ; call 0x7bf83
0x0000000000026822 : push rax ; call r14
0x000000000002a5a4 : push rax ; call r15
0x0000000000022c68 : push rax ; call rbx
0x00000000001863a7 : push rax ; cld ; call qword ptr [rax]
0x00000000001863cd : push rax ; cld ; call rax
0x0000000000186997 : push rax ; cld ; cli ; call rax
0x00000000000cef8b : push rax ; cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xcef88 ; ret
0x00000000001863a0 : push rax ; cld ; jmp qword ptr [rax]
0x0000000000178e05 : push rax ; cld ; jmp rax
0x00000000001868f0 : push rax ; cli ; cli ; call qword ptr [rax]
0x000000000018741c : push rax ; cmp al, 0xfb ; call rax
0x0000000000186483 : push rax ; cmp al, 0xfd ; jmp rax
0x0000000000187450 : push rax ; cmp bl, bh ; call rax
0x000000000006f3f4 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000178ecb : push rax ; cmp dl, dh ; inc dword ptr [rax] ; cmp edx, esi ; call qword ptr [rax]
0x00000000001a3360 : push rax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x0000000000187414 : push rax ; cmp ebx, edi ; call rax
0x0000000000187458 : push rax ; cmp edi, ebx ; call rax
0x0000000000178efb : push rax ; cmp edx, esi ; call qword ptr [rax]
0x000000000007f578 : push rax ; dec dword ptr [rax - 0x7b] ; ret 0x3175
0x000000000007f62c : push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000010bf86 : push rax ; dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x10bf99 ; ret
0x000000000018685b : push rax ; enter -6, 0x40 ; retf 0xfffa
0x000000000004e1d6 : push rax ; fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xe383
0x0000000000193a40 : push rax ; in al, 0xed ; call qword ptr [rdi]
0x00000000001ac880 : push rax ; jne 0x1ac881 ; jmp qword ptr [rdx]
0x00000000000ff69c : push rax ; jrcxz 0xff6a7 ; dec dword ptr [rax - 0x75] ; adc eax, dword ptr [rcx - 0x77] ; ret
0x00000000001ac618 : push rax ; lock add dword ptr [rax], eax ; push rsp ; ja 0x1ac621 ; jmp qword ptr [rdx]
0x00000000001744da : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000001874a8 : push rax ; mov al, 0xfc ; jmp rax
0x0000000000120c5f : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000024f81 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000029335 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000259c2 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call rbx
0x00000000001015ab : push rax ; mov rsi, rdx ; call rax
0x000000000003666e : push rax ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x0000000000119b2f : push rax ; or al, 0xf ; retf 0xd189
0x00000000000d0076 : push rax ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000007f192 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000828f0 : push rax ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x00000000000cd2e4 : push rax ; or byte ptr [rbp + 0x39], al ; ret 0x457f
0x0000000000119b1f : push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x000000000007f335 : push rax ; or dh, dh ; ret 0x7502
0x000000000014a2dc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a1f40 : push rax ; out dx, al ; hlt ; jmp qword ptr [rcx]
0x0000000000178cf7 : push rax ; outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x0000000000185c4e : push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000010b20d : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a25c6 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000186f80 : push rax ; pop rcx ; sti ; jmp rax
0x00000000001a2618 : push rax ; push rax ; add dword ptr [rax], eax ; hlt ; add al, 0xf5 ; call qword ptr [rdi]
0x0000000000187198 : push rax ; push rsi ; sti ; jmp rax
0x0000000000034e6f : push rax ; ret
0x00000000000504d9 : push rax ; ret 0xf41
0x00000000001a9818 : push rax ; ret 1
0x000000000011d1c4 : push rax ; retf
0x000000000019a018 : push rax ; retf 0
0x000000000000b180 : push rax ; retf 0xe
0x0000000000080ba6 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000018ee18 : push rax ; sbb byte ptr [rax], al ; add ah, al ; add dl, ch ; call qword ptr [rcx]
0x000000000007d5c6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072c59 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000119b50 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x00000000000878ec : push rax ; sbb eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000102625 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000186990 : push rax ; stc ; cli ; call qword ptr [rax]
0x00000000001868f7 : push rax ; std ; cli ; call rax
0x000000000018647b : push rax ; std ; jmp qword ptr [rcx]
0x000000000018737d : push rax ; sti ; call qword ptr [rax + 0x10fffb4f]
0x000000000018742c : push rax ; sti ; call qword ptr [rax - 0x2f0004d4]
0x0000000000187379 : push rax ; sti ; call qword ptr [rax]
0x0000000000186cdc : push rax ; sti ; call rax
0x0000000000186913 : push rax ; sti ; cli ; call rax
0x0000000000186974 : push rax ; sti ; cli ; push qword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x0000000000186cbc : push rax ; sub bh, bl ; call rax
0x0000000000186eb3 : push rax ; sub bh, bl ; push qword ptr [rax + 0x2a] ; sti ; jmp rax
0x0000000000186ccc : push rax ; sub bl, bh ; call rax
0x0000000000186cc4 : push rax ; sub ebx, edi ; call rax
0x000000000000cc80 : push rax ; syscall
0x00000000000fc00b : push rax ; test al, 0x2b ; add byte ptr [rax], al ; jne 0xfbfda ; jmp 0xfbfd1
0x00000000001866fb : push rax ; xlatb ; cli ; call rax
0x0000000000187440 : push rax ; xor bh, bl ; call rax
0x0000000000186a88 : push rax ; xor bh, bl ; jmp rax
0x00000000001873fc : push rax ; xor bl, bh ; call rax
0x00000000000eaf1f : push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000017446d : push rax ; xor byte ptr [rcx], ah ; retf
0x0000000000194e70 : push rax ; xor ch, dh ; jmp rdi
0x0000000000187404 : push rax ; xor edi, ebx ; call rax
0x00000000000ec3c5 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000010f7f7 : push rbp ; adc dword ptr [rcx + rcx*4 - 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e11b1 : push rbp ; add al, 0xf7 ; ret 0xfffd
0x000000000004a465 : push rbp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000550b7 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000124801 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011abb0 : push rbp ; add byte ptr [rdi], cl ; retf 0x1089
0x00000000000254d2 : push rbp ; add byte ptr [rdi], cl ; retf 0xd285
0x000000000004d0cf : push rbp ; add byte ptr ss:[rax + 0x29], cl ; retf 0x8948
0x0000000000078a3d : push rbp ; add cl, byte ptr [rax + 0x39] ; ret 0x5c76
0x000000000010f91a : push rbp ; add dh, dh ; ret
0x000000000010f7dc : push rbp ; add dh, dh ; ret 0x7507
0x00000000001247fc : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x124860 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001248ec : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x124950 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001a2af5 : push rbp ; add dword ptr [rax], eax ; cmp byte ptr [rsi], ch ; cmc ; call qword ptr [rax]
0x00000000001a2ba1 : push rbp ; add dword ptr [rax], eax ; in al, dx ; cmc ; jmp qword ptr [rcx]
0x000000000018a0a5 : push rbp ; add dword ptr [rax], eax ; mov esp, fs ; call rax
0x000000000018a0ad : push rbp ; add dword ptr [rax], eax ; pushfq ; in al, 0xf3 ; jmp rsp
0x00000000001a2b8d : push rbp ; add dword ptr [rax], eax ; shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000000c819d : push rbp ; add dword ptr [rcx - 0x73], ecx ; add r13b, r11b ; retf
0x00000000001254fa : push rbp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000078eae : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000006f46b : push rbp ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000001cd1 : push rbp ; je 0x1cff ; ret
0x0000000000003c2a : push rbp ; jg 0x3c99 ; xchg eax, ebp ; retf 0x10bf
0x0000000000003c29 : push rbp ; jg 0x3c9a ; xchg eax, ebp ; retf 0x10bf
0x000000000018a871 : push rbp ; jmp rax
0x00000000001227f9 : push rbp ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000008d3af : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000008cf7a : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x4890
0x000000000008d549 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x000000000008bc32 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000101e05 : push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000014ed68 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000101fe9 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000188de1 : push rbp ; out dx, eax ; jmp qword ptr [rax]
0x0000000000039b5a : push rbp ; ret
0x0000000000058c17 : push rbp ; ret 0x35
0x000000000000275d : push rbp ; retf
0x000000000000267e : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x261a ; loop 0x2666 ; ret 0x943d
0x00000000001871a5 : push rbp ; sti ; call qword ptr [rax + 0x20fffb54]
0x0000000000186fe5 : push rbp ; sti ; call rsi
0x0000000000186fe1 : push rbp ; sti ; inc dword ptr [rsi + 0x55] ; sti ; call rsi
0x00000000000d6392 : push rbp ; xor byte ptr [rax + 0x63], cl ; adc al, 0x93 ; add rdx, rbx ; jmp rdx
0x0000000000102670 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000cd645 : push rbx ; adc byte ptr [rax + 0x39], cl ; retf 0x574
0x0000000000074199 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000119ab8 : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000e6186 : push rbx ; add al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e6299 : push rbx ; add al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000e622b : push rbx ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cae98 : push rbx ; add al, 0x75 ; sbb dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000cd750 : push rbx ; add al, 0xeb ; ret
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000c640a : push rbx ; add byte ptr [r13 - 0x36], sil ; jmp 0xc63c0
0x000000000004d222 : push rbx ; add byte ptr ss:[rax + 0x29], cl ; retf 0x8948
0x00000000000c93c5 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001a2999 : push rbx ; add dword ptr [rax], eax ; add al, 0xf ; cmc ; jmp qword ptr [rcx]
0x00000000001a29ad : push rbx ; add dword ptr [rax], eax ; and byte ptr [rdi], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a28e5 : push rbx ; add dword ptr [rax], eax ; clc ; retf 0xfff8
0x000000000018a03d : push rbx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; fdiv st(3) ; call rax
0x00000000000c93f2 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000774c2 : push rbx ; and byte ptr [rcx], ch ; retf 0x54e9
0x0000000000119cb7 : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000125fb0 : push rbx ; call 0x122ab3
0x0000000000079668 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000079562 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x4f74
0x00000000000020ab : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000015c415 : push rbx ; jb 0x15c425 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c63b8 : push rbx ; jne 0xc63df ; xor eax, eax ; ret
0x00000000000c63b7 : push rbx ; jne 0xc63e0 ; xor eax, eax ; ret
0x00000000000b314c : push rbx ; lea rax, [rdi - 0x10] ; ret
0x00000000000e7331 : push rbx ; mov ebp, edx ; mov rbx, rsi ; mov eax, ecx ; syscall
0x00000000000b5270 : push rbx ; mov rbx, rdi ; call 0x21496
0x000000000009d8d2 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000079664 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000001056f5 : push rbx ; or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x00000000000faede : push rbx ; or byte ptr [rax], al ; xor edx, edx ; call 0x117997
0x00000000000cfbac : push rbx ; or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000003eb4 : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000188da1 : push rbx ; out dx, eax ; call qword ptr [rax]
0x0000000000034b6c : push rbx ; ret
0x0000000000058319 : push rbx ; retf
0x00000000000526cd : push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x0000000000119caa : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000000ffd29 : push rbx ; sbb dh, dh ; ret 0x7508
0x00000000001865bd : push rbx ; std ; call qword ptr [rcx]
0x000000000018664d : push rbx ; std ; call rsi
0x00000000001866bd : push rbx ; std ; jmp qword ptr [rax]
0x00000000001865cd : push rbx ; std ; jmp rsi
0x00000000001ada01 : push rbx ; sti ; call qword ptr [rdx]
0x0000000000187171 : push rbx ; sti ; inc dword ptr [rax + 0x5a] ; sti ; call rax
0x00000000000d1e09 : push rbx ; sub al, 0x89 ; ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x00000000000ce3c5 : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000119cc0 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000002dac : push rbx ; xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x0000000000175e9c : push rbx ; xchg eax, edx ; jae 0x175e7b ; push rsi ; pop rdx ; je 0x175e70 ; ret 0xacfc
0x0000000000119cc8 : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000125ff2 : push rbx ; xor ebp, ebp ; sub rsp, 8 ; call 0x122ae9
0x000000000008c244 : push rcx ; add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; ret 0x14d
0x000000000018d5a5 : push rcx ; add al, byte ptr [rax] ; sub al, 0xc8 ; std ; call rsp
0x00000000000500bc : push rcx ; add byte ptr ss:[rcx + 0x63], cl ; ror byte ptr [rax - 0x77], 0x5c ; ret 0x64c0
0x00000000000b4b58 : push rcx ; add dword ptr [rax], eax ; add rcx, rax ; jmp 0xb4b2a
0x0000000000189fe5 : push rcx ; add dword ptr [rax], eax ; fcom st(0), st(2) ; call qword ptr [rax]
0x000000000008e005 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000175125 : push rcx ; call qword ptr [rsi]
0x000000000018cf91 : push rcx ; cli ; jmp qword ptr [rax]
0x000000000015bc0d : push rcx ; jl 0x15bc5e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000015bd74 : push rcx ; jl 0x15bdc5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000019e109 : push rcx ; jmp rdx
0x0000000000001b30 : push rcx ; jns 0x1b3d ; ret
0x000000000008792f : push rcx ; jo 0x8792c ; ret 0
0x00000000000e78ce : push rcx ; mov eax, 0x101 ; syscall
0x00000000001448e6 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000011b919 : push rcx ; or byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x00000000000f2407 : push rcx ; or dh, dh ; ret 0x7401
0x00000000001865bc : push rcx ; push rbx ; std ; call qword ptr [rcx]
0x000000000018664c : push rcx ; push rbx ; std ; call rsi
0x00000000001866bc : push rcx ; push rbx ; std ; jmp qword ptr [rax]
0x00000000001865cc : push rcx ; push rbx ; std ; jmp rsi
0x00000000000e8b1b : push rcx ; ret
0x000000000011b87a : push rcx ; sbb byte ptr [rbp - 0x75], cl ; pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x000000000008050d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret
0x0000000000187235 : push rcx ; sti ; call rdx
0x0000000000187375 : push rcx ; sti ; jmp qword ptr [rax + 0x10fffb50]
0x000000000011483d : push rcx ; sub al, byte ptr [rax] ; cmp eax, 1 ; jg 0x114850 ; ret
0x0000000000114858 : push rcx ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000061590 : push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a0962 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009ed32 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000313e7 : push rdi ; adc al, 0xf ; retf 0xfa83
0x00000000000855fc : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5974
0x00000000000451aa : push rdi ; adc byte ptr [rax - 0x77], cl ; push rax ; adc al, ch ; ret
0x00000000000a0ac0 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000f1e2a : push rdi ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000b4ac3 : push rdi ; adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000313d8 : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000000a0798 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a07aa : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009dd3a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000009eb7a : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x0000000000139a29 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000a076a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a2d09 : push rdi ; add dword ptr [rax], eax ; xor ch, dh ; jmp qword ptr [rcx]
0x000000000009ddec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009ec3c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000a07c8 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000133828 : push rdi ; clc ; ret
0x00000000001863e9 : push rdi ; cld ; jmp qword ptr [rax + 0x10fffc49]
0x00000000001339a0 : push rdi ; cld ; ret
0x00000000001344c7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000139309 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000c5068 : push rdi ; cmp eax, 0xfffff001 ; jae 0xc5079 ; ret
0x000000000015f3da : push rdi ; dec dword ptr [rax + 0x21] ; ret 0x7be9
0x000000000015ee7c : push rdi ; dec dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000139289 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000178c81 : push rdi ; int1 ; call rsp
0x0000000000178c85 : push rdi ; int1 ; jmp rsp
0x00000000001390da : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000007be94 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013916a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000010f8cb : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000313c9 : push rdi ; or al, 0xf ; retf 0xd289
0x000000000004e843 : push rdi ; or al, 0xf6 ; ret 0xf01
0x0000000000085600 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5974
0x00000000000a080c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a084a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a07ea : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b1c35 : push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x000000000004797a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004625a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000046261 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000007663a : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000078bb0 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000313bf : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000009dfd0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000009ee30 : push rdi ; or eax, 0x1d478d48 ; ret
0x0000000000087350 : push rdi ; or eax, 0x450f4800 ; ret 0xc3f3
0x00000000000a2413 : push rdi ; or eax, dword ptr [rax] ; je 0xa23d7 ; ret
0x0000000000195879 : push rdi ; out dx, al ; jmp qword ptr [rsi]
0x00000000001575e5 : push rdi ; ret
0x000000000015a8fe : push rdi ; ret 0xff3
0x000000000015a423 : push rdi ; retf
0x000000000015a4a3 : push rdi ; retf 0xcab2
0x000000000007f220 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000fd3db : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000001259b3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000000313fe : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000010c3dd : push rdi ; shr byte ptr [rdx], 1 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001346c7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000018dc21 : push rdi ; std ; jmp qword ptr [rdx]
0x0000000000133eea : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000186fd5 : push rdi ; sti ; call qword ptr [rsi + 0x26fffb56]
0x0000000000187111 : push rdi ; sti ; call rsp
0x000000000018710d : push rdi ; sti ; inc dword ptr [rdi + rdx*2 - 5] ; call rsp
0x0000000000186f91 : push rdi ; sti ; jmp qword ptr [rax]
0x00000000001342c7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001258c4 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007fb27 : push rdi ; sub byte ptr [rax - 0x77], cl ; and bl, bpl ; retf
0x00000000000e148e : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000125912 : push rdi ; sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000125942 : push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x00000000000a0aa0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009729b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000091a48 : push rdi ; xor eax, eax ; ret
0x000000000008b294 : push rdx ; add eax, 0x4eb60f44 ; add dword ptr [rbp + 0x38], eax ; retf 0x3775
0x0000000000178e09 : push rdx ; cld ; jmp rax
0x00000000000313e3 : push rdx ; cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000001b0d : push rdx ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x0000000000086bf6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000187234 : push rdx ; push rcx ; sti ; call rdx
0x000000000007071a : push rdx ; ret
0x00000000000f508a : push rdx ; ret 0xfffa
0x000000000005dd7a : push rdx ; ret 0xffff
0x00000000000313c5 : push rdx ; sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000186b34 : push rdx ; xor al, 0xfb ; jmp rdx
0x00000000000313d4 : push rdx ; xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000159544 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015c259 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x15c2b0 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000018cdc5 : push rsi ; add al, byte ptr [rax] ; fsubr qword ptr [rcx] ; cli ; jmp rsp
0x0000000000192c01 : push rsi ; add byte ptr [rax], al ; or al, 0xa4 ; in eax, dx ; jmp qword ptr [rax]
0x00000000000359d6 : push rsi ; add byte ptr [rip + 0x6f0f6600], dl ; ret 0x3de8
0x0000000000089593 : push rsi ; add cl, byte ptr [rax + 0x39] ; clc ; jne 0x89588 ; ret
0x0000000000139cc1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000018a105 : push rsi ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; out 0xf3, al ; jmp rax
0x00000000000ee81b : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000139d31 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000009c7a5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000139c51 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009c743 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000010043f : push rsi ; add edi, dword ptr [rcx] ; ret 0x830f
0x00000000000e7e79 : push rsi ; add rsp, 0x68 ; ret
0x00000000000825c0 : push rsi ; and byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000159559 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001554b3 : push rsi ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x0000000000133952 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000178e11 : push rsi ; cld ; jmp rax
0x00000000001340c1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133cf5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133ed5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001340b5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133b15 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000176a40 : push rsi ; cli ; push 0x6e ; ja 0x1769cf ; ret 0x48f
0x000000000015e026 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000006fc9e : push rsi ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000d9d75 : push rsi ; cmp dh, dh ; ret 0xf08
0x00000000000fc02a : push rsi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000015e016 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000015dfe6 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000006fb26 : push rsi ; jl 0x6fb66 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000122a66 : push rsi ; jno 0x122a99 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000d9dbb : push rsi ; ljmp [rcx] ; ret 0x6348
0x00000000000670ee : push rsi ; or al, 0x83 ; ret
0x000000000005039b : push rsi ; or al, 0xf6 ; ret 0xf01
0x000000000006707b : push rsi ; or al, 0xf6 ; ret 0xf08
0x00000000000505fd : push rsi ; or al, 0xf6 ; ret 0xf40
0x00000000000f25bd : push rsi ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x00000000000b1c32 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x0000000000198a99 : push rsi ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000186fc8 : push rsi ; pop rax ; sti ; jmp rsi
0x0000000000175ea0 : push rsi ; pop rdx ; je 0x175e6c ; ret 0xacfc
0x00000000001227f7 : push rsi ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000003515f : push rsi ; ret
0x000000000005c4ca : push rsi ; ret 0xf0a
0x00000000000feade : push rsi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000011b701 : push rsi ; sbb byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x00000000000d2215 : push rsi ; sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x0000000000186518 : push rsi ; std ; jmp rsi
0x0000000000187059 : push rsi ; sti ; call qword ptr [rdx]
0x0000000000186f9d : push rsi ; sti ; call rax
0x0000000000186f99 : push rsi ; sti ; inc dword ptr [rax + 0x56] ; sti ; call rax
0x0000000000186fd9 : push rsi ; sti ; jmp qword ptr [rsi]
0x0000000000187199 : push rsi ; sti ; jmp rax
0x0000000000114171 : push rsi ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x000000000015dff6 : push rsi ; sub eax, edx ; ret
0x0000000000174468 : push rsi ; xchg eax, ebp ; jge 0x17444d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000000eba87 : push rsi ; xor ax, ax ; ret
0x000000000015956e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000186ad0 : push rsi ; xor ebx, edi ; jmp rsi
0x00000000000e08a3 : push rsp ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x000000000018c9c3 : push rsp ; add al, byte ptr ds:[rax] ; sub al, 0xbf ; stc ; call qword ptr [rax]
0x00000000000eca83 : push rsp ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000ec97f : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000018ed2c : push rsp ; add dl, ch ; call qword ptr [rbx]
0x00000000001a2a4d : push rsp ; add dword ptr [rax], eax ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018a085 : push rsp ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; fcomip st(3) ; jmp qword ptr [rax]
0x00000000001a29e9 : push rsp ; add dword ptr [rax], eax ; je 0x1a2a03 ; cmc ; jmp qword ptr [rcx]
0x00000000001102ca : push rsp ; add esi, edi ; mov eax, r8d ; ret
0x00000000000fde05 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rcx
0x00000000000fdcf4 : push rsp ; and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x000000000008e324 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008e2a2 : push rsp ; and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000011900e : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x30] ; call qword ptr [rax]
0x0000000000101fe5 : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001186fa : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000375f4 : push rsp ; and al, 0x20 ; call rax
0x00000000000ee334 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000d4b23 : push rsp ; and al, 0x60 ; call 0x215c5
0x0000000000101f60 : push rsp ; and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000125432 : push rsp ; and al, 0xc ; call 0x2166d
0x000000000008e303 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x000000000008e4d6 : push rsp ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008e4b5 : push rsp ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x000000000008e2eb : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000034dac : push rsp ; and al, 0xf8 ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000034e9f : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000008e2cd : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000351a0 : push rsp ; and al, 0xfc ; movd xmm0, dword ptr [rsp - 4] ; ret
0x000000000003526b : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000111dfd : push rsp ; and al, 4 ; mov eax, edx ; add rsp, 0x18 ; ret
0x00000000001106f6 : push rsp ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f5b67 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000178e0d : push rsp ; cld ; jmp rax
0x000000000014fd87 : push rsp ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000018be3b : push rsp ; hlt ; add dword ptr [rax], eax ; pushfq ; clc ; call qword ptr [rax]
0x000000000017a05c : push rsp ; hlt ; jmp rdx
0x0000000000039087 : push rsp ; in al, 0x37 ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000001ac61c : push rsp ; ja 0x1ac61d ; jmp qword ptr [rdx]
0x00000000001964ac : push rsp ; jle 0x1964a0 ; jmp qword ptr [rbx]
0x0000000000091f7b : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000198c1c : push rsp ; mov dh, 0 ; add byte ptr [rax], dh ; pop rbx ; out dx, eax ; call qword ptr [rbx]
0x0000000000120467 : push rsp ; mov eax, 1 ; ret
0x000000000019641c : push rsp ; mov es, word ptr [rax] ; add byte ptr [rax + 0x6d], dh ; stc ; jmp qword ptr [rbx]
0x00000000001a02ac : push rsp ; mov esp, esi ; jmp qword ptr [rcx]
0x0000000000085128 : push rsp ; or dh, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000014ea69 : push rsp ; or eax, 0x894d0000 ; retf
0x00000000000c0a24 : push rsp ; paddb mm1, qword ptr [rcx - 0x1603f2ac] ; ret 0xfffe
0x00000000001870f4 : push rsp ; pop rdx ; sti ; jmp rsp
0x00000000000c63b6 : push rsp ; push rbx ; jne 0xc63e1 ; xor eax, eax ; ret
0x00000000000c63b5 : push rsp ; push rbx ; jne 0xc63e2 ; xor eax, eax ; ret
0x000000000018a083 : push rsp ; push rsp ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; fcomip st(3) ; jmp qword ptr [rax]
0x0000000000035159 : push rsp ; ret
0x00000000000f8d34 : push rsp ; ret 0x8940
0x000000000018b72b : push rsp ; retf
0x000000000011d2c8 : push rsp ; retf 0x29
0x00000000000460e0 : push rsp ; retf 0x48f8
0x00000000000f94a9 : push rsp ; retf 0x8b40
0x00000000000f121b : push rsp ; retf 0xf021
0x000000000018d1f4 : push rsp ; sbb al, byte ptr [rcx] ; add byte ptr [rdx - 4], bh ; jmp rax
0x00000000001897c3 : push rsp ; sbb eax, 0x9c2c0001 ; int1 ; call qword ptr [rax]
0x000000000019e5cc : push rsp ; scasd eax, dword ptr [rdi] ; jmp rdi
0x0000000000186fad : push rsp ; sti ; call qword ptr [rsi]
0x000000000018716d : push rsp ; sti ; call rax
0x00000000001871a9 : push rsp ; sti ; jmp qword ptr [rax]
0x00000000001870ed : push rsp ; sti ; jmp rsp
0x0000000000187169 : push rsp ; sti ; ljmp [rdx] ; push rsp ; sti ; call rax
0x00000000000f13c8 : push rsp ; sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017666a : push rsp ; syscall
0x000000000018836c : push rsp ; test eax, 0x875c0000 ; in al, dx ; call rax
0x0000000000186bfc : push rsp ; xor edi, ebx ; jmp rsp
0x000000000018b590 : pushfq ; adc bh, dh ; call qword ptr [rax]
0x000000000014c200 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000008caa8 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000188125 : pushfq ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xffeb
0x000000000018811d : pushfq ; add byte ptr [rax], al ; or al, 0xc2 ; jmp 0x188127
0x000000000018eda4 : pushfq ; add dl, ch ; call qword ptr [rbx]
0x0000000000087446 : pushfq ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000001a1464 : pushfq ; add dword ptr ds:[rax], eax ; fmul st(0) ; hlt ; jmp qword ptr [rcx]
0x000000000010b801 : pushfq ; and al, 0x50 ; add dword ptr [rax], eax ; add al, ch ; ret 0xfffd
0x0000000000044976 : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000044a02 : pushfq ; and al, 0xe8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000187f40 : pushfq ; and ch, bl ; call qword ptr [rax]
0x0000000000189f01 : pushfq ; call qword ptr [rax]
0x00000000001883e0 : pushfq ; cdq ; in al, dx ; jmp rsp
0x000000000018be40 : pushfq ; clc ; call qword ptr [rax]
0x000000000018b8ec : pushfq ; fadd dword ptr [rcx] ; add byte ptr [rdx + rbx*4 - 9], cl ; jmp rax
0x0000000000187b98 : pushfq ; fsubp st(2) ; jmp rsp
0x0000000000039040 : pushfq ; in al, 0x37 ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000018a0b0 : pushfq ; in al, 0xf3 ; jmp rsp
0x000000000019acf4 : pushfq ; insd dword ptr [rdi], dx ; int1 ; call qword ptr [rdx]
0x0000000000188640 : pushfq ; insd dword ptr [rdi], dx ; out dx, al ; jmp rax
0x00000000001897c9 : pushfq ; int1 ; call qword ptr [rax]
0x000000000018ca70 : pushfq ; iretd ; stc ; jmp qword ptr [rax]
0x000000000018a308 : pushfq ; ja 0x18a302 ; jmp qword ptr [rax]
0x000000000019fd44 : pushfq ; ja 0x19fd3e ; jmp qword ptr [rcx]
0x00000000001ac964 : pushfq ; je 0x1ac965 ; jmp qword ptr [rdx]
0x0000000000196524 : pushfq ; jle 0x196518 ; jmp qword ptr [rbx]
0x000000000018cb80 : pushfq ; loopne 0x18cb7f ; call rax
0x00000000001887a0 : pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp rax
0x000000000018b810 : pushfq ; movsxd rsi, edi ; jmp rsp
0x000000000014cf00 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aeb4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000008741d : pushfq ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000196cbd : pushfq ; out dx, al ; call qword ptr [rax]
0x0000000000188d08 : pushfq ; out dx, eax ; jmp rsp
0x0000000000193364 : pushfq ; pop rbp ; add byte ptr [rax], al ; mov dl, cl ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3564 : pushfq ; pop rdi ; add dword ptr [rax], eax ; call 0x221a2aaf
0x0000000000188e00 : pushfq ; pop rsp ; out dx, eax ; jmp rax
0x00000000000e61db : pushfq ; rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000018ba10 : pushfq ; ret
0x00000000000da10f : pushfq ; ret 0xd108
0x000000000018ca20 : pushfq ; ret 0xfff9
0x000000000018b4ec : pushfq ; ret 1
0x0000000000187ab0 : pushfq ; retf
0x0000000000177770 : pushfq ; retf 0xffed
0x000000000018a1f8 : pushfq ; sbb al, 0xf4 ; jmp rsp
0x0000000000189960 : pushfq ; scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x0000000000189368 : pushfq ; stc ; out dx, eax ; call qword ptr [rax]
0x000000000010cc02 : pushfq ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000018b6d8 : pushfq ; sub bh, dh ; jmp rax
0x000000000018b8c8 : pushfq ; test bh, dh ; call qword ptr [rax]
0x000000000019b1a4 : pushfq ; xchg eax, ebx ; int1 ; call rcx
0x000000000017d2a4 : pushfq ; xor bh, dl ; dec esp ; xor edx, edi ; jmp rsp
0x00000000000cfc0d : pxor mm0, mm0 ; xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000cfc0c : pxor xmm0, xmm0 ; xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x000000000019e830 : rcl ah, 0xf3 ; jmp qword ptr [rbx]
0x000000000019a688 : rcl al, 0 ; add byte ptr [rdi + rcx - 0xf], dl ; call qword ptr [rax]
0x00000000000023bb : rcl bh, 1 ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x000000000009583d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001a2998 : rcl byte ptr [rbx + 1], 1 ; add byte ptr [rdi + rcx], al ; cmc ; jmp qword ptr [rcx]
0x0000000000002dab : rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x0000000000187170 : rcl byte ptr [rbx - 5], 1 ; inc dword ptr [rax + 0x5a] ; sti ; call rax
0x00000000001ad7e0 : rcl byte ptr [rbx], 1 ; sti ; call rax
0x0000000000021759 : rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x398bc6], eax ; ret
0x00000000001767b1 : rcl byte ptr [rdi], cl ; retf
0x0000000000001ed7 : rcl byte ptr [rip + 0x42585c0c], 1 ; xchg eax, edi ; retf 0x20f4
0x0000000000187194 : rcl byte ptr [rsi - 5], 0xff ; push rax ; push rsi ; sti ; jmp rax
0x00000000000b7836 : rcl cl, 1 ; call 0xffffffffeacd3a42
0x0000000000178e48 : rcl dl, 1 ; int1 ; jmp qword ptr [rax]
0x0000000000081672 : rcl dword ptr [rip + 0x333c30], 0x83 ; ret 0x8b01
0x00000000001762da : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x0000000000175e9f : rcl dword ptr [rsi + 0x5a], cl ; je 0x175e6d ; ret 0xacfc
0x00000000001762d9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000175e9b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x175e71 ; ret 0xacfc
0x000000000018ba84 : rcr bh, 1 ; add dword ptr [rax], eax ; pop rsp ; retf
0x000000000004e851 : rcr bl, 0x3c ; and al, 0xd9 ; in eax, 0xdf ; loopne 0x4e7ec ; ret
0x0000000000034ac1 : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000186704 : rcr bl, 1 ; cli ; call rax
0x0000000000002daf : rcr byte ptr [r10], 1 ; retf 0x2217
0x000000000012a9fb : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000d26e5 : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000013f7dd : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006ffc1 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000003891c : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x00000000000331c0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001208d9 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000000fb3f0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000046267 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000018cf24 : rcr byte ptr [rbp + 2], 1 ; add byte ptr [rcx + rcx*2], bl ; cli ; jmp rsp
0x0000000000037cfd : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000083ae2 : rcr byte ptr [rbx + 0x4c], 0x89 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000033556 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000023d34 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000b39d6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000002b6fb : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fd815 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000ece50 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000000729e3 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000700c7 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; jmp rax
0x00000000000cd605 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; ret
0x00000000000e61dc : rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000178da4 : rcr byte ptr [rbx - 0x622f000f], 0xf1 ; jmp rax
0x000000000009514d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018d28c : rcr byte ptr [rbx], 1 ; add dword ptr [rax], eax ; sar spl, cl ; jmp rsp
0x00000000001a2f88 : rcr byte ptr [rcx + 1], 0 ; add al, 0x34 ; cmc ; jmp qword ptr [rcx]
0x000000000018d1c4 : rcr byte ptr [rcx + rax], 0 ; insb byte ptr [rdi], dx ; idiv bl ; call rsp
0x0000000000179190 : rcr byte ptr [rcx - 0xe], 1 ; jmp rax
0x0000000000186f7c : rcr byte ptr [rcx - 5], 0xff ; push rax ; pop rcx ; sti ; jmp rax
0x00000000001762bd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000ee649 : rcr byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018d2ec : rcr byte ptr [rdi], 1 ; add dword ptr [rax], eax ; mov word ptr [rax], es ; std ; jmp rsp
0x0000000000082c09 : rcr byte ptr [rdx + 0x5b], 0x5d ; ret
0x0000000000002db0 : rcr byte ptr [rdx], 1 ; retf 0x2217
0x000000000018c45c : rcr byte ptr [rip + 0x28cc0002], 1 ; stc ; jmp rsp
0x000000000018cf5c : rcr byte ptr [rsi + 2], 1 ; add byte ptr [rdi + rcx*2 - 6], bh ; jmp rsp
0x000000000018f140 : rcr byte ptr [rsi], 0xea ; jmp rdx
0x0000000000186708 : rcr ch, 1 ; cli ; call rax
0x0000000000178e54 : rcr cl, 0xf1 ; call qword ptr [rax]
0x0000000000186700 : rcr cl, 1 ; cli ; call rax
0x0000000000046299 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000176611 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000000a1329 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000a131b : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000012bf04 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000a1713 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000011030f : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000082ca2 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003661a : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000280 : ret
0x0000000000000c20 : ret 0
0x0000000000008e89 : ret 0x10
0x00000000001246c7 : ret 0x101
0x00000000000007bf : ret 0x102
0x0000000000027e1a : ret 0x1046
0x000000000009c9ed : ret 0x11
0x000000000008244a : ret 0x110
0x000000000004623c : ret 0x114d
0x0000000000066a3a : ret 0x115
0x0000000000024957 : ret 0x1175
0x000000000006bc2a : ret 0x1197
0x0000000000161e91 : ret 0x11e9
0x000000000004eaba : ret 0x1286
0x00000000000358ea : ret 0x1292
0x0000000000097dfa : ret 0x13
0x00000000000efb93 : ret 0x1374
0x000000000012d14f : ret 0x1389
0x0000000000040055 : ret 0x13d9
0x000000000003199d : ret 0x14
0x00000000000bb1e0 : ret 0x144
0x0000000000162c01 : ret 0x145
0x000000000003ecb2 : ret 0x146f
0x00000000000784d6 : ret 0x1476
0x0000000000091fb9 : ret 0x147c
0x00000000000370cc : ret 0x148
0x0000000000046fc2 : ret 0x149
0x00000000000526d1 : ret 0x14c
0x000000000008c24a : ret 0x14d
0x000000000002b5b8 : ret 0x1572
0x00000000000cd308 : ret 0x1574
0x0000000000113be6 : ret 0x1575
0x00000000000de925 : ret 0x1589
0x000000000001bb91 : ret 0x16
0x000000000005c72a : ret 0x165
0x00000000000f3726 : ret 0x1675
0x0000000000025f3b : ret 0x1689
0x00000000000bc2dc : ret 0x16e
0x000000000004e204 : ret 0x16e8
0x000000000008ffba : ret 0x17
0x0000000000150736 : ret 0x1776
0x00000000000002e0 : ret 0x180
0x000000000015bf0c : ret 0x180f
0x0000000000038b23 : ret 0x1874
0x0000000000091ab5 : ret 0x1876
0x00000000000d15e2 : ret 0x18e8
0x00000000000da4c2 : ret 0x18eb
0x000000000005e371 : ret 0x19
0x00000000000bded5 : ret 0x190
0x0000000000113bfb : ret 0x1974
0x00000000000781ca : ret 0x1976
0x000000000004b801 : ret 0x19e8
0x0000000000053482 : ret 0x1a
0x00000000000517b3 : ret 0x1a7d
0x000000000017681a : ret 0x1ad4
0x0000000000174fad : ret 0x1b49
0x0000000000035192 : ret 0x1b75
0x00000000000b3a72 : ret 0x1b7f
0x00000000000c64f1 : ret 0x1b8
0x0000000000111f09 : ret 0x1b9
0x0000000000001c05 : ret 0x1bb7
0x00000000000b5dc7 : ret 0x1be
0x000000000008391f : ret 0x1bf
0x0000000000003613 : ret 0x1bf9
0x00000000000db061 : ret 0x1c74
0x00000000000ed091 : ret 0x1c77
0x00000000000a6ee4 : ret 0x1d
0x000000000016ff90 : ret 0x1d4
0x0000000000170728 : ret 0x1d5
0x00000000000b3d00 : ret 0x1db
0x0000000000002245 : ret 0x1dd4
0x000000000003a579 : ret 0x1de9
0x000000000011268f : ret 0x1e74
0x0000000000037683 : ret 0x1f0f
0x000000000010f86e : ret 0x1f72
0x0000000000161f07 : ret 0x1f77
0x000000000002cfcd : ret 0x1fe9
0x0000000000155497 : ret 0x20
0x000000000002e727 : ret 0x200
0x00000000000e863c : ret 0x2044
0x000000000015f4ca : ret 0x2045
0x00000000000d30fb : ret 0x2073
0x000000000009f29d : ret 0x2074
0x00000000000bc02c : ret 0x20be
0x00000000000e41e3 : ret 0x20e9
0x0000000000155f56 : ret 0x21
0x0000000000162d6b : ret 0x2148
0x0000000000046944 : ret 0x2173
0x000000000007966c : ret 0x2175
0x000000000003c09b : ret 0x2275
0x000000000009c288 : ret 0x2288
0x0000000000113bdf : ret 0x233c
0x000000000015aa62 : ret 0x2373
0x000000000008df6a : ret 0x2374
0x0000000000036952 : ret 0x237f
0x000000000003a1c7 : ret 0x23e8
0x000000000016ef98 : ret 0x24
0x0000000000002890 : ret 0x244f
0x000000000007a6c9 : ret 0x2475
0x00000000000de161 : ret 0x2477
0x000000000010c670 : ret 0x2674
0x0000000000097746 : ret 0x2774
0x0000000000097f95 : ret 0x280f
0x0000000000091aa5 : ret 0x2876
0x000000000012f052 : ret 0x2877
0x00000000000ab9d7 : ret 0x28b
0x00000000000b9c64 : ret 0x28f5
0x000000000011db26 : ret 0x29
0x000000000003592a : ret 0x290f
0x0000000000155087 : ret 0x2920
0x0000000000055d3a : ret 0x2941
0x00000000000509a2 : ret 0x2944
0x00000000000dd1a0 : ret 0x2945
0x000000000003cb25 : ret 0x2948
0x0000000000062143 : ret 0x2949
0x000000000003aa80 : ret 0x294c
0x000000000004af7e : ret 0x294d
0x0000000000041404 : ret 0x2975
0x00000000001229ca : ret 0x297a
0x000000000011d00a : ret 0x29cc
0x0000000000047dc1 : ret 0x29e8
0x000000000011b19a : ret 0x29ea
0x000000000010d214 : ret 0x2a
0x0000000000001b15 : ret 0x2a63
0x00000000000d61ea : ret 0x2a74
0x00000000000cc8ba : ret 0x2a8b
0x000000000010cfba : ret 0x2ac4
0x0000000000109c5a : ret 0x2af6
0x0000000000105162 : ret 0x2afd
0x00000000000f8c44 : ret 0x2b
0x0000000000108e7a : ret 0x2b03
0x00000000001081a2 : ret 0x2b0f
0x0000000000023f59 : ret 0x2b48
0x00000000001004bb : ret 0x2b49
0x0000000000084ec3 : ret 0x2b74
0x00000000000a1842 : ret 0x2b77
0x000000000011b578 : ret 0x2b8
0x00000000000faa1a : ret 0x2be2
0x00000000000e10ae : ret 0x2be9
0x00000000001620d5 : ret 0x2bf
0x00000000000e8be4 : ret 0x2c
0x0000000000113bf4 : ret 0x2c3c
0x0000000000109f9d : ret 0x2c6
0x0000000000036a24 : ret 0x2c77
0x00000000000f0299 : ret 0x2c85
0x00000000000f0078 : ret 0x2c87
0x0000000000051742 : ret 0x2ce9
0x0000000000010e30 : ret 0x2d
0x000000000010f860 : ret 0x2d72
0x000000000008e078 : ret 0x2d74
0x00000000000e0706 : ret 0x2d9e
0x000000000004cc3d : ret 0x2de8
0x00000000000ddba4 : ret 0x2de9
0x000000000010e555 : ret 0x2e66
0x000000000008560f : ret 0x2e74
0x00000000000495f7 : ret 0x2e9
0x00000000000032e2 : ret 0x2ec0
0x00000000000d869c : ret 0x2ee8
0x00000000000c24d2 : ret 0x2f5e
0x000000000011252e : ret 0x2f74
0x00000000000ae243 : ret 0x30
0x0000000000039458 : ret 0x3039
0x0000000000001b90 : ret 0x306a
0x0000000000122b55 : ret 0x307f
0x000000000006ac8a : ret 0x30be
0x00000000000d435a : ret 0x30f
0x0000000000023d6c : ret 0x3145
0x000000000011b820 : ret 0x3148
0x000000000011b7ff : ret 0x3149
0x000000000011ba6a : ret 0x314c
0x000000000011b708 : ret 0x314d
0x000000000004092e : ret 0x3175
0x00000000000f763e : ret 0x31c3
0x0000000000088d10 : ret 0x32
0x00000000000e7343 : ret 0x3277
0x0000000000030369 : ret 0x32e9
0x0000000000076295 : ret 0x33
0x0000000000087c82 : ret 0x3302
0x0000000000087aca : ret 0x3329
0x00000000000e7402 : ret 0x3375
0x000000000007af42 : ret 0x3376
0x00000000000d3c37 : ret 0x33e8
0x00000000000eebf0 : ret 0x3475
0x0000000000051bf9 : ret 0x3477
0x0000000000091f99 : ret 0x347c
0x00000000000583e9 : ret 0x348
0x0000000000063aa4 : ret 0x349
0x0000000000058c18 : ret 0x35
0x00000000000e73a0 : ret 0x3575
0x00000000000582aa : ret 0x35cb
0x00000000000e8e1f : ret 0x35eb
0x000000000005131a : ret 0x3627
0x00000000000f3384 : ret 0x36e8
0x00000000000445a2 : ret 0x36e9
0x0000000000162fa6 : ret 0x3775
0x0000000000150716 : ret 0x3776
0x000000000003b64a : ret 0x3801
0x00000000001760fa : ret 0x3827
0x000000000008cc71 : ret 0x3845
0x000000000006ed86 : ret 0x3873
0x00000000000b5e55 : ret 0x3875
0x0000000000091a95 : ret 0x3876
0x000000000007c23b : ret 0x389
0x0000000000174786 : ret 0x38ae
0x000000000005cae6 : ret 0x3901
0x000000000010ec6d : ret 0x3904
0x0000000000022312 : ret 0x3926
0x000000000002166a : ret 0x3937
0x0000000000021532 : ret 0x393b
0x000000000005265c : ret 0x3941
0x00000000000cd446 : ret 0x3944
0x00000000000d02b2 : ret 0x3945
0x000000000002846a : ret 0x3948
0x000000000002d8ef : ret 0x3949
0x00000000000a4b46 : ret 0x394c
0x000000000003438d : ret 0x394d
0x00000000000eee7b : ret 0x3975
0x00000000000ddb0f : ret 0x3980
0x00000000000a0cd2 : ret 0x3a01
0x000000000015aa4b : ret 0x3a73
0x00000000000e2fe1 : ret 0x3a80
0x000000000012c493 : ret 0x3a83
0x00000000000bed3a : ret 0x3af
0x00000000000fef9d : ret 0x3b01
0x00000000001117d0 : ret 0x3b44
0x000000000006d572 : ret 0x3b48
0x000000000003363a : ret 0x3b74
0x00000000000e819f : ret 0x3b8
0x000000000007c58f : ret 0x3be8
0x000000000006f797 : ret 0x3c01
0x000000000009f211 : ret 0x3c75
0x000000000000df80 : ret 0x3d
0x0000000000047138 : ret 0x3d74
0x000000000007f570 : ret 0x3d75
0x0000000000044f76 : ret 0x3dbe
0x00000000000359dd : ret 0x3de8
0x0000000000005b50 : ret 0x3f
0x000000000002754f : ret 0x4001
0x000000000002d2ef : ret 0x4002
0x00000000000a2671 : ret 0x408d
0x000000000002d539 : ret 0x4101
0x00000000000893e2 : ret 0x4102
0x00000000000cfbd7 : ret 0x4104
0x0000000000064786 : ret 0x4108
0x000000000006423b : ret 0x4110
0x000000000008dfb7 : ret 0x4153
0x0000000000082e8a : ret 0x4173
0x0000000000024b8e : ret 0x41c3
0x0000000000119f45 : ret 0x4203
0x000000000008fe9a : ret 0x4266
0x000000000012828b : ret 0x4275
0x0000000000088dd2 : ret 0x4276
0x00000000001246d1 : ret 0x4288
0x00000000000b4ac6 : ret 0x428d
0x000000000000d7d0 : ret 0x43
0x000000000011bd17 : ret 0x4388
0x0000000000072713 : ret 0x4389
0x000000000010dc21 : ret 0x438b
0x0000000000033191 : ret 0x4401
0x000000000004fffb : ret 0x4404
0x00000000000e10a9 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x0000000000044042 : ret 0x4440
0x000000000002728f : ret 0x445f
0x00000000000d5290 : ret 0x4488
0x0000000000051845 : ret 0x4489
0x0000000000123dc2 : ret 0x448b
0x00000000000bb98c : ret 0x448d
0x0000000000044c29 : ret 0x44c6
0x0000000000029da2 : ret 0x44c7
0x0000000000021b3e : ret 0x4501
0x000000000005a24f : ret 0x4504
0x00000000000f2923 : ret 0x4564
0x00000000000cd2e8 : ret 0x457f
0x00000000000c46ef : ret 0x4589
0x000000000008af42 : ret 0x4601
0x00000000000b2e47 : ret 0x4675
0x000000000008e144 : ret 0x474
0x0000000000175284 : ret 0x474c
0x0000000000022c88 : ret 0x4801
0x000000000005673a : ret 0x4802
0x00000000000f98c2 : ret 0x4803
0x0000000000027419 : ret 0x4804
0x00000000000f9b42 : ret 0x4805
0x00000000000f9a42 : ret 0x4806
0x00000000000f99c2 : ret 0x4807
0x0000000000046cba : ret 0x4808
0x00000000000f9842 : ret 0x4809
0x000000000003037f : ret 0x480a
0x00000000000f96c2 : ret 0x480b
0x00000000000477d6 : ret 0x4810
0x00000000000216f1 : ret 0x4811
0x0000000000122241 : ret 0x4812
0x00000000000f7b2d : ret 0x4814
0x0000000000066c7e : ret 0x481e
0x00000000000610db : ret 0x4820
0x00000000000fec54 : ret 0x4830
0x000000000005e6b9 : ret 0x4840
0x00000000001012f3 : ret 0x4864
0x0000000000038af3 : ret 0x4872
0x0000000000028b4e : ret 0x4890
0x000000000002fe8a : ret 0x48b
0x0000000000097498 : ret 0x48c3
0x000000000003934e : ret 0x48d
0x0000000000176a46 : ret 0x48f
0x0000000000022269 : ret 0x4901
0x0000000000160f9f : ret 0x4904
0x00000000000d099a : ret 0x4908
0x00000000000b6c2a : ret 0x4909
0x00000000000bb39a : ret 0x490f
0x00000000000c7191 : ret 0x4910
0x00000000000d312a : ret 0x4940
0x0000000000073791 : ret 0x49e8
0x0000000000003a9b : ret 0x49ec
0x000000000000fba0 : ret 0x4a
0x00000000000d1975 : ret 0x4a8b
0x0000000000022133 : ret 0x4a8d
0x00000000000edd9f : ret 0x4ab8
0x00000000000f1c02 : ret 0x4b01
0x00000000000ede4f : ret 0x4bb8
0x00000000000270fb : ret 0x4c01
0x00000000001101b6 : ret 0x4c02
0x00000000001504be : ret 0x4c04
0x00000000001611df : ret 0x4c07
0x00000000000c529c : ret 0x4c08
0x000000000010fdea : ret 0x4c0c
0x00000000000d6b6d : ret 0x4c10
0x0000000000150046 : ret 0x4c20
0x0000000000150066 : ret 0x4c40
0x00000000000bfca7 : ret 0x4c48
0x0000000000150086 : ret 0x4c60
0x00000000000b8585 : ret 0x4c80
0x0000000000127b98 : ret 0x4c89
0x000000000008b0dc : ret 0x4d01
0x00000000000f7d39 : ret 0x4d02
0x000000000009ca12 : ret 0x4d10
0x00000000001554bb : ret 0x4d20
0x0000000000081d72 : ret 0x4e10
0x00000000001764a7 : ret 0x4e27
0x00000000000f22b5 : ret 0x4f01
0x0000000000079566 : ret 0x4f74
0x00000000000232bf : ret 0x5089
0x000000000015f1a9 : ret 0x50e9
0x000000000015aa34 : ret 0x5173
0x00000000000b3709 : ret 0x5180
0x0000000000069589 : ret 0x51ff
0x00000000000dec8a : ret 0x5408
0x0000000000044b11 : ret 0x540a
0x00000000000fdd18 : ret 0x5422
0x00000000000b4419 : ret 0x5438
0x0000000000091f79 : ret 0x547c
0x00000000000e8577 : ret 0x5488
0x0000000000034b11 : ret 0x5489
0x000000000017470c : ret 0x5508
0x00000000000d76d6 : ret 0x5541
0x00000000000024e6 : ret 0x5576
0x00000000000730ee : ret 0x5590
0x000000000009f1f7 : ret 0x5675
0x000000000008e7a4 : ret 0x56e8
0x00000000000774d1 : ret 0x56e9
0x000000000010411a : ret 0x576
0x0000000000103df2 : ret 0x577
0x00000000001506f6 : ret 0x5776
0x00000000001769d8 : ret 0x5803
0x0000000000025584 : ret 0x5841
0x0000000000037acb : ret 0x589
0x00000000001743e0 : ret 0x591c
0x000000000002f30e : ret 0x5974
0x00000000000dd193 : ret 0x597e
0x00000000000033cd : ret 0x5a51
0x0000000000026cc5 : ret 0x5a58
0x0000000000175147 : ret 0x5ae4
0x0000000000051324 : ret 0x5ba
0x00000000000030cb : ret 0x5bdb
0x00000000000eec1b : ret 0x5c3c
0x0000000000078a41 : ret 0x5c76
0x0000000000003195 : ret 0x5cbe
0x0000000000026ed2 : ret 0x5d41
0x0000000000002930 : ret 0x5d52
0x00000000000e1e70 : ret 0x5d5b
0x0000000000029a3a : ret 0x5e41
0x00000000000e925e : ret 0x5ee9
0x000000000000adb8 : ret 0x5f
0x00000000000004b9 : ret 0x6080
0x0000000000039f8a : ret 0x60e8
0x00000000000027d9 : ret 0x617e
0x000000000012bc3b : ret 0x6273
0x0000000000176e72 : ret 0x62c1
0x0000000000045cd6 : ret 0x6348
0x000000000008e421 : ret 0x6349
0x00000000000d133e : ret 0x634c
0x00000000000d6d1d : ret 0x634d
0x00000000000b2e2a : ret 0x6375
0x000000000014fb04 : ret 0x637f
0x0000000000087b41 : ret 0x63be
0x000000000002bd43 : ret 0x6411
0x0000000000091f69 : ret 0x647c
0x00000000000500c5 : ret 0x64c0
0x0000000000084d30 : ret 0x65e9
0x0000000000092019 : ret 0x6610
0x0000000000091a21 : ret 0x6620
0x00000000000028e7 : ret 0x6642
0x000000000008744c : ret 0x66c3
0x00000000000c4b6f : ret 0x676
0x00000000001506e6 : ret 0x6776
0x00000000001743ff : ret 0x67b2
0x00000000000d5520 : ret 0x67e9
0x000000000007c635 : ret 0x6874
0x0000000000000958 : ret 0x68a2
0x000000000008cb4f : ret 0x68e9
0x00000000000b3706 : ret 0x6948
0x0000000000003eba : ret 0x6bba
0x0000000000112598 : ret 0x6d7e
0x00000000000dbd7d : ret 0x6de8
0x0000000000185963 : ret 0x6e1f
0x00000000000bb921 : ret 0x6eb8
0x0000000000034d96 : ret 0x6f75
0x00000000000ec98e : ret 0x6f77
0x0000000000177001 : ret 0x6f9
0x000000000008a74a : ret 0x70e9
0x000000000007f40a : ret 0x717
0x000000000010daf9 : ret 0x72d
0x00000000000356e6 : ret 0x7374
0x000000000008b117 : ret 0x73e9
0x000000000007c7b1 : ret 0x7401
0x000000000008483a : ret 0x7402
0x00000000000f0b41 : ret 0x7404
0x0000000000160f67 : ret 0x7407
0x000000000007d9b3 : ret 0x7408
0x000000000006dde1 : ret 0x7420
0x000000000004c5b1 : ret 0x7450
0x000000000008afb7 : ret 0x74e9
0x0000000000097a87 : ret 0x7501
0x000000000007f338 : ret 0x7502
0x0000000000097a91 : ret 0x7504
0x000000000010f7df : ret 0x7507
0x0000000000097a96 : ret 0x7508
0x000000000015cb3b : ret 0x7510
0x000000000015cb48 : ret 0x7520
0x00000000000d0e16 : ret 0x7540
0x00000000000cde8e : ret 0x7580
0x000000000008b5ef : ret 0x75e9
0x0000000000159922 : ret 0x7677
0x000000000008b3af : ret 0x76e9
0x000000000010966b : ret 0x76f
0x00000000000871b1 : ret 0x772
0x00000000000494c2 : ret 0x775
0x00000000000465a2 : ret 0x777
0x0000000000003014 : ret 0x793b
0x00000000000369c3 : ret 0x7a77
0x000000000015f3df : ret 0x7be9
0x0000000000035347 : ret 0x7c7
0x00000000000b613e : ret 0x7c83
0x00000000000445d3 : ret 0x7c8b
0x000000000008cf6b : ret 0x7ce9
0x00000000000919c1 : ret 0x7e20
0x000000000015064c : ret 0x7e40
0x000000000005029c : ret 0x7ee8
0x000000000008ea4c : ret 0x7f10
0x00000000001605b4 : ret 0x7fff
0x00000000001375be : ret 0x80
0x000000000008fc29 : ret 0x8000
0x00000000000896a2 : ret 0x8001
0x00000000000b6e22 : ret 0x8008
0x00000000000eebe7 : ret 0x8040
0x000000000009ce4d : ret 0x8072
0x000000000010abfa : ret 0x8080
0x0000000000003a50 : ret 0x80fc
0x000000000007ba0e : ret 0x8101
0x0000000000158585 : ret 0x8104
0x00000000000b3d20 : ret 0x8141
0x000000000012bdfc : ret 0x8148
0x0000000000120f03 : ret 0x8149
0x00000000000b9ab6 : ret 0x8166
0x000000000008dab5 : ret 0x81eb
0x00000000000611ce : ret 0x820f
0x000000000008d7c7 : ret 0x8301
0x000000000010e814 : ret 0x8303
0x000000000008ba65 : ret 0x8305
0x000000000014ff95 : ret 0x8308
0x0000000000039cd9 : ret 0x830f
0x000000000014ff60 : ret 0x8310
0x000000000014ff32 : ret 0x8320
0x0000000000091e91 : ret 0x8340
0x0000000000056180 : ret 0x8341
0x0000000000022873 : ret 0x8348
0x000000000004de31 : ret 0x8349
0x00000000000e6928 : ret 0x8389
0x00000000000c7d91 : ret 0x8401
0x000000000002ca56 : ret 0x840f
0x0000000000112e78 : ret 0x841
0x00000000000efb7d : ret 0x8440
0x000000000008b884 : ret 0x848b
0x000000000002f39d : ret 0x850f
0x0000000000150bd1 : ret 0x8520
0x0000000000028aaf : ret 0x8545
0x000000000004da59 : ret 0x8548
0x00000000000d4467 : ret 0x854d
0x00000000000bf5e8 : ret 0x8589
0x00000000000bdf1c : ret 0x858b
0x00000000000fa777 : ret 0x85a
0x00000000000e69cd : ret 0x85c6
0x000000000008d541 : ret 0x85e9
0x000000000002d5b0 : ret 0x860f
0x0000000000028097 : ret 0x870f
0x0000000000173d1e : ret 0x871e
0x0000000000091ac5 : ret 0x876
0x000000000004bcb1 : ret 0x87e
0x000000000004de63 : ret 0x87e9
0x0000000000026ad1 : ret 0x8801
0x0000000000119f36 : ret 0x8802
0x0000000000123c55 : ret 0x880f
0x000000000011bcf9 : ret 0x8844
0x0000000000002650 : ret 0x88ad
0x0000000000085f42 : ret 0x88e8
0x0000000000112472 : ret 0x88e9
0x000000000002cc01 : ret 0x8901
0x00000000001154e4 : ret 0x8904
0x0000000000053180 : ret 0x8908
0x0000000000044160 : ret 0x8940
0x000000000004ba2b : ret 0x8941
0x000000000005eca0 : ret 0x8944
0x0000000000052bd0 : ret 0x8945
0x0000000000023ef3 : ret 0x8948
0x00000000000259ef : ret 0x8949
0x00000000000244b4 : ret 0x894c
0x0000000000066478 : ret 0x894d
0x0000000000046deb : ret 0x894e
0x0000000000039af0 : ret 0x8966
0x00000000000025ef : ret 0x8a4c
0x00000000000249e8 : ret 0x8b01
0x000000000006c8f2 : ret 0x8b04
0x000000000002e80e : ret 0x8b05
0x0000000000158642 : ret 0x8b10
0x00000000000feafe : ret 0x8b28
0x000000000017654e : ret 0x8b36
0x000000000002d8e0 : ret 0x8b41
0x000000000006a1d4 : ret 0x8b44
0x000000000002a4fd : ret 0x8b48
0x000000000003b2ef : ret 0x8b49
0x0000000000046d6e : ret 0x8b4a
0x0000000000033832 : ret 0x8b4c
0x00000000000dbe6e : ret 0x8b4d
0x000000000007e78a : ret 0x8b75
0x00000000001229fe : ret 0x8be
0x000000000004ccfa : ret 0x8c0f
0x000000000000394a : ret 0x8cba
0x0000000000039d5e : ret 0x8ce8
0x000000000008c5eb : ret 0x8d01
0x000000000005218f : ret 0x8d04
0x0000000000121102 : ret 0x8d0f
0x00000000000a82a5 : ret 0x8d41
0x0000000000081efb : ret 0x8d44
0x00000000000beea1 : ret 0x8d45
0x0000000000023de2 : ret 0x8d48
0x000000000003938d : ret 0x8d49
0x0000000000046359 : ret 0x8d4a
0x0000000000045c5e : ret 0x8d4c
0x0000000000075535 : ret 0x8d4d
0x00000000000eaddd : ret 0x8de9
0x000000000004b899 : ret 0x8e0f
0x000000000008bdec : ret 0x8eeb
0x00000000000e312b : ret 0x8f0f
0x000000000008637d : ret 0x9066
0x000000000002e6ed : ret 0x90c3
0x00000000000dab79 : ret 0x91e8
0x000000000011bf9a : ret 0x93
0x00000000000858a8 : ret 0x93be
0x00000000000587a0 : ret 0x940f
0x0000000000048130 : ret 0x941
0x0000000000002687 : ret 0x943d
0x0000000000034e99 : ret 0x948
0x0000000000161137 : ret 0x949
0x000000000003555c : ret 0x94c
0x0000000000160bfa : ret 0x94d
0x00000000000a602f : ret 0x950f
0x0000000000175373 : ret 0x9576
0x000000000008d062 : ret 0x9588
0x000000000006a342 : ret 0x9589
0x0000000000103f5b : ret 0x976
0x00000000000a8486 : ret 0x9848
0x000000000009f245 : ret 0x9874
0x00000000000f0b6f : ret 0x9976
0x00000000000e9eba : ret 0x99f
0x0000000000111f72 : ret 0x9d0f
0x000000000009ce30 : ret 0x9d72
0x0000000000042b53 : ret 0x9d74
0x000000000000e2c8 : ret 0xa
0x000000000012163e : ret 0xa0eb
0x0000000000119d58 : ret 0xa2e8
0x00000000000fbda9 : ret 0xa475
0x0000000000175063 : ret 0xa514
0x0000000000107328 : ret 0xa575
0x00000000000376e4 : ret 0xa6e9
0x0000000000105ad6 : ret 0xa775
0x00000000000dd1ec : ret 0xa77f
0x0000000000081682 : ret 0xa7e
0x00000000001195a0 : ret 0xaae8
0x00000000000f31ed : ret 0xabe
0x00000000000dfc36 : ret 0xabf
0x00000000001754e7 : ret 0xac65
0x0000000000175ea4 : ret 0xacfc
0x0000000000057553 : ret 0xad83
0x00000000000ae828 : ret 0xae72
0x0000000000043840 : ret 0xae8
0x00000000000b10fa : ret 0xaf9
0x0000000000172764 : ret 0xb
0x00000000000fa1ed : ret 0xb075
0x00000000000c18ba : ret 0xb375
0x00000000000da556 : ret 0xb4e8
0x000000000002fe4c : ret 0xb60f
0x0000000000002635 : ret 0xb675
0x00000000000b4ac0 : ret 0xb70f
0x00000000000b4d26 : ret 0xb74
0x0000000000029d87 : ret 0xb7eb
0x0000000000035113 : ret 0xb8
0x0000000000082d89 : ret 0xb817
0x000000000015f1a0 : ret 0xb841
0x0000000000034cb4 : ret 0xb848
0x000000000002c18a : ret 0xb9
0x00000000000c54a0 : ret 0xb941
0x00000000001753ae : ret 0xb9b9
0x00000000000032dd : ret 0xba88
0x00000000000ea532 : ret 0xbbeb
0x00000000000c5328 : ret 0xbc41
0x00000000001154da : ret 0xbc89
0x000000000000250c : ret 0xbd07
0x00000000000620b7 : ret 0xbd83
0x00000000000c108b : ret 0xbdd
0x000000000004e48f : ret 0xbe07
0x0000000000056f5e : ret 0xbe08
0x00000000000446b0 : ret 0xbe40
0x0000000000175104 : ret 0xbe57
0x00000000000b6ba2 : ret 0xbe9
0x0000000000056195 : ret 0xbf08
0x00000000000b1768 : ret 0xc
0x000000000008fae9 : ret 0xc000
0x00000000000308f1 : ret 0xc031
0x00000000001a3bc8 : ret 0xc044
0x000000000002bd8e : ret 0xc083
0x00000000000efb8c : ret 0xc084
0x0000000000091880 : ret 0xc085
0x00000000000e5b9a : ret 0xc0e8
0x000000000004d1b8 : ret 0xc141
0x0000000000034d69 : ret 0xc148
0x000000000004af81 : ret 0xc149
0x00000000000535e1 : ret 0xc189
0x0000000000002f12 : ret 0xc1bb
0x000000000002564c : ret 0xc1e9
0x00000000000e8962 : ret 0xc221
0x0000000000039354 : ret 0xc229
0x00000000000394f0 : ret 0xc269
0x00000000000bb12a : ret 0xc26b
0x00000000000e6044 : ret 0xc283
0x000000000015a904 : ret 0xc2b2
0x0000000000038e58 : ret 0xc35b
0x00000000000cd9fa : ret 0xc373
0x000000000002b395 : ret 0xc389
0x0000000000087303 : ret 0xc3f3
0x00000000000ea006 : ret 0xc3f6
0x0000000000172f62 : ret 0xc4c3
0x00000000000ba922 : ret 0xc4eb
0x0000000000174cb8 : ret 0xc4ff
0x00000000001506b1 : ret 0xc540
0x0000000000021969 : ret 0xc5eb
0x00000000000c585e : ret 0xc610
0x00000000000d1534 : ret 0xc6e8
0x000000000011b506 : ret 0xc707
0x00000000000b9d6d : ret 0xc729
0x00000000000df7cd : ret 0xc741
0x0000000000046682 : ret 0xc748
0x000000000003b3b9 : ret 0xc749
0x00000000000b2e81 : ret 0xc75
0x000000000002b5c1 : ret 0xc76
0x000000000004b736 : ret 0xc789
0x0000000000087cba : ret 0xc7d
0x0000000000035953 : ret 0xc7e8
0x00000000000bdcc8 : ret 0xc801
0x00000000000da0f6 : ret 0xc809
0x00000000000349e4 : ret 0xc889
0x00000000000e0baa : ret 0xc9e9
0x000000000009c1e1 : ret 0xc9ff
0x00000000000e8479 : ret 0xca21
0x000000000015f22f : ret 0xcae9
0x00000000000bf8b4 : ret 0xcb77
0x000000000008a101 : ret 0xcb8
0x000000000007e063 : ret 0xcbe9
0x0000000000088e48 : ret 0xcc76
0x000000000017474a : ret 0xcca7
0x000000000017682d : ret 0xcd11
0x000000000009ce00 : ret 0xcd72
0x00000000000e6e8e : ret 0xcd77
0x0000000000032493 : ret 0xce80
0x0000000000150bdd : ret 0xce89
0x00000000000ddae7 : ret 0xcf89
0x00000000000d57b8 : ret 0xcfe9
0x000000000009ccab : ret 0xd
0x00000000000ca3fc : ret 0xd008
0x00000000000ca3ef : ret 0xd009
0x00000000000d6799 : ret 0xd020
0x000000000003755a : ret 0xd021
0x0000000000044b1e : ret 0xd084
0x000000000004fcb4 : ret 0xd089
0x00000000000df589 : ret 0xd101
0x00000000000da110 : ret 0xd108
0x00000000000a8a48 : ret 0xd129
0x00000000000cd3ff : ret 0xd141
0x0000000000086eaa : ret 0xd148
0x00000000001031d6 : ret 0xd174
0x0000000000113810 : ret 0xd184
0x0000000000161230 : ret 0xd189
0x00000000000d2000 : ret 0xd201
0x00000000000340e0 : ret 0xd231
0x0000000000021e03 : ret 0xd284
0x000000000002b192 : ret 0xd285
0x00000000000deadf : ret 0xd289
0x000000000008dfc4 : ret 0xd308
0x000000000005856f : ret 0xd309
0x00000000000e11c1 : ret 0xd320
0x000000000003cd7b : ret 0xd348
0x000000000016124d : ret 0xd349
0x00000000000b3a9f : ret 0xd37e
0x00000000000a2047 : ret 0xd3e8
0x00000000000369cb : ret 0xd521
0x00000000000426a9 : ret 0xd529
0x0000000000034dfc : ret 0xd574
0x000000000000089a : ret 0xd5a4
0x00000000000533b0 : ret 0xd629
0x0000000000114beb : ret 0xd675
0x00000000000a4a7f : ret 0xd67d
0x0000000000073704 : ret 0xd6e8
0x00000000000ac4da : ret 0xd72
0x0000000000053c12 : ret 0xd729
0x000000000006d57e : ret 0xd75
0x000000000008daab : ret 0xd772
0x000000000003a7b6 : ret 0xd774
0x000000000007e996 : ret 0xd875
0x00000000000c70e0 : ret 0xd889
0x00000000001762c5 : ret 0xd8f
0x00000000000ab29a : ret 0xda2
0x00000000000d6056 : ret 0xda80
0x00000000000a1bbc : ret 0xda89
0x00000000000349e0 : ret 0xdaf7
0x00000000000cfbb4 : ret 0xdb31
0x0000000000074ce5 : ret 0xdb74
0x00000000000aeea0 : ret 0xdc00
0x00000000001763a6 : ret 0xdcd9
0x000000000003ce0a : ret 0xde
0x0000000000175322 : ret 0xde5d
0x00000000001740b1 : ret 0xde9e
0x00000000000f36e6 : ret 0xdeb
0x000000000012089e : ret 0xdf75
0x000000000012478c : ret 0xdf89
0x0000000000009621 : ret 0xe
0x000000000008f9a9 : ret 0xe000
0x000000000015caf9 : ret 0xe074
0x00000000000471fd : ret 0xe075
0x000000000011e235 : ret 0xe078
0x0000000000072704 : ret 0xe083
0x00000000001a956f : ret 0xe0a
0x0000000000044559 : ret 0xe0e9
0x00000000000feed6 : ret 0xe1ff
0x00000000000ce20f : ret 0xe275
0x0000000000033ea0 : ret 0xe281
0x0000000000028511 : ret 0xe283
0x00000000001584bf : ret 0xe2c4
0x000000000008e357 : ret 0xe2ff
0x000000000007f012 : ret 0xe375
0x000000000004e1db : ret 0xe383
0x000000000000291b : ret 0xe3d
0x0000000000089f08 : ret 0xe575
0x0000000000162656 : ret 0xe583
0x00000000000d9a0f : ret 0xe675
0x00000000000a18a2 : ret 0xe680
0x00000000000e7091 : ret 0xe6ff
0x00000000001764c6 : ret 0xe71f
0x0000000000084eee : ret 0xe775
0x0000000000060f9a : ret 0xe783
0x000000000006f662 : ret 0xe8
0x000000000010abd2 : ret 0xe801
0x000000000010de78 : ret 0xe841
0x0000000000038b3b : ret 0xe875
0x000000000004d885 : ret 0xe87f
0x00000000000b4b65 : ret 0xe883
0x00000000000b3d8a : ret 0xe889
0x00000000000d5f0e : ret 0xe8c0
0x00000000000f3ffb : ret 0xe8c1
0x000000000002d812 : ret 0xe8e8
0x0000000000030274 : ret 0xe901
0x0000000000030332 : ret 0xe902
0x000000000009c276 : ret 0xe908
0x000000000014c066 : ret 0xe910
0x0000000000061765 : ret 0xe920
0x00000000001611bd : ret 0xe940
0x0000000000174827 : ret 0xe970
0x000000000007e977 : ret 0xe975
0x00000000000daef6 : ret 0xea75
0x00000000000caba0 : ret 0xea7f
0x00000000000a183a : ret 0xea81
0x0000000000060fba : ret 0xeac0
0x00000000000b783a : ret 0xeac1
0x00000000000acc30 : ret 0xeb01
0x00000000000d6d30 : ret 0xeb02
0x00000000000d1d81 : ret 0xeb04
0x00000000000c539e : ret 0xeb08
0x000000000014a0a6 : ret 0xeb10
0x00000000000fca9a : ret 0xeb73
0x0000000000089c3a : ret 0xeb75
0x0000000000176fd8 : ret 0xec2
0x0000000000105291 : ret 0xec75
0x00000000000ad1f0 : ret 0xed72
0x000000000003c0b0 : ret 0xed74
0x000000000002d540 : ret 0xed75
0x0000000000044bb8 : ret 0xed85
0x000000000008516d : ret 0xede8
0x000000000006b57f : ret 0xede9
0x00000000000acd92 : ret 0xee72
0x00000000000ade87 : ret 0xee75
0x000000000008c2f7 : ret 0xee77
0x000000000012edb2 : ret 0xef28
0x000000000012ebb2 : ret 0xef2a
0x0000000000176c7a : ret 0xef32
0x0000000000045f4e : ret 0xef75
0x000000000008cd7e : ret 0xef77
0x0000000000130ebe : ret 0xf
0x000000000008f869 : ret 0xf000
0x00000000000bc772 : ret 0xf001
0x00000000000f6299 : ret 0xf009
0x000000000002806a : ret 0xf01
0x00000000000e6792 : ret 0xf02
0x00000000000ce330 : ret 0xf039
0x000000000002d2de : ret 0xf04
0x00000000000469d5 : ret 0xf075
0x00000000000279f0 : ret 0xf08
0x0000000000087154 : ret 0xf083
0x0000000000047b63 : ret 0xf089
0x000000000005c4cc : ret 0xf0a
0x00000000001139b2 : ret 0xf0dc
0x0000000000068661 : ret 0xf10
0x000000000010adca : ret 0xf166
0x00000000000cdb94 : ret 0xf175
0x000000000012d39c : ret 0xf177
0x000000000009206c : ret 0xf188
0x0000000000113c9a : ret 0xf1b7
0x000000000010423a : ret 0xf1d2
0x000000000006f2a9 : ret 0xf20
0x000000000010f7af : ret 0xf221
0x00000000000bb8e3 : ret 0xf229
0x00000000000b4b13 : ret 0xf275
0x00000000000fec58 : ret 0xf375
0x000000000004e965 : ret 0xf40
0x0000000000021bae : ret 0xf41
0x00000000000deca2 : ret 0xf429
0x00000000000deaa2 : ret 0xf42b
0x00000000000bf1c9 : ret 0xf44
0x00000000000dd2ea : ret 0xf442
0x0000000000161541 : ret 0xf45
0x0000000000089789 : ret 0xf475
0x000000000003bac1 : ret 0xf48
0x000000000004f35d : ret 0xf49
0x000000000004e951 : ret 0xf50
0x00000000000d12b2 : ret 0xf503
0x00000000000ceab2 : ret 0xf52b
0x00000000000cceb2 : ret 0xf547
0x000000000014fdfe : ret 0xf5c5
0x000000000010b2a5 : ret 0xf5e8
0x000000000011566c : ret 0xf5e9
0x00000000000ba7ab : ret 0xf601
0x0000000000087474 : ret 0xf631
0x000000000007ef76 : ret 0xf641
0x00000000000443c6 : ret 0xf66
0x0000000000025c23 : ret 0xf685
0x00000000000b743a : ret 0xf6a0
0x0000000000106f6a : ret 0xf7
0x000000000011358a : ret 0xf738
0x0000000000032cb2 : ret 0xf748
0x0000000000046586 : ret 0xf749
0x00000000000ff592 : ret 0xf789
0x00000000000b182a : ret 0xf7d1
0x00000000000a577a : ret 0xf8
0x00000000000e6789 : ret 0xf80
0x000000000002733b : ret 0xf800
0x000000000000379f : ret 0xf84d
0x00000000000a8c2a : ret 0xf85d
0x0000000000173f90 : ret 0xf869
0x00000000000acc23 : ret 0xf89
0x000000000007d963 : ret 0xf8b
0x0000000000035227 : ret 0xf8c1
0x00000000001540f6 : ret 0xf8c5
0x00000000000875ba : ret 0xf99d
0x0000000000086da2 : ret 0xf9a8
0x00000000000ab14a : ret 0xf9b5
0x0000000000035177 : ret 0xf9c1
0x00000000000a5b0a : ret 0xfa05
0x0000000000112293 : ret 0xfa81
0x0000000000077dfa : ret 0xfa95
0x00000000000ba060 : ret 0xfac1
0x00000000000d074a : ret 0xfad9
0x0000000000187260 : ret 0xfb4b
0x0000000000187258 : ret 0xfb4c
0x0000000000187250 : ret 0xfb4d
0x0000000000187248 : ret 0xfb4e
0x0000000000187240 : ret 0xfb4f
0x0000000000187068 : ret 0xfb54
0x00000000000ca1c0 : ret 0xfb83
0x00000000000f58aa : ret 0xfbc6
0x000000000012b17a : ret 0xfbc9
0x000000000012aa7a : ret 0xfbd0
0x000000000008f5e9 : ret 0xfc00
0x00000000000eff85 : ret 0xfc07
0x000000000008755a : ret 0xfc3
0x000000000006322a : ret 0xfcb7
0x0000000000044f8a : ret 0xfdc4
0x0000000000085ecd : ret 0xfde8
0x00000000000ddd24 : ret 0xfde9
0x000000000008f4a9 : ret 0xfe00
0x000000000011158a : ret 0xfe56
0x00000000000349f0 : ret 0xfeb8
0x00000000000343da : ret 0xfecf
0x000000000008f369 : ret 0xff00
0x000000000002f7ca : ret 0xff1c
0x0000000000042a85 : ret 0xff2
0x00000000000350e7 : ret 0xff25
0x0000000000150e49 : ret 0xff2d
0x000000000008fdca : ret 0xff3
0x0000000000055ab7 : ret 0xff31
0x00000000000638ed : ret 0xff41
0x00000000000f815a : ret 0xff45
0x000000000009f1f4 : ret 0xff48
0x000000000002bbb2 : ret 0xff5a
0x00000000000daa1a : ret 0xff6c
0x000000000008f229 : ret 0xff80
0x0000000000112583 : ret 0xff81
0x000000000012727a : ret 0xff85
0x00000000000743b4 : ret 0xffb8
0x0000000000040199 : ret 0xffbf
0x000000000008f0e9 : ret 0xffc0
0x00000000000597d6 : ret 0xffd2
0x000000000005c80a : ret 0xffd7
0x0000000000068fd6 : ret 0xffdf
0x000000000008efa9 : ret 0xffe0
0x0000000000068c40 : ret 0xffe2
0x0000000000065608 : ret 0xffe3
0x000000000004dc8b : ret 0xffe4
0x000000000005431a : ret 0xffe9
0x0000000000062ade : ret 0xffea
0x000000000007a6aa : ret 0xffeb
0x00000000000ce99a : ret 0xffed
0x00000000001888f1 : ret 0xffee
0x000000000003a661 : ret 0xffef
0x0000000000084eba : ret 0xfff
0x000000000008ee69 : ret 0xfff0
0x00000000001053d0 : ret 0xfff1
0x000000000019d0c9 : ret 0xfff2
0x00000000000e537a : ret 0xfff3
0x00000000000d5437 : ret 0xfff4
0x000000000018a6b1 : ret 0xfff5
0x00000000000b5276 : ret 0xfff6
0x00000000000bbf7a : ret 0xfff7
0x000000000008ed29 : ret 0xfff8
0x00000000000dd154 : ret 0xfff9
0x0000000000074962 : ret 0xfffa
0x0000000000026b8c : ret 0xfffb
0x0000000000033add : ret 0xfffc
0x00000000000286d1 : ret 0xfffd
0x000000000002223a : ret 0xfffe
0x000000000002e6e5 : ret 0xffff
0x0000000000027d2a : ret 1
0x0000000000000fbc : ret 2
0x000000000000116c : ret 3
0x0000000000092119 : ret 4
0x000000000002dfa3 : ret 5
0x00000000001147cc : ret 6
0x0000000000009b91 : ret 7
0x00000000000019b8 : ret 8
0x000000000006aa27 : ret 9
0x0000000000000766 : retf
0x0000000000004b88 : retf 0
0x000000000006e472 : retf 0x100
0x0000000000119aa5 : retf 0x1089
0x0000000000003c2e : retf 0x10bf
0x0000000000067a02 : retf 0x11
0x000000000004616d : retf 0x114d
0x000000000008bed4 : retf 0x1189
0x00000000000ec6f2 : retf 0x11b8
0x000000000005b4c7 : retf 0x12
0x00000000000356f2 : retf 0x12b3
0x000000000000295c : retf 0x12c5
0x00000000000492c2 : retf 0x1346
0x000000000009f23a : retf 0x1373
0x00000000000518f7 : retf 0x148
0x000000000008c1ac : retf 0x149
0x00000000000814bd : retf 0x14c
0x00000000000319a3 : retf 0x14ec
0x0000000000024afc : retf 0x15
0x000000000002704a : retf 0x15a5
0x00000000001026a8 : retf 0x15ff
0x0000000000090092 : retf 0x16
0x00000000000c6293 : retf 0x1674
0x000000000012594b : retf 0x1689
0x000000000006477a : retf 0x17
0x0000000000002e52 : retf 0x172
0x000000000008afa3 : retf 0x17e9
0x0000000000002952 : retf 0x182c
0x000000000008bf34 : retf 0x189
0x00000000000ec2b2 : retf 0x18b8
0x00000000000a4a86 : retf 0x19
0x000000000004788d : retf 0x194d
0x000000000008b330 : retf 0x1975
0x00000000000f6692 : retf 0x19b8
0x00000000000de4ee : retf 0x1a74
0x0000000000162fc9 : retf 0x1b8
0x00000000000a1e33 : retf 0x1c74
0x0000000000001f56 : retf 0x1cd6
0x000000000016ffc8 : retf 0x1d4
0x0000000000170768 : retf 0x1d5
0x0000000000050aa6 : retf 0x1de9
0x000000000008df6f : retf 0x1e74
0x00000000000f6872 : retf 0x1eb8
0x0000000000091d2b : retf 0x1f0f
0x0000000000124cfe : retf 0x1f75
0x00000000001623a2 : retf 0x1f77
0x0000000000043f4b : retf 0x1fe9
0x0000000000001ede : retf 0x20f4
0x0000000000079505 : retf 0x2148
0x0000000000161134 : retf 0x2149
0x000000000007f0e2 : retf 0x2173
0x0000000000002db2 : retf 0x2217
0x000000000004af93 : retf 0x2274
0x00000000000022d8 : retf 0x2281
0x00000000000023c1 : retf 0x23c4
0x000000000016efd8 : retf 0x24
0x0000000000011280 : retf 0x25
0x00000000000c7b96 : retf 0x2576
0x000000000005a511 : retf 0x26e9
0x000000000002b5cc : retf 0x2773
0x000000000008d455 : retf 0x2775
0x000000000002b5a6 : retf 0x2776
0x0000000000103db2 : retf 0x2777
0x0000000000128398 : retf 0x28
0x0000000000132409 : retf 0x280f
0x00000000000ec1c2 : retf 0x28b8
0x000000000012d1c2 : retf 0x28d2
0x000000000012a689 : retf 0x28ff
0x000000000000b7c0 : retf 0x29
0x00000000000882e9 : retf 0x2944
0x0000000000025a81 : retf 0x2948
0x00000000000ae8c4 : retf 0x294c
0x000000000011e2a2 : retf 0x296b
0x000000000015f9da : retf 0x2977
0x000000000010839b : retf 0x2a
0x0000000000117f11 : retf 0x2a1b
0x0000000000117e42 : retf 0x2a1c
0x00000000000ec2e5 : retf 0x2a74
0x000000000008cc45 : retf 0x2a75
0x000000000017519c : retf 0x2a91
0x000000000010c382 : retf 0x2ae2
0x000000000010992a : retf 0x2af9
0x00000000000098b8 : retf 0x2b
0x0000000000100d26 : retf 0x2b46
0x0000000000069565 : retf 0x2b48
0x000000000008a97d : retf 0x2b49
0x00000000000ffb3a : retf 0x2b52
0x00000000000fcca2 : retf 0x2b81
0x00000000000281e0 : retf 0x2bb
0x0000000000011148 : retf 0x2c
0x000000000017461a : retf 0x2c90
0x000000000009f220 : retf 0x2d73
0x00000000000f6362 : retf 0x2db8
0x000000000006c925 : retf 0x2e66
0x00000000000f5df2 : retf 0x2eb8
0x00000000000c57a2 : retf 0x2ef6
0x00000000000f6902 : retf 0x2fb8
0x000000000000ecd0 : retf 0x30
0x00000000000f6235 : retf 0x3074
0x00000000000aa092 : retf 0x30a8
0x00000000000c9211 : retf 0x3102
0x00000000000ed49e : retf 0x3145
0x0000000000138d26 : retf 0x3148
0x000000000011b669 : retf 0x3149
0x0000000000176405 : retf 0x3159
0x00000000000e3924 : retf 0x3174
0x0000000000088424 : retf 0x32
0x000000000017646d : retf 0x32dd
0x00000000000783bc : retf 0x33
0x0000000000087a7a : retf 0x3304
0x000000000007bad2 : retf 0x33aa
0x000000000007b9fa : retf 0x33bd
0x000000000007e3c2 : retf 0x33c0
0x0000000000174d23 : retf 0x33e6
0x0000000000053ae6 : retf 0x34
0x0000000000073c7a : retf 0x3412
0x000000000003e53e : retf 0x343d
0x000000000006da3a : retf 0x344b
0x0000000000053656 : retf 0x348
0x00000000000d9275 : retf 0x34c
0x00000000000085c8 : retf 0x35
0x00000000000b6772 : retf 0x3574
0x00000000000f71b2 : retf 0x35b8
0x00000000000bf6d0 : retf 0x35e9
0x0000000000175251 : retf 0x3617
0x00000000000f6962 : retf 0x36b8
0x0000000000038364 : retf 0x37
0x00000000000411a2 : retf 0x373c
0x0000000000138d02 : retf 0x377
0x000000000008b29d : retf 0x3775
0x00000000000f6992 : retf 0x37b8
0x0000000000002233 : retf 0x3844
0x0000000000002e7e : retf 0x385b
0x000000000002e6fa : retf 0x3866
0x000000000000d140 : retf 0x39
0x0000000000021522 : retf 0x393b
0x00000000000d9981 : retf 0x3941
0x0000000000111785 : retf 0x3944
0x00000000000433d7 : retf 0x3948
0x00000000001031a0 : retf 0x3949
0x0000000000028229 : retf 0x394c
0x00000000000253b4 : retf 0x394d
0x00000000000462c4 : retf 0x3973
0x00000000000c62a4 : retf 0x3974
0x00000000000a81e2 : retf 0x3b7e
0x00000000001107ab : retf 0x3b9a
0x0000000000028360 : retf 0x3bb
0x0000000000051be7 : retf 0x3cb9
0x0000000000176866 : retf 0x3d8a
0x000000000003b7ae : retf 0x3deb
0x00000000001292b4 : retf 0x3e8
0x00000000001740fb : retf 0x3ec
0x0000000000040efb : retf 0x3f3d
0x0000000000070daf : retf 0x3f7
0x00000000000cfd26 : retf 0x3f74
0x0000000000053c54 : retf 0x42
0x0000000000000321 : retf 0x4244
0x000000000008fe7c : retf 0x4266
0x00000000000bf993 : retf 0x440f
0x00000000000a0e07 : retf 0x4466
0x0000000000041cb9 : retf 0x447e
0x000000000012cdaf : retf 0x4489
0x00000000000c7986 : retf 0x44e8
0x00000000000c2da4 : retf 0x44f6
0x00000000000dec61 : retf 0x44ff
0x000000000010f45d : retf 0x470f
0x000000000009f206 : retf 0x4773
0x000000000008b103 : retf 0x47e9
0x00000000000828e5 : retf 0x4801
0x000000000007c6a1 : retf 0x4802
0x0000000000033b7e : retf 0x4803
0x0000000000033c6c : retf 0x4807
0x0000000000033b28 : retf 0x4809
0x0000000000033d1c : retf 0x480b
0x0000000000033d58 : retf 0x480c
0x0000000000073f5c : retf 0x4810
0x00000000000fda47 : retf 0x4864
0x00000000000278f1 : retf 0x4880
0x00000000000460e1 : retf 0x48f8
0x0000000000036f78 : retf 0x48ff
0x00000000000f1f56 : retf 0x4901
0x00000000000bb1dd : retf 0x490f
0x0000000000001c3b : retf 0x49f2
0x0000000000002efa : retf 0x4a9a
0x00000000000e8c62 : retf 0x4b8
0x00000000000283ae : retf 0x4bb
0x000000000000dd58 : retf 0x4c
0x000000000007c653 : retf 0x4c01
0x0000000000083261 : retf 0x4c72
0x0000000000085064 : retf 0x4c89
0x00000000000e7322 : retf 0x4cb9
0x000000000007fbe4 : retf 0x4d01
0x0000000000074051 : retf 0x4d20
0x0000000000046138 : retf 0x4de8
0x000000000004614a : retf 0x4df0
0x000000000004615c : retf 0x4df8
0x00000000000ce763 : retf 0x4e8b
0x00000000000ce5e4 : retf 0x5088
0x0000000000119abb : retf 0x5089
0x0000000000089ff9 : retf 0x51e8
0x000000000003ad8d : retf 0x5355
0x0000000000119b53 : retf 0x5389
0x0000000000024c95 : retf 0x5489
0x00000000000a5062 : retf 0x54b
0x0000000000002754 : retf 0x54da
0x00000000000774c5 : retf 0x54e9
0x00000000000030d0 : retf 0x54f7
0x00000000000edc16 : retf 0x5541
0x000000000014fb12 : retf 0x557f
0x0000000000001ea4 : retf 0x559a
0x00000000000cd649 : retf 0x574
0x0000000000103e82 : retf 0x577
0x00000000000d1245 : retf 0x57e9
0x0000000000128927 : retf 0x585
0x00000000000cdb65 : retf 0x587d
0x00000000001244ea : retf 0x593
0x000000000002893b : retf 0x5bb
0x0000000000005d60 : retf 0x5c
0x000000000008766d : retf 0x5d5b
0x00000000001201ea : retf 0x5d6
0x00000000000fd4ed : retf 0x5de8
0x000000000009f1ec : retf 0x6173
0x000000000008bdd9 : retf 0x61e9
0x000000000011aeea : retf 0x629
0x0000000000001f5c : retf 0x6321
0x00000000000509a5 : retf 0x6348
0x0000000000123891 : retf 0x6349
0x00000000000250e2 : retf 0x6411
0x00000000000ff759 : retf 0x6474
0x0000000000118bea : retf 0x64c
0x000000000011f86a : retf 0x654
0x00000000001324f3 : retf 0x6601
0x0000000000132643 : retf 0x6602
0x0000000000132793 : retf 0x6603
0x00000000001328e3 : retf 0x6604
0x0000000000132a33 : retf 0x6605
0x0000000000132b83 : retf 0x6606
0x0000000000132cd3 : retf 0x6607
0x0000000000132e23 : retf 0x6608
0x0000000000132f73 : retf 0x6609
0x00000000001330c3 : retf 0x660a
0x0000000000133213 : retf 0x660b
0x0000000000133363 : retf 0x660c
0x00000000001334b3 : retf 0x660d
0x0000000000133603 : retf 0x660e
0x0000000000133753 : retf 0x660f
0x0000000000138d21 : retf 0x676
0x00000000000d7196 : retf 0x6774
0x0000000000176785 : retf 0x67ca
0x00000000000b4b18 : retf 0x6948
0x00000000000b4a04 : retf 0x694d
0x00000000000b95e2 : retf 0x6a
0x00000000000b966c : retf 0x6b48
0x00000000000e7461 : retf 0x6b8
0x000000000000375f : retf 0x6b85
0x0000000000028999 : retf 0x6bb
0x000000000004a72b : retf 0x6ce9
0x0000000000003c94 : retf 0x6e33
0x00000000000811a4 : retf 0x6e9
0x00000000000d038c : retf 0x6ee8
0x00000000000d7652 : retf 0x6fe9
0x0000000000048eaf : retf 0x703d
0x00000000000039c3 : retf 0x707d
0x0000000000176646 : retf 0x7272
0x000000000008da98 : retf 0x72e9
0x0000000000002590 : retf 0x736c
0x0000000000109dea : retf 0x73a
0x000000000008cc9d : retf 0x7575
0x0000000000109cbf : retf 0x769
0x0000000000175e1f : retf 0x76a5
0x0000000000073381 : retf 0x776
0x000000000008b393 : retf 0x77e9
0x00000000000477c6 : retf 0x77f
0x000000000008dbcd : retf 0x7875
0x0000000000112912 : retf 0x7880
0x0000000000174ca2 : retf 0x79f5
0x00000000000d69e0 : retf 0x7a80
0x0000000000117135 : retf 0x7c83
0x0000000000002407 : retf 0x7e0c
0x000000000008cc74 : retf 0x7f77
0x00000000001097d2 : retf 0x7f80
0x00000000000e847b : retf 0x8041
0x0000000000138d0a : retf 0x8148
0x00000000000da998 : retf 0x8166
0x0000000000156f9a : retf 0x81eb
0x0000000000072d29 : retf 0x820f
0x00000000001374b6 : retf 0x830f
0x000000000007a2f0 : retf 0x8310
0x0000000000021b1d : retf 0x8341
0x00000000000258f5 : retf 0x8348
0x00000000000890d9 : retf 0x8349
0x0000000000021b20 : retf 0x83ff
0x0000000000026431 : retf 0x840f
0x0000000000059074 : retf 0x8440
0x00000000000fdf0a : retf 0x8445
0x0000000000175590 : retf 0x8481
0x000000000007c231 : retf 0x8501
0x0000000000022838 : retf 0x8508
0x0000000000024ee5 : retf 0x850f
0x000000000004577f : retf 0x8548
0x0000000000091849 : retf 0x860f
0x000000000008d481 : retf 0x870f
0x0000000000103e32 : retf 0x877
0x000000000000367b : retf 0x8792
0x000000000008d6c3 : retf 0x87e9
0x00000000000cff11 : retf 0x8810
0x00000000000cfe4e : retf 0x8840
0x00000000000cf3a3 : retf 0x8841
0x00000000000d1552 : retf 0x88e8
0x0000000000070589 : retf 0x8902
0x0000000000075080 : retf 0x8920
0x00000000000f0b61 : retf 0x8940
0x00000000000313c2 : retf 0x8941
0x0000000000039511 : retf 0x8943
0x000000000004c89d : retf 0x8944
0x0000000000027f34 : retf 0x8945
0x000000000002656e : retf 0x8948
0x00000000000828ed : retf 0x8949
0x00000000000264ab : retf 0x894c
0x0000000000025479 : retf 0x894d
0x00000000000b6ff1 : retf 0x8966
0x0000000000057ae3 : retf 0x89e9
0x00000000000e6a21 : retf 0x89ff
0x00000000000024e0 : retf 0x8a3f
0x00000000000f56d2 : retf 0x8a6
0x0000000000039506 : retf 0x8a8d
0x0000000000003f33 : retf 0x8aca
0x00000000000f94aa : retf 0x8b40
0x00000000000f7bcc : retf 0x8b41
0x00000000000509c8 : retf 0x8b45
0x000000000002496a : retf 0x8b48
0x0000000000046b4a : retf 0x8b4c
0x0000000000032a0c : retf 0x8b4d
0x00000000000c4c02 : retf 0x8b64
0x0000000000051bb2 : retf 0x8b8
0x000000000015627a : retf 0x8ceb
0x0000000000110447 : retf 0x8d41
0x0000000000035c99 : retf 0x8d48
0x0000000000073507 : retf 0x8d49
0x000000000014ac34 : retf 0x8d4a
0x0000000000073172 : retf 0x8d4c
0x00000000000f154c : retf 0x8d4d
0x00000000000d680e : retf 0x8e0f
0x00000000000d68bd : retf 0x8f0f
0x000000000009192d : retf 0x9066
0x00000000000d7533 : retf 0x91eb
0x0000000000001d59 : retf 0x9226
0x0000000000160bc8 : retf 0x930f
0x0000000000001bec : retf 0x9396
0x0000000000175eee : retf 0x93a2
0x00000000000a46c0 : retf 0x940f
0x000000000003574e : retf 0x948
0x00000000000f1272 : retf 0x949
0x000000000007f61a : retf 0x94c
0x000000000012d636 : retf 0x94e8
0x00000000000d8fe4 : retf 0x94e9
0x0000000000001e8c : retf 0x9582
0x0000000000111082 : retf 0x9589
0x000000000003bb46 : retf 0x973d
0x00000000000b5ad4 : retf 0x9848
0x00000000000608a2 : retf 0x98d
0x000000000017628b : retf 0x99e0
0x0000000000085f69 : retf 0x9aeb
0x00000000000e93b2 : retf 0x9b8
0x00000000000f0b57 : retf 0x9b9
0x000000000015508a : retf 0x9ceb
0x0000000000068c32 : retf 0x9d
0x00000000001765fa : retf 0x9d7d
0x00000000000f6722 : retf 0x9db8
0x00000000001632dd : retf 0x9de8
0x000000000004472d : retf 0x9eb
0x00000000000d2670 : retf 0xa
0x0000000000192ad0 : retf 0xa01
0x0000000000176f05 : retf 0xa020
0x0000000000174465 : retf 0xa1eb
0x00000000000dca41 : retf 0xa25
0x00000000001764eb : retf 0xa2fe
0x0000000000003501 : retf 0xa3f6
0x0000000000064da2 : retf 0xa5
0x00000000000f6662 : retf 0xa5b8
0x0000000000082402 : retf 0xa74
0x0000000000100e9d : retf 0xa880
0x00000000000c640f : retf 0xa9eb
0x00000000001765bc : retf 0xab0d
0x00000000000e055d : retf 0xabf
0x0000000000176b0e : retf 0xae32
0x0000000000003a3c : retf 0xaec4
0x00000000000f6542 : retf 0xafb8
0x000000000003417a : retf 0xb
0x00000000000f6752 : retf 0xb2b8
0x00000000000f6782 : retf 0xb3b8
0x0000000000175309 : retf 0xb51a
0x00000000000a2412 : retf 0xb57
0x000000000006164d : retf 0xb60f
0x00000000000de669 : retf 0xb70f
0x0000000000162eb2 : retf 0xb801
0x000000000015fa1e : retf 0xb841
0x00000000000fd572 : retf 0xb8e8
0x0000000000088bab : retf 0xb941
0x0000000000161a4f : retf 0xb948
0x000000000000281a : retf 0xba99
0x00000000000e9472 : retf 0xbb8
0x0000000000176613 : retf 0xbb9a
0x00000000000440a5 : retf 0xbc41
0x00000000000f3a82 : retf 0xbcb8
0x00000000000bce32 : retf 0xbd0
0x000000000006af22 : retf 0xbd8b
0x00000000000f3a22 : retf 0xbdb8
0x0000000000001f95 : retf 0xbe35
0x00000000000f3902 : retf 0xbeb8
0x0000000000003c12 : retf 0xbf15
0x0000000000160d45 : retf 0xbf41
0x000000000017665d : retf 0xbf4b
0x00000000000f3932 : retf 0xbfb8
0x00000000000fd66b : retf 0xbfe8
0x00000000000879e9 : retf 0xc
0x000000000008c400 : retf 0xc031
0x00000000000abcb9 : retf 0xc083
0x0000000000045659 : retf 0xc084
0x000000000002f97b : retf 0xc089
0x000000000019b8a1 : retf 0xc0a
0x00000000000f3992 : retf 0xc0b8
0x000000000007365a : retf 0xc0e8
0x00000000001762dd : retf 0xc0fe
0x00000000000250df : retf 0xc148
0x00000000000972fe : retf 0xc149
0x00000000000f3872 : retf 0xc1b8
0x000000000006133c : retf 0xc239
0x00000000000abcbf : retf 0xc283
0x0000000000124d81 : retf 0xc675
0x00000000001110a2 : retf 0xc683
0x000000000004aca9 : retf 0xc689
0x0000000000160d10 : retf 0xc749
0x00000000000d0433 : retf 0xc7e8
0x000000000011c6b8 : retf 0xc80f
0x0000000000045556 : retf 0xc821
0x000000000008b3e4 : retf 0xc889
0x00000000001180cc : retf 0xc8d
0x000000000011f1c3 : retf 0xc90f
0x00000000000f0815 : retf 0xc931
0x00000000000eaed0 : retf 0xc985
0x00000000000f15e1 : retf 0xc9d9
0x0000000000021abc : retf 0xca21
0x00000000000ce797 : retf 0xca83
0x000000000015a4a4 : retf 0xcab2
0x0000000000051869 : retf 0xcac1
0x00000000000b67a7 : retf 0xcb75
0x00000000000bcd5a : retf 0xcbeb
0x000000000008b85b : retf 0xcc74
0x0000000000172f6a : retf 0xcccb
0x0000000000009759 : retf 0xd
0x0000000000002dae : retf 0xd04f
0x00000000000ce78d : retf 0xd189
0x00000000001750c6 : retf 0xd1cb
0x00000000000ff635 : retf 0xd1f7
0x00000000000a19af : retf 0xd231
0x0000000000104346 : retf 0xd274
0x00000000000ae7ba : retf 0xd284
0x00000000000251c2 : retf 0xd285
0x00000000000313cc : retf 0xd289
0x00000000001767d7 : retf 0xd39
0x0000000000085187 : retf 0xd3e8
0x0000000000086f25 : retf 0xd5e8
0x000000000008d53c : retf 0xd772
0x0000000000119b48 : retf 0xd789
0x000000000002da03 : retf 0xd88
0x00000000000f0d02 : retf 0xd8b8
0x00000000000dafec : retf 0xd975
0x00000000000cf5b7 : retf 0xda29
0x000000000008e0f3 : retf 0xda75
0x000000000008cd17 : retf 0xdc72
0x00000000000d0011 : retf 0xdc75
0x00000000000a8a72 : retf 0xdca
0x00000000000f7902 : retf 0xdcb8
0x00000000000ebd62 : retf 0xddb8
0x0000000000176d63 : retf 0xde4f
0x00000000000805bf : retf 0xde75
0x00000000000d7384 : retf 0xdeb
0x0000000000175393 : retf 0xdf7f
0x0000000000005931 : retf 0xe
0x0000000000174e3e : retf 0xe152
0x0000000000157b83 : retf 0xe175
0x00000000000d0a62 : retf 0xe183
0x00000000000759b7 : retf 0xe281
0x0000000000028355 : retf 0xe283
0x000000000008e1a9 : retf 0xe475
0x000000000017541c : retf 0xe496
0x000000000008d877 : retf 0xe675
0x0000000000061487 : retf 0xe677
0x0000000000174d86 : retf 0xe72e
0x000000000008d816 : retf 0xe775
0x00000000000d82bc : retf 0xe7e9
0x0000000000174413 : retf 0xe80
0x00000000000e64a9 : retf 0xe803
0x0000000000043412 : retf 0xe8e8
0x0000000000033c54 : retf 0xe904
0x0000000000033cbd : retf 0xe908
0x00000000000f64e2 : retf 0xe9b8
0x000000000003fd7e : retf 0xe9e9
0x00000000000036b0 : retf 0xe9ee
0x000000000003b553 : retf 0xea75
0x00000000000e91ea : retf 0xea81
0x00000000001763cc : retf 0xea91
0x00000000000cc17e : retf 0xeac0
0x0000000000045566 : retf 0xeac1
0x000000000008e9c1 : retf 0xead3
0x00000000000f18fa : retf 0xeadb
0x00000000000c91e1 : retf 0xeb04
0x0000000000033bea : retf 0xeb05
0x0000000000033c9e : retf 0xeb06
0x0000000000033d43 : retf 0xeb0a
0x0000000000033d8e : retf 0xeb0d
0x00000000000d1e12 : retf 0xeb7f
0x00000000000f18f1 : retf 0xeb83
0x0000000000176ce1 : retf 0xebbf
0x000000000008b349 : retf 0xec74
0x00000000000ac081 : retf 0xec75
0x00000000000cc51e : retf 0xece9
0x00000000000de508 : retf 0xed75
0x00000000000acd3f : retf 0xee75
0x00000000000346f0 : retf 0xeeb
0x000000000012d5c2 : retf 0xef3e
0x000000000003d388 : retf 0xefe9
0x000000000016d250 : retf 0xf
0x0000000000069de0 : retf 0xf009
0x0000000000081512 : retf 0xf01
0x00000000001378ac : retf 0xf02
0x00000000000f121c : retf 0xf021
0x0000000000137a2c : retf 0xf03
0x0000000000137bac : retf 0xf04
0x0000000000137d2c : retf 0xf05
0x0000000000137eac : retf 0xf06
0x000000000011a8aa : retf 0xf06d
0x000000000013802c : retf 0xf07
0x00000000000d631d : retf 0xf072
0x00000000001381ac : retf 0xf08
0x000000000013832c : retf 0xf09
0x00000000001384ac : retf 0xf0a
0x000000000013862c : retf 0xf0b
0x00000000001387ac : retf 0xf0c
0x000000000013892c : retf 0xf0d
0x0000000000138aac : retf 0xf0e
0x0000000000138c2c : retf 0xf0f
0x000000000011cbaf : retf 0xf175
0x00000000001510dd : retf 0xf1c5
0x0000000000112349 : retf 0xf1e8
0x000000000007551b : retf 0xf275
0x00000000001799c0 : retf 0xf3fa
0x00000000000b5aec : retf 0xf40
0x0000000000060fc3 : retf 0xf41
0x00000000000dc5c2 : retf 0xf44e
0x0000000000109ef2 : retf 0xf47b
0x000000000003b356 : retf 0xf48
0x00000000000977b1 : retf 0xf4c
0x0000000000089816 : retf 0xf631
0x0000000000176328 : retf 0xf64
0x0000000000161257 : retf 0xf641
0x0000000000044e1e : retf 0xf66
0x000000000004eb63 : retf 0xf748
0x00000000000f2f02 : retf 0xf7aa
0x00000000000b1922 : retf 0xf7d0
0x00000000000a1f9a : retf 0xf7f6
0x000000000004d373 : retf 0xf8
0x00000000000f6e12 : retf 0xf877
0x0000000000112195 : retf 0xf883
0x00000000000ba0cd : retf 0xf8c1
0x00000000001586fa : retf 0xf8c5
0x0000000000087202 : retf 0xf8e8
0x000000000014fddb : retf 0xf983
0x00000000001511af : retf 0xf9c5
0x0000000000119ed8 : retf 0xfa81
0x00000000000313ea : retf 0xfa83
0x00000000000394eb : retf 0xfac1
0x0000000000073512 : retf 0xfadf
0x0000000000186e6c : retf 0xfb23
0x0000000000186c5c : retf 0xfb2f
0x000000000006cec2 : retf 0xfb45
0x0000000000187154 : retf 0xfb56
0x0000000000068af2 : retf 0xfc
0x00000000000dbb28 : retf 0xfd4f
0x00000000001544b6 : retf 0xfdc5
0x000000000010aea2 : retf 0xfdcb
0x00000000000ade4f : retf 0xfde9
0x0000000000034bd4 : retf 0xfe0d
0x000000000012cf2b : retf 0xfe8
0x0000000000161ac5 : retf 0xfe83
0x0000000000042610 : retf 0xfe9
0x0000000000042922 : retf 0xfec0
0x0000000000150ee7 : retf 0xfec5
0x0000000000139551 : retf 0xff2
0x000000000013954c : retf 0xff3
0x000000000002b432 : retf 0xff60
0x00000000001227d2 : retf 0xff64
0x000000000004e43e : retf 0xff83
0x00000000000c7122 : retf 0xff95
0x00000000000596c4 : retf 0xff9a
0x0000000000121f22 : retf 0xffa0
0x000000000005909c : retf 0xffa5
0x000000000011e5e2 : retf 0xffb2
0x00000000000733a5 : retf 0xffb8
0x000000000006add5 : retf 0xffe8
0x000000000004fb22 : retf 0xffe9
0x0000000000022932 : retf 0xffeb
0x000000000004f7c0 : retf 0xffec
0x0000000000177771 : retf 0xffed
0x00000000001891e9 : retf 0xffef
0x0000000000114b2b : retf 0xfff0
0x0000000000145312 : retf 0xfff1
0x000000000003cf58 : retf 0xfff2
0x00000000000e4909 : retf 0xfff3
0x00000000000d4b28 : retf 0xfff4
0x0000000000063292 : retf 0xfff5
0x0000000000055e60 : retf 0xfff6
0x00000000001acadd : retf 0xfff7
0x00000000000bd432 : retf 0xfff8
0x00000000000b9118 : retf 0xfff9
0x0000000000034822 : retf 0xfffa
0x000000000008a192 : retf 0xfffb
0x000000000002cc56 : retf 0xfffc
0x0000000000026502 : retf 0xfffd
0x0000000000025285 : retf 0xfffe
0x0000000000024ad9 : retf 0xffff
0x0000000000000df8 : retf 1
0x000000000000f190 : retf 2
0x00000000000a4b62 : retf 3
0x000000000000c0f0 : retf 4
0x00000000000014f0 : retf 5
0x000000000009d112 : retf 6
0x0000000000001834 : retf 7
0x0000000000038590 : retf 8
0x000000000005c955 : retf 9
0x0000000000105042 : rol ax, 8 ; ret
0x00000000000a0d95 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000a19a3 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000ef9cc : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000007ec7e : rol bl, 0x83 ; or byte ptr [r9], r8b ; xor eax, eax ; ret
0x0000000000091a1e : rol bl, 0x83 ; ret 0x6620
0x00000000000de1cd : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x00000000000cf07d : rol bl, 0x90 ; mov qword ptr [rdx + 0x20], rsi ; xor eax, eax ; ret
0x000000000007327c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000921ad : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000a14fd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000038e27 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000008fda2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000015071b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000097742 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000d1ff9 : rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x0000000000001324 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000171960 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000adb30 : rol byte ptr [rax + rcx*2], 0x39 ; ret
0x00000000000ac93a : rol byte ptr [rax + rcx*2], 0x39 ; ret 0xef75
0x00000000000cdb90 : rol byte ptr [rax + rcx*2], 0x39 ; ret 0xf175
0x0000000000053500 : rol byte ptr [rax + rcx*4 + 0x11], 0x29 ; ret
0x00000000000e5b86 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000449ea : rol byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0x8b4c
0x000000000015982d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000199691 : rol byte ptr [rax], 0 ; in al, dx ; jg 0x19968d ; call qword ptr [rdx]
0x000000000019a69d : rol byte ptr [rax], 1 ; add byte ptr [rax + 0xf], dl ; int1 ; call qword ptr [rax]
0x00000000001231ef : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000000b48a8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000000b48df : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000035fb1 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000019a689 : rol byte ptr [rax], 1 ; add byte ptr [rdi + rcx - 0xf], dl ; call qword ptr [rax]
0x0000000000089ce0 : rol byte ptr [rax], cl ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000085712 : rol byte ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x00000000000cd305 : rol byte ptr [rbp + 0x39], 0xc2 ; je 0xcd327 ; ret
0x0000000000091c62 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000018d0c4 : rol byte ptr [rbp + 0x796c0001], 0xfa ; call rsp
0x00000000000bb171 : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x000000000005a957 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000a282d : rol byte ptr [rbp - 0x3f6bf02e], 0xf3 ; ret
0x00000000000ff750 : rol byte ptr [rbp - 0x6af0be40], cl ; ret 0x3945
0x00000000000dd215 : rol byte ptr [rbx + 0x14801ea], cl ; retf 0x8d48
0x0000000000150b42 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x00000000000ad811 : rol byte ptr [rbx + 0x508d01c1], 1 ; add dword ptr [rcx], edi ; retf
0x0000000000044b17 : rol byte ptr [rbx + 0xf01243c], 1 ; xchg eax, esp ; ret 0xd084
0x000000000011177f : rol byte ptr [rbx + rdi + 0x71], 1 ; or al, 0x75 ; retf 0x3944
0x000000000004629b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000187c14 : rol byte ptr [rbx - 0x1a240000], 0xea ; jmp rax
0x000000000004365a : rol byte ptr [rbx - 0x248adb07], 1 ; ret
0x00000000000d17bf : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000001097c7 : rol byte ptr [rbx - 0x47ca817], 1 ; or dword ptr [rdi], ecx ; retf
0x00000000000f8fdc : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000733d8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000012d149 : rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x000000000002ece1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000c9214 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000e15bd : rol byte ptr [rbx - 0x76b7f708], 1 ; ret 0x830f
0x00000000001865a4 : rol byte ptr [rbx - 3], 1 ; push qword ptr [rax + 0x44] ; std ; call qword ptr [rax]
0x00000000000b3692 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e006d : rol byte ptr [rbx], 0 ; add byte ptr [rbx - 0x76b7fd02], al ; ret 0x940f
0x000000000010efa6 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000119a86 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x0000000000189334 : rol byte ptr [rbx], 1 ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; imul bh ; jmp rsp
0x00000000000a8116 : rol byte ptr [rcx + 0x29], 1 ; ret 0x2948
0x00000000000b3d91 : rol byte ptr [rcx + 0x29], cl ; ret 0xc148
0x00000000000cee3e : rol byte ptr [rcx + 0x3b], 0x14 ; mov byte ptr [rbx + rbx - 0xd], dh ; ret
0x00000000001026d8 : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x00000000000fb406 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x00000000000a1831 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000000ff752 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3945
0x00000000000a14fe : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000008e0e5 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000008a657 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret
0x000000000008e19b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x0000000000161249 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xd349
0x000000000016153d : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x0000000000189d94 : rol byte ptr [rcx + 1], 0 ; cmp al, 0x32 ; call qword ptr [rax]
0x000000000004372f : rol byte ptr [rcx + rcx*4 - 0x10], 0xf ; ret
0x00000000001102da : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000065286 : rol byte ptr [rcx - 0x47], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000161548 : rol byte ptr [rcx - 0xa], cl ; ret 0x7407
0x00000000000b3672 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000005118a : rol byte ptr [rcx], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008e122 : rol byte ptr [rcx], 0x38 ; adc al, 7 ; je 0x8e128 ; ret
0x00000000000d1e0f : rol byte ptr [rcx], 0x39 ; retf 0xeb7f
0x0000000000045f4a : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0x45f49 ; xor eax, eax ; ret
0x000000000004602a : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0x46029 ; xor eax, eax ; ret
0x0000000000045d12 : rol byte ptr [rcx], 0x49 ; cmp eax, eax ; jne 0x45cd8 ; pop rbx ; ret
0x0000000000022c66 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000000450f2 : rol byte ptr [rcx], 0x5b ; ret
0x00000000000f85db : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000045102 : rol byte ptr [rcx], 0x80 ; js 0x45111 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000002c33b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000dda09 : rol byte ptr [rcx], 0x89 ; add edi, dword ptr [rcx] ; retf 0x840f
0x00000000000d3b4d : rol byte ptr [rcx], 0x89 ; cmp byte ptr [rax + 0x63], r9b ; ret
0x000000000006f2a4 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00000000000d1784 : rol byte ptr [rcx], 0xc0 ; ret
0x000000000004427a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000f15f7 : rol byte ptr [rcx], 0xd9 ; ret 0x3941
0x00000000000a1bb8 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000001b0b4c : rol byte ptr [rcx], cl ; add byte ptr [rax], al ; retf 0
0x00000000000e6d3c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f93ad : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000187cfc : rol byte ptr [rdi - 0xe440000], 0xea ; call rsp
0x00000000000b36d2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000018a72c : rol byte ptr [rdx - 0x1293ffff], 0xf5 ; call rsp
0x00000000000354fc : rol byte ptr [rdx - 0x14f09a00], 0xc1 ; ret
0x00000000000b3682 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000b6f7d : rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x00000000000f927d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x0000000000179044 : rol byte ptr [rsi - 0xe], 0xff ; rol byte ptr [rsi - 0xe], 1 ; jmp rax
0x0000000000179048 : rol byte ptr [rsi - 0xe], 1 ; jmp rax
0x00000000000b36c2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001409dd : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000151295 : rol ch, 1 ; jns 0x151274 ; retf 0xead3
0x00000000001513e5 : rol ch, 1 ; jns 0x1513c4 ; retf 0xead3
0x0000000000151535 : rol ch, 1 ; jns 0x151514 ; retf 0xead3
0x0000000000151685 : rol ch, 1 ; jns 0x151664 ; retf 0xead3
0x00000000001517d5 : rol ch, 1 ; jns 0x1517b4 ; retf 0xead3
0x0000000000151925 : rol ch, 1 ; jns 0x151904 ; retf 0xead3
0x0000000000151a75 : rol ch, 1 ; jns 0x151a54 ; retf 0xead3
0x0000000000151bc5 : rol ch, 1 ; jns 0x151ba4 ; retf 0xead3
0x0000000000151d15 : rol ch, 1 ; jns 0x151cf4 ; retf 0xead3
0x0000000000151e65 : rol ch, 1 ; jns 0x151e44 ; retf 0xead3
0x0000000000151fb5 : rol ch, 1 ; jns 0x151f94 ; retf 0xead3
0x0000000000152105 : rol ch, 1 ; jns 0x1520e4 ; retf 0xead3
0x0000000000152255 : rol ch, 1 ; jns 0x152234 ; retf 0xead3
0x00000000001523a5 : rol ch, 1 ; jns 0x152384 ; retf 0xead3
0x00000000001524f5 : rol ch, 1 ; jns 0x1524d4 ; retf 0xead3
0x0000000000152965 : rol ch, 1 ; jns 0x152944 ; retf 0xead3
0x0000000000152ae5 : rol ch, 1 ; jns 0x152ac4 ; retf 0xead3
0x0000000000152c65 : rol ch, 1 ; jns 0x152c44 ; retf 0xead3
0x0000000000152de5 : rol ch, 1 ; jns 0x152dc4 ; retf 0xead3
0x0000000000152f65 : rol ch, 1 ; jns 0x152f44 ; retf 0xead3
0x00000000001530e5 : rol ch, 1 ; jns 0x1530c4 ; retf 0xead3
0x0000000000153265 : rol ch, 1 ; jns 0x153244 ; retf 0xead3
0x00000000001533e5 : rol ch, 1 ; jns 0x1533c4 ; retf 0xead3
0x0000000000153565 : rol ch, 1 ; jns 0x153544 ; retf 0xead3
0x00000000001536e5 : rol ch, 1 ; jns 0x1536c4 ; retf 0xead3
0x0000000000153865 : rol ch, 1 ; jns 0x153844 ; retf 0xead3
0x00000000001539e5 : rol ch, 1 ; jns 0x1539c4 ; retf 0xead3
0x0000000000153b65 : rol ch, 1 ; jns 0x153b44 ; retf 0xead3
0x0000000000153ce5 : rol ch, 1 ; jns 0x153cc4 ; retf 0xead3
0x0000000000153e65 : rol ch, 1 ; jns 0x153e44 ; retf 0xead3
0x000000000015079f : rol ch, 1 ; std ; xlatb ; ret
0x0000000000154516 : rol ch, cl ; std ; xlatb ; ret
0x00000000001547bf : rol ch, cl ; std ; xlatb ; ret 0xc085
0x0000000000172f60 : rol cl, 0xc2 ; ret
0x00000000000b77c7 : rol cl, cl ; clc ; add eax, 0x2907f9c1 ; ret 0x8944
0x0000000000186894 : rol dh, 0xfa ; call qword ptr [rax]
0x0000000000109ae7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000186888 : rol dl, 1 ; cli ; jmp qword ptr [rax]
0x00000000000b361c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret
0x0000000000157b7c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000000a17d8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000150364 : rol dword ptr [rax + 0x49], 0x29 ; retf
0x000000000016e5a8 : rol dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x000000000016c748 : rol dword ptr [rax + rax], 0 ; mov byte ptr [rax + rax], 0 ; retf 4
0x0000000000110122 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x000000000013b7f0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000199731 : rol dword ptr [rax], 0 ; or al, 0xe3 ; sti ; call qword ptr [rdx]
0x000000000019976d : rol dword ptr [rax], 0 ; xor bl, ah ; sti ; call qword ptr [rbx]
0x00000000000521c0 : rol dword ptr [rax], 1 ; ret
0x0000000000091a44 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000091ee7 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x0000000000091f16 : rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x000000000008cafe : rol dword ptr [rbp + 0xf], 0xb6 ; retf
0x0000000000150793 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000154263 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000008e0f0 : rol dword ptr [rbp - 0x7c], 0xca ; jne 0x8e0d7 ; ret
0x000000000014fdd5 : rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x00000000001b0b48 : rol dword ptr [rbx], cl ; add byte ptr [rax], al ; rol byte ptr [rcx], cl ; add byte ptr [rax], al ; retf 0
0x000000000015f4c6 : rol dword ptr [rcx + 0xf], 0x93 ; ret 0x2045
0x0000000000160ef5 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000000d91bf : rol dword ptr [rcx + rcx*2], 0x39 ; retf
0x00000000000d7192 : rol dword ptr [rcx + rcx*2], 0x39 ; retf 0x6774
0x000000000004b6ce : rol dword ptr [rcx + rdi - 0x39], 0x77 ; fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000114bd6 : rol dword ptr [rcx + rdi], 0xbc ; ret
0x00000000000f2537 : rol dword ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000ad813 : rol dword ptr [rcx], 0x8d ; push rax ; add dword ptr [rcx], edi ; retf
0x0000000000028226 : rol dword ptr [rcx], 9 ; retf 0x394c
0x00000000001aa909 : rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*2 - 9], ah ; jmp qword ptr [rax]
0x00000000001aa8f1 : rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*2 - 9], bl ; jmp qword ptr [rax]
0x00000000001aa921 : rol dword ptr [rcx], cl ; add byte ptr [rcx + rbx*2 - 9], ch ; jmp rsi
0x000000000009e829 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000105043 : rol eax, 8 ; ret
0x00000000000366fd : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001544ae : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000150e45 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000084e7c : rol ebx, 0x66 ; nop ; lea rax, [rdx - 0x10] ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret
0x0000000000084e7b : rol r11d, 0x66 ; nop ; lea rax, [rdx - 0x10] ; ret
0x00000000000366fc : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000000fa58 : ror ah, 1 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000017a1d8 : ror al, cl ; hlt ; call qword ptr [rax]
0x000000000012d0d4 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000366fe : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000001628b8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000000d0be7 : ror byte ptr [rax + 0x21], cl ; ret 0xf748
0x0000000000091a92 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x91ad9 ; add rax, rdi ; ret
0x00000000000b1f22 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xb1f69 ; add rax, rdi ; ret
0x00000000000975f7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000b339c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000097a7e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000749e3 : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000000dd226 : ror byte ptr [rax + 0x29], cl ; retf 0xf66
0x00000000000ed09f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xed0d7 ; ret
0x000000000007ebb1 : ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x000000000007e148 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000e6d3e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000e739d : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x00000000001052ce : ror byte ptr [rax + 0x39], 1 ; retf
0x00000000000c7b93 : ror byte ptr [rax + 0x39], 1 ; retf 0x2576
0x00000000000d631a : ror byte ptr [rax + 0x39], 1 ; retf 0xf072
0x000000000005673e : ror byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000060376 : ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000006ed8b : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000b4829 : ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000007f01c : ror byte ptr [rax + 0x48417411], cl ; mov dword ptr [rsi], ecx ; ret
0x00000000001025c8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000b3d8e : ror byte ptr [rax + 0x63], 1 ; rol byte ptr [rcx + 0x29], cl ; ret 0xc148
0x000000000005309c : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000529fb : ror byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x00000000000b7b23 : ror byte ptr [rax + 0x63], cl ; add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000a81df : ror byte ptr [rax + 0x63], cl ; retf 0x3b7e
0x0000000000041cb6 : ror byte ptr [rax + 0x63], cl ; retf 0x447e
0x0000000000102762 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000115c9c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000b5645 : ror byte ptr [rax + 0xf], 0x4f ; ret 0x8b48
0x000000000002573a : ror byte ptr [rax + 0xf], 1 ; ret
0x000000000002d8eb : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00000000000c46eb : ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000c2bee : ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000fb354 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000002d8dc : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000fb089 : ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000001a1e88 : ror byte ptr [rax + 1], 0 ; in eax, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000091b3c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000092058 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x0000000000091a62 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000150763 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000032dfb : ror byte ptr [rax + 1], 1 ; ret
0x00000000000d6d80 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x00000000000975f4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000038dfa : ror byte ptr [rax + 9], 0xd0 ; ret
0x0000000000172960 : ror byte ptr [rax + rax], 0 ; ret 0xc
0x00000000000921a5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002e6e2 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000015fef1 : ror byte ptr [rax - 0x3f], 0xe6 ; add ecx, dword ptr [rax + 9] ; retf
0x000000000011bd10 : ror byte ptr [rax - 0x3f], 0xe8 ; adc byte ptr [rcx - 0x77], al ; ret 0x4388
0x000000000006793c : ror byte ptr [rax - 0x3f], 0xf8 ; add al, byte ptr [rcx + 0x29] ; ret
0x0000000000067915 : ror byte ptr [rax - 0x3f], 0xf8 ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000b6fea : ror byte ptr [rax - 0x3f], 0xfa ; adc cl, byte ptr [rax + 0x29] ; retf 0x8966
0x00000000000ff83c : ror byte ptr [rax - 0x3f], 1 ; loop 0xff849 ; jmp 0xff80c
0x000000000011ba63 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rbp - 0x77], cl ; ret 0x314c
0x00000000000c63f0 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000091a52 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000091a82 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000091f52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x0000000000091a72 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000084eb6 : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000001562b2 : ror byte ptr [rax - 0x73], 1 ; jl 0x1562d5 ; and ecx, ebp ; ret
0x000000000007f629 : ror byte ptr [rax - 0x73], 1 ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000000000120fa7 : ror byte ptr [rax - 0x75], 0x34 ; and al, 0x48 ; mov edi, ebp ; call rbx
0x00000000000f8d31 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000bb267 : ror byte ptr [rax - 0x75], 0x74 ; mov byte ptr [rax + 0x4c], 0x89 ; retf 0x8948
0x00000000000befdc : ror byte ptr [rax - 0x75], 0x74 ; ret
0x000000000010f885 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000500c1 : ror byte ptr [rax - 0x77], 0x5c ; ret 0x64c0
0x000000000011a2a9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x11a24b ; xor eax, eax ; pop rbx ; ret
0x00000000000ee7c6 : ror byte ptr [rax - 0x77], 0xc6 ; jne 0xee799 ; xor eax, eax ; pop rbx ; ret
0x000000000011e778 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x000000000008a9b4 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000102672 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000e7a0a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000000f78db : ror byte ptr [rax - 0x77], 1 ; and al, 0xc8 ; jmp 0xf78b5
0x0000000000074ae2 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000001628cd : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000002d2ac : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000007a1a8 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000b6ac5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000000b3dd5 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000033e9d : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000e709f : ror byte ptr [rax - 0x77], 1 ; retf
0x00000000000518f4 : ror byte ptr [rax - 0x77], 1 ; retf 0x148
0x00000000000b9cad : ror byte ptr [rax - 0x77], 1 ; retf 0xc148
0x00000000000f0812 : ror byte ptr [rax - 0x77], 1 ; retf 0xc931
0x000000000011dd89 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000001140f9 : ror byte ptr [rax - 0x77], 5 ; jmp qword ptr [rdi]
0x000000000012b0ab : ror byte ptr [rax - 0x77], cl ; out dx, al ; call 0xe7b16
0x000000000014fdd2 : ror byte ptr [rax - 0x77], cl ; rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x0000000000025737 : ror byte ptr [rax - 0x77], cl ; ror byte ptr [rax + 0xf], 1 ; ret
0x00000000000f198a : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000077c52 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00000000000742e1 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012b1fb : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e9370 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000de128 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x000000000003997e : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000430b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000004519a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000125dda : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000008150b : ror byte ptr [rax - 0x7d], 0xcb ; add dword ptr [rax - 0x7d], ecx ; retf 0xf01
0x0000000000091fb2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000150b72 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000091f92 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000091f72 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000036240 : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000efb9d : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000387f0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000d6849 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4901
0x0000000000048128 : ror byte ptr [rax - 0x7d], cl ; jge 0x48135 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000af228 : ror byte ptr [rax - 0x7d], cl ; jge 0xaf235 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000ba8e8 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000b6766 : ror byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000001614bc : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001614d8 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000009ce26 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000cae9d : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000001611ba : ror byte ptr [rax - 0x7d], cl ; ret 0xe940
0x000000000012d398 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x12d399 ; xor eax, eax ; ret
0x0000000000122bad : ror byte ptr [rax], 0x83 ; js 0x122bb3 ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x0000000000191e98 : ror byte ptr [rax], 1 ; add byte ptr [rcx + rax*8 - 0x15], al ; jmp qword ptr [rcx]
0x00000000000a11c4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000011b705 : ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x000000000011ba8c : ror byte ptr [rbp + 0x31], 1 ; ret 0x8948
0x0000000000161254 : ror byte ptr [rbp + 9], cl ; retf 0xf641
0x000000000009cccf : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0xd
0x00000000000a2b0c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000001123ec : ror byte ptr [rbp - 0x77], cl ; ret
0x000000000011ca8f : ror byte ptr [rbx + 0x39441448], 1 ; ror dword ptr [rdi], 1 ; xchg eax, edi ; ret 0x3944
0x0000000000157d11 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000000e30b1 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x0000000000103d4f : ror byte ptr [rbx - 0x367ab7ed], 0x74 ; adc al, 0xf6 ; ret 0x7420
0x0000000000114a06 : ror byte ptr [rcx + 0x39], 0xd3 ; je 0x114a17 ; ret
0x00000000000e73ff : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x00000000000de0f6 : ror byte ptr [rcx + 0x460f49c8], cl ; int1 ; syscall
0x00000000000b4b11 : ror byte ptr [rcx + 0x48f275c2], 0x63 ; retf 0x6948
0x00000000000c2357 : ror byte ptr [rcx + 0xf2c2444], 0x88 ; retf
0x00000000000c27f0 : ror byte ptr [rcx + 0xf3c2444], 0x88 ; ret
0x00000000000e2b56 : ror byte ptr [rcx + 0xf482444], 0x88 ; retf 6
0x00000000001601d5 : ror byte ptr [rcx + 9], 1 ; ret
0x0000000000160efc : ror byte ptr [rcx + 9], cl ; ret
0x0000000000161545 : ror byte ptr [rcx + 9], cl ; rol byte ptr [rcx - 0xa], cl ; ret 0x7407
0x000000000004b2bb : ror byte ptr [rcx + rax - 0x38], 1 ; ret
0x00000000000fd56a : ror byte ptr [rcx + rcx*4 + 0x4c], 0x24 ; or byte ptr [rax + 0x29], cl ; retf 0xb8e8
0x000000000011b851 : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000f21c8 : ror byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov esi, dword ptr [rax] ; call r14
0x0000000000118d3e : ror byte ptr [rcx - 0x17fbdbbc], 0x38 ; ret
0x0000000000034a24 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000088bd2 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011b7f8 : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x000000000010f8c9 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000ef504 : ror byte ptr [rcx - 0x77], cl ; enter -0x39bf, 0x40 ; inc dword ptr [rax] ; ret
0x0000000000024ba3 : ror byte ptr [rcx - 0x77], cl ; retf
0x00000000001029e9 : ror byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000088c12 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000d3127 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4940
0x000000000009ca0f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bcd27 : ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000001554b8 : ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000000c54f6 : ror byte ptr [rcx - 0x7d], cl ; ret 0xeb08
0x00000000000f593c : ror byte ptr [rcx], 0xd0 ; ret
0x000000000005c559 : ror byte ptr [rcx], 1 ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x0000000000196598 : ror byte ptr [rdi + 0x7f440000], 1 ; out dx, al ; jmp qword ptr [rbx]
0x0000000000035e52 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001400dd : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aba9c : ror byte ptr [rdi], 0x1f ; add byte ptr [rcx], al ; retf
0x00000000000f3860 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000000e6925 : ror byte ptr [rdi], 0x44 ; ret 0x8389
0x00000000000f111d : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000babe9 : ror byte ptr [rdi], 0x48 ; ret 0x8348
0x0000000000038e55 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00000000000ecfa7 : ror byte ptr [rdi], 0x49 ; ret 0xfc3
0x0000000000103979 : ror byte ptr [rdi], 0x84 ; add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006cef7 : ror byte ptr [rdi], 0x84 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012c12d : ror byte ptr [rdi], 0x84 ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000006df8d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000118f95 : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x0000000000075c2c : ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000076a3c : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000044bf4 : ror byte ptr [rdi], 0x84 ; ret
0x000000000012a9ff : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000b027c : ror byte ptr [rdi], 0x84 ; ret 0x16
0x0000000000115518 : ror byte ptr [rdi], 0x84 ; ret 1
0x00000000000d0a76 : ror byte ptr [rdi], 0x84 ; retf
0x00000000000679ff : ror byte ptr [rdi], 0x84 ; retf 0x11
0x00000000000e3205 : ror byte ptr [rdi], 0x84 ; retf 0xfff9
0x000000000005cdba : ror byte ptr [rdi], 0x84 ; retf 1
0x00000000000b542e : ror byte ptr [rdi], 0x84 ; wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001412aa : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000009b4b1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000099ac6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000005b3f8 : ror byte ptr [rdi], 0x85 ; ret 0
0x0000000000097df7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000f037f : ror byte ptr [rdi], 0x85 ; ret 2
0x000000000008525e : ror byte ptr [rdi], 0x85 ; retf
0x00000000000317d9 : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000014915f : ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x0000000000148f7f : ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x00000000001505dd : ror byte ptr [rdi], 0x85 ; retf 1
0x00000000000c42c4 : ror byte ptr [rdi], 0x85 ; retf 2
0x00000000000abad4 : ror byte ptr [rdi], 0x85 ; retf 8
0x00000000000c711a : ror byte ptr [rdi], 0x85 ; scasd eax, dword ptr [rdi] ; add eax, dword ptr [rax] ; add al, ch ; retf 0xff95
0x00000000000ad7f1 : ror byte ptr [rdi], 0x88 ; retf
0x0000000000069f8b : ror byte ptr [rdi], 0x89 ; retf 0xfffe
0x00000000000d0b54 : ror byte ptr [rdi], 0x8e ; ret 5
0x000000000006ceba : ror byte ptr [rdi], 0x8e ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add al, ch ; retf 0xfb45
0x0000000000087151 : ror byte ptr [rdi], 0x92 ; ret 0xf083
0x00000000000de922 : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000e8e1c : ror byte ptr [rdi], 0x94 ; ret 0x35eb
0x00000000000b4416 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x00000000000ba0fe : ror byte ptr [rdi], 0x94 ; ret 0x8d4c
0x000000000014f8ce : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000005856c : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000008a651 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000e925b : ror byte ptr [rdi], 0x95 ; ret 0x5ee9
0x00000000001617de : ror byte ptr [rdi], 0xb6 ; fisttp dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x00000000000c63ed : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000084eb3 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000051b6b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000de1af : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000010a726 : ror byte ptr [rdi], 0xb7 ; retf
0x00000000000a1445 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000033eb2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33e9c ; ret
0x000000000011c83b : ror byte ptr [rdi], 1 ; popfq ; ret 0xd284
0x00000000000ce32d : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000004825a : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x0000000000027333 : ror byte ptr [rdi], cl ; mov ch, ah ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000091ffd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000de91d : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x0000000000030173 : ror byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret
0x00000000001611d6 : ror byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x00000000000ac4c9 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000008715a : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x000000000018cc44 : ror byte ptr [rdx + rax], 0x6c ; out 0xf9, al ; call rsp
0x0000000000189494 : ror byte ptr [rdx], 1 ; add byte ptr [rdi + rcx - 0x10], bh ; call rsp
0x00000000001a14e0 : ror cl, 0xf4 ; jmp qword ptr [rcx]
0x0000000000138d07 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000000509d4 : ror dword ptr [rax + 0x39], 1 ; ret 0x840f
0x00000000001272b9 : ror dword ptr [rax + 0x39], 1 ; ret 0xf175
0x0000000000124d7e : ror dword ptr [rax + 0x39], 1 ; retf 0xc675
0x00000000000509d1 : ror dword ptr [rax + 0x63], 1 ; ror dword ptr [rax + 0x39], 1 ; ret 0x840f
0x00000000000ba981 : ror dword ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000c5be1 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000d201e : ror dword ptr [rax + 0xf], 1 ; retf 0x3948
0x00000000000d7530 : ror dword ptr [rax + 1], 0xca ; jmp 0xd74ca
0x000000000014f9f1 : ror dword ptr [rax + 1], 0xf8 ; ret
0x000000000014fb2e : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x000000000014f8d8 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000103f47 : ror dword ptr [rax + 9], cl ; retf 0x8949
0x0000000000048133 : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000974c4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000975e9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000977aa : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000016239b : ror dword ptr [rax - 0x3f], 0xe9 ; add ecx, dword ptr [rax + 0x39] ; retf 0x1f77
0x0000000000162d64 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000006ccde : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000cd642 : ror dword ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; retf 0x574
0x0000000000046c9b : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000008dec5 : ror dword ptr [rax - 0x77], 0xa ; ret
0x0000000000160374 : ror dword ptr [rax - 0x77], 1 ; ret
0x000000000004de60 : ror dword ptr [rax - 0x77], 1 ; ret 0x87e9
0x0000000000161b09 : ror dword ptr [rax - 0x77], 1 ; ret 0x8949
0x00000000000dd1c8 : ror dword ptr [rax - 0x77], 1 ; retf 0x1f0f
0x0000000000045dd1 : ror dword ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000000cd622 : ror dword ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000008cb4c : ror dword ptr [rax - 0x77], cl ; ret 0x68e9
0x000000000008b5ec : ror dword ptr [rax - 0x77], cl ; ret 0x75e9
0x000000000008b3ac : ror dword ptr [rax - 0x77], cl ; ret 0x76e9
0x000000000007264d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x72647 ; ret
0x000000000007bc4d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x7bc47 ; ret
0x000000000015f862 : ror dword ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000046027 : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000d1e0c : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x000000000005c5f5 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000150043 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c20
0x0000000000150063 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c40
0x0000000000150083 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c60
0x00000000000a4f72 : ror dword ptr [rax - 0x7d], 1 ; ret 0x8b04
0x00000000000ba7a8 : ror dword ptr [rax - 0x7d], 1 ; ret 0xf601
0x00000000000f2421 : ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x00000000000610d8 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000160bc5 : ror dword ptr [rbp + 0x39], cl ; retf 0x930f
0x0000000000119b0e : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf 0xd285
0x00000000000a23eb : ror dword ptr [rbx], 0 ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000016106a : ror dword ptr [rcx + 0x39], 1 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x000000000004f35a : ror dword ptr [rcx + 0x39], cl ; ret 0xf49
0x00000000001199cd : ror dword ptr [rcx + 0x63], 0x14 ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x000000000008e27c : ror dword ptr [rcx + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000000dd223 : ror dword ptr [rcx + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; retf 0xf66
0x0000000000160fe4 : ror dword ptr [rcx + 9], cl ; ret 0xc148
0x000000000004f48c : ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x7bf86
0x00000000000da4be : ror dword ptr [rcx - 0x73], 0x14 ; ret 0x18eb
0x00000000000b4c44 : ror dword ptr [rcx - 0x73], cl ; jle 0xb4c61 ; call 0x2166f
0x000000000004d873 : ror dword ptr [rcx - 0x77], 0x14 ; ret
0x000000000015caf7 : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000f1b4b : ror dword ptr [rdi], 0x47 ; ret 0x3944
0x00000000000b2d01 : ror dword ptr [rdi], 0x4f ; ret 0x66c3
0x000000000004dc88 : ror dword ptr [rdi], 0x84 ; ret 0xffe4
0x000000000015a098 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a7a4 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a576 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000015b6a0 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a4f6 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000015a834 : ror dword ptr [rdi], 0x85 ; je 0x15a844 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a32b : ror dword ptr [rdi], 0x85 ; jno 0x15a340 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a3f3 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a070 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000110167 : ror dword ptr [rdi], 0x87 ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x00000000000a1bca : ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x0000000000091e85 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000011ca95 : ror dword ptr [rdi], 1 ; xchg eax, edi ; ret 0x3944
0x000000000008dfbb : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000008caa5 : ror dword ptr [rdi], cl ; test dword ptr [rax + rax - 0x7cb80000], ebx ; ret 0x4801
0x000000000008b07d : ror dword ptr [rdi], cl ; test dword ptr [rax + rax - 0x7cb80000], ecx ; ret 0x4801
0x000000000007264c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x72648 ; ret
0x000000000007bc4c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x7bc48 ; ret
0x00000000000f241b : sahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x7d], 1 ; retf 0x4801
0x0000000000197415 : sahf ; add byte ptr [rax], al ; sub dh, bl ; out dx, al ; call qword ptr [rsi]
0x00000000001278ee : sahf ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a063d : sahf ; hlt ; jmp rsi
0x00000000001a75b9 : sahf ; idiv bh ; retf 0
0x0000000000002682 : sahf ; jl 0x2616 ; loop 0x2662 ; ret 0x943d
0x0000000000002681 : sahf ; jl 0x2617 ; loop 0x2663 ; ret 0x943d
0x0000000000177a90 : sahf ; leave ; in eax, dx ; call qword ptr [rbx]
0x0000000000151c9e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000b778c : sahf ; ret 0x2941
0x0000000000174785 : sahf ; ret 0x38ae
0x00000000000da0f5 : sahf ; ret 0xc809
0x00000000001752bc : sahf ; retf
0x00000000000024e3 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000086830 : sahf ; str word ptr [rax - 0x77] ; ret 0xff31
0x000000000007d93f : sahf ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007d924 : sahf ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000007edf6 : sahf ; xor eax, dword ptr fs:[rax] ; ret
0x000000000017a570 : sal ah, 0xf4 ; jmp rdi
0x00000000001a18e9 : sal ah, cl ; jmp qword ptr [rsi]
0x00000000001140f4 : sal al, cl ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; jmp qword ptr [rdi]
0x00000000000ee130 : sal bh, 0xd8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121db2 : sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x00000000001220ce : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b2cfc : sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x0000000000157cfe : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000000e95a6 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051b6e : sal bh, 0xd8 ; pop rbx ; ret
0x0000000000051b3b : sal bh, 0xd8 ; ret
0x00000000001acc01 : sal bh, 1 ; call rax
0x000000000008fc27 : sal bh, 1 ; ret 0x8000
0x000000000008fae7 : sal bh, 1 ; ret 0xc000
0x000000000008f9a7 : sal bh, 1 ; ret 0xe000
0x000000000008f867 : sal bh, 1 ; ret 0xf000
0x000000000008f727 : sal bh, 1 ; ret 0xf800
0x000000000008f5e7 : sal bh, 1 ; ret 0xfc00
0x000000000008f4a7 : sal bh, 1 ; ret 0xfe00
0x000000000008f367 : sal bh, 1 ; ret 0xff00
0x000000000008f227 : sal bh, 1 ; ret 0xff80
0x000000000008f0e7 : sal bh, 1 ; ret 0xffc0
0x000000000008efa7 : sal bh, 1 ; ret 0xffe0
0x000000000008ee67 : sal bh, 1 ; ret 0xfff0
0x000000000008ed27 : sal bh, 1 ; ret 0xfff8
0x000000000008ebe7 : sal bh, 1 ; ret 0xfffc
0x000000000008eaa7 : sal bh, 1 ; ret 0xfffe
0x00000000001acc91 : sal bh, cl ; jmp rsi
0x000000000018bb19 : sal bh, cl ; jmp rsp
0x000000000011030e : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x000000000008e1ec : sal bl, 0xc3 ; nop ; ret
0x0000000000189f99 : sal bl, 0xff ; nop ; add qword ptr [r8], r8 ; ret 0xfff3
0x000000000019edd0 : sal bl, 1 ; call qword ptr [rdi]
0x0000000000189fe9 : sal bl, cl ; call qword ptr [rax]
0x0000000000128eab : sal byte ptr [r13 + 0x31], 0x83 ; ret
0x000000000011912d : sal byte ptr [rax + rax*2 + 0x41], 0x83 ; call qword ptr [rbx]
0x0000000000187864 : sal byte ptr [rax + rax], 1 ; pop rsp ; jb 0x18785c ; jmp rsp
0x000000000006f792 : sal byte ptr [rax + rcx*2 + 0x48], 0x83 ; ret 0x3c01
0x0000000000024add : sal byte ptr [rax + rsi + 0x48], 0x83 ; ret
0x000000000008221e : sal byte ptr [rax], 0x83 ; ret
0x00000000000f5efc : sal byte ptr [rbp + 0x11], 0xb8 ; adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000e5e8c : sal byte ptr [rbp + 0x11], 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e5ddc : sal byte ptr [rbp + 0x11], 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000f605c : sal byte ptr [rbp + 0x11], 0xb8 ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000f73fc : sal byte ptr [rbp + 0x11], 0xb8 ; and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f706c : sal byte ptr [rbp + 0x11], 0xb8 ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000f749c : sal byte ptr [rbp + 0x11], 0xb8 ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000f754c : sal byte ptr [rbp + 0x11], 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000ed279 : sal byte ptr [rbp + 0x14], 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000ed1d9 : sal byte ptr [rbp + 0x14], 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e7a79 : sal byte ptr [rbp + 0x14], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e8179 : sal byte ptr [rbp + 0x14], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000c4dd9 : sal byte ptr [rbp + 0x14], 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f0c09 : sal byte ptr [rbp + 0x14], 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f6b89 : sal byte ptr [rbp + 0x14], 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f6ab9 : sal byte ptr [rbp + 0x14], 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f6119 : sal byte ptr [rbp + 0x14], 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000f61b1 : sal byte ptr [rbp + 0x14], cl ; mov eax, 0x95 ; syscall
0x00000000000c5e27 : sal byte ptr [rbp + 0x16], 0xb8 ; ja 0xc5e35 ; add byte ptr [rax], al ; syscall
0x00000000000ed7b7 : sal byte ptr [rbp + 0x16], 0xb8 ; jb 0xed7c5 ; add byte ptr [rax], al ; syscall
0x00000000000c16f7 : sal byte ptr [rbp + 0x16], 0xb8 ; je 0xc1705 ; add byte ptr [rax], al ; syscall
0x00000000000c5da7 : sal byte ptr [rbp + 0x16], 0xb8 ; jne 0xc5db5 ; add byte ptr [rax], al ; syscall
0x00000000000ed737 : sal byte ptr [rbp + 0x16], 0xb8 ; jno 0xed745 ; add byte ptr [rax], al ; syscall
0x00000000000c5b57 : sal byte ptr [rbp + 0x16], 0xb8 ; push 0 ; add byte ptr [rax], al ; syscall
0x00000000000c920d : sal byte ptr [rbp + 0x18], 0x83 ; retf 0x3102
0x00000000001549d2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000000bf9a0 : sal byte ptr [rbp + 0x2d], 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x0000000000128eac : sal byte ptr [rbp + 0x31], 0x83 ; ret
0x00000000000e78cc : sal byte ptr [rbp + 0x51], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000c7693 : sal byte ptr [rbp + 0x7b], 0xf6 ; ret
0x00000000000331bb : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007afb2 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000125f01 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x0000000000051530 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000011424b : sal byte ptr [rbp + 2], 0xf3 ; ret
0x000000000007f36a : sal byte ptr [rbp + 2], 1 ; ret
0x0000000000163e3a : sal byte ptr [rbp + 3], cl ; ret
0x0000000000115729 : sal byte ptr [rbp + 4], 0xf3 ; ret
0x00000000000a1702 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x00000000000e7347 : sal byte ptr [rbp + 6], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000011ea07 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x0000000000114425 : sal byte ptr [rbp + 8], 0x5b ; ret
0x0000000000051d55 : sal byte ptr [rbp + 8], cl ; sub dword ptr [rdi], 1 ; ret
0x00000000000c4e64 : sal byte ptr [rbp + 9], 0x48 ; add esp, 8 ; ret
0x0000000000118528 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000119ef1 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011f931 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000088360 : sal byte ptr [rbp + rbx*8 + 0x48], 0x29 ; ret
0x00000000000ef119 : sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000fee27 : sal byte ptr [rbp + rdx + 0x48], 0x83 ; ret
0x000000000008dfb2 : sal byte ptr [rbp + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x000000000007c80d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000008e055 : sal byte ptr [rbp - 0x10], cl ; ret
0x00000000000a0f00 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000072650 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000008df7a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008ba92 : sal byte ptr [rbp - 0x16], cl ; or byte ptr [rdi], sil ; ret
0x00000000001234c6 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000b2ce6 : sal byte ptr [rbp - 0x19], 1 ; xor eax, eax ; ret
0x00000000000cd659 : sal byte ptr [rbp - 0x1c], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015859a : sal byte ptr [rbp - 0x1d], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000008ff4b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000014fedc : sal byte ptr [rbp - 0x1f], 0x29 ; enter -0x73b, 0x77 ; ret
0x0000000000158a6f : sal byte ptr [rbp - 0x22], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000de2a7 : sal byte ptr [rbp - 0x23], 0x8b ; adc al, 0x5b ; pop rbp ; ret
0x00000000001503a1 : sal byte ptr [rbp - 0x24], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000c6df8 : sal byte ptr [rbp - 0x24], cl ; xor eax, eax ; ret
0x0000000000033eb7 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000e2520 : sal byte ptr [rbp - 0x28], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ee6b5 : sal byte ptr [rbp - 0x28], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ee716 : sal byte ptr [rbp - 0x29], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000b4c42 : sal byte ptr [rbp - 0x2d], 0x49 ; lea edi, [rsi + 0x11] ; call 0x21671
0x000000000015079d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x00000000000a21c2 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x0000000000150795 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000011afe9 : sal byte ptr [rbp - 0x47], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000045d16 : sal byte ptr [rbp - 0x49], 0x5b ; ret
0x000000000015426d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000154265 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000086bfa : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000a34cb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000007d97c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x0000000000051be2 : sal byte ptr [rbx + 0x49], 0x89 ; retf 0x3cb9
0x00000000000ef482 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000de214 : sal byte ptr [rbx + rax + 0x5b], 1 ; pop rbp ; ret
0x00000000001198c2 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000000efc40 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000000ae61a : sal byte ptr [rbx + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000118d72 : sal byte ptr [rbx + rdi + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008e0e0 : sal byte ptr [rbx + rdx + 0x41], 0x39 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000119f2e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000018781c : sal byte ptr [rbx], 0 ; mov word ptr [rbp - 0x16], fs ; call rsp
0x00000000001a2f50 : sal byte ptr [rbx], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000010430c : sal byte ptr [rcx + rbx + 0x4c], 0x89 ; retf 0x8949
0x000000000014f9ec : sal byte ptr [rcx + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000009753c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000e6ebc : sal byte ptr [rcx + rsi + 0x31], 0xd2 ; call rax
0x0000000000186428 : sal byte ptr [rcx - 4], 1 ; jmp qword ptr [rax - 0x2f0003a7]
0x00000000000cfc0f : sal byte ptr [rcx], 0xc0 ; movaps xmmword ptr [rdi], xmm0 ; ret
0x0000000000022c62 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000007e146 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000114a04 : sal byte ptr [rcx], 1 ; ror byte ptr [rcx + 0x39], 0xd3 ; je 0x114a19 ; ret
0x00000000000ef2ee : sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x00000000000225cb : sal byte ptr [rcx], cl ; imul al ; sbb eax, 0xe9000005 ; ret
0x00000000000e6e2e : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000000c2a68 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a22a6 : sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x000000000012b8e8 : sal byte ptr [rdi + rcx*2 + 0x48], 0x89 ; ret
0x000000000007eb03 : sal byte ptr [rdi + rcx*8 - 1], 0xd0 ; jmp 0x7eadb
0x0000000000119a9e : sal byte ptr [rdi + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x000000000012c406 : sal byte ptr [rdi + rdx*8 + 0x49], 0x8b ; adc cl, byte ptr [rax + 1] ; ret 0x3948
0x0000000000187974 : sal byte ptr [rdi], 1 ; add byte ptr [rax + rdi*2 - 0x16], bh ; jmp rsp
0x000000000009770b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000097a83 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000009c283 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000cd603 : sal byte ptr [rdx + rdx*8 + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000091ffb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001025cc : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000c352b : sal byte ptr [rdx], 0x2f ; add byte ptr [rax], al ; jne 0xc34fa ; jmp 0xc34f1
0x000000000018c82c : sal byte ptr [rip - 0x67a3fffe], 1 ; stc ; jmp rsp
0x00000000001277d7 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000011e7da : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x11e7f8 ; call rax
0x000000000012354a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x123568 ; call rax
0x0000000000123b83 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x123ba1 ; call rax
0x000000000012040e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x120484 ; call rax
0x0000000000120e1e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x120e84 ; call rax
0x000000000007e647 : sal byte ptr [rsi + rax + 0x48], cl ; mov edi, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000fcbb7 : sal byte ptr [rsi + rax*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122a10 : sal byte ptr [rsi + rbp*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000fcb91 : sal byte ptr [rsi + rcx + 0x48], 0x89 ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000001a3180 : sal byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x0000000000047db8 : sal byte ptr [rsi], 1 ; add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x29e8
0x0000000000114209 : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x00000000000efc11 : sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000087611 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000f36d0 : sal byte ptr [rsp + rdi*2 + 0x48], 0x39 ; ret
0x00000000000f7a32 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000178e45 : sal cl, 1 ; call rax
0x0000000000189a49 : sal cl, 1 ; jmp qword ptr [rax]
0x0000000000178e49 : sal cl, cl ; jmp qword ptr [rax]
0x0000000000189154 : sal dh, 0 ; add ah, bh ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x00000000001015b2 : sal dh, 0x43 ; sbb al, 0x20 ; je 0x1015c8 ; pop rbx ; ret
0x0000000000114e66 : sal dh, 1 ; ret
0x0000000000186a60 : sal dl, 0xfa ; call qword ptr [rax]
0x00000000001259c4 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000a21a2 : sal dword ptr [rbx + rdx + 0x48], 0x83 ; ret 0x8b04
0x000000000007b5dc : sal dword ptr [rbx], 0 ; mov eax, 0xca ; syscall
0x000000000011030c : sal dword ptr [rcx], 0xc0 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000010c9f8 : sal dword ptr [rcx], cl ; fild dword ptr [rcx - 0x7d] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000249a1 : sal dword ptr [rdi + rdx + 0xf], 0x1f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008bde7 : sal dword ptr [rdx - 0x24], cl ; mov rdx, rax ; jmp 0x8bd82
0x0000000000114a09 : sal dword ptr [rsp + rax - 0xd], cl ; ret
0x000000000008b0b1 : sal dword ptr [rsp + rbp*8 + 0x44], 0x89 ; retf
0x000000000008cad9 : sal dword ptr [rsp + rbp*8 + 0x45], 0x89 ; retf
0x000000000008e159 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x8e158 ; ret
0x00000000000a13a3 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ee81e : sal ebx, 1 ; ret
0x000000000019e779 : sal ebx, cl ; call qword ptr [rax]
0x000000000018bb11 : sal edi, 1 ; call rax
0x000000000018b121 : sal esi, 0xff ; jl 0x18b0e1 ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret 0xfff6
0x000000000018d289 : sar ah, 1 ; call rax
0x000000000011a8d8 : sar ah, cl ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000018d291 : sar ah, cl ; jmp rsp
0x0000000000047ad0 : sar bh, 0xff ; mov eax, 1 ; ret
0x00000000000b74c4 : sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000005cbb5 : sar bh, cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e28d0 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c06ae : sar byte ptr [r8 + 0xd9], 1 ; syscall
0x000000000011077f : sar byte ptr [rax + 0x14], cl ; mov rax, rdx ; movsxd rdx, esi ; ret
0x00000000000f7992 : sar byte ptr [rax + 0x1d], cl ; syscall
0x000000000012a182 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c06af : sar byte ptr [rax + 0xd9], 1 ; syscall
0x000000000007f8e7 : sar byte ptr [rax + 6], 0xf3 ; ret
0x000000000007601c : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000d18a5 : sar byte ptr [rax], 0xe ; je 0xd1846 ; ret
0x0000000000178ec0 : sar byte ptr [rax], 0xf2 ; call rax
0x00000000001a5388 : sar byte ptr [rbp + 1], 0 ; mov ah, 0xe5 ; cmc ; call qword ptr [rax]
0x00000000000f5b73 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x000000000018b38c : sar byte ptr [rbx - 0xd63ffff], 0xf6 ; call rsp
0x00000000000111c8 : sar byte ptr [rbx], 1 ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000198f98 : sar byte ptr [rcx - 0x6aec0000], 1 ; out dx, eax ; call qword ptr [rax]
0x00000000001149dd : sar byte ptr [rcx], 0x4f ; add al, 0xf ; xchg eax, esp ; ret 0xd021
0x000000000014f87e : sar byte ptr [rcx], 0xc8 ; jle 0x14f8c0 ; movsxd rax, ecx ; ret
0x0000000000178ef8 : sar byte ptr [rcx], 1 ; push rax ; cmp edx, esi ; call qword ptr [rax]
0x000000000018c8d4 : sar byte ptr [rcx], 2 ; add byte ptr [rdi + rbp*4 - 7], bh ; jmp rax
0x000000000017bdd4 : sar byte ptr [rdi - 0x40ff0007], 1 ; stc ; jmp rax
0x0000000000199088 : sar byte ptr [rdx + 0x47940000], 0xfb ; call qword ptr [rax]
0x0000000000064807 : sar byte ptr [rdx + 1], 1 ; jmp rax
0x000000000002bd86 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x0000000000002c71 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x000000000008a705 : sar byte ptr [rdx], cl ; cmove rax, rdx ; ret
0x0000000000187420 : sar byte ptr [rip + 0x3f50fffb], 1 ; sti ; call rax
0x0000000000085ce7 : sar byte ptr [rsi + 0x16], 0x85 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000d1f62 : sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd1f7d
0x000000000017511f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000074664 : sar ch, 0xff ; dec dword ptr [rax + 0x29] ; ret
0x0000000000186881 : sar dl, 0xff ; add cl, 0xfa ; call rax
0x000000000005a50b : sar dl, 0xff ; dec dword ptr [rax - 0x77] ; retf 0x26e9
0x0000000000186815 : sar dl, cl ; inc dword ptr [rax - 0x2c] ; cli ; jmp qword ptr [rax]
0x0000000000186711 : sar dl, cl ; jmp qword ptr [rax]
0x0000000000186751 : sar dl, cl ; jmp rax
0x00000000000c62d5 : sar dword ptr [rax + 0x40], 1 ; ret
0x000000000015b9d3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x15b9de ; ret
0x0000000000114bc6 : sar dword ptr [rcx], 0xbc ; ret
0x0000000000157859 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x00000000000349f8 : sar eax, 0x10 ; ret
0x00000000000350fb : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000ecf78 : sar eax, 0x1f ; pop rbx ; ret
0x000000000012ef24 : sar eax, 0x1f ; ret
0x00000000000349a8 : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x000000000003547a : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000034cdd : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000001027fb : sar eax, 1 ; add byte ptr [rax + rbx - 0x37], dh ; ret
0x000000000007eca3 : sar eax, 1 ; and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000003cb1 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000731bc : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000075b56 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000738d9 : sar eax, 2 ; ret
0x0000000000104f6d : sar eax, 6 ; ret
0x00000000000ae60b : sar ebx, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001044e6 : sar ecx, 1 ; dec dword ptr [rax + 0x21] ; retf 0x3948
0x0000000000174e83 : sar ecx, 1 ; jnp 0x174e44 ; ret
0x000000000012038c : sar edi, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000038da4 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000038db7 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000186885 : sar edx, 0xff ; rol dl, 1 ; cli ; jmp qword ptr [rax]
0x00000000001867b1 : sar edx, 1 ; inc dword ptr [rax - 0x2d] ; cli ; jmp qword ptr [rax]
0x00000000001867d1 : sar edx, 1 ; inc dword ptr [rax] ; sar edx, cl ; jmp rax
0x0000000000073262 : sar edx, 2 ; sub eax, edx ; ret
0x0000000000111c4c : sar edx, 4 ; add edx, 1 ; syscall
0x00000000001867b5 : sar edx, cl ; jmp qword ptr [rax]
0x00000000001867d5 : sar edx, cl ; jmp rax
0x00000000000921a7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000015c623 : sar esi, 1 ; jg 0x15c653 ; vzeroupper ; ret
0x000000000015c7ae : sar esi, 1 ; jg 0x15c7de ; vzeroupper ; ret
0x00000000000731bb : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000035479 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000034cdc : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000738d8 : sar rax, 2 ; ret
0x0000000000104f6c : sar rax, 6 ; ret
0x0000000000073261 : sar rdx, 2 ; sub eax, edx ; ret
0x0000000000111c4b : sar rdx, 4 ; add edx, 1 ; syscall
0x00000000000921a6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000018d290 : sar spl, cl ; jmp rsp
0x000000000019b1e0 : sbb ah, bl ; add byte ptr [rax], al ; jl 0x19b181 ; int1 ; call rcx
0x000000000004b79f : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a15b8 : sbb ah, cl ; hlt ; jmp qword ptr [rcx]
0x0000000000002769 : sbb ah, cl ; mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x00000000000085c0 : sbb al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x35
0x00000000001a28e0 : sbb al, 0 ; add byte ptr [rax], al ; sbb al, 0x53 ; add dword ptr [rax], eax ; clc ; retf 0xfff8
0x00000000000e6cd8 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014db7a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014dad3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000001015b5 : sbb al, 0x20 ; je 0x1015c5 ; pop rbx ; ret
0x00000000001015b4 : sbb al, 0x20 ; je 0x1015c6 ; pop rbx ; ret
0x000000000019fde4 : sbb al, 0x28 ; add dword ptr [rax], eax ; or byte ptr [rax - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001073f6 : sbb al, 0x2b ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001904e4 : sbb al, 0x2f ; add byte ptr [rax], al ; call 0x1218ef7c
0x000000000008620e : sbb al, 0x33 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001a3054 : sbb al, 0x35 ; cmc ; jmp qword ptr [rcx]
0x000000000018b718 : sbb al, 0x35 ; idiv edi ; cwde ; retf
0x0000000000045a6e : sbb al, 0x37 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000001f58 : sbb al, 0x3a ; jrcxz 0x1fd9 ; retf 0x6321
0x00000000000b1760 : sbb al, 0x3e ; or eax, 0x358d4800 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xc
0x00000000001a18e4 : sbb al, 0x43 ; add dword ptr [rax], eax ; js 0x1a18c3 ; hlt ; jmp qword ptr [rsi]
0x00000000000030c8 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000018cf28 : sbb al, 0x49 ; cli ; jmp rsp
0x00000000001a28e4 : sbb al, 0x53 ; add dword ptr [rax], eax ; clc ; retf 0xfff8
0x000000000018c6d8 : sbb al, 0x74 ; stc ; jmp rax
0x00000000000efef3 : sbb al, 0x83 ; ret
0x0000000000002e33 : sbb al, 0x89 ; and byte ptr [rax - 0xc0713e4], bh ; ret
0x00000000000509a0 : sbb al, 0x89 ; ret 0x2944
0x000000000006ecb3 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x0000000000176182 : sbb al, 0x8c ; retf
0x00000000001964e4 : sbb al, 0x8f ; add byte ptr [rax], al ; cwde ; insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rbx]
0x00000000001887f0 : sbb al, 0xab ; out dx, al ; call qword ptr [rax]
0x0000000000003c27 : sbb al, 0xb ; push rbp ; jg 0x3c9c ; xchg eax, ebp ; retf 0x10bf
0x00000000000cd073 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001204a4 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001888f0 : sbb al, 0xc2 ; out dx, al ; push qword ptr [rax + 0x3c0000ca] ; ret 0xffee
0x000000000018890c : sbb al, 0xcb ; add byte ptr [rax], al ; cmp al, 0xc3 ; out dx, al ; push qword ptr [rax] ; retf
0x000000000018c160 : sbb al, 0xcf ; clc ; jmp rax
0x000000000019ade4 : sbb al, 0xd8 ; add byte ptr [rax], al ; js 0x19adc9 ; sti ; call qword ptr [rbx]
0x0000000000188968 : sbb al, 0xe1 ; out dx, al ; call qword ptr [rax]
0x00000000001892a0 : sbb al, 0xe7 ; out dx, eax ; jmp qword ptr [rax]
0x00000000000eac7f : sbb al, 0xe8 ; or ebp, dword ptr [rax - 0xd] ; dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000018f059 : sbb al, 0xea ; call qword ptr [rax]
0x000000000018f081 : sbb al, 0xea ; call qword ptr [rsi]
0x0000000000002e37 : sbb al, 0xec ; clc ; ret
0x000000000018a748 : sbb al, 0xee ; cmc ; call qword ptr [rax]
0x000000000019b7e4 : sbb al, 0xf0 ; int1 ; call qword ptr [rax]
0x00000000000ef897 : sbb al, 0xf3 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000018a1f1 : sbb al, 0xf4 ; call rax
0x000000000018a1f9 : sbb al, 0xf4 ; jmp rsp
0x0000000000189785 : sbb al, 1 ; add ah, ch ; movsxd rsi, ecx ; call qword ptr [rax]
0x000000000019f209 : sbb al, 1 ; add byte ptr [rax + rsi], dl ; hlt ; jmp qword ptr [rax]
0x000000000012c4d0 : sbb al, 1 ; add byte ptr [rax], al ; jmp rax
0x000000000018d1c5 : sbb al, 1 ; add byte ptr [rsi + rsi*8 - 5], ch ; call rsp
0x0000000000074532 : sbb al, byte ptr [rax + rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000f0c0d : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000014dd5a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000127aec : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x16efdbac], cl ; ret
0x00000000001101af : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000006a2ba : sbb al, byte ptr [rcx] ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000018d1f5 : sbb al, byte ptr [rcx] ; add byte ptr [rdx - 4], bh ; jmp rax
0x000000000014dd59 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000104d7b : sbb al, ch ; jmp qword ptr [rcx]
0x00000000000ceab0 : sbb al, ch ; ret 0xf52b
0x00000000000b611a : sbb al, ch ; shr byte ptr [rsp + rdi*8], 1 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ccff7 : sbb bh, byte ptr [rax + 2] ; ret
0x000000000017a09c : sbb bh, byte ptr [rdi] ; hlt ; call qword ptr [rdi]
0x00000000001ab0e0 : sbb bl, bl ; add dword ptr [rax], eax ; cld ; ja 0x1ab0e5 ; call qword ptr [rbx]
0x0000000000086bba : sbb bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000174f12 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x0000000000173c05 : sbb bl, byte ptr [rsi] ; ret
0x00000000000ff50a : sbb byte ptr [r11 + r9*4 + 0x46], r8b ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000125c5f : sbb byte ptr [r14 + 0xd], r14b ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000000340dc : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012c55f : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000125921 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000000c1c52 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a09e4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0a06 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0a44 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000fe643 : sbb byte ptr [r9 - 0x75], r9b ; je 0xfe676 ; adc byte ptr [rcx - 0x77], al ; ret
0x00000000000bfbd1 : sbb byte ptr [r9], dil ; or al, 0x7c ; ret 0x850f
0x000000000007f221 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000fd3dc : sbb byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000114fdc : sbb byte ptr [rax + 0x39], cl ; retf
0x00000000000ff50f : sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000080ba7 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x00000000000ff50e : sbb byte ptr [rax + 0x39], r9b ; retf 0x840f
0x000000000012c560 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000086e9c : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000125922 : sbb byte ptr [rax + 1], bh ; ret
0x000000000008e2a4 : sbb byte ptr [rax + 1], cl ; clc ; mov qword ptr [rdi], rdx ; ret
0x0000000000037229 : sbb byte ptr [rax + 1], cl ; ret
0x00000000000526ce : sbb byte ptr [rax + 1], cl ; ret 0x14c
0x00000000001014d0 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000481c8 : sbb byte ptr [rax - 0x39], cl ; ret
0x0000000000119cab : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000007339f : sbb byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; retf 0xffb8
0x00000000000d0a1f : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b9e36 : sbb byte ptr [rax - 0x76a7dbbc], cl ; ret
0x000000000003912f : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000006fe7a : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000118323 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000007be91 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000feadf : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000d4d65 : sbb byte ptr [rax - 0x77], cl ; ret 0x8944
0x000000000011a35a : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002f33f : sbb byte ptr [rax - 0x77], cl ; retf
0x00000000000ff099 : sbb byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000b5672 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000b84d4 : sbb byte ptr [rax - 0x7bf0f706], al ; retf 0xfff5
0x00000000000f36f5 : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc3487f05
0x00000000000c1c53 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1bde : sbb byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000110a20 : sbb byte ptr [rax - 0xa], bh ; pop rbx ; pop rbp ; ret
0x0000000000110a33 : sbb byte ptr [rax - 0xb], bh ; pop rbx ; pop rbp ; ret
0x0000000000074d4c : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000018ee19 : sbb byte ptr [rax], al ; add ah, al ; add dl, ch ; call qword ptr [rcx]
0x000000000007ebf1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000e79d4 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; jne 0xe79f8 ; syscall
0x000000000013f7de : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000114740 : sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077c56 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000019ede0 : sbb byte ptr [rax], bl ; add dword ptr [rax], eax ; fdivr st(3), st(0) ; call qword ptr [rsi]
0x00000000000024e4 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a09e5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0a07 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0a45 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000001982e0 : sbb byte ptr [rbp + 0x12bc0000], ch ; out dx, eax ; jmp rcx
0x0000000000119010 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000011b87b : sbb byte ptr [rbp - 0x75], cl ; pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x0000000000114249 : sbb byte ptr [rbp - 0xcfd8a40], al ; ret
0x0000000000036244 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000083af4 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000000772b8 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000060b59 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000114972 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000118bd5 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x00000000000369dc : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012346a : sbb byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000000ff50b : sbb byte ptr [rbx + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000007d5c7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000f860a : sbb byte ptr [rbx - 0x6f3cff00], al ; ret
0x00000000001a7148 : sbb byte ptr [rbx - 0x76dbffff], 0xf6 ; call rsi
0x00000000001077e6 : sbb byte ptr [rbx], ch ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000fe3e9 : sbb byte ptr [rbx], cl ; pop rsi ; sbb dh, dh ; ret
0x0000000000162b5e : sbb byte ptr [rcx + 0x21], cl ; ret
0x000000000011290c : sbb byte ptr [rcx + 0x21ce09d6], cl ; retf 0x7880
0x000000000011b702 : sbb byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp + 0x31], 1 ; ret 0x314d
0x0000000000049666 : sbb byte ptr [rcx + 0x39], cl ; ret
0x000000000011c291 : sbb byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000011885b : sbb byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x0000000000072c5a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000008050e : sbb byte ptr [rcx + 1], cl ; ret
0x00000000000a2e40 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r14 ; call rbx
0x00000000000781f7 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c17c6 : sbb byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; ret
0x000000000004defa : sbb byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x00000000000a30a8 : sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, r12 ; call rbx
0x0000000000127c84 : sbb byte ptr [rcx - 0x17efdbb4], cl ; ret 0x16
0x00000000000d2216 : sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000fe644 : sbb byte ptr [rcx - 0x75], cl ; je 0xfe675 ; adc byte ptr [rcx - 0x77], al ; ret
0x00000000000c1186 : sbb byte ptr [rcx - 0x77], al ; pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000499a4 : sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000000a7d0d : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000000d527e : sbb byte ptr [rcx - 0x7d], cl ; ret
0x000000000019ede1 : sbb byte ptr [rcx], al ; add ah, bl ; call qword ptr [rsi]
0x000000000019ee15 : sbb byte ptr [rcx], al ; add al, cl ; call qword ptr [rdx]
0x000000000019edcd : sbb byte ptr [rcx], al ; add al, dl ; call qword ptr [rdi]
0x000000000019eea9 : sbb byte ptr [rcx], al ; add byte ptr [rax + rax - 0xc], dh ; jmp rcx
0x000000000012047b : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x00000000000ec2b4 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001a3338 : sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000bfbd2 : sbb byte ptr [rcx], bh ; or al, 0x7c ; ret 0x850f
0x00000000000cc607 : sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000075279 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000001014fb : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000019ee14 : sbb byte ptr [rcx], r8b ; add al, cl ; call qword ptr [rdx]
0x000000000013f11d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000051b38 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001254ce : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000125dde : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000119b51 : sbb byte ptr [rdi], cl ; retf 0x5389
0x00000000000313ff : sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000000340dd : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000011caa4 : sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x00000000000f092c : sbb byte ptr [rdx + 0x2c], cl ; add bl, dh ; ret
0x0000000000197048 : sbb byte ptr [rdx + 0x62a40000], 0xf9 ; call qword ptr [rcx]
0x00000000000020af : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000001aa968 : sbb byte ptr [rdx - 9], bl ; jmp qword ptr [rax]
0x00000000000b89d2 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001160b4 : sbb byte ptr [rdx], bh ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x00000000001634eb : sbb byte ptr [rip - 0x74b79c00], ah ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001963e0 : sbb byte ptr [rsi + 0x7dfc0000], cl ; out dx, al ; jmp qword ptr [rbx]
0x0000000000125c60 : sbb byte ptr [rsi + 0xd], dh ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000001963f8 : sbb byte ptr [rsi - 0x12], bh ; jmp qword ptr [rbx]
0x00000000000f85f2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000f85f1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000019b2e0 : sbb ch, bl ; add byte ptr [rax], al ; or al, 0x99 ; int1 ; jmp rbx
0x000000000019113d : sbb ch, bl ; call rbx
0x00000000001075de : sbb ch, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000cc604 : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000b3a2a : sbb cl, byte ptr [rax + 1] ; retf 0x8948
0x0000000000119ab5 : sbb cl, byte ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000b6a75 : sbb cl, byte ptr [rax - 0x77] ; retf 0x8348
0x00000000000e24b5 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000b5e24 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000312f4 : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000000000009d26f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014aa4d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014cbbd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a63d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000014a149 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a959 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015203a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000015185a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000151c4a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015146a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d71d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cefd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014a3cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014c6dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014a70d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000014aa29 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000151609 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aaf9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d23d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ca1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c1fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014d3dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014a8ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a09d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000014a49d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000151afa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015131a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015242a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a97d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014a16d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014c53d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a20f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a56d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014c673 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d373 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ce93 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001519fb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015232b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a7dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d6b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c9b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014c4d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d1d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000151b4b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015136b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a233 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001027ff : sbb cl, cl ; ret
0x00000000001a9b1d : sbb dh, bh ; jmp qword ptr [rdi]
0x000000000018b5f9 : sbb dh, bh ; jmp rax
0x000000000017a594 : sbb dh, bl ; hlt ; inc dword ptr [rbp - 0xd] ; hlt ; jmp rdi
0x000000000019daad : sbb dh, bl ; jmp rdx
0x00000000000cae9b : sbb dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000001a1f18 : sbb dh, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000cfae2 : sbb dh, ch ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fe3ec : sbb dh, dh ; ret
0x00000000000ffd2a : sbb dh, dh ; ret 0x7508
0x0000000000003642 : sbb dl, 0xcd ; retf
0x000000000019b7e0 : sbb dl, ah ; add byte ptr [rax], al ; sbb al, 0xf0 ; int1 ; call qword ptr [rax]
0x000000000014de78 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cd033 : sbb dword ptr [rax + 1], edi ; ret
0x0000000000084e66 : sbb dword ptr [rax - 0x73], ecx ; clc ; ret
0x000000000011ac0e : sbb dword ptr [rax - 0x75], ecx ; push rbp ; add byte ptr [rdi], cl ; retf 0x1089
0x0000000000129b54 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000006758f : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014de01 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014de79 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f6694 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000009539e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000005c94d : sbb dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], al ; call 0xf9438
0x00000000000db3ea : sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x00000000000697d4 : sbb dword ptr [rbx - 0x4b743], eax ; call qword ptr [rax]
0x00000000000885fb : sbb dword ptr [rbx], ecx ; add byte ptr [rbx + 0xf4808e1], al ; ret 0xc3f3
0x00000000001764bd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000008655e : sbb dword ptr [rbx], esi ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000086604 : sbb dword ptr [rbx], esi ; add byte ptr [rax], al ; je 0x86617 ; ret
0x000000000004af7b : sbb dword ptr [rcx - 0x77], ecx ; ret 0x294d
0x00000000001121d6 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x00000000000f5c86 : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000aba9a : sbb dword ptr [rcx], esi ; ror byte ptr [rdi], 0x1f ; add byte ptr [rcx], al ; retf
0x00000000000a8a6b : sbb dword ptr [rdi - 8], 0xd8d48ff ; retf 0xdca
0x00000000001ae964 : sbb dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x000000000009e99e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001ccf : sbb dword ptr [rdx + 0x55], esp ; je 0x1d01 ; ret
0x000000000004c8de : sbb dword ptr [rdx + rdx*8 - 0x7cb6c28c], eax ; ret 0xf01
0x00000000001181c2 : sbb dword ptr [rdx], ebp ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001486bc : sbb eax, -1 ; ret
0x00000000000e9555 : sbb eax, 0 ; ret
0x0000000000163920 : sbb eax, 0x253e7b ; jne 0x163910 ; pop rbx ; ret
0x000000000018c455 : sbb eax, 0x287c0002 ; stc ; call rax
0x000000000018c45d : sbb eax, 0x28cc0002 ; stc ; jmp rsp
0x00000000000f81a1 : sbb eax, 0x2bd1ba ; pop rbx ; ret
0x0000000000174f13 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x00000000000cd2f2 : sbb eax, 0x3945f631 ; ret 0xf40
0x00000000000ebf5b : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x000000000009d2f9 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x000000000009ea5d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x0000000000179cf4 : sbb eax, 0x67fff410 ; adc dh, ah ; call rax
0x0000000000056aab : sbb eax, 0x8300002d ; ret 0xbf08
0x000000000013f35e : sbb eax, 0x894d0000 ; retf
0x0000000000002f0d : sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x00000000001897c5 : sbb eax, 0x9c2c0001 ; int1 ; call qword ptr [rax]
0x00000000000f0ff9 : sbb eax, 0x9f0f30ff ; ret 0x8545
0x000000000007b89f : sbb eax, 0xb80033bf ; retf 0
0x00000000000225cf : sbb eax, 0xe9000005 ; ret
0x0000000000002da6 : sbb eax, 0xe9a3d0b9 ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x000000000002e119 : sbb eax, 0xf058b48 ; ret
0x000000000014dc21 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dc99 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f0cd1 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018f1c5 : sbb eax, dword ptr [rax] ; add byte ptr [rax], ch ; xor ch, dl ; call qword ptr [rdx]
0x000000000009514e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001292b1 : sbb eax, dword ptr [rbx + 0x69] ; retf 0x3e8
0x000000000015ea44 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x000000000017a084 : sbb eax, dword ptr [rbx - 0xc] ; call qword ptr [rdi]
0x000000000018d26d : sbb eax, dword ptr [rcx] ; add ah, cl ; retf 0xfffc
0x00000000000878ed : sbb eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f6841 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000019f169 : sbb eax, dword ptr [rcx] ; add byte ptr [rdi + rbp], dl ; hlt ; call rsi
0x0000000000189755 : sbb eax, dword ptr [rcx] ; add byte ptr [rdx + rax - 0xf], bh ; jmp qword ptr [rax]
0x000000000018d28d : sbb eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*8 - 4], cl ; jmp rsp
0x00000000000d17be : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004629a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000150dc7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000015e505 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001074f6 : sbb ebp, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000176028 : sbb ebp, ebx ; retf
0x000000000008269c : sbb ebp, ecx ; retf
0x000000000019874d : sbb ebp, edi ; call rdi
0x000000000007d8a4 : sbb ebx, dword ptr [rdi + 0x5b010033] ; ret
0x00000000000f06a7 : sbb ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ee8ff : sbb ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc348310f
0x0000000000118d77 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000893df : sbb ecx, dword ptr [rax - 0x7d] ; ret 0x4102
0x0000000000103584 : sbb ecx, dword ptr [rbp - 0x77] ; ret 0x3145
0x000000000007e8e0 : sbb ecx, dword ptr [rdi + 0x5b010033] ; ret
0x000000000006d691 : sbb ecx, ebx ; xor al, 0 ; mov eax, 0xca ; syscall
0x00000000000ec544 : sbb edi, dword ptr [rax + 0x48] ; syscall
0x0000000000175db9 : sbb edi, ebp ; retf
0x00000000000f8c43 : sbb edx, eax ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000863d6 : sbb esi, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001123ea : sbb esi, dword ptr [rcx] ; ror byte ptr [rbp - 0x77], cl ; ret
0x000000000000267f : sbb esi, dword ptr [rdx] ; sahf ; jl 0x2619 ; loop 0x2665 ; ret 0x943d
0x00000000000cee44 : sbb esi, ebx ; ret
0x00000000000c3549 : sbb esp, ecx ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001486bb : sbb rax, -1 ; ret
0x0000000000152f8f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000152c8f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000153b8f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014bba2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153e8f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015208e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000000d3383 : scasb al, byte ptr [rdi] ; add rax, rsi ; jmp rax
0x0000000000122a12 : scasb al, byte ptr [rdi] ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015358f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000176469 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000015328f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x00000000000879ad : scasb al, byte ptr [rdi] ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x000000000005fbed : scasb al, byte ptr [rdi] ; ret
0x0000000000001d58 : scasb al, byte ptr [rdi] ; retf 0x9226
0x00000000000030c6 : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000107d5d : scasd eax, dword ptr [rdi] ; adc ebp, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000015218d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000086f20 : scasd eax, dword ptr [rdi] ; add byte ptr [r8 - 0x77], r9b ; retf 0xd5e8
0x000000000006cebd : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add al, ch ; retf 0xfb45
0x00000000000c711d : scasd eax, dword ptr [rdi] ; add eax, dword ptr [rax] ; add al, ch ; retf 0xff95
0x0000000000177255 : scasd eax, dword ptr [rdi] ; in eax, dx ; jmp qword ptr [rax - 0x1f001251]
0x0000000000177259 : scasd eax, dword ptr [rdi] ; in eax, dx ; jmp rax
0x0000000000189961 : scasd eax, dword ptr [rdi] ; int1 ; jmp qword ptr [rax]
0x000000000019e5cd : scasd eax, dword ptr [rdi] ; jmp rdi
0x00000000000cee5e : scasd eax, dword ptr [rdi] ; nop ; lea eax, [rsi + 1] ; ret
0x000000000007af9e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000003a48b : scasd eax, dword ptr [rdi] ; ret
0x00000000000370cb : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000074515 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000080509 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000015eba3 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000340df : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000a1bbb : scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a1bcc : scasd eax, dword ptr [rdi] ; ret 0xffe9
0x000000000013cb2d : scasd eax, dword ptr [rdi] ; ret 3
0x00000000000c6abd : scasd eax, dword ptr [rdi] ; retf
0x00000000000a1bc9 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], 0xaf ; ret 0xffe9
0x00000000001074f5 : scasd eax, dword ptr [rdi] ; sbb ebp, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000018c8d9 : scasd eax, dword ptr [rdi] ; stc ; jmp rax
0x0000000000109715 : scasd eax, dword ptr [rdi] ; sti ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000002cc3 : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6f0c5 ; ret
0x0000000000175194 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000017440f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000f8675 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000e9552 : seta al ; sbb eax, 0 ; ret
0x000000000007e14c : setae al ; ret
0x00000000000f8fe0 : setbe al ; ret
0x00000000000b6f7b : sete al ; add eax, 0x16d ; ret
0x000000000011b587 : sete al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001174f8 : sete al ; add rsp, 8 ; ret
0x000000000011afd2 : sete al ; movzx eax, al ; ret
0x000000000002ece5 : sete al ; ret
0x00000000000e0cb7 : sete bl ; jmp 0xe0c8b
0x0000000000035aba : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000001149e1 : sete dl ; and eax, edx ; ret
0x00000000000e8e1d : sete dl ; jmp 0xe8e59
0x000000000012d14d : sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000e61da : setl al ; pop rbx ; ret
0x00000000000d1782 : setne al ; add eax, eax ; ret
0x0000000000121e12 : setne al ; add rsp, 0x78 ; ret
0x00000000000df0c8 : setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x0000000000051b69 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000de1ad : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000f1a22 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000036738 : setne al ; movzx eax, al ; ret
0x0000000000121db0 : setne al ; neg eax ; add rsp, 0x18 ; ret
0x00000000000733dc : setne al ; neg eax ; ret
0x0000000000077c58 : setne al ; ret
0x000000000008e245 : setne bh ; test r9b, dil ; jne 0x8e231 ; ret
0x000000000008e0ee : setne cl ; test r10b, r9b ; jne 0x8e0d9 ; ret
0x000000000019e57d : sgdt [rax] ; nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax]
0x0000000000186a00 : shl bh, 1 ; cli ; jmp qword ptr [rax]
0x0000000000001ba4 : shl byte ptr [rax + 0x38f8d191], 1 ; pop rdx ; ret
0x0000000000150b44 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x000000000015073b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000001a6c10 : shl byte ptr [rax - 0xa], 0xff ; retf 0
0x00000000001506fb : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000018826c : shl byte ptr [rbx + 0x56c0000], 0xec ; call rsp
0x0000000000002da8 : shl byte ptr [rbx - 0x79ac2f17], 1 ; retf 0xd04f
0x000000000013eedd : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018990c : shl byte ptr [rip - 0x53d3ffff], 1 ; int1 ; jmp rsp
0x0000000000114984 : shl byte ptr [rsi + 0x3b], 0x16 ; je 0x114997 ; ret
0x00000000000a0e1f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000008e89b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000035343 : shl byte ptr [rsi + 0xf], 0x7e ; ret 0x7c7
0x0000000000035223 : shl byte ptr [rsi + 0xf], 0x7e ; ret 0xf8c1
0x00000000000350e3 : shl byte ptr [rsi + 0xf], 0x7e ; ret 0xff25
0x000000000015caf3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000096f35 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000015aa2b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000015aa42 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000000972d6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000972e7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000091e48 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000015a921 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001102c7 : shl byte ptr [rsi - 0x77], cl ; push rsp ; add esi, edi ; mov eax, r8d ; ret
0x00000000001605b1 : shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000186408 : shl byte ptr [rsp + rdi*8 - 1], 1 ; jo 0x18647b ; cld ; call qword ptr [rax]
0x0000000000150268 : shl dword ptr [rax + 0x49], 0x39 ; retf
0x000000000016ef90 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000174d1d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000012234c : shl dword ptr [rcx], 1 ; retf 0xe281
0x0000000000175008 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000000a0e02 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000008e89f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000b202b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x0000000000035173 : shl dword ptr [rsi + 0xf], 0x7e ; ret 0xf9c1
0x00000000000b2ef9 : shl dword ptr [rsi + 0xf], 0xd7 ; retf 0xf66
0x00000000000972d2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000a0c7b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000015a9a6 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015aa5d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000015aa46 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015aa2f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001594eb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a9c1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009187c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000092068 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000015a881 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001180c3 : shl dword ptr [rsi - 0x3f], 0xf9 ; xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000f597b : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x00000000000366bb : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000004680c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000046797 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000046766 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000021e7b : shl edi, 4 ; add rdi, r13 ; call rax
0x0000000000038df6 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000ff83e : shl edx, 2 ; jmp 0xff80a
0x000000000011061c : shl esi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x000000000004680b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000046796 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000046765 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000366ba : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000021e7a : shl rdi, 4 ; add rdi, r13 ; call rax
0x0000000000038df5 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000ff83d : shl rdx, 2 ; jmp 0xff80b
0x000000000011061b : shl rsi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x00000000001745c4 : shr al, cl ; add al, 0x3d ; retf
0x0000000000102626 : shr ax, 0xe ; and eax, 1 ; ret
0x000000000018bd6c : shr bh, 1 ; add byte ptr [rbp - 8], ch ; call rsp
0x00000000000ff864 : shr bl, 0x9f ; mov eax, 0xffffffff ; ret
0x0000000000186a0c : shr bl, 0xfa ; call qword ptr [rax]
0x0000000000028b4c : shr bl, 1 ; ret 0x4890
0x000000000007eb07 : shr bl, 1 ; retf
0x00000000001883dc : shr byte ptr [rbx - 0x66640000], 1 ; in al, dx ; jmp rsp
0x00000000000fbcae : shr byte ptr [rbx], 1 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000fba7e : shr byte ptr [rbx], cl ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000f8079 : shr byte ptr [rbx], cl ; add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000008ff4f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000ae15f : shr byte ptr [rcx], 1 ; ret
0x000000000002b1c0 : shr byte ptr [rcx], cl ; ret
0x00000000000921ab : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000001884bc : shr byte ptr [rdi - 0x56a40000], 1 ; in al, dx ; jmp rsp
0x00000000001763c7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000010c3de : shr byte ptr [rdx], 1 ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000010c36e : shr byte ptr [rdx], 1 ; add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x000000000010c139 : shr byte ptr [rdx], cl ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000187434 : shr byte ptr [rip + 0x2f50fffb], 1 ; sti ; call rax
0x00000000000879ac : shr byte ptr [rsi + 0xf48000b], 1 ; ret 0xc3f3
0x0000000000178cf4 : shr byte ptr [rsi - 5], 1 ; push rax ; outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x00000000001a2b90 : shr byte ptr [rsi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000000b611c : shr byte ptr [rsp + rdi*8], 1 ; dec dword ptr [rax + 0x39] ; ret
0x000000000008cb83 : shr cl, cl ; ret 0xfffe
0x000000000004268e : shr cl, cl ; retf
0x000000000015fe4d : shr cl, cl ; retf 0xfff3
0x00000000001888e9 : shr dh, 0xff ; retf 0
0x0000000000186a54 : shr dh, 1 ; cli ; jmp qword ptr [rax]
0x0000000000190ead : shr dl, 1 ; call qword ptr [rdi]
0x00000000000fb9c5 : shr dword ptr [r11], cl ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000077456 : shr dword ptr [rbx], 0x4b ; adc byte ptr [rax + 1], cl ; retf 0x3948
0x00000000000fb9c6 : shr dword ptr [rbx], cl ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001050d8 : shr eax, 0x18 ; ret
0x0000000000034a0b : shr eax, 0x1f ; ret
0x000000000015b8ec : shr eax, 0x20 ; cmp ecx, eax ; jne 0x15b8ff ; xor eax, eax ; ret
0x000000000015eba6 : shr eax, 0x38 ; ret
0x0000000000034d10 : shr eax, 0x3f ; ret
0x00000000000f5938 : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000a18ba : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000102627 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000b328b : shr eax, 2 ; ret
0x0000000000158ff3 : shr eax, 2 ; vzeroupper ; ret
0x00000000001105ee : shr eax, 4 ; and eax, 0x7f ; ret
0x0000000000075e90 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000075fa0 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a1905 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000012d0af : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000f8d7b : shr eax, cl ; and eax, 1 ; ret
0x00000000000f62cd : shr eax, cl ; and eax, 3 ; ret
0x000000000007afc3 : shr eax, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; loop 0x7afcf ; dec dword ptr [rax + 0x39] ; ret
0x0000000000177945 : shr ebp, 0xff ; adc al, dl ; in eax, dx ; call qword ptr [rdx]
0x0000000000177881 : shr ebp, 0xff ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x0000000000177869 : shr ebp, 0xff ; ret
0x000000000008e022 : shr ebx, 0xde ; nop dword ptr [rax] ; ret
0x00000000000b63f7 : shr ecx, 1 ; retf
0x000000000012bf01 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000082c9f : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000036617 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000004691c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000468a1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000046870 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001891a9 : shr edi, 0xff ; or al, 0xfa ; add byte ptr [rax], al ; ret 0xffef
0x0000000000189219 : shr edi, 1 ; jmp rax
0x0000000000117caa : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000004691b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000468a0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000004686f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000015eba5 : shr rax, 0x38 ; ret
0x0000000000034d0f : shr rax, 0x3f ; ret
0x00000000000f5937 : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000b328a : shr rax, 2 ; ret
0x0000000000158ff2 : shr rax, 2 ; vzeroupper ; ret
0x00000000001105ed : shr rax, 4 ; and eax, 0x7f ; ret
0x0000000000117ca9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000001550f5 : shufps xmm0, xmmword ptr [rdi + 2], 0 ; vzeroupper ; ret
0x0000000000112889 : sldt word ptr [rax] ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8941
0x000000000016d24d : sldt word ptr [rax] ; retf 0xf
0x00000000000a2495 : stc ; add al, 0x48 ; cmove eax, edx ; ret
0x000000000014bb57 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d755b : stc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000003ed64 : stc ; add ch, cl ; ret
0x0000000000082818 : stc ; add cl, byte ptr [rax + 0xf] ; retf
0x000000000011109d : stc ; add cl, byte ptr [rdi + rcx + 0x44] ; retf 0xc683
0x0000000000110124 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x000000000004f7ba : stc ; add eax, 0xe9d6460f ; retf 0xffec
0x00000000000e0eee : stc ; add r8, r15 ; call r14
0x000000000004365c : stc ; and al, 0x75 ; fcomi st(3) ; ret
0x00000000000ca3eb : stc ; and al, 0xf ; xchg eax, esp ; ret 0xd009
0x000000000018c7e2 : stc ; call qword ptr [rax]
0x000000000019704e : stc ; call qword ptr [rcx]
0x0000000000190436 : stc ; call qword ptr [rdi]
0x000000000017bdd2 : stc ; call rax
0x000000000018c35a : stc ; call rsp
0x0000000000003e9b : stc ; clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x0000000000186991 : stc ; cli ; call qword ptr [rax]
0x00000000001869b1 : stc ; cli ; call rax
0x000000000017acb1 : stc ; cmc ; call qword ptr [rdx]
0x000000000017acad : stc ; cmc ; push qword ptr [rcx + rdi*8 - 0xb] ; call qword ptr [rdx]
0x00000000001044e7 : stc ; dec dword ptr [rax + 0x21] ; retf 0x3948
0x000000000008a1c8 : stc ; dec dword ptr [rax + 0x29] ; ret
0x000000000008e83c : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000102e90 : stc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000001030ee : stc ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000088480 : stc ; dec dword ptr [rax + 1] ; ret
0x00000000000ef115 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000895c1 : stc ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000008a977 : stc ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x000000000018c772 : stc ; dec dword ptr [rcx + rsi - 0x7bf3fffe] ; stc ; call rax
0x000000000008a0fd : stc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x000000000002d9ff : stc ; dec dword ptr [rdi] ; retf 0xd88
0x000000000017a625 : stc ; hlt ; call rax
0x000000000017a621 : stc ; hlt ; inc dword ptr [rbx] ; stc ; hlt ; call rax
0x000000000018c8ba : stc ; inc dword ptr [rax] ; cmp dword ptr [rdx], eax ; add byte ptr [rsp + rbp*4], ch ; stc ; jmp qword ptr [rax]
0x000000000017bde6 : stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; push qword ptr [rax] ; fdiv st(1), st(0) ; jmp qword ptr [rax]
0x000000000018c2da : stc ; inc dword ptr [rbx + rdx + 0x36c0002] ; stc ; call rax
0x000000000018cb7a : stc ; inc dword ptr [rcx + rcx*2 - 0x1f63fffe] ; stc ; call rax
0x00000000000f6231 : stc ; inc dword ptr [rcx - 0x77] ; retf 0x3074
0x000000000018cc42 : stc ; inc eax ; add r8b, byte ptr [rax] ; insb byte ptr [rdi], dx ; out 0xf9, al ; call rsp
0x000000000018c8d2 : stc ; inc eax ; cmp dword ptr [rdx], eax ; add byte ptr [rdi + rbp*4 - 7], bh ; jmp rax
0x000000000018cc8a : stc ; inc esp ; add r8b, byte ptr [r8] ; or al, 0xe9 ; stc ; jmp rsp
0x0000000000151142 : stc ; je 0x15110e ; lea r10, [r10 + r9] ; jmp r10
0x00000000001527d2 : stc ; je 0x15279e ; lea r10, [r10 + r9] ; jmp r10
0x000000000017bdee : stc ; jmp qword ptr [rax]
0x0000000000196422 : stc ; jmp qword ptr [rbx]
0x00000000001911ea : stc ; jmp qword ptr [rcx]
0x000000000017bdda : stc ; jmp rax
0x000000000018c462 : stc ; jmp rsp
0x000000000008e24a : stc ; jne 0x8e22c ; ret
0x0000000000174e84 : stc ; jnp 0x174e43 ; ret
0x0000000000088a44 : stc ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000156bdf : stc ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000018c54a : stc ; ljmp [rbx + 0x3a5c0002] ; stc ; call rax
0x000000000018c56a : stc ; ljmp [rsp + 0x3d8c0002] ; stc ; jmp rax
0x0000000000068e89 : stc ; loope 0x68e91 ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000002e5b : stc ; loopne 0x2e4a ; stc ; out dx, al ; clc ; ret
0x00000000001346c8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000de211 : stc ; or cl, byte ptr [rcx + 0x5b0374d0] ; pop rbp ; ret
0x0000000000131487 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000059c8e : stc ; or dword ptr [rsi - 0x2f], esi ; mov qword ptr [rdi], rsi ; ret
0x0000000000002e5f : stc ; out dx, al ; clc ; ret
0x0000000000189369 : stc ; out dx, eax ; call qword ptr [rax]
0x000000000017bdea : stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; jmp qword ptr [rax]
0x000000000004695d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000018c9c2 : stc ; push rsp ; add al, byte ptr ds:[rax] ; sub al, 0xbf ; stc ; call qword ptr [rax]
0x0000000000002f55 : stc ; ret
0x0000000000038273 : stc ; retf
0x000000000006d6b3 : stc ; retf 0x34
0x0000000000038c23 : stc ; retf 0x37
0x00000000000f8d7a : stc ; shr eax, cl ; and eax, 1 ; ret
0x000000000015bed4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000015512f : stc ; vzeroupper ; ret
0x00000000001180c6 : stc ; xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x0000000000187544 : stc ; xchg eax, esi ; std ; call rax
0x0000000000150e47 : stc ; xlatb ; ret 0xff2d
0x00000000000bf81c : std ; add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x000000000003026e : std ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000087890 : std ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000a349d : std ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c61c6 : std ; add byte ptr [rax], al ; jne 0xc619c ; ret
0x000000000010c9fd : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000044b0d : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x0000000000044555 : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xe0e9
0x00000000001155fd : std ; add eax, 0x89483077 ; ret
0x0000000000186582 : std ; call qword ptr [rax + 0x10fffd3f]
0x000000000018658a : std ; call qword ptr [rax + 0x10fffd40]
0x0000000000186592 : std ; call qword ptr [rax + 0x20fffd41]
0x000000000018649e : std ; call qword ptr [rax]
0x00000000001864de : std ; call qword ptr [rcx + 0x21fffd43]
0x00000000001865be : std ; call qword ptr [rcx]
0x000000000018648a : std ; call rax
0x000000000018664e : std ; call rsi
0x000000000018d47a : std ; call rsp
0x0000000000186979 : std ; cli ; call qword ptr [rax]
0x00000000001868f9 : std ; cli ; call rax
0x000000000018a839 : std ; cmc ; call qword ptr [rax]
0x000000000004b566 : std ; dec dword ptr [rax + 0x29] ; ret
0x0000000000044f72 : std ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x0000000000003a35 : std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x0000000000034b7d : std ; fstp st(1) ; ret
0x0000000000186572 : std ; inc dword ptr [rax + 0x3c] ; std ; call qword ptr [rax]
0x000000000018659e : std ; inc dword ptr [rax + 0x43] ; std ; call rax
0x00000000001864da : std ; inc dword ptr [rcx] ; std ; call qword ptr [rcx + 0x21fffd43]
0x000000000010bf8b : std ; jbe 0x10bf94 ; ret
0x0000000000150980 : std ; je 0x1509e9 ; and ch, al ; std ; xlatb ; ret
0x0000000000150a6e : std ; je 0x150ad7 ; and ch, al ; std ; xlatb ; ret
0x0000000000186596 : std ; jmp qword ptr [rax]
0x000000000018d51a : std ; jmp qword ptr [rcx + rbp*4 - 0x3cb40000]
0x000000000018647e : std ; jmp qword ptr [rcx]
0x000000000018e626 : std ; jmp qword ptr [rdi]
0x000000000018dc22 : std ; jmp qword ptr [rdx]
0x0000000000186486 : std ; jmp rax
0x00000000001864c2 : std ; jmp rcx
0x000000000018651a : std ; jmp rsi
0x000000000018d2f2 : std ; jmp rsp
0x0000000000187506 : std ; lcall [rax - 0x12000274] ; mov bh, ch ; jmp rax
0x0000000000156bbb : std ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000018d472 : std ; ljmp [rbx + 2] ; add ah, bl ; mov dl, 0xfd ; call rsp
0x000000000007ecc3 : std ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000155117 : std ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x0000000000133eeb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000011adfc : std ; movsxd rcx, dword ptr [rax - 0x77] ; ret
0x0000000000188a81 : std ; out dx, al ; jmp qword ptr [rax]
0x000000000018659a : std ; push qword ptr [rax + 0x40fffd42] ; std ; call rax
0x000000000018656e : std ; push qword ptr [rax + 0x40fffd45] ; cmp al, 0xfd ; call qword ptr [rax]
0x00000000001865a6 : std ; push qword ptr [rax + 0x44] ; std ; call qword ptr [rax]
0x0000000000186496 : std ; push qword ptr [rdx + 0x3d] ; std ; push qword ptr [rdx + 0x3e] ; std ; call qword ptr [rax]
0x000000000018649a : std ; push qword ptr [rdx + 0x3e] ; std ; call qword ptr [rax]
0x0000000000186482 : std ; push rax ; cmp al, 0xfd ; jmp rax
0x000000000018647a : std ; push rax ; std ; jmp qword ptr [rcx]
0x00000000000a1328 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000f406f : std ; retf
0x000000000003858f : std ; retf 8
0x000000000010951e : std ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x000000000015511b : std ; vzeroupper ; ret
0x00000000001507a1 : std ; xlatb ; ret
0x0000000000150799 : std ; xlatb ; ret 0xc085
0x0000000000150c83 : std ; xlatb ; ret 0xe883
0x000000000014fc63 : std ; xlatb ; retf
0x000000000014fc8b : std ; xlatb ; retf 0xc985
0x00000000001544b4 : std ; xlatb ; retf 0xfdc5
0x0000000000154514 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000001554b6 : std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000001891ed : sti ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000019d12d : sti ; add byte ptr [rax], al ; nop ; retf 0xfff2
0x00000000001891e5 : sti ; add byte ptr [rax], al ; pop rsp ; retf 0xffef
0x000000000019d0fd : sti ; add byte ptr [rax], al ; push rax ; ret
0x0000000000074747 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000001ad135 : sti ; add dword ptr [rax], eax ; pop rax ; in al, 0xf7 ; call qword ptr [rdx]
0x00000000000b7789 : sti ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000000b5273 : sti ; call 0x21493
0x0000000000187396 : sti ; call qword ptr [rax + 0x10fffb4c]
0x000000000018738e : sti ; call qword ptr [rax + 0x10fffb4d]
0x0000000000187386 : sti ; call qword ptr [rax + 0x10fffb4e]
0x000000000018737e : sti ; call qword ptr [rax + 0x10fffb4f]
0x0000000000186a96 : sti ; call qword ptr [rax + 0x20fffb30]
0x00000000001871a6 : sti ; call qword ptr [rax + 0x20fffb54]
0x0000000000186f8e : sti ; call qword ptr [rax + 0x20fffb57]
0x000000000018742e : sti ; call qword ptr [rax - 0x2f0004d4]
0x0000000000178cfa : sti ; call qword ptr [rax]
0x0000000000199772 : sti ; call qword ptr [rbx]
0x0000000000186b42 : sti ; call qword ptr [rdx + 0x22fffb32]
0x000000000018703a : sti ; call qword ptr [rdx + 0x22fffb59]
0x0000000000186b62 : sti ; call qword ptr [rdx]
0x0000000000186ade : sti ; call qword ptr [rsi + 0x26fffb2f]
0x0000000000186fd6 : sti ; call qword ptr [rsi + 0x26fffb56]
0x0000000000186abe : sti ; call qword ptr [rsi]
0x0000000000178cf2 : sti ; call rax
0x0000000000186b52 : sti ; call rdx
0x0000000000186fe6 : sti ; call rsi
0x0000000000186c1a : sti ; call rsp
0x0000000000186915 : sti ; cli ; call rax
0x0000000000186975 : sti ; cli ; push qword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x0000000000186995 : sti ; cli ; push rax ; cld ; cli ; call rax
0x00000000000c4fce : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c4fb8 : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000129370 : sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c4df7 : sti ; dec dword ptr [rcx + 0x22b8c7] ; add byte ptr [rax], al ; syscall
0x000000000006d616 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000001869aa : sti ; inc dword ptr [rax + 0x10fffb06] ; stc ; cli ; call rax
0x0000000000186aa2 : sti ; inc dword ptr [rax + 0x2f] ; sti ; call rax
0x0000000000186c7a : sti ; inc dword ptr [rax + 0x33] ; sti ; call rax
0x0000000000186f9a : sti ; inc dword ptr [rax + 0x56] ; sti ; call rax
0x0000000000187172 : sti ; inc dword ptr [rax + 0x5a] ; sti ; call rax
0x00000000001869c6 : sti ; inc dword ptr [rax + 4] ; sti ; inc dword ptr [rax + 6] ; sti ; call rax
0x0000000000186946 : sti ; inc dword ptr [rax + 5] ; sti ; inc dword ptr [rax + 7] ; sti ; call rax
0x00000000001869ca : sti ; inc dword ptr [rax + 6] ; sti ; call rax
0x000000000018694a : sti ; inc dword ptr [rax + 7] ; sti ; call rax
0x0000000000186c16 : sti ; inc dword ptr [rax + rsi - 5] ; call rsp
0x0000000000186f8a : sti ; inc dword ptr [rax] ; pop rax ; sti ; call qword ptr [rax + 0x20fffb57]
0x00000000001871a2 : sti ; inc dword ptr [rax] ; push rbp ; sti ; call qword ptr [rax + 0x20fffb54]
0x00000000001873a2 : sti ; inc dword ptr [rax] ; sti ; push qword ptr [rax + 0x4a] ; sti ; jmp rax
0x0000000000178d76 : sti ; inc dword ptr [rax] ; test bl, bh ; push qword ptr [rax - 0x7b] ; sti ; jmp rax
0x0000000000186a92 : sti ; inc dword ptr [rax] ; xor ebx, edi ; call qword ptr [rax + 0x20fffb30]
0x00000000000c4f62 : sti ; inc dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018710e : sti ; inc dword ptr [rdi + rdx*2 - 5] ; call rsp
0x0000000000186b4e : sti ; inc dword ptr [rdx + 0x31] ; sti ; call rdx
0x0000000000187046 : sti ; inc dword ptr [rdx + 0x58] ; sti ; call rdx
0x0000000000187036 : sti ; inc dword ptr [rdx] ; pop rdx ; sti ; call qword ptr [rdx + 0x22fffb59]
0x0000000000186b3e : sti ; inc dword ptr [rdx] ; xor edi, ebx ; call qword ptr [rdx + 0x22fffb32]
0x0000000000186fe2 : sti ; inc dword ptr [rsi + 0x55] ; sti ; call rsi
0x0000000000186fd2 : sti ; inc dword ptr [rsi] ; push rdi ; sti ; call qword ptr [rsi + 0x26fffb56]
0x0000000000186ada : sti ; inc dword ptr [rsi] ; xor bl, bh ; call qword ptr [rsi + 0x26fffb2f]
0x000000000018d1c2 : sti ; inc eax ; sbb al, 1 ; add byte ptr [rsi + rsi*8 - 5], ch ; call rsp
0x000000000017b198 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000187376 : sti ; jmp qword ptr [rax + 0x10fffb50]
0x0000000000178d8e : sti ; jmp qword ptr [rax + 0x10fffb8c]
0x00000000001869ee : sti ; jmp qword ptr [rax - 0x1f000521]
0x0000000000178d6e : sti ; jmp qword ptr [rax]
0x000000000019ae4e : sti ; jmp qword ptr [rbx]
0x0000000000186d5e : sti ; jmp qword ptr [rdx + 0x12fffb25]
0x0000000000187266 : sti ; jmp qword ptr [rdx + 0x12fffb4a]
0x0000000000186d56 : sti ; jmp qword ptr [rdx + 0x22fffb26]
0x0000000000186d4e : sti ; jmp qword ptr [rdx + 0x22fffb27]
0x0000000000186d46 : sti ; jmp qword ptr [rdx + 0x22fffb28]
0x0000000000186d3e : sti ; jmp qword ptr [rdx + 0x22fffb29]
0x0000000000186b46 : sti ; jmp qword ptr [rdx]
0x0000000000186ae2 : sti ; jmp qword ptr [rsi]
0x0000000000178d7e : sti ; jmp rax
0x0000000000186b2e : sti ; jmp rdx
0x0000000000186ad2 : sti ; jmp rsi
0x0000000000186bfe : sti ; jmp rsp
0x00000000000fa469 : sti ; jno 0xfa464 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000187166 : sti ; lcall [rdx + 0x2afffb54] ; push rsp ; sti ; call rax
0x000000000018722e : sti ; ljmp [rcx + rcx*2 + 0x5152fffb] ; sti ; call rdx
0x000000000018716a : sti ; ljmp [rdx] ; push rsp ; sti ; call rax
0x00000000001870e6 : sti ; ljmp [rsi + 0x3efffb54] ; push rsp ; sti ; jmp rsp
0x0000000000186b26 : sti ; ljmp [rsi + rbp + 0x2e3cfffb] ; sti ; jmp rdx
0x00000000001342c8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000f599e : sti ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x000000000003bffa : sti ; or dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x00000000001097cc : sti ; or dword ptr [rdi], ecx ; retf
0x0000000000188a59 : sti ; out dx, al ; call qword ptr [rax]
0x0000000000186e9e : sti ; push qword ptr [rax + 0x25] ; sti ; jmp rax
0x0000000000186eb6 : sti ; push qword ptr [rax + 0x2a] ; sti ; jmp rax
0x0000000000186c76 : sti ; push qword ptr [rax + 0x40fffb33] ; xor edi, ebx ; call rax
0x0000000000186f96 : sti ; push qword ptr [rax + 0x40fffb56] ; push rsi ; sti ; call rax
0x00000000001873ae : sti ; push qword ptr [rax + 0x49] ; sti ; call qword ptr [rax]
0x00000000001873a6 : sti ; push qword ptr [rax + 0x4a] ; sti ; jmp rax
0x0000000000186c12 : sti ; push qword ptr [rax + rsi + 0x3044fffb] ; sti ; call rsp
0x0000000000178d9e : sti ; push qword ptr [rax - 0x3f000e67] ; wait ; int1 ; call rax
0x0000000000178d7a : sti ; push qword ptr [rax - 0x7b] ; sti ; jmp rax
0x00000000001868ce : sti ; push qword ptr [rax - 6] ; cli ; push qword ptr [rax] ; cld ; cli ; call qword ptr [rax]
0x000000000018690e : sti ; push qword ptr [rax] ; cli ; cli ; push rax ; sti ; cli ; call rax
0x0000000000178d8a : sti ; push qword ptr [rax] ; mov edi, ebx ; jmp qword ptr [rax + 0x10fffb8c]
0x000000000018710a : sti ; push qword ptr [rdi + rdx*2 + 0x5744fffb] ; sti ; call rsp
0x0000000000186b4a : sti ; push qword ptr [rdx + 0x42fffb31] ; xor ebx, edi ; call rdx
0x0000000000187042 : sti ; push qword ptr [rdx + 0x42fffb58] ; pop rax ; sti ; call rdx
0x0000000000187262 : sti ; push qword ptr [rdx] ; sti ; jmp qword ptr [rdx + 0x12fffb4a]
0x0000000000186fde : sti ; push qword ptr [rsi + 0x46fffb55] ; push rbp ; sti ; call rsi
0x00000000001869ea : sti ; push rax ; add eax, 0xdfa0fffb ; cli ; jmp rax
0x0000000000186e9a : sti ; push rax ; and eax, 0x2570fffb ; sti ; jmp rax
0x0000000000178cf6 : sti ; push rax ; outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x0000000000186eb2 : sti ; push rax ; sub bh, bl ; push qword ptr [rax + 0x2a] ; sti ; jmp rax
0x000000000017500a : sti ; ret
0x0000000000040198 : sti ; ret 0xffbf
0x00000000000e5379 : sti ; ret 0xfff3
0x0000000000109716 : sti ; sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000083081 : sti ; sub dh, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000002d3f7 : sti ; test rax, rax ; je 0x2d405 ; call rax
0x0000000000002388 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x000000000011016a : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x0000000000198055 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; js 0x198064 ; out dx, eax ; call qword ptr [rax]
0x0000000000197ff5 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; sub byte ptr [rdi + rbp*8], al ; jmp qword ptr [rcx]
0x00000000001aeb50 : stosb byte ptr [rdi], al ; add eax, dword ptr [rax] ; add byte ptr [rsi + 2], al ; add byte ptr [rax], al ; retf 4
0x00000000001754e4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000052234 : stosb byte ptr [rdi], al ; mov ecx, 0x89480012 ; ret 0x8948
0x00000000000a1714 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000001887e1 : stosb byte ptr [rdi], al ; out dx, al ; jmp rax
0x000000000000238b : stosb byte ptr [rdi], al ; ret
0x000000000007e1e2 : stosb byte ptr [rdi], al ; ret 0x33
0x00000000001005c2 : stosb byte ptr [rdi], al ; retf 0xffff
0x000000000012d3f5 : stosb byte ptr [rdi], al ; sub byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015871a : stosb byte ptr [rdi], al ; vzeroupper ; ret
0x00000000000c9371 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0d606], al ; ret 0
0x0000000000091f01 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000001980f5 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; call 0x12197009
0x00000000001883dd : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; pushfq ; cdq ; in al, dx ; jmp rsp
0x000000000018a669 : stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rax]
0x0000000000189909 : stosd dword ptr [rdi], eax ; int1 ; call rax
0x000000000004ff8e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000110311 : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x00000000001887f1 : stosd dword ptr [rdi], eax ; out dx, al ; call qword ptr [rax]
0x0000000000082ca4 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x000000000003661c : stosd dword ptr [rdi], eax ; ret
0x00000000001764ea : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x00000000000a8a91 : stosd dword ptr [rdi], eax ; retf 0xd
0x0000000000110310 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000082ca3 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003661b : stosq qword ptr [rdi], rax ; ret
0x000000000008528e : str word ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000086831 : str word ptr [rax - 0x77] ; ret 0xff31
0x0000000000085f65 : str word ptr [rax - 0x77] ; retf 0x9aeb
0x0000000000034df8 : str word ptr [rax - 0x7b] ; ret 0xd574
0x0000000000038004 : sub ah, 0x37 ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000001769d1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001aa15c : sub al, 0 ; add byte ptr [rax], al ; cwde ; retf
0x00000000000f6f16 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x000000000019d0f8 : sub al, 0 ; add byte ptr [rax], al ; xor al, 0xfb ; add byte ptr [rax], al ; push rax ; ret
0x000000000007b8ee : sub al, 0 ; add cl, ch ; ret
0x00000000000f1453 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000efc4c : sub al, 0 ; add rsp, 8 ; ret
0x00000000000f835f : sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000f014e : sub al, 0 ; cmp eax, 1 ; jg 0xf015f ; ret
0x00000000000ee584 : sub al, 0 ; jne 0xee599 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f1a95 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000f0169 : sub al, 0 ; mov eax, 0xca ; syscall
0x00000000000f8605 : sub al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f13ff : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000f0e6c : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee5f8 : sub al, 0 ; pop rbx ; ret
0x00000000000f13c9 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efc1d : sub al, 0 ; ret
0x00000000000023b8 : sub al, 0x11 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; rcl bh, 1 ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x000000000019f8f4 : sub al, 0x23 ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xc], ch ; call qword ptr [rax]
0x0000000000082f71 : sub al, 0x33 ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000032ae7 : sub al, 0x38 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b2bc2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x000000000018cf90 : sub al, 0x51 ; cli ; jmp qword ptr [rax]
0x0000000000188da0 : sub al, 0x53 ; out dx, eax ; call qword ptr [rax]
0x00000000001a2af4 : sub al, 0x55 ; add dword ptr [rax], eax ; cmp byte ptr [rsi], ch ; cmc ; call qword ptr [rax]
0x0000000000003e9d : sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x000000000018a248 : sub al, 0x5d ; hlt ; call qword ptr [rax]
0x0000000000157ba2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000b2bc5 : sub al, 0x75 ; pop rax ; ret
0x000000000018d0e8 : sub al, 0x7c ; cli ; call rsp
0x00000000001a4474 : sub al, 0x7c ; cmc ; call rbx
0x0000000000187aac : sub al, 0x7f ; add byte ptr [rax], al ; pushfq ; retf
0x0000000000196614 : sub al, 0x80 ; out dx, al ; call qword ptr [rdx]
0x00000000001a0184 : sub al, 0x81 ; hlt ; jmp qword ptr [rcx]
0x0000000000158583 : sub al, 0x83 ; ret 0x8104
0x00000000000ddba2 : sub al, 0x89 ; ret 0x2de9
0x00000000000d20cb : sub al, 0x89 ; ret 0x8348
0x00000000000ddd22 : sub al, 0x89 ; ret 0xfde9
0x00000000000d1e0a : sub al, 0x89 ; ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x00000000000d20df : sub al, 0x89 ; xor r9b, bpl ; retf 0xfff9
0x00000000001963f4 : sub al, 0x8e ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x12], bh ; jmp qword ptr [rbx]
0x00000000001897c8 : sub al, 0x9c ; int1 ; call qword ptr [rax]
0x00000000001897f0 : sub al, 0x9d ; int1 ; jmp rax
0x000000000015a073 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000102d2c : sub al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000197ff4 : sub al, 0xaa ; add byte ptr [rax], al ; sub byte ptr [rdi + rbp*8], al ; jmp qword ptr [rcx]
0x00000000001980f4 : sub al, 0xab ; add byte ptr [rax], al ; call 0x1219700a
0x0000000000189910 : sub al, 0xac ; int1 ; jmp rsp
0x000000000018c8c0 : sub al, 0xac ; stc ; jmp qword ptr [rax]
0x000000000018c950 : sub al, 0xb8 ; stc ; jmp rax
0x00000000001888e0 : sub al, 0xbe ; out dx, al ; inc dword ptr [rax] ; retf 0
0x000000000018c9c8 : sub al, 0xbf ; stc ; call qword ptr [rax]
0x000000000018b140 : sub al, 0xc3 ; idiv bh ; add al, 0xb4 ; add dword ptr [rax], eax ; pop rsp ; ret
0x000000000018d5a8 : sub al, 0xc8 ; std ; call rsp
0x0000000000113bdc : sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x000000000011380d : sub al, 0xf ; xchg eax, ebp ; ret 0xd184
0x000000000018cce8 : sub al, 0xf1 ; stc ; jmp rax
0x000000000019ed54 : sub al, 0xf3 ; jmp qword ptr [rcx]
0x0000000000198fed : sub al, 0xfb ; call qword ptr [rax]
0x0000000000187431 : sub al, 0xfb ; call rax
0x000000000010c8b0 : sub al, 0xfc ; add dword ptr [rax], eax ; mov rdi, rbp ; call r12
0x00000000000b611d : sub al, 0xfc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000189a45 : sub al, 1 ; add byte ptr [rax + rdx*8], cl ; int1 ; jmp qword ptr [rax]
0x00000000001a02bd : sub al, 1 ; add byte ptr [rax - 0x77], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000a3bd6 : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f68d1 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001a0295 : sub al, 1 ; add byte ptr [rax], bh ; mov esp, esi ; jmp qword ptr [rcx]
0x00000000001a02a9 : sub al, 1 ; add byte ptr [rcx + rcx*4 - 0xc], dl ; jmp qword ptr [rcx]
0x0000000000188288 : sub al, 7 ; in al, dx ; call qword ptr [rax]
0x0000000000037145 : sub al, 7 ; mov rdi, rbp ; call r12
0x000000000003412a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000f6b8d : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000114dc9 : sub al, byte ptr [rax] ; add dword ptr [rbx - 0x3d], ebx ; nop ; ret
0x000000000010c36f : sub al, byte ptr [rax] ; add dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x000000000010cc03 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011483e : sub al, byte ptr [rax] ; cmp eax, 1 ; jg 0x11484f ; ret
0x000000000010943f : sub al, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000114315 : sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000010d66d : sub al, byte ptr [rax] ; ret
0x000000000010b8f5 : sub al, byte ptr [rax] ; test byte ptr [rdi], 0x30 ; je 0x10b909 ; xor eax, eax ; ret
0x0000000000113ed4 : sub al, byte ptr [rax] ; test eax, eax ; je 0x113ee7 ; ret
0x00000000001187f4 : sub al, byte ptr [rax] ; test eax, eax ; je 0x118807 ; ret
0x0000000000115725 : sub al, byte ptr [rax] ; test rax, rax ; jne 0x115738 ; ret
0x0000000000115724 : sub al, byte ptr [rax] ; test rax, rax ; jne 0x115739 ; ret
0x0000000000116441 : sub al, byte ptr ss:[rax] ; mov eax, 0xca ; syscall
0x00000000000d21bd : sub al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000e88af : sub al, ch ; ret
0x0000000000150fe5 : sub al, ch ; std ; xlatb ; ret
0x000000000006fa77 : sub al, ch ; xchg eax, ebx ; retf 7
0x0000000000186cbd : sub bh, bl ; call rax
0x0000000000186d3d : sub bh, bl ; jmp qword ptr [rdx + 0x22fffb29]
0x0000000000186d39 : sub bh, bl ; jmp qword ptr [rdx]
0x0000000000186eb9 : sub bh, bl ; jmp rax
0x0000000000186eb5 : sub bh, bl ; push qword ptr [rax + 0x2a] ; sti ; jmp rax
0x00000000000ec2e7 : sub bh, byte ptr [rax + 0x118] ; syscall
0x000000000018b6d9 : sub bh, dh ; jmp rax
0x000000000019acf0 : sub bh, dl ; add byte ptr [rax], al ; pushfq ; insd dword ptr [rdi], dx ; int1 ; call qword ptr [rdx]
0x00000000000bf9be : sub bl, al ; mov eax, 0x16 ; ret
0x000000000010b2ae : sub bl, al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000186ccd : sub bl, bh ; call rax
0x0000000000186d4d : sub bl, bh ; jmp qword ptr [rdx + 0x22fffb27]
0x0000000000186d49 : sub bl, bh ; jmp qword ptr [rdx]
0x0000000000186ec9 : sub bl, bh ; jmp rax
0x0000000000177b28 : sub bpl, sil ; dec dword ptr [rax + 0x2a] ; out dx, al ; jmp rax
0x0000000000177b2c : sub bpl, sil ; jmp rax
0x0000000000177b74 : sub bpl, sil ; push qword ptr [rax + 0x27] ; out dx, al ; call qword ptr [rsi]
0x00000000001114cd : sub byte ptr [r10], 0 ; mov eax, 0xca ; syscall
0x00000000000b5675 : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000b2bb6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000125bc1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001259c1 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000008abb7 : sub byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x000000000004b2b5 : sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000008b446 : sub byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000082de5 : sub byte ptr [rax + 0x29], cl ; retf 0x8348
0x00000000000e620f : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000001258c5 : sub byte ptr [rax + 1], bh ; ret
0x0000000000047135 : sub byte ptr [rax + 1], cl ; ret 0x3d74
0x0000000000125bc2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018d6a8 : sub byte ptr [rax - 0x17], cl ; call qword ptr [rsi]
0x00000000000370c4 : sub byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000000ce3c6 : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000037224 : sub byte ptr [rax - 0x75], cl ; je 0x37255 ; sbb byte ptr [rax + 1], cl ; ret
0x00000000000b413b : sub byte ptr [rax - 0x75], cl ; jl 0xb416b ; and al, ch ; retf 0xfffc
0x000000000007fb28 : sub byte ptr [rax - 0x77], cl ; and bl, bpl ; retf
0x00000000000b4480 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000892d6 : sub byte ptr [rax - 0x77], cl ; ret 0x14c
0x00000000000444c1 : sub byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000d90f1 : sub byte ptr [rax - 0x77], cl ; ret 0x8945
0x00000000000e98f7 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000006d434 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000008a183 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x00000000000ce553 : sub byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x00000000000336e8 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000008aec7 : sub byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000033b7b : sub byte ptr [rax - 0x7d], cl ; retf 0x4803
0x0000000000033c69 : sub byte ptr [rax - 0x7d], cl ; retf 0x4807
0x0000000000033d55 : sub byte ptr [rax - 0x7d], cl ; retf 0x480c
0x0000000000033c51 : sub byte ptr [rax - 0x7d], cl ; retf 0xe904
0x0000000000033be7 : sub byte ptr [rax - 0x7d], cl ; retf 0xeb05
0x0000000000033c9b : sub byte ptr [rax - 0x7d], cl ; retf 0xeb06
0x0000000000033d8b : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0d
0x000000000002c184 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xb9
0x00000000001a9814 : sub byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 1
0x00000000000ec1c4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000012b50a : sub byte ptr [rax], al ; add dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000012c69c : sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000012c62f : sub byte ptr [rax], al ; jne 0x12c648 ; add rsp, 0x38 ; ret
0x000000000012a6f7 : sub byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000012d3f6 : sub byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012b0a8 : sub byte ptr [rax], al ; xor edx, edx ; mov rsi, rbp ; call 0xe7b19
0x000000000018edf0 : sub byte ptr [rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dl, ch ; call qword ptr [rcx]
0x00000000000b58aa : sub byte ptr [rax], dh ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000b2bba : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000b2bb9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001962f0 : sub byte ptr [rbp + 0x7aec0000], cl ; out dx, al ; call qword ptr [rdx]
0x00000000001a42f0 : sub byte ptr [rbp + 1], ch ; add ah, cl ; jae 0x1a42f3 ; call qword ptr [rdi]
0x00000000000cd0a2 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000033e66 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000112336 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r14 ; ret
0x00000000000526e2 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000429d7 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000012c4a3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000012c4a2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000125913 : sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000125943 : sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x00000000000b2bb7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000b3daa : sub byte ptr [rcx + 1], al ; ret 0x8d48
0x0000000000125c96 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a2fd8 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000006d0ae : sub byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; pop rbp ; ret
0x000000000010ca43 : sub byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; call 0x128ce9
0x0000000000035bc5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000000313c6 : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000066475 : sub byte ptr [rcx - 0x77], cl ; ret 0x894d
0x0000000000121d5e : sub byte ptr [rcx], 0 ; mov eax, 0xca ; syscall
0x000000000019fdd1 : sub byte ptr [rcx], al ; add ah, ch ; ja 0x19fdd1 ; jmp qword ptr [rcx]
0x000000000012cf94 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop r14 ; ret
0x00000000000ed3d3 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000019fde5 : sub byte ptr [rcx], al ; add byte ptr [rax], cl ; js 0x19fde5 ; jmp qword ptr [rcx]
0x00000000001259c2 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000001236d9 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000001011bf : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000197ff8 : sub byte ptr [rdi + rbp*8], al ; jmp qword ptr [rcx]
0x0000000000196588 : sub byte ptr [rdi - 0x12], bh ; jmp qword ptr [rbx]
0x000000000011a7ec : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000004b564 : sub byte ptr [rdi - 3], bl ; dec dword ptr [rax + 0x29] ; ret
0x0000000000177df0 : sub byte ptr [rdi], 0xee ; jmp qword ptr [rbx]
0x000000000017a0d8 : sub byte ptr [rdi], 0xf4 ; call rsi
0x000000000017a080 : sub byte ptr [rdi], 0xf4 ; lcall [rbx] ; hlt ; call qword ptr [rdi]
0x0000000000119cc1 : sub byte ptr [rdi], cl ; retf 0x5089
0x00000000001114ce : sub byte ptr [rdx], 0 ; mov eax, 0xca ; syscall
0x000000000018c60d : sub byte ptr [rdx], al ; add byte ptr [rcx + rbx*2 - 7], bl ; jmp qword ptr [rax]
0x000000000004e197 : sub byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf
0x00000000001a6008 : sub byte ptr [rsi + rsi*8], dl ; call rdx
0x0000000000186a50 : sub ch, 0xfa ; call rax
0x000000000012ea6f : sub ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000001a1e78 : sub ch, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000177b29 : sub ch, dh ; dec dword ptr [rax + 0x2a] ; out dx, al ; jmp rax
0x0000000000177b2d : sub ch, dh ; jmp rax
0x0000000000177b75 : sub ch, dh ; push qword ptr [rax + 0x27] ; out dx, al ; call qword ptr [rsi]
0x00000000000382f0 : sub cl, 0x37 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; retf
0x000000000018c459 : sub cl, bh ; call rax
0x000000000018c461 : sub cl, bh ; jmp rsp
0x00000000000896a7 : sub cl, byte ptr [rax + 0x39] ; bnd jne 0x896a7 ; ret
0x00000000000ce175 : sub cl, byte ptr [rax + 0x39] ; ret 0x870f
0x000000000002f717 : sub cl, byte ptr [rax - 0x77] ; ret
0x00000000000f36e3 : sub cl, byte ptr [rax - 0x77] ; ret 0xdeb
0x00000000000387ed : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000008ce77 : sub cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000edc55 : sub cl, byte ptr [rcx - 0x77] ; fdivr dword ptr [rax + 0x10e] ; syscall
0x00000000000bbf78 : sub cl, ch ; ret 0xfff7
0x0000000000068e87 : sub cl, ch ; stc ; loope 0x68e93 ; dec dword ptr [rcx + 0x63] ; ret
0x0000000000061591 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000197418 : sub dh, bl ; out dx, al ; call qword ptr [rsi]
0x00000000000b571e : sub dh, byte ptr [rax] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000b56d6 : sub dh, byte ptr [rax] ; add byte ptr [rcx], al ; add rsp, 8 ; ret
0x0000000000083082 : sub dh, byte ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000083153 : sub dh, byte ptr [rbx] ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000ceb7b : sub dh, ch ; dec dword ptr [rax - 0x7d] ; ret
0x000000000017538d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000038e93 : sub dword ptr [rax + 0x39480037], ebx ; ret
0x00000000000e627e : sub dword ptr [rax + 0x63], ecx ; ret 0xc283
0x000000000011adc3 : sub dword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x000000000008b01e : sub dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000f7181 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000123465 : sub dword ptr [rax], eax ; cmp dword ptr fs:[rax], 0x18 ; je 0x123479 ; ret
0x000000000011cfaf : sub dword ptr [rax], eax ; mov eax, 0xca ; syscall
0x00000000001228ec : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001277d4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x1277e8 ; xor eax, eax ; ret
0x0000000000176022 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x00000000000c062f : sub dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000011140 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c
0x00000000001445a3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00000000000831ae : sub dword ptr [rbx], esi ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000075d80 : sub dword ptr [rcx], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075d81 : sub dword ptr [rcx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13252d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13267d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001327b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1327cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13291d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x132a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x132bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x132d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x132e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000132f97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x132fad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001330e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1330fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000133237 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13324d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000133387 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13339d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001334d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1334ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000133627 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13363d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000133777 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13378d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000134ee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x134efd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13504d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13519d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001352d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1352ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13543d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13558d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001356c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1356dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13582d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13597d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135ab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x135acd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135c07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x135c1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135d57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x135d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x135ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000135ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13600d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000136147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13615d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000005e69b : sub dword ptr [rdi + 0x35], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006e94b : sub dword ptr [rdi + 4], 1 ; je 0x6e900 ; jmp 0x6e91d
0x000000000007787b : sub dword ptr [rdi + 4], 1 ; je 0x77830 ; jmp 0x7784d
0x0000000000132473 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000013246f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000076d43 : sub dword ptr [rdi], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000051d58 : sub dword ptr [rdi], 1 ; ret
0x00000000000cfc13 : sub dword ptr [rdi], eax ; ret
0x00000000000c9377 : sub dword ptr [rdi], ecx ; test dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013251d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001111f2 : sub dword ptr [rdx], 0 ; mov eax, 0xca ; syscall
0x000000000015b6c9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016398a : sub dword ptr [rip + 0x253e6f], 1 ; pop rbx ; ret
0x0000000000114dc5 : sub dword ptr [rip + 0x2a4c4c], 1 ; pop rbx ; ret
0x000000000011482c : sub dword ptr [rip + 0x2a51e5], 1 ; ret
0x00000000000f013c : sub dword ptr [rip + 0x2c870d], 1 ; ret
0x0000000000083150 : sub dword ptr [rip + 0x332a29], 1 ; pop rbx ; ret
0x0000000000083838 : sub dword ptr [rip + 0x334639], 1 ; pop rbx ; pop rbp ; ret
0x000000000007e8de : sub dword ptr [rip + 0x338f1b], 1 ; pop rbx ; ret
0x000000000007d8fa : sub dword ptr [rip + 0x339ebf], 1 ; ret
0x000000000007b5ae : sub dword ptr [rip + 0x33c20b], 1 ; ret
0x000000000006f73a : sub dword ptr [rip + 0x34803f], 1 ; ret
0x0000000000039085 : sub dword ptr [rip + 0x37e454], 1 ; pop rbx ; ret
0x000000000014af27 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000015a856 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000014ade1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000001768da : sub dword ptr [rsi], 0x76 ; retf
0x00000000000ced9d : sub dword ptr [rsp], eax ; pop rbp ; pop r12 ; ret
0x00000000001277d3 : sub dword ptr cs:[rax], eax ; test eax, eax ; je 0x1277e9 ; xor eax, eax ; ret
0x0000000000163989 : sub dword ptr ss:[rip + 0x253e6f], 1 ; pop rbx ; ret
0x0000000000150d77 : sub eax, -1 ; jne 0x150d88 ; vzeroupper ; ret
0x0000000000157ce7 : sub eax, -1 ; jne 0x157cf8 ; vzeroupper ; ret
0x0000000000084ef2 : sub eax, 0x10 ; ret
0x00000000000db455 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x0000000000187435 : sub eax, 0x2f50fffb ; sti ; call rax
0x0000000000083839 : sub eax, 0x334639 ; add dword ptr [rbx + 0x5d], ebx ; ret
0x0000000000186b31 : sub eax, 0x3452fffb ; sti ; jmp rdx
0x0000000000186a71 : sub eax, 0x3480fffb ; sti ; call qword ptr [rax]
0x00000000000dbd6c : sub eax, 0x3d8d4800 ; retf
0x00000000000dde95 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000018c6d5 : sub eax, 0x741c0002 ; stc ; jmp rax
0x0000000000035139 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000067127 : sub eax, 0x83000000 ; ret
0x00000000000b53c9 : sub eax, 0xa7e80030 ; ret 0xfff6
0x0000000000150a0f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x00000000000e1d44 : sub eax, 0xcab800 ; add byte ptr [rax], al ; syscall
0x0000000000174026 : sub eax, 0xea4ca798 ; retf
0x000000000000294d : sub eax, 0xeeef33a1 ; retf 0x182c
0x00000000001603fa : sub eax, 0xfc08548 ; xchg eax, ebp ; ret
0x0000000000122112 : sub eax, 1 ; add rsp, 0x18 ; ret
0x00000000000450d7 : sub eax, 1 ; cmp rbx, rax ; jne 0x450d9 ; pop rbx ; ret
0x0000000000114909 : sub eax, 1 ; je 0x114920 ; mov qword ptr [rdi], rax ; ret
0x0000000000102818 : sub eax, 1 ; leave ; ret
0x000000000002bc57 : sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x000000000004629f : sub eax, 1 ; ret
0x000000000007ebe0 : sub eax, 2 ; add rsp, 8 ; ret
0x000000000010276b : sub eax, dword ptr [eax] ; pop rbp ; ret
0x00000000000a1e46 : sub eax, dword ptr [r8 + r9*4] ; je 0xa1e2f ; ret
0x0000000000161db1 : sub eax, dword ptr [rax + rax] ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000000a1e47 : sub eax, dword ptr [rax + rcx*4] ; je 0xa1e2e ; ret
0x00000000000f824b : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000005d58 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5c
0x00000000000f8275 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f6abd : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000fa44d : sub eax, dword ptr [rax] ; add byte ptr [rbp - 0x3e], dh ; jmp 0xfa40f
0x00000000000fc00d : sub eax, dword ptr [rax] ; add byte ptr [rbp - 0x3e], dh ; jmp 0xfbfcf
0x00000000000f9faf : sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000f8c45 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010276c : sub eax, dword ptr [rax] ; pop rbp ; ret
0x00000000000f81a4 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000039084 : sub eax, dword ptr [rbx + 0x37e4542d] ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000002f6bf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000061525 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000000f74a0 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001a0181 : sub eax, dword ptr [rcx] ; add byte ptr [rcx + rax*4], ch ; hlt ; jmp qword ptr [rcx]
0x000000000003869d : sub eax, dword ptr [rcx] ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000007de2e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000077d45 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000077c35 : sub eax, dword ptr [rdi + 0x38] ; ret
0x00000000000738d5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000077d36 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000077c26 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000ff653 : sub eax, dword ptr [rdx + 8] ; ret
0x00000000000a1dfa : sub eax, dword ptr [rdx + rcx*4] ; je 0xa1de6 ; ret
0x000000000007d5a3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000106966 : sub eax, dword ptr es:[rax] ; mov eax, 0xca ; syscall
0x000000000014f87d : sub eax, eax ; cmp eax, ecx ; jle 0x14f8c1 ; movsxd rax, ecx ; ret
0x0000000000047c31 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000014fb33 : sub eax, eax ; ret
0x00000000000a29cb : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a2b39 : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000000ff645 : sub eax, ecx ; cmp sil, cl ; cmovne eax, edx ; ret
0x00000000000ff5db : sub eax, ecx ; cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000150dc3 : sub eax, ecx ; je 0x150dd9 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000007cba9 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000047a90 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008fc8c : sub eax, ecx ; ret
0x000000000014fedf : sub eax, ecx ; vzeroupper ; ret
0x00000000000975f9 : sub eax, edi ; ret
0x00000000000b339e : sub eax, edi ; shr rax, 2 ; ret
0x00000000000ff616 : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000038da9 : sub eax, edx ; ret
0x00000000000349f6 : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000003511f : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000034d0d : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000158ff0 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x00000000000b7845 : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000014fbde : sub eax, edx ; vzeroupper ; ret
0x0000000000110829 : sub eax, esi ; add eax, edi ; cmovs eax, edx ; ret
0x0000000000189591 : sub eax, esi ; call rsp
0x00000000000ff5a1 : sub eax, esi ; cmp dil, dl ; cmovne eax, ecx ; ret
0x000000000014f8dd : sub eax, esi ; ret
0x00000000000ff644 : sub eax, r9d ; cmp sil, cl ; cmovne eax, edx ; ret
0x00000000000ff5da : sub eax, r9d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000017527e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000007a400 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071116 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000110372 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x0000000000173d15 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000030c7 : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000ae02c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000186cc5 : sub ebx, edi ; call rax
0x0000000000186d45 : sub ebx, edi ; jmp qword ptr [rdx + 0x22fffb28]
0x0000000000186d41 : sub ebx, edi ; jmp qword ptr [rdx]
0x0000000000186ec1 : sub ebx, edi ; jmp rax
0x00000000000eeb12 : sub ebx, esi ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000036614 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000008ce96 : sub ecx, 0x1b ; idiv edi ; inc dword ptr [rbp - 0x77] ; ret 0x8945
0x00000000000d01f7 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009cfb1 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001549d4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000000fed3b : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000001730d4 : sub ecx, dword ptr [rsp + rbp*8] ; call rsi
0x00000000000d752f : sub ecx, eax ; add rdx, rcx ; jmp 0xd74cb
0x00000000000b7847 : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000349ab : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000b2eac : sub edi, 0x10 ; add rax, rdi ; ret
0x00000000000e7cac : sub edi, dword ptr [rax + 0x10d] ; syscall
0x0000000000188c59 : sub edi, ebp ; jmp rsp
0x0000000000186cb5 : sub edi, ebx ; jmp rax
0x000000000008e83b : sub edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x00000000000030ce : sub edi, esi ; retf 0x54f7
0x000000000007d5d0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007d5c5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000091a94 : sub edx, eax ; jbe 0x91ad7 ; add rax, rdi ; ret
0x0000000000091aa4 : sub edx, eax ; jbe 0x91ad9 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000091ab4 : sub edx, eax ; jbe 0x91ad9 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000091ac4 : sub edx, eax ; jbe 0x91ad9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b1f24 : sub edx, eax ; jbe 0xb1f67 ; add rax, rdi ; ret
0x00000000000b1f34 : sub edx, eax ; jbe 0xb1f69 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000b1f44 : sub edx, eax ; jbe 0xb1f69 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000b1f54 : sub edx, eax ; jbe 0xb1f69 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000004b2b7 : sub edx, eax ; mov rax, rdx ; add rax, r9 ; ret
0x00000000000ecfa4 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000155089 : sub edx, ecx ; jmp 0x15502a
0x00000000001557a9 : sub edx, ecx ; jmp 0x15574a
0x0000000000155e29 : sub edx, ecx ; jmp 0x155dca
0x0000000000156279 : sub edx, ecx ; jmp 0x15620a
0x0000000000156b19 : sub edx, ecx ; jmp 0x156aba
0x0000000000156f99 : sub edx, ecx ; jmp 0x156f1f
0x000000000003b7ad : sub edx, ecx ; jmp 0x3b7ef
0x000000000003e19d : sub edx, ecx ; jmp 0x3e1df
0x0000000000040b5d : sub edx, ecx ; jmp 0x40b9f
0x0000000000048b2d : sub edx, ecx ; jmp 0x48b6f
0x0000000000044729 : sub edx, edi ; add rdx, rcx ; jmp 0x4473d
0x0000000000044a39 : sub edx, edi ; add rdx, rcx ; jmp 0x44a4d
0x000000000018cdc9 : sub edx, edi ; jmp rsp
0x0000000000074637 : sub edx, esi ; mov qword ptr [rsp], r8 ; mov rdi, r15 ; call rax
0x000000000008a682 : sub esi, 1 ; jne 0x8a680 ; xor eax, eax ; pop rbx ; ret
0x0000000000110102 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000012bb45 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000017a0e8 : sub esi, dword ptr [rsi] ; hlt ; dec ecx ; ret
0x00000000001895b1 : sub esi, eax ; call rax
0x0000000000039c13 : sub esi, eax ; mov eax, r10d ; syscall
0x00000000000ed0a4 : sub esi, ebx ; ret
0x0000000000036242 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125d8c : sub esp, -0x80 ; pop rbx ; ret
0x0000000000042f4f : sub esp, 0x10 ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000125ff6 : sub esp, 8 ; call 0x122ae5
0x00000000000f59a3 : sub esp, 8 ; call rsi
0x00000000000b6441 : sub esp, edi ; dec dword ptr [rax + 0x39] ; ret
0x000000000007cba8 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000114dc8 : sub r8b, byte ptr [rax] ; add dword ptr [rbx - 0x3d], ebx ; nop ; ret
0x0000000000114df6 : sub r8b, byte ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000084ef1 : sub rax, 0x10 ; ret
0x0000000000114908 : sub rax, 1 ; je 0x114921 ; mov qword ptr [rdi], rax ; ret
0x00000000000a1053 : sub rax, 1 ; ret
0x000000000007de2d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000077d44 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000077c34 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000738d4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000077d35 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000077c25 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000014fb32 : sub rax, r8 ; ret
0x00000000000a2b38 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000975f8 : sub rax, rdi ; ret
0x00000000000b339d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000038dbd : sub rax, rdx ; ret
0x0000000000034d0c : sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000001546af : sub rax, rdx ; vzeroupper ; ret
0x000000000014f8dc : sub rax, rsi ; ret
0x00000000000d752e : sub rcx, rax ; add rdx, rcx ; jmp 0xd74cc
0x00000000000b2eab : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000091a93 : sub rdx, rax ; jbe 0x91ad8 ; add rax, rdi ; ret
0x00000000000b1f23 : sub rdx, rax ; jbe 0xb1f68 ; add rax, rdi ; ret
0x000000000004b2b6 : sub rdx, rax ; mov rax, rdx ; add rax, r9 ; ret
0x000000000003b7ac : sub rdx, rcx ; jmp 0x3b7f0
0x000000000003e19c : sub rdx, rcx ; jmp 0x3e1e0
0x0000000000040b5c : sub rdx, rcx ; jmp 0x40ba0
0x0000000000048b2c : sub rdx, rcx ; jmp 0x48b70
0x0000000000044728 : sub rdx, rdi ; add rdx, rcx ; jmp 0x4473e
0x0000000000044727 : sub rdx, rdi ; add rdx, rcx ; jmp 0x4473f
0x0000000000044a38 : sub rdx, rdi ; add rdx, rcx ; jmp 0x44a4e
0x0000000000044a37 : sub rdx, rdi ; add rdx, rcx ; jmp 0x44a4f
0x000000000008a681 : sub rsi, 1 ; jne 0x8a681 ; xor eax, eax ; pop rbx ; ret
0x0000000000039c12 : sub rsi, r8 ; mov eax, r10d ; syscall
0x0000000000036241 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125d8b : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000042f4e : sub rsp, 0x10 ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000125ff5 : sub rsp, 8 ; call 0x122ae6
0x00000000000f59a2 : sub rsp, 8 ; call rsi
0x0000000000034e1e : subps xmm0, xmm1 ; ret
0x0000000000034e1d : subsd xmm0, xmm1 ; ret
0x00000000000351c2 : subss xmm0, xmm1 ; ret
0x000000000000276f : syscall
0x0000000000042c1d : sysenter
0x000000000010fe92 : test ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014e4c8 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001263ff : test ah, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000033b21 : test ah, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000004e9af : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x31], al ; in al, 0x83 ; ret
0x000000000014f3c8 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000546e7 : test ah, dh ; in eax, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000014e2e8 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014f1e8 : test ah, dl ; add eax, 0x894d0000 ; retf
0x000000000011dda2 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002b5f9 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000121b32 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002dbb0 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000000ee201 : test al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000fc00c : test al, 0x2b ; add byte ptr [rax], al ; jne 0xfbfd9 ; jmp 0xfbfd0
0x0000000000003eb2 : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000018a1ec : test al, 0x5a ; add dword ptr [rax], eax ; or al, 0x1c ; hlt ; call rax
0x00000000001a4470 : test al, 0x6e ; add dword ptr [rax], eax ; sub al, 0x7c ; cmc ; call rbx
0x000000000019fe38 : test al, 0x78 ; hlt ; jmp qword ptr [rcx]
0x00000000001963a8 : test al, 0x7d ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196570 : test al, 0x8f ; add byte ptr [rax], al ; or al, 0x7f ; out dx, al ; jmp qword ptr [rbx]
0x00000000001745d7 : test al, 0x97 ; xchg eax, esp ; ret
0x0000000000173fbe : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000018880c : test al, 0xc5 ; add byte ptr [rax], al ; in al, dx ; lodsb al, byte ptr [rsi] ; out dx, al ; jmp rsp
0x0000000000003a33 : test al, 0xc6 ; std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x00000000001a1388 : test al, 0xc7 ; hlt ; jmp qword ptr [rcx]
0x000000000019e9a8 : test al, 0xd6 ; jmp qword ptr [rdi]
0x000000000019ae70 : test al, 0xd8 ; add byte ptr [rax], al ; cmp al, 0xdf ; sti ; jmp rsi
0x000000000019b170 : test al, 0xdb ; add byte ptr [rax], al ; jl 0x19b110 ; int1 ; jmp qword ptr [rax]
0x0000000000188c54 : test al, 0xdf ; add byte ptr [rax], al ; cld ; sub edi, ebp ; jmp rsp
0x00000000000cceb0 : test al, 0xe8 ; ret 0xf547
0x00000000000228bf : test al, 0xe8 ; retf
0x00000000001a5568 : test al, 0xe9 ; cmc ; call qword ptr [rdi]
0x000000000006e950 : test al, 0xeb ; ret
0x00000000000b3149 : test al, 0xf0 ; jne 0xb31a8 ; lea rax, [rdi - 0x10] ; ret
0x00000000000b3148 : test al, 0xf0 ; jne 0xb31a9 ; lea rax, [rdi - 0x10] ; ret
0x00000000001898a1 : test al, 0xf1 ; jmp qword ptr [rax]
0x0000000000189f41 : test al, 0xf3 ; call qword ptr [rax]
0x000000000018a639 : test al, 0xf5 ; jmp rsp
0x00000000001891ec : test al, 0xfb ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x00000000001afd88 : test al, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001a7ec5 : test al, 1 ; add byte ptr [rax], bh ; retf 0xfff6
0x00000000000d18e5 : test al, 1 ; je 0xd187f ; xor eax, eax ; pop rbx ; ret
0x0000000000095f2c : test al, ah ; or eax, 0x894d0000 ; retf
0x000000000013eedc : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008ff4a : test al, al ; jne 0x8ff38 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000013f7dc : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009514c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008994e : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000022214 : test al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001999e1 : test al, dh ; jmp qword ptr [rdi]
0x000000000009583c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017a140 : test bh, 0xf4 ; call rdx
0x000000000003ad48 : test bh, bh ; cmove eax, ecx ; ret
0x000000000003ad70 : test bh, bh ; cmovne eax, ecx ; ret
0x000000000015fd51 : test bh, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000083d9b : test bh, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000176ee4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000018b8c9 : test bh, dh ; call qword ptr [rax]
0x0000000000175391 : test bh, dl ; retf 0xdf7f
0x000000000010ee36 : test bl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000178d79 : test bl, bh ; push qword ptr [rax - 0x7b] ; sti ; jmp rax
0x0000000000089960 : test bl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000189e01 : test bl, dh ; call rsp
0x00000000000abbf0 : test byte ptr [rax + 0x14c0000], al ; ret 0x28b
0x000000000000075e : test byte ptr [rax + 0x2000008a], cl ; add byte ptr [rdx], dl ; retf
0x000000000002eca6 : test byte ptr [rax + 0x200], bh ; ret
0x000000000011dca5 : test byte ptr [rax + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000c64da : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000001885fc : test byte ptr [rax + 0x6adc0000], bh ; out dx, al ; call rsp
0x00000000000a5240 : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x00000000001a364c : test byte ptr [rax + 1], ah ; add byte ptr [rax + 0x3d], dh ; cmc ; jmp qword ptr [rbx]
0x0000000000118f97 : test byte ptr [rax + rax - 0x76b70000], ch ; ret 0x8b48
0x000000000006df8f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x00000000000d94d2 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000e5b84 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000044d9b : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000004a104 : test byte ptr [rax + rbp*8 - 1], cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000014df38 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x00000000000e8e62 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000002b212 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000a89bd : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000051140 : test byte ptr [rax + rdi*8], ah ; add byte ptr [rax], al ; add al, ch ; cmc ; retf
0x00000000000daa13 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add al, ch ; ret 0xff6c
0x000000000010b013 : test byte ptr [rax + rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010adc3 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add al, ch ; ret 0xf166
0x00000000000d5874 : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d48cd : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000007f0db : test byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; retf 0x2173
0x00000000000da4bb : test byte ptr [rax - 0x77], 0xc1 ; lea rdx, [r10 + rax*8] ; jmp 0xda4e4
0x0000000000089faa : test byte ptr [rax - 0x77], 0xd0 ; cmovne rax, rdi ; ret
0x00000000000e6e30 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000000e6e7b : test byte ptr [rax - 0x77], 0xdf ; mov eax, 0x135 ; syscall
0x0000000000045374 : test byte ptr [rax - 0x77], 0xef ; call 0x215c6
0x00000000000376b7 : test byte ptr [rax - 0x77], 0xef ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000062ad1 : test byte ptr [rax - 0x7c000018], al ; ret
0x0000000000189155 : test byte ptr [rax], 0 ; cld ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x00000000000d5156 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add cl, ch ; retf 0xfff6
0x0000000000001db2 : test byte ptr [rax], ah ; mov al, 0x72 ; retf
0x000000000013fe9c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000163a5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000015ccca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000014473a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009c6da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009d6aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000014476a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009d6ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009d6da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000073d4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000011e45a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000000001447aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009d71a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007d85a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014474a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009d6ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000074c1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005268a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000155b7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000ebf7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007d7fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b2eba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000e6f11 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000187c25 : test byte ptr [rax], al ; add byte ptr [rsi - 0x16], bl ; jmp qword ptr [rax]
0x000000000014079c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000013f59c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000102d2b : test byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006fa26 : test byte ptr [rax], ch ; call 0xec514
0x0000000000095cdc : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000346e9 : test byte ptr [rbp + 0x48000000], ah ; add edx, ecx ; jmp 0x34708
0x0000000000100647 : test byte ptr [rbp + rax], cl ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000002345f : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000014ea68 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000119b7e : test byte ptr [rbp - 0x74ffffff], dl ; adc byte ptr [rdi], cl ; retf 0x5389
0x00000000000b9c50 : test byte ptr [rbp - 0x7cfffffe], ah ; cli ; add al, 0x75 ; ret 0x8948
0x00000000000e677a : test byte ptr [rbp - 0x9fffffd], ah ; ret 0xf20
0x00000000001015b3 : test byte ptr [rbx + 0x1c], 0x20 ; je 0x1015c7 ; pop rbx ; ret
0x000000000014ec48 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000198fec : test byte ptr [rbx + rdi*8], ch ; call qword ptr [rax]
0x000000000004e95f : test byte ptr [rbx + rdx], bh ; add dh, dh ; ret 0xf40
0x000000000002dfd1 : test byte ptr [rbx - 0x76b3f308], 0x34 ; ret 0xed75
0x00000000001a3abc : test byte ptr [rbx - 0xb], cl ; call qword ptr [rdx]
0x000000000007ca26 : test byte ptr [rbx], 0x80 ; jne 0x7ca56 ; pop rbx ; ret
0x0000000000048900 : test byte ptr [rbx], ah ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0x2975
0x000000000007fa52 : test byte ptr [rbx], dh ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000040928 : test byte ptr [rbx], dh ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret 0x3175
0x000000000018c2dc : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; add edi, ecx ; call rax
0x000000000003b3b4 : test byte ptr [rbx], dl ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x0000000000022296 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008980f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x00000000001a2f4c : test byte ptr [rcx + 1], bl ; add al, dl ; xor esi, ebp ; jmp qword ptr [rcx]
0x00000000001a2a4c : test byte ptr [rcx + rax], dl ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x000000000007350d : test byte ptr [rcx + rbp - 0xe], 0xe8 ; retf 0xfadf
0x000000000014ee28 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x0000000000038a87 : test byte ptr [rcx + rcx*4 - 0x31], 0x41 ; call rax
0x00000000000fe2e4 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000dae6e : test byte ptr [rcx - 0x7600000c], ah ; ret 0xe283
0x000000000014a236 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d653a : test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; retf 0x840f
0x00000000001a5a45 : test byte ptr [rcx], al ; add byte ptr [rax], bh ; cmc ; cmc ; call qword ptr [rdi]
0x00000000001a5a89 : test byte ptr [rcx], al ; add byte ptr [rbp + rsi*8 - 0xb], ah ; call qword ptr [rax]
0x00000000001a5a59 : test byte ptr [rcx], al ; add byte ptr [rbp + rsi*8 - 0xb], al ; call qword ptr [rdi]
0x000000000018a7bd : test byte ptr [rcx], al ; add byte ptr [rdi + rsi*8 - 0xb], cl ; jmp rax
0x0000000000027341 : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x0000000000131a46 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014b016 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000130d56 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014af26 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000130a76 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014f008 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000000ff5c3 : test byte ptr [rdi - 0x76fffffe], bl ; ret 0x8944
0x00000000000ff58c : test byte ptr [rdi - 0x77000000], bh ; ret 0xf789
0x00000000000f33c4 : test byte ptr [rdi - 0x7d000000], al ; ret
0x00000000000cfe5c : test byte ptr [rdi - 0xa000000], bh ; ret
0x000000000010b8f7 : test byte ptr [rdi], 0x30 ; je 0x10b907 ; xor eax, eax ; ret
0x000000000008a612 : test byte ptr [rdi], 0x84 ; ret 0
0x000000000004fa1e : test byte ptr [rdi], 0x84 ; retf
0x00000000000b00e2 : test byte ptr [rdi], 0x85 ; call qword ptr [rdi]
0x0000000000160ec9 : test byte ptr [rdi], 0x92 ; ret
0x00000000000c5134 : test byte ptr [rdi], 0x94 ; ret 0x8548
0x00000000000e895f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x00000000000e8476 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x00000000000533ad : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000077c82 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077c92 : test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000042151 : test byte ptr [rdi], ah ; add al, 0 ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000006f534 : test byte ptr [rdi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000009d058 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000000000024c93 : test byte ptr [rdi], cl ; retf 0x5489
0x000000000018d1dc : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; in al, dx ; cld ; call rsp
0x000000000002ec34 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000d342c : test byte ptr [rdx + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000014dd58 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000198bac : test byte ptr [rdx - 0x11], bl ; call qword ptr [rax]
0x0000000000068447 : test byte ptr [rdx - 0x7c000016], bh ; ret
0x0000000000074531 : test byte ptr [rdx], bl ; add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000001aea70 : test byte ptr [rip + 0x7e90000], al ; add byte ptr [rax], al ; retf
0x000000000009769d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000074efc : test byte ptr [rsi + rdi*8 - 0x76b30001], bh ; retf 0x8948
0x000000000014e108 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x00000000000974dd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000152e0e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000152b0e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x0000000000153d0e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015340e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015370e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010ec66 : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x3904
0x000000000014db78 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003026d : test ch, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000010bd85 : test ch, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000068624 : test ch, bl ; call 0xffffffffc38a8630
0x0000000000082fee : test ch, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000014d9db : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x000000000014bb56 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018c779 : test cl, bh ; call rax
0x000000000008e249 : test cl, bh ; jne 0x8e22d ; ret
0x0000000000131486 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014b976 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001311a6 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000902a6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000905a6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000914a6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014ba66 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000911a6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000000b6392 : test cl, ch ; idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000090ea6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000090ba6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000131bb6 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007fe02 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000014b886 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011254b : test cl, cl ; jne 0x112531 ; ret
0x000000000008e098 : test cl, cl ; jne 0x8e08d ; ret
0x000000000008e1e7 : test cl, cl ; jne 0x8e1df ; xor eax, eax ; ret
0x00000000000a0cdf : test cl, cl ; jne 0xa0cd4 ; ret
0x00000000000a0d8f : test cl, cl ; jne 0xa0d84 ; ret
0x00000000000a104f : test cl, cl ; jne 0xa1048 ; sub rax, 1 ; ret
0x00000000000fdb52 : test cl, cl ; jne 0xfdb45 ; ret
0x000000000011a344 : test cl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f1e90 : test dh, 1 ; jne 0xf1ea6 ; ret
0x00000000001967c1 : test dh, ch ; jmp qword ptr [rsi]
0x000000000008deb0 : test dh, dh ; jne 0x8dea7 ; mov qword ptr [rdx], rcx ; ret
0x000000000003ad47 : test dil, dil ; cmove eax, ecx ; ret
0x000000000003ad6f : test dil, dil ; cmovne eax, ecx ; ret
0x000000000015cb54 : test dl, 0x40 ; jne 0x15cb19 ; lea rax, [rdi + 7] ; ret
0x000000000015cb82 : test dl, 4 ; jne 0x15cb19 ; lea rax, [rdi + 3] ; ret
0x000000000016236e : test dl, ah ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x00000000000c9379 : test dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019033d : test dl, ch ; jmp qword ptr [rax]
0x00000000000a9853 : test dl, ch ; or eax, 0xb8480000 ; ret 0xffff
0x000000000008e0f2 : test dl, cl ; jne 0x8e0d5 ; ret
0x000000000017940d : test dl, dh ; call qword ptr [rax]
0x000000000019c919 : test dl, dh ; jmp qword ptr [rcx]
0x000000000003ad5c : test dl, dl ; cmovne eax, ecx ; ret
0x0000000000033eb6 : test dl, dl ; jne 0x33e98 ; ret
0x000000000008e054 : test dl, dl ; jne 0x8e04d ; ret
0x00000000000a0eff : test dl, dl ; jne 0xa0ef8 ; lea rax, [rcx - 1] ; ret
0x00000000000c6df7 : test dl, dl ; jne 0xc6ddd ; xor eax, eax ; ret
0x00000000000dc0b7 : test dl, dl ; jne 0xdc09d ; xor eax, eax ; ret
0x00000000000cab9a : test dword ptr [rax + 0x39fffff7], ebx ; ret 0xea7f
0x00000000000e69c7 : test dword ptr [rax + 0x73fffffe], esp ; ret 0x85c6
0x000000000005a599 : test dword ptr [rax + 0xffffffa], edx ; ret
0x0000000000156423 : test dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000157133 : test dword ptr [rax + 2], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000009d38b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009e8ab : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009e7ab : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x000000000004eab3 : test dword ptr [rax + 9], 0x58d48c7 ; ret 0x1286
0x000000000008caa7 : test dword ptr [rax + rax - 0x7cb80000], ebx ; ret 0x4801
0x000000000008b07f : test dword ptr [rax + rax - 0x7cb80000], ecx ; ret 0x4801
0x0000000000030175 : test dword ptr [rax - 0x16000006], ebp ; ret
0x00000000000d91e3 : test dword ptr [rax - 0x7d], 0x394904c1 ; retf
0x00000000000879f0 : test dword ptr [rax], 0x440f4800 ; ret 0xfc3
0x000000000019cced : test dword ptr [rax], 0xf28ff000 ; jmp qword ptr [rcx]
0x000000000019cd01 : test dword ptr [rax], 0xf2900c00 ; jmp qword ptr [rcx]
0x000000000019cd15 : test dword ptr [rax], 0xf2902800 ; jmp qword ptr [rcx]
0x000000000019cd29 : test dword ptr [rax], 0xf2904400 ; jmp qword ptr [rcx]
0x00000000000666cf : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d137a : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], al ; retf
0x00000000000e73a7 : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e67e9 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x0000000000067831 : test dword ptr [rax], ebx ; idiv edi ; jmp qword ptr [rax]
0x00000000000da7ec : test dword ptr [rax], edi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000000e67e8 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000004b0ac : test dword ptr [rbp + 0x29], ecx ; ret 0xc149
0x000000000005e23e : test dword ptr [rbp - 0x7c000043], ecx ; retf
0x0000000000091a18 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x00000000000b2ad0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000b3038 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x0000000000144688 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000144668 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000144580 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009e9a0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000015a357 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a7a6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007fdf9 : test dword ptr [rbx + rax], esp ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000002c6f : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000150fd8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000002ba63 : test dword ptr [rbx - 0x7c000003], ebp ; retf
0x00000000000d00a0 : test dword ptr [rbx - 0x7d000000], edx ; retf 0x8840
0x00000000000e2770 : test dword ptr [rbx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x0000000000001aca : test dword ptr [rbx], ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4f ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001625a7 : test dword ptr [rbx], ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001611d8 : test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x000000000014438a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000015a32d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009cf72 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000015a23d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a14d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b2b17 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000015ea07 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000b2ae7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000014472a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x00000000000de455 : test dword ptr [rcx], 0x894c0000 ; ret 0xf48
0x00000000001acd25 : test dword ptr [rcx], 0xf7d4a800 ; call qword ptr [rbx]
0x000000000018d0c5 : test dword ptr [rcx], eax ; add byte ptr [rcx + rdi*2 - 6], ch ; call rsp
0x00000000001a5b79 : test dword ptr [rcx], eax ; add byte ptr [rdi + rsi*8 - 0xb], ah ; call qword ptr [rcx]
0x00000000000e678c : test dword ptr [rcx], ebp ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf02
0x0000000000150a1a : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x000000000012d093 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x000000000009d0d7 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x000000000009d0b7 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000ffbc8 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000100023 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000c711c : test dword ptr [rdi - 0x17fffffd], ebp ; retf 0xff95
0x0000000000036736 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000015f37c : test dword ptr [rdi], ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000156501 : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000156f69 : test dword ptr [rdx + 4], eax ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000009d271 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000009e689 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000015b6a2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015a072 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000057179 : test dword ptr [rdx - 0x7cb80000], ecx ; ret 0x4801
0x0000000000144647 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000001d56 : test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x000000000008ad89 : test dword ptr [rdx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000150a0e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x00000000001544e3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x00000000000d18fe : test dword ptr [rip - 0xc000001], edi ; ret
0x0000000000113bd6 : test dword ptr [rsi + 0x3c000002], esp ; sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x00000000000b30dd : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x000000000015e392 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000157235 : test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000009d095 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000009d075 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000009cf8d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000285de : test dword ptr [rsi + rdi*8 - 0x7cb70001], esi ; ret
0x00000000000e06fe : test dword ptr [rsi + rsi*8 - 1], ecx ; dec dword ptr [rdi] ; mov dh, 5 ; ret 0x2d9e
0x000000000000396e : test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x0000000000056fc3 : test dword ptr [rsi], ebp ; retf
0x000000000015a578 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000000382da : test eax, 0x10037e9 ; xor eax, eax ; pop rbx ; ret
0x000000000017546d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000000c5c03 : test eax, 0x39fffffe ; ret
0x000000000008e34e : test eax, 0x6348000e ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x00000000001762c0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001375b6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000018836d : test eax, 0x875c0000 ; in al, dx ; call rax
0x000000000010be93 : test eax, 0x8b002ad4 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000017b196 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000104f34 : test eax, 0xe80007b5 ; ret
0x0000000000006411 : test eax, 0xf ; add byte ptr [rax], al ; retf 0
0x00000000000f385f : test eax, eax ; cmove eax, edx ; ret
0x00000000000ecfa6 : test eax, eax ; cmovns eax, edx ; ret
0x0000000000038e54 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000103eca : test eax, eax ; je 0x103ee0 ; add rsp, 8 ; ret
0x000000000010bfa4 : test eax, eax ; je 0x10bfb4 ; mov rdi, rbx ; call rax
0x0000000000113ed6 : test eax, eax ; je 0x113ee5 ; ret
0x0000000000114894 : test eax, eax ; je 0x1148a8 ; add rsp, 8 ; ret
0x0000000000117ea0 : test eax, eax ; je 0x117eb0 ; mov rdi, rbx ; call rax
0x0000000000118527 : test eax, eax ; je 0x118537 ; mov rdi, rbp ; call rax
0x00000000001187f6 : test eax, eax ; je 0x118805 ; ret
0x0000000000119358 : test eax, eax ; je 0x119368 ; mov rdi, rbp ; call rax
0x00000000001196d3 : test eax, eax ; je 0x1196e7 ; mov rdi, qword ptr [rsp + 8] ; call rax
0x00000000001198c1 : test eax, eax ; je 0x1198d6 ; xor eax, eax ; ret
0x000000000011e60e : test eax, eax ; je 0x11e61e ; mov rdi, r12 ; call rax
0x000000000011e7d9 : test eax, eax ; je 0x11e7eb ; lea rdi, [rbp + 0x10] ; call rax
0x000000000011f88a : test eax, eax ; je 0x11f89a ; mov rdi, rbx ; call rax
0x000000000011f930 : test eax, eax ; je 0x11f940 ; mov rdi, r13 ; call rax
0x000000000012040d : test eax, eax ; je 0x12041f ; lea rdi, [rbx + 0x68] ; call rax
0x0000000000120ad4 : test eax, eax ; je 0x120ae4 ; mov rdi, r12 ; call rax
0x0000000000120e1d : test eax, eax ; je 0x120e2f ; lea rdi, [rbx + 0x58] ; call rax
0x0000000000122a0f : test eax, eax ; je 0x1229ca ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001229bd : test eax, eax ; je 0x1229cd ; pop rbx ; ret
0x0000000000123549 : test eax, eax ; je 0x12355b ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000123b82 : test eax, eax ; je 0x123b94 ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001277d6 : test eax, eax ; je 0x1277e6 ; xor eax, eax ; ret
0x000000000014ac43 : test eax, eax ; je 0x14ac4f ; xchg eax, edx ; sub eax, edx ; ret
0x000000000014bc28 : test eax, eax ; je 0x14bc34 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000163581 : test eax, eax ; je 0x163590 ; call rax
0x0000000000024a76 : test eax, eax ; je 0x24a85 ; ret
0x000000000002c429 : test eax, eax ; je 0x2c433 ; call rax
0x000000000002d3f9 : test eax, eax ; je 0x2d403 ; call rax
0x0000000000043773 : test eax, eax ; je 0x43785 ; pop rbx ; ret
0x000000000007923d : test eax, eax ; je 0x7924d ; pop rbx ; ret
0x000000000007ea5c : test eax, eax ; je 0x7ea66 ; call rax
0x000000000007eb02 : test eax, eax ; je 0x7ead9 ; call rax
0x000000000007f885 : test eax, eax ; je 0x7f88f ; call rax
0x0000000000087610 : test eax, eax ; je 0x87628 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf86a : test eax, eax ; je 0xbf8a4 ; call rax
0x00000000000bf8da : test eax, eax ; je 0xbf914 ; call rax
0x00000000000cd602 : test eax, eax ; je 0xcd5e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6ebb : test eax, eax ; je 0xe6ef6 ; xor edx, edx ; call rax
0x00000000000ed99c : test eax, eax ; je 0xed9a7 ; ret
0x00000000000ef481 : test eax, eax ; je 0xef490 ; mov qword ptr [rax], rdx ; ret
0x00000000000f2d85 : test eax, eax ; je 0xf2dd4 ; call rax
0x00000000000f2f11 : test eax, eax ; je 0xf2fc8 ; call rax
0x00000000000f5b72 : test eax, eax ; jl 0xf5b8f ; je 0xf5b7f ; ret
0x000000000011424a : test eax, eax ; jne 0x114255 ; ret
0x0000000000114424 : test eax, eax ; jne 0x114435 ; pop rbx ; ret
0x0000000000115728 : test eax, eax ; jne 0x115735 ; ret
0x000000000011af88 : test eax, eax ; jne 0x11af4c ; xor eax, eax ; pop rbx ; ret
0x000000000011ea06 : test eax, eax ; jne 0x11ea15 ; ret
0x00000000001234c5 : test eax, eax ; jne 0x1234b5 ; pop rbx ; ret
0x0000000000123746 : test eax, eax ; jne 0x123755 ; ret
0x000000000012d2bd : test eax, eax ; jne 0x12d2df ; mov eax, 0x27 ; syscall
0x000000000014fedb : test eax, eax ; jne 0x14fec9 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001503a0 : test eax, eax ; jne 0x150389 ; sub eax, ecx ; vzeroupper ; ret
0x00000000001506d1 : test eax, eax ; jne 0x1506f9 ; xor eax, eax ; vzeroupper ; ret
0x0000000000158131 : test eax, eax ; jne 0x158159 ; xor eax, eax ; vzeroupper ; ret
0x0000000000158599 : test eax, eax ; jne 0x158589 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000158a6e : test eax, eax ; jne 0x158a59 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000039b48 : test eax, eax ; jne 0x39b69 ; mov eax, 0x13e ; syscall
0x000000000005152f : test eax, eax ; jne 0x51548 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c80c : test eax, eax ; jne 0x7c805 ; ret
0x000000000007d584 : test eax, eax ; jne 0x7d57d ; ret
0x0000000000086b3f : test eax, eax ; jne 0x86b36 ; xor eax, eax ; ret
0x0000000000091a45 : test eax, eax ; jne 0x91aa6 ; xor eax, eax ; ret
0x0000000000091ee8 : test eax, eax ; jne 0x91f66 ; xor eax, eax ; ret
0x0000000000091f17 : test eax, eax ; jne 0x91f96 ; xor eax, eax ; ret
0x00000000000a21c1 : test eax, eax ; jne 0xa2195 ; ret
0x00000000000b1ed5 : test eax, eax ; jne 0xb1f36 ; xor eax, eax ; ret
0x00000000000bf99f : test eax, eax ; jne 0xbf9d9 ; mov eax, 0xe6 ; syscall
0x00000000000c16f6 : test eax, eax ; jne 0xc1719 ; mov eax, 0x74 ; syscall
0x00000000000c4c0b : test eax, eax ; jne 0xc4c29 ; mov eax, 0x3d ; syscall
0x00000000000c4dd8 : test eax, eax ; jne 0xc4df9 ; mov eax, 0x22 ; syscall
0x00000000000c4e63 : test eax, eax ; jne 0xc4e78 ; add rsp, 8 ; ret
0x00000000000c5ae6 : test eax, eax ; jne 0xc5b09 ; mov eax, 0x69 ; syscall
0x00000000000c5b56 : test eax, eax ; jne 0xc5b79 ; mov eax, 0x6a ; syscall
0x00000000000c5da6 : test eax, eax ; jne 0xc5dc9 ; mov eax, 0x75 ; syscall
0x00000000000c5e26 : test eax, eax ; jne 0xc5e49 ; mov eax, 0x77 ; syscall
0x00000000000de2a6 : test eax, eax ; jne 0xde290 ; mov eax, dword ptr [rsi + 0x14] ; pop rbx ; pop rbp ; ret
0x00000000000e5ddb : test eax, eax ; jne 0xe5df9 ; mov eax, 0x11 ; syscall
0x00000000000e5e8b : test eax, eax ; jne 0xe5ea9 ; mov eax, 0x12 ; syscall
0x00000000000e7346 : test eax, eax ; jne 0xe7358 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e78cb : test eax, eax ; jne 0xe7929 ; mov eax, 0x101 ; syscall
0x00000000000e79d8 : test eax, eax ; jne 0xe79f4 ; syscall
0x00000000000e7a78 : test eax, eax ; jne 0xe7a99 ; mov eax, 1 ; syscall
0x00000000000e7e67 : test eax, eax ; jne 0xe7e99 ; mov eax, 0x48 ; syscall
0x00000000000e8178 : test eax, eax ; jne 0xe8199 ; mov eax, 3 ; syscall
0x00000000000e82e8 : test eax, eax ; jne 0xe8309 ; mov eax, 0x55 ; syscall
0x00000000000ebbf8 : test eax, eax ; jne 0xebc19 ; mov eax, 7 ; syscall
0x00000000000ec1fb : test eax, eax ; jne 0xec219 ; mov eax, 0x146 ; syscall
0x00000000000ec3db : test eax, eax ; jne 0xec3f9 ; mov eax, 0x115 ; syscall
0x00000000000ec47b : test eax, eax ; jne 0xec499 ; mov eax, 0x11d ; syscall
0x00000000000ed1d8 : test eax, eax ; jne 0xed1f9 ; mov eax, 0x13 ; syscall
0x00000000000ed278 : test eax, eax ; jne 0xed299 ; mov eax, 0x14 ; syscall
0x00000000000ed736 : test eax, eax ; jne 0xed759 ; mov eax, 0x71 ; syscall
0x00000000000ed7b6 : test eax, eax ; jne 0xed7d9 ; mov eax, 0x72 ; syscall
0x00000000000edb6b : test eax, eax ; jne 0xedb89 ; mov eax, 0x17 ; syscall
0x00000000000edd78 : test eax, eax ; jne 0xedd99 ; mov eax, 0x4a ; syscall
0x00000000000ede28 : test eax, eax ; jne 0xede49 ; mov eax, 0x4b ; syscall
0x00000000000f0c08 : test eax, eax ; jne 0xf0c29 ; mov eax, 0x1a ; syscall
0x00000000000f5e5b : test eax, eax ; jne 0xf5e79 ; mov eax, 0xe8 ; syscall
0x00000000000f5efb : test eax, eax ; jne 0xf5f19 ; mov eax, 0x114 ; syscall
0x00000000000f5fab : test eax, eax ; jne 0xf5fc9 ; mov eax, 0x116 ; syscall
0x00000000000f605b : test eax, eax ; jne 0xf6079 ; mov eax, 0x113 ; syscall
0x00000000000f6118 : test eax, eax ; jne 0xf6139 ; mov eax, 0x130 ; syscall
0x00000000000f6ab8 : test eax, eax ; jne 0xf6ad9 ; mov eax, 0x2b ; syscall
0x00000000000f6b88 : test eax, eax ; jne 0xf6ba9 ; mov eax, 0x2a ; syscall
0x00000000000f6dab : test eax, eax ; jne 0xf6dc9 ; mov eax, 0x2d ; syscall
0x00000000000f6e68 : test eax, eax ; jne 0xf6e89 ; mov eax, 0x2f ; syscall
0x00000000000f6fc8 : test eax, eax ; jne 0xf6fe9 ; mov eax, 0x2e ; syscall
0x00000000000f706b : test eax, eax ; jne 0xf7089 ; mov eax, 0x2c ; syscall
0x00000000000f73fb : test eax, eax ; jne 0xf7419 ; mov eax, 0x120 ; syscall
0x00000000000f749b : test eax, eax ; jne 0xf74b9 ; mov eax, 0x12b ; syscall
0x00000000000f754b : test eax, eax ; jne 0xf7569 ; mov eax, 0x133 ; syscall
0x00000000000f76ab : test eax, eax ; jne 0xf76c9 ; mov eax, 0x45 ; syscall
0x00000000000f774b : test eax, eax ; jne 0xf7769 ; mov eax, 0x46 ; syscall
0x000000000007601b : test eax, eax ; js 0x7602d ; ret
0x000000000007f8e6 : test eax, eax ; js 0x7f8f5 ; ret
0x00000000001174f6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000000e8e1b : test eax, eax ; sete dl ; jmp 0xe8e5b
0x000000000006f40c : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000061bf4 : test eax, edi ; idiv bh ; jmp qword ptr [rax]
0x000000000016360b : test ebp, ebp ; jne 0x1635f8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000083cfe : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000091980 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000012607c : test ebx, ebx ; jle 0x1260be ; call 0x122ab6
0x0000000000126005 : test ebx, ebx ; jne 0x126076 ; call 0x122ab6
0x000000000012d13c : test ebx, ebx ; jne 0x12d14d ; pop rbx ; ret
0x000000000012d16c : test ebx, ebx ; jne 0x12d17d ; pop rbx ; ret
0x000000000011480a : test ebx, ebx ; mov rdi, rbx ; jne 0x114808 ; pop rbx ; ret
0x0000000000163877 : test ebx, ebx ; mov rdi, rbx ; jne 0x163870 ; pop rbx ; ret
0x0000000000178d7d : test ebx, edi ; jmp rax
0x00000000000d5267 : test ebx, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091e58 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000015cb42 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000163481 : test ecx, ecx ; je 0x16348b ; call rcx
0x000000000002c5b6 : test ecx, ecx ; je 0x2c5c0 ; call rcx
0x000000000003684b : test ecx, ecx ; je 0x36845 ; ret
0x00000000000a21ab : test ecx, ecx ; jne 0xa21a5 ; ret
0x00000000000a227e : test ecx, ecx ; jne 0xa2279 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000e7ca9 : test ecx, ecx ; jne 0xe7ce1 ; mov eax, 0x10d ; syscall
0x00000000000d755a : test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000162fd5 : test edi, edi ; jne 0x16304c ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001050d2 : test edi, edi ; js 0x1050e9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000004b1dd : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4b1d1 ; mov rax, rsi ; ret
0x000000000005d4e4 : test edi, esp ; retf 0xffff
0x0000000000035208 : test edx, 0x7fffff ; je 0x351fa ; ret
0x0000000000119ef0 : test edx, edx ; je 0x119f00 ; mov rdi, rbp ; call rdx
0x000000000007803a : test edx, edx ; je 0x78051 ; mov eax, 0xffffffff ; ret
0x000000000007841a : test edx, edx ; je 0x78431 ; mov eax, 0xffffffff ; ret
0x000000000007e646 : test edx, edx ; je 0x7e658 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000097492 : test edx, edx ; je 0x974a1 ; bsf eax, edx ; ret
0x000000000009753b : test edx, edx ; je 0x97558 ; bsf rax, rdx ; ret
0x000000000009770a : test edx, edx ; je 0x97738 ; bsf rax, rdx ; ret
0x0000000000125f00 : test edx, edx ; jne 0x125f19 ; mov eax, 1 ; ret
0x0000000000125f40 : test edx, edx ; jne 0x125f59 ; mov eax, 1 ; ret
0x0000000000163e39 : test edx, edx ; jne 0x163e45 ; ret
0x0000000000051d54 : test edx, edx ; jne 0x51d67 ; sub dword ptr [rdi], 1 ; ret
0x000000000007264f : test edx, edx ; jne 0x72645 ; ret
0x000000000007afb1 : test edx, edx ; jne 0x7afc6 ; xor eax, eax ; ret
0x000000000007bc4f : test edx, edx ; jne 0x7bc45 ; ret
0x0000000000086bf9 : test edx, edx ; jne 0x86bf5 ; ret
0x000000000008ba91 : test edx, edx ; jne 0x8ba86 ; or byte ptr [rdi], sil ; ret
0x00000000000a1701 : test edx, edx ; jne 0xa1710 ; mov rax, rdi ; ret
0x00000000000a34ca : test edx, edx ; jne 0xa34c5 ; ret
0x00000000000cd658 : test edx, edx ; jne 0xcd648 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f61b0 : test edx, edx ; jne 0xf61d1 ; mov eax, 0x95 ; syscall
0x00000000000a282e : test edx, edx ; sete al ; ret
0x000000000017948d : test edx, esi ; dec dword ptr [rsi] ; test edx, esi ; jmp qword ptr [rbx]
0x0000000000179491 : test edx, esi ; jmp qword ptr [rbx]
0x0000000000196925 : test esi, ebp ; jmp qword ptr [rsi]
0x00000000000582e8 : test esi, ebx ; retf
0x000000000015cb35 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000000ef341 : test esi, esi ; je 0xef381 ; mov eax, 0x105 ; syscall
0x0000000000097601 : test esi, esi ; jne 0x97610 ; xor rax, rax ; ret
0x00000000000b31e1 : test esi, esi ; jne 0xb31f0 ; xor rax, rax ; ret
0x00000000000b4621 : test esi, esi ; jne 0xb4661 ; mov eax, 0x60 ; syscall
0x0000000000089fa9 : test esi, esi ; mov rax, rdx ; cmovne rax, rdi ; ret
0x00000000000cca2c : test esp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x000000000015cb4f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000061ded : test esp, edi ; idiv bh ; call qword ptr [rax]
0x00000000000f59d3 : test esp, esp ; je 0xf59ea ; mov rdi, rbp ; call r12
0x0000000000086bb7 : test esp, esp ; jne 0x86bdd ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2ccc : test esp, esp ; jne 0xf2d11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019cd14 : test qword ptr [rax], -0xd6fd800 ; jmp qword ptr [rcx]
0x0000000000036735 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000008e0f1 : test r10b, r9b ; jne 0x8e0d6 ; ret
0x00000000000f59d2 : test r12, r12 ; je 0xf59eb ; mov rdi, rbp ; call r12
0x0000000000086bb6 : test r12, r12 ; jne 0x86bde ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f2ccb : test r12d, r12d ; jne 0xf2d12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014ac42 : test r8d, r8d ; je 0x14ac50 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000014bc27 : test r8d, r8d ; je 0x14bc35 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000a21c0 : test r8d, r8d ; jne 0xa2196 ; ret
0x000000000008e248 : test r9b, dil ; jne 0x8e22e ; ret
0x0000000000103ec9 : test rax, rax ; je 0x103ee1 ; add rsp, 8 ; ret
0x000000000010bfa3 : test rax, rax ; je 0x10bfb5 ; mov rdi, rbx ; call rax
0x0000000000114893 : test rax, rax ; je 0x1148a9 ; add rsp, 8 ; ret
0x0000000000117e9f : test rax, rax ; je 0x117eb1 ; mov rdi, rbx ; call rax
0x0000000000118526 : test rax, rax ; je 0x118538 ; mov rdi, rbp ; call rax
0x0000000000119357 : test rax, rax ; je 0x119369 ; mov rdi, rbp ; call rax
0x000000000011e60d : test rax, rax ; je 0x11e61f ; mov rdi, r12 ; call rax
0x000000000011e7d8 : test rax, rax ; je 0x11e7ec ; lea rdi, [rbp + 0x10] ; call rax
0x000000000011f889 : test rax, rax ; je 0x11f89b ; mov rdi, rbx ; call rax
0x000000000011f92f : test rax, rax ; je 0x11f941 ; mov rdi, r13 ; call rax
0x000000000012040c : test rax, rax ; je 0x120420 ; lea rdi, [rbx + 0x68] ; call rax
0x0000000000120ad3 : test rax, rax ; je 0x120ae5 ; mov rdi, r12 ; call rax
0x0000000000120e1c : test rax, rax ; je 0x120e30 ; lea rdi, [rbx + 0x58] ; call rax
0x00000000001229bc : test rax, rax ; je 0x1229ce ; pop rbx ; ret
0x0000000000123548 : test rax, rax ; je 0x12355c ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000123b81 : test rax, rax ; je 0x123b95 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000163580 : test rax, rax ; je 0x163591 ; call rax
0x000000000002c428 : test rax, rax ; je 0x2c434 ; call rax
0x000000000002d3f8 : test rax, rax ; je 0x2d404 ; call rax
0x000000000007923c : test rax, rax ; je 0x7924e ; pop rbx ; ret
0x000000000007ea5b : test rax, rax ; je 0x7ea67 ; call rax
0x000000000007eb01 : test rax, rax ; je 0x7eada ; call rax
0x000000000007f884 : test rax, rax ; je 0x7f890 ; call rax
0x000000000008760f : test rax, rax ; je 0x87629 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf869 : test rax, rax ; je 0xbf8a5 ; call rax
0x00000000000bf8d9 : test rax, rax ; je 0xbf915 ; call rax
0x00000000000e6eba : test rax, rax ; je 0xe6ef7 ; xor edx, edx ; call rax
0x00000000000ed99b : test rax, rax ; je 0xed9a8 ; ret
0x00000000000ef480 : test rax, rax ; je 0xef491 ; mov qword ptr [rax], rdx ; ret
0x00000000000f2d84 : test rax, rax ; je 0xf2dd5 ; call rax
0x00000000000f2f10 : test rax, rax ; je 0xf2fc9 ; call rax
0x00000000000f5b71 : test rax, rax ; jl 0xf5b90 ; je 0xf5b80 ; ret
0x0000000000115727 : test rax, rax ; jne 0x115736 ; ret
0x00000000001234c4 : test rax, rax ; jne 0x1234b6 ; pop rbx ; ret
0x000000000007c80b : test rax, rax ; jne 0x7c806 ; ret
0x000000000007d583 : test rax, rax ; jne 0x7d57e ; ret
0x0000000000086b3e : test rax, rax ; jne 0x86b37 ; xor eax, eax ; ret
0x00000000000e8e1a : test rax, rax ; sete dl ; jmp 0xe8e5c
0x000000000016360a : test rbp, rbp ; jne 0x1635f9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d13b : test rbx, rbx ; jne 0x12d14e ; pop rbx ; ret
0x000000000012d16b : test rbx, rbx ; jne 0x12d17e ; pop rbx ; ret
0x0000000000114809 : test rbx, rbx ; mov rdi, rbx ; jne 0x114809 ; pop rbx ; ret
0x0000000000163876 : test rbx, rbx ; mov rdi, rbx ; jne 0x163871 ; pop rbx ; ret
0x0000000000163480 : test rcx, rcx ; je 0x16348c ; call rcx
0x000000000002c5b5 : test rcx, rcx ; je 0x2c5c1 ; call rcx
0x0000000000119eef : test rdx, rdx ; je 0x119f01 ; mov rdi, rbp ; call rdx
0x000000000009753a : test rdx, rdx ; je 0x97559 ; bsf rax, rdx ; ret
0x0000000000097709 : test rdx, rdx ; je 0x97739 ; bsf rax, rdx ; ret
0x0000000000163e38 : test rdx, rdx ; jne 0x163e46 ; ret
0x000000000007264e : test rdx, rdx ; jne 0x72646 ; ret
0x000000000007afb0 : test rdx, rdx ; jne 0x7afc7 ; xor eax, eax ; ret
0x000000000007bc4e : test rdx, rdx ; jne 0x7bc46 ; ret
0x0000000000086bf8 : test rdx, rdx ; jne 0x86bf6 ; ret
0x00000000000a1700 : test rdx, rdx ; jne 0xa1711 ; mov rax, rdi ; ret
0x00000000000cd657 : test rdx, rdx ; jne 0xcd649 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196924 : test rsi, r13 ; jmp qword ptr [rsi]
0x0000000000097600 : test rsi, rsi ; jne 0x97611 ; xor rax, rax ; ret
0x00000000000b31e0 : test rsi, rsi ; jne 0xb31f1 ; xor rax, rax ; ret
0x00000000000f1e8f : test sil, 1 ; jne 0xf1ea7 ; ret
0x000000000008deaf : test sil, sil ; jne 0x8dea8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002c6e : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007b3c3 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000015ba6a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001576cc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000015514e : vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x000000000015c145 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000157bb1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000015c149 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000157858 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x00000000001578ff : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000015ba56 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000015ba3d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000156786 : vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vzeroupper ; ret
0x000000000015516e : vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x0000000000157615 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000157b1b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000001577a3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000157775 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000157a92 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000015c13b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000015c13f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000015c622 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000015c6e8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000015c8f1 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x000000000015c154 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000015c158 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000015bd73 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000015bc0c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000015ba0e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000015b9d2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000015bed5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000015c2f8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000015c25b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000015c0fa : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000151141 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000041cb4 : vpsrld ymm1, ymm15, xmmword ptr [rax + 0x63] ; retf 0x447e
0x000000000014fbe0 : vzeroupper ; ret
0x0000000000150750 : vzeroupper ; xor eax, eax ; ret
0x00000000000b5431 : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000025f6d : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894d
0x0000000000029d81 : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb7eb
0x00000000001a71a1 : wait ; add dword ptr [rax], eax ; cld ; mov dh, dh ; jmp qword ptr [rdx]
0x0000000000178da5 : wait ; int1 ; call rax
0x0000000000104442 : wait ; mov rax, rdi ; ret
0x0000000000188759 : wait ; out dx, al ; jmp rax
0x0000000000055b01 : wait ; retf
0x00000000000fc3a1 : wait ; retf 0x2b
0x00000000000db454 : wait ; sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000a091d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a099f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a0aa1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002cc8 : xabort -0xd ; ret
0x00000000001180c7 : xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x0000000000002cc4 : xbegin 0xfffffffff8c6f0c4 ; ret
0x000000000014aa4f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b273 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014cbbf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a63f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000014b363 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b183 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a14b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a95b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015203c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000015185c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000151c4c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015146c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153f6d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000152a71 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000153c71 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000153371 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000153671 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000152d69 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000a1892 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000014bbcb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000014d71f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f0168 : xchg byte ptr [rax + rax], ch ; mov eax, 0xca ; syscall
0x0000000000088583 : xchg byte ptr [rax + rax], cl ; je 0x88547 ; ret
0x000000000014ceff : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014a3cf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014c6df : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014a70f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000014b723 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014aa2b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f6811 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000015160b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aafb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d23f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aeb3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000014ca1f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c1ff : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014d3df : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014a8af : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b903 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b093 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014a09f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000000c5164 : xchg byte ptr [rbx], cl ; add byte ptr [rax + 0x142], bh ; syscall
0x0000000000186abc : xchg byte ptr [rbx], dh ; sti ; call qword ptr [rsi]
0x000000000014bae3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000aba98 : xchg byte ptr [rcx + rbx + 0x31], dh ; ror byte ptr [rdi], 0x1f ; add byte ptr [rcx], al ; retf
0x000000000018a835 : xchg byte ptr [rcx], al ; add byte ptr [rbp + rdi*8 - 0xb], bh ; call qword ptr [rax]
0x00000000000f06a6 : xchg byte ptr [rcx], bl ; dec dword ptr [rax - 0x77] ; ret
0x000000000014a49f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000175195 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000151afc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015131c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015242c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a97f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014b9f3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a16f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014c53f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000186fb4 : xchg byte ptr [rdx - 5], bl ; call qword ptr [rsi]
0x0000000000197b4b : xchg byte ptr [rdx], al ; add cl, byte ptr [rsi + rcx + 8] ; ret
0x000000000014a211 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b335 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b425 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b245 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000102fb6 : xchg byte ptr [rsi + 5], al ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000014a56f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000004ecda : xchg byte ptr [rsi + rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000153016 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c675 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d375 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153f16 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153616 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153316 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014ce95 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001519fd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000152d0e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015232d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a7df : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014afa3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000014eecf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ecef : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014f6c7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c8dbf : xchg ch, dh ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000014e5e7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f4e7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013b7ef : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000ac0c2 : xchg cl, ch ; ret
0x00000000000cc90c : xchg cl, ch ; ret 0xfffc
0x000000000014d6b5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c9b5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014c4d5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d1d5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000151b4d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015136d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a7005 : xchg dh, dh ; call qword ptr [rdi]
0x000000000014a235 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010eae9 : xchg dl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000014b155 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014af75 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b065 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ae85 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000002dad : xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x000000000019ca05 : xchg dl, dh ; jmp qword ptr [rcx]
0x000000000019c9d5 : xchg dl, dh ; jmp qword ptr [rdx]
0x00000000000530a0 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000045d1c : xchg dword ptr [rax + rax - 0x76bc0000], ebx ; retf 0x8341
0x00000000000f014d : xchg dword ptr [rax + rax], ebp ; cmp eax, 1 ; jg 0xf0160 ; ret
0x0000000000063a9e : xchg dword ptr [rax - 0x76ffffdd], esi ; ret 0x349
0x0000000000069d10 : xchg dword ptr [rax - 0x76ffffe0], edi ; ret 0x349
0x00000000000f5e21 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000155a8c : xchg dword ptr [rax], eax ; vzeroupper ; ret
0x00000000001b0cac : xchg dword ptr [rax], ecx ; add byte ptr [rax], al ; ret 1
0x0000000000175198 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000174d1f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000006b141 : xchg dword ptr [rbp - 0x76fffff4], ebp ; ret 0x349
0x00000000000a21bf : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005e44b : xchg dword ptr [rbp - 0x7cfffff3], ebx ; ret 0xbf08
0x000000000005f3fa : xchg dword ptr [rbx - 0x77000000], edx ; ret 0x348
0x000000000005e379 : xchg dword ptr [rbx - 0x7cffffe7], ebp ; ret 0xbf08
0x000000000006758d : xchg dword ptr [rbx], edi ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015c185 : xchg dword ptr [rcx + 0x39480025], edx ; retf 0x870f
0x0000000000173f8c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000e6c11 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000005ac1c : xchg dword ptr [rcx - 0x76ffffba], eax ; retf 0x348
0x00000000000652dd : xchg dword ptr [rcx - 0x76fffff3], eax ; ret 0x349
0x00000000000561e5 : xchg dword ptr [rcx - 0x7cffffcc], edx ; ret 0xbf08
0x000000000005742f : xchg dword ptr [rcx - 0x7cffffe4], ecx ; ret 0xbf08
0x0000000000088439 : xchg dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000a98c8 : xchg dword ptr [rdi + rax + 0x39480000], ebp ; ret 0xd67d
0x00000000000a4a78 : xchg dword ptr [rdi + rax + 0x39480000], edi ; ret 0xd67d
0x000000000006ae8c : xchg dword ptr [rdi - 0x76fffff2], esp ; ret 0x349
0x00000000000652b4 : xchg dword ptr [rdi - 0x76fffff3], edx ; ret 0x349
0x000000000005f740 : xchg dword ptr [rdi - 0x76ffffff], edi ; ret 0x348
0x00000000000575b9 : xchg dword ptr [rdi - 0x7cffffdc], ebx ; ret 0xbf08
0x0000000000057779 : xchg dword ptr [rdi - 0x7cffffe1], edi ; ret 0xbe08
0x0000000000057ff5 : xchg dword ptr [rdi - 0x7cffffee], edi ; ret 0xbf08
0x000000000006a400 : xchg dword ptr [rdx - 0x76ffffe7], edx ; ret 0x349
0x000000000005d1c5 : xchg dword ptr [rdx - 0x7cffffd9], ecx ; ret 0xbf08
0x00000000001ae7dc : xchg dword ptr [rip + 0x2040000], eax ; add byte ptr [rax], al ; retf 8
0x0000000000053650 : xchg dword ptr [rip - 0x76ffff9d], edi ; retf 0x348
0x0000000000056aaa : xchg dword ptr [rip - 0x7cffffd3], ebx ; ret 0xbf08
0x000000000005e211 : xchg dword ptr [rip - 0x7cffffea], edx ; ret 0xbf08
0x00000000000643cb : xchg dword ptr [rsi - 0x76ffffe5], ebx ; ret 0x349
0x000000000011b3e5 : xchg dword ptr [rsi - 0x77000000], esp ; retf 0x894c
0x000000000005edb6 : xchg dword ptr [rsi - 0x7cffffe9], eax ; ret 0xbf08
0x000000000005eab4 : xchg dword ptr [rsi - 0x7cffffee], esi ; ret 0xbf08
0x000000000008c117 : xchg dword ptr [rsi], ebp ; add al, byte ptr [rax] ; add byte ptr [rbp + 1], al ; retf
0x000000000017412b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000022f80 : xchg eax, ebp ; adc byte ptr [rax], al ; mov rdi, rbx ; call r15
0x000000000014e228 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000024eb8 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004f477 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d1a77 : xchg eax, ebp ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x0000000000087cc6 : xchg eax, ebp ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000001a6ad5 : xchg eax, ebp ; add dword ptr [rax], eax ; or byte ptr [rdx - 0xa], bl ; jmp qword ptr [rsi]
0x0000000000174469 : xchg eax, ebp ; jge 0x17444c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000008e246 : xchg eax, ebp ; mov dword ptr [rcx - 0x7c], 0xf3db75f9 ; ret
0x000000000005662e : xchg eax, ebp ; mov eax, 0x1fffff9 ; retf
0x0000000000001ee7 : xchg eax, ebp ; mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x0000000000103326 : xchg eax, ebp ; mov rax, rdi ; ret
0x00000000001053ca : xchg eax, ebp ; mov rdi, r13 ; call 0x2167e
0x00000000001121eb : xchg eax, ebp ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000198f9d : xchg eax, ebp ; out dx, eax ; call qword ptr [rax]
0x0000000000198fb1 : xchg eax, ebp ; out dx, eax ; jmp qword ptr [rsi]
0x000000000002f975 : xchg eax, ebp ; push 0xfffffff ; retf 0xc089
0x000000000000212f : xchg eax, ebp ; ret
0x0000000000162c00 : xchg eax, ebp ; ret 0x145
0x0000000000113bde : xchg eax, ebp ; ret 0x233c
0x0000000000113bf3 : xchg eax, ebp ; ret 0x2c3c
0x000000000008e0e8 : xchg eax, ebp ; ret 0x3941
0x00000000000ff755 : xchg eax, ebp ; ret 0x3945
0x00000000000e856c : xchg eax, ebp ; ret 0x3948
0x00000000000e925d : xchg eax, ebp ; ret 0x5ee9
0x00000000000456fb : xchg eax, ebp ; ret 0x8348
0x00000000000efb7c : xchg eax, ebp ; ret 0x8440
0x00000000000d5e9e : xchg eax, ebp ; ret 0x8b48
0x000000000004812f : xchg eax, ebp ; ret 0x941
0x00000000000480e6 : xchg eax, ebp ; ret 0xb60f
0x00000000000efb8b : xchg eax, ebp ; ret 0xc084
0x000000000003c01c : xchg eax, ebp ; ret 0xc148
0x0000000000160f1d : xchg eax, ebp ; ret 0xc149
0x0000000000037559 : xchg eax, ebp ; ret 0xd021
0x000000000011380f : xchg eax, ebp ; ret 0xd184
0x00000000000d1fff : xchg eax, ebp ; ret 0xd201
0x00000000000e11c0 : xchg eax, ebp ; ret 0xd320
0x000000000016124c : xchg eax, ebp ; ret 0xd349
0x00000000000369ca : xchg eax, ebp ; ret 0xd521
0x0000000000161540 : xchg eax, ebp ; ret 0xf45
0x0000000000003c2d : xchg eax, ebp ; retf 0x10bf
0x0000000000174d22 : xchg eax, ebp ; retf 0x33e6
0x00000000000d4b27 : xchg eax, ebp ; retf 0xfff4
0x0000000000056247 : xchg eax, ebp ; retf 0xffff
0x00000000000d1783 : xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000008e0ef : xchg eax, ebp ; rol dword ptr [rbp - 0x7c], 0xca ; jne 0x8e0d8 ; ret
0x00000000000ee622 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000008150a : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xcb ; add dword ptr [rax - 0x7d], ecx ; retf 0xf01
0x0000000000118d3d : xchg eax, ebp ; ror byte ptr [rcx - 0x17fbdbbc], 0x38 ; ret
0x0000000000051b6a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000de1ae : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000121db1 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x00000000000733dd : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000002c6d : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000017617c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000011ce75 : xchg eax, ebx ; adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x000000000007c3e3 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000069c74 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000196921 : xchg eax, ebx ; add byte ptr [rax], al ; test rsi, r13 ; jmp qword ptr [rsi]
0x00000000001a68cd : xchg eax, ebx ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xa], dl ; call qword ptr [rax]
0x0000000000102f9b : xchg eax, ebx ; add eax, 0x450f4800 ; ret 0xfc3
0x00000000001594c0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000000d6397 : xchg eax, ebx ; add rdx, rbx ; jmp rdx
0x0000000000003b01 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000176b0c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000019b1a5 : xchg eax, ebx ; int1 ; call rcx
0x000000000019b175 : xchg eax, ebx ; int1 ; jmp qword ptr [rax]
0x000000000009c59c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000132022 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000176023 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x175ffd
0x000000000011f069 : xchg eax, ebx ; nop word ptr [rax + rax] ; ret
0x0000000000189159 : xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x00000000000e51e9 : xchg eax, ebx ; ret
0x000000000015f4c9 : xchg eax, ebx ; ret 0x2045
0x0000000000001eee : xchg eax, ebx ; retf
0x00000000000fc3b1 : xchg eax, ebx ; retf 0x2b
0x0000000000100c49 : xchg eax, ebx ; retf 0xffff
0x000000000006fa79 : xchg eax, ebx ; retf 7
0x0000000000002e32 : xchg eax, ebx ; sbb al, 0x89 ; and byte ptr [rax - 0xc0713e4], bh ; ret
0x0000000000003c26 : xchg eax, ebx ; sbb al, 0xb ; push rbp ; jg 0x3c9d ; xchg eax, ebp ; retf 0x10bf
0x00000000000d18e4 : xchg eax, ebx ; test al, 1 ; je 0xd1880 ; xor eax, eax ; pop rbx ; ret
0x000000000011a2ae : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000160fbb : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000000bcd3b : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000187f2d : xchg eax, ecx ; add byte ptr [rax], al ; and r13b, bl ; jmp rax
0x00000000001967bd : xchg eax, ecx ; add byte ptr [rax], al ; mov al, 0x84 ; out dx, al ; jmp qword ptr [rsi]
0x0000000000187f3d : xchg eax, ecx ; add byte ptr [rax], al ; pushfq ; and ch, bl ; call qword ptr [rax]
0x00000000001a67c1 : xchg eax, ecx ; add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; idiv r15b ; ret
0x0000000000188519 : xchg eax, ecx ; in eax, dx ; call qword ptr [rax]
0x0000000000189e99 : xchg eax, ecx ; jmp qword ptr [rax]
0x000000000006df3f : xchg eax, ecx ; loopne 0x6df48 ; add byte ptr [rax], al ; ret
0x000000000014d7c1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000d3ce8 : xchg eax, ecx ; mov qword ptr [rsp + 0x38], rdi ; add rax, rcx ; jmp rax
0x000000000010b73b : xchg eax, ecx ; ret 0xfffd
0x000000000010ca4b : xchg eax, ecx ; ret 1
0x00000000001864e0 : xchg eax, ecx ; std ; jmp qword ptr [rcx]
0x000000000014beef : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000e6bf8 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000004df66 : xchg eax, edi ; add byte ptr ss:[rax + 0xca], bh ; syscall
0x0000000000087a16 : xchg eax, edi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000003366e : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000001139a9 : xchg eax, edi ; cmc ; dec dword ptr [rax - 0x75] ; jl 0x1139dd ; or al, ch ; ret 0xf0dc
0x00000000001744d5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1744a3 ; mov ecx, 0x5b92ac50 ; retf
0x000000000012a9fa : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000d26e4 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000003bffe : xchg eax, edi ; ret
0x000000000011ca97 : xchg eax, edi ; ret 0x3944
0x0000000000114fb6 : xchg eax, edi ; ret 0x8440
0x000000000011caa6 : xchg eax, edi ; ret 0xd284
0x00000000000d6055 : xchg eax, edi ; ret 0xda80
0x00000000000d2505 : xchg eax, edi ; retf
0x0000000000001edd : xchg eax, edi ; retf 0x20f4
0x0000000000174e3d : xchg eax, edi ; retf 0xe152
0x00000000000f8676 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000017617b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000001745d8 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000000358eb : xchg eax, edx ; adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000088510 : xchg eax, edx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000042724 : xchg eax, edx ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000000b191d : xchg eax, edx ; add eax, dword ptr [rax] ; add al, ch ; retf 0xf7d0
0x000000000017abd9 : xchg eax, edx ; cmc ; call qword ptr [rsi]
0x000000000017ab95 : xchg eax, edx ; cmc ; inc dword ptr [rdx - 0x54] ; cmc ; call qword ptr [rdi]
0x0000000000175e9d : xchg eax, edx ; jae 0x175e7a ; push rsi ; pop rdx ; je 0x175e6f ; ret 0xacfc
0x0000000000045be8 : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002f53 : xchg eax, edx ; or cl, bh ; ret
0x00000000001744dc : xchg eax, edx ; pop rbx ; retf
0x000000000018703c : xchg eax, edx ; pop rcx ; sti ; jmp qword ptr [rdx]
0x0000000000056ea8 : xchg eax, edx ; ret
0x0000000000046aa7 : xchg eax, edx ; ret 0x8949
0x0000000000160ee2 : xchg eax, edx ; ret 0xc031
0x0000000000087153 : xchg eax, edx ; ret 0xf083
0x000000000014f9e5 : xchg eax, edx ; ret 0xf40
0x0000000000173f8f : xchg eax, edx ; ret 0xf869
0x000000000014f8cd : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000010d66c : xchg eax, edx ; sub al, byte ptr [rax] ; ret
0x00000000000dbd6b : xchg eax, edx ; sub eax, 0x3d8d4800 ; retf
0x000000000014ac47 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000186b44 : xchg eax, edx ; xor bh, bl ; jmp qword ptr [rdx]
0x00000000001597c0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000138db3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000196cb9 : xchg eax, esi ; add byte ptr [rax], al ; in al, 0x9c ; out dx, al ; call qword ptr [rax]
0x0000000000028b46 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; shr bl, 1 ; ret 0x4890
0x00000000001a6c0d : xchg eax, esi ; add dword ptr [rax], eax ; shl byte ptr [rax - 0xa], 0xff ; retf 0
0x00000000000a1924 : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000045cda : xchg eax, esi ; add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x00000000000529ff : xchg eax, esi ; add rdx, rsi ; jmp rdx
0x000000000018c031 : xchg eax, esi ; clc ; call rsp
0x00000000000d7f1c : xchg eax, esi ; hlt ; call rcx
0x00000000000c0fee : xchg eax, esi ; jb 0xc1029 ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000176288 : xchg eax, esi ; jnp 0x1762d7 ; retf 0x99e0
0x000000000015987d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001597db : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000186fd8 : xchg eax, esi ; push rsi ; sti ; jmp qword ptr [rsi]
0x00000000000d18a9 : xchg eax, esi ; ret
0x000000000003199c : xchg eax, esi ; ret 0x14
0x00000000000874cb : xchg eax, esi ; ret 0x3145
0x0000000000110127 : xchg eax, esi ; ret 0x8341
0x00000000000ae7b2 : xchg eax, esi ; ret 0xc085
0x000000000017682c : xchg eax, esi ; ret 0xcd11
0x00000000000ae7f7 : xchg eax, esi ; ret 0xd284
0x0000000000087473 : xchg eax, esi ; ret 0xf631
0x000000000015982c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000002f0c : xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000018c829 : xchg eax, esi ; stc ; call rax
0x0000000000187545 : xchg eax, esi ; std ; call rax
0x00000000001990b5 : xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000003577b : xchg eax, esp ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000000000ac23b : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000019a340 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*8], bh ; add byte ptr [rax], cl ; ret
0x00000000000d0253 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; fld dword ptr [rbp + 0x39] ; retf
0x00000000001a1d5c : xchg eax, esp ; add dword ptr [r8], r8d ; mov al, 0xea ; hlt ; call qword ptr [rdi]
0x00000000001a595c : xchg eax, esp ; add dword ptr [rcx], 0 ; jo 0x1a595c ; cmc ; call qword ptr [rdi]
0x0000000000102edb : xchg eax, esp ; add eax, 0x450f4800 ; ret 0xfc3
0x000000000018932c : xchg eax, esp ; add eax, dword ptr [rcx] ; add byte ptr [rsi + rsi*8], bh ; out dx, eax ; call rax
0x000000000018cce4 : xchg eax, esp ; add r8b, byte ptr [r8] ; sub al, 0xf1 ; stc ; jmp rax
0x0000000000044157 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8940
0x00000000000d9d47 : xchg eax, esp ; and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003c5cd : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000449e8 : xchg eax, esp ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x000000000018c94c : xchg eax, esp ; cmp al, 2 ; add byte ptr [rax + rdi*4], ch ; stc ; jmp rax
0x000000000019b1e5 : xchg eax, esp ; int1 ; call rcx
0x0000000000002689 : xchg eax, esp ; jnp 0x26af ; retf
0x0000000000188864 : xchg eax, esp ; mov dword ptr [rax], 0xeeb5cc00 ; jmp rax
0x000000000010011a : xchg eax, esp ; mov dword ptr [rcx + 8], 0xf6df75f8 ; ret 0x7508
0x00000000000c6e3b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000014ee29 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019655c : xchg eax, esp ; pop qword ptr [rax] ; add al, dh ; jle 0x196558 ; jmp qword ptr [rbx]
0x00000000001a335c : xchg eax, esp ; pop rbp ; add dword ptr [rax], eax ; push rax ; cmp ebp, esi ; jmp qword ptr [rcx]
0x0000000000176a3f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1769d0 ; ret 0x48f
0x0000000000058501 : xchg eax, esp ; ret
0x000000000012d14e : xchg eax, esp ; ret 0x1389
0x00000000000de924 : xchg eax, esp ; ret 0x1589
0x00000000000e863b : xchg eax, esp ; ret 0x2044
0x00000000000a495e : xchg eax, esp ; ret 0x2948
0x00000000000af9c2 : xchg eax, esp ; ret 0x3145
0x00000000000e8e1e : xchg eax, esp ; ret 0x35eb
0x000000000008e19e : xchg eax, esp ; ret 0x3941
0x00000000001117cf : xchg eax, esp ; ret 0x3b44
0x000000000006d571 : xchg eax, esp ; ret 0x3b48
0x00000000000dec89 : xchg eax, esp ; ret 0x5408
0x0000000000044b10 : xchg eax, esp ; ret 0x540a
0x00000000000fdd17 : xchg eax, esp ; ret 0x5422
0x00000000000b4418 : xchg eax, esp ; ret 0x5438
0x00000000000eec1a : xchg eax, esp ; ret 0x5c3c
0x00000000000445d2 : xchg eax, esp ; ret 0x7c8b
0x00000000000eebe6 : xchg eax, esp ; ret 0x8040
0x00000000000d3406 : xchg eax, esp ; ret 0x8341
0x0000000000114b60 : xchg eax, esp ; ret 0x8349
0x0000000000112e77 : xchg eax, esp ; ret 0x841
0x00000000000c5136 : xchg eax, esp ; ret 0x8548
0x00000000000d4466 : xchg eax, esp ; ret 0x854d
0x00000000000ba100 : xchg eax, esp ; ret 0x8d4c
0x000000000002fe4b : xchg eax, esp ; ret 0xb60f
0x00000000000d7e69 : xchg eax, esp ; ret 0xc083
0x000000000014f8d0 : xchg eax, esp ; ret 0xc085
0x00000000000e8961 : xchg eax, esp ; ret 0xc221
0x00000000000e0ba9 : xchg eax, esp ; ret 0xc9e9
0x00000000000e8478 : xchg eax, esp ; ret 0xca21
0x00000000000ca3fb : xchg eax, esp ; ret 0xd008
0x00000000000ca3ee : xchg eax, esp ; ret 0xd009
0x00000000000d6798 : xchg eax, esp ; ret 0xd020
0x00000000001149e2 : xchg eax, esp ; ret 0xd021
0x0000000000044b1d : xchg eax, esp ; ret 0xd084
0x00000000000515de : xchg eax, esp ; ret 0xd089
0x0000000000162823 : xchg eax, esp ; ret 0xd231
0x0000000000021e02 : xchg eax, esp ; ret 0xd284
0x000000000008dfc3 : xchg eax, esp ; ret 0xd308
0x000000000005856e : xchg eax, esp ; ret 0xd309
0x0000000000044558 : xchg eax, esp ; ret 0xe0e9
0x0000000000044bb7 : xchg eax, esp ; ret 0xed85
0x0000000000162198 : xchg eax, esp ; ret 0xff31
0x00000000000fc398 : xchg eax, esp ; retf 0x2b
0x00000000000b6f7c : xchg eax, esp ; rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x00000000000e936f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000430b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000125dd9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000084eb2 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000001149dc : xchg eax, esp ; sar byte ptr [rcx], 0x4f ; add al, 0xf ; xchg eax, esp ; ret 0xd021
0x000000000019908c : xchg eax, esp ; sti ; call qword ptr [rax]
0x000000000018c6d4 : xchg eax, esp ; sub eax, 0x741c0002 ; stc ; jmp rax
0x0000000000174463 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x000000000018c794 : xchg eax, esp ; xor al, byte ptr [rdx] ; add ah, bh ; mov ecx, edi ; jmp rsp
0x0000000000001eed : xchg eax, r11d ; retf
0x0000000000101a9c : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000082fce : xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001044e5 : xchg ecx, edx ; stc ; dec dword ptr [rax + 0x21] ; retf 0x3948
0x0000000000128d11 : xchg edi, ebp ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x0000000000190449 : xchg edx, ebp ; call qword ptr [rcx]
0x000000000008d291 : xchg edx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000f1545 : xchg esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x0000000000188371 : xchg esp, ebp ; call rax
0x000000000004fd27 : xchg esp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000066c77 : xchg esp, esi ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000011ce74 : xchg rax, rbx ; adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x00000000000dbd6a : xchg rax, rdx ; sub eax, 0x3d8d4800 ; retf
0x000000000019ad45 : xlatb ; add byte ptr [rax], al ; fdiv dword ptr [rdi] ; cld ; jmp qword ptr [rbx]
0x000000000019acf1 : xlatb ; add byte ptr [rax], al ; pushfq ; insd dword ptr [rdi], dx ; int1 ; call qword ptr [rdx]
0x0000000000170fb9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000018b8c5 : xlatb ; add dword ptr [rax], eax ; pushfq ; test bh, dh ; call qword ptr [rax]
0x0000000000131ee9 : xlatb ; add r9, r11 ; jmp r9
0x00000000000ef6c3 : xlatb ; call 0x7c103
0x00000000000d0c9c : xlatb ; call 0xcd763
0x000000000012cf88 : xlatb ; call rsi
0x00000000001866fd : xlatb ; cli ; call rax
0x000000000018679d : xlatb ; cli ; jmp qword ptr [rax]
0x00000000001867bd : xlatb ; cli ; jmp rax
0x00000000000ff5a5 : xlatb ; cmovne eax, ecx ; ret
0x0000000000002e47 : xlatb ; cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x0000000000002767 : xlatb ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000008a975 : xlatb ; insb byte ptr [rdi], dx ; stc ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x0000000000178e51 : xlatb ; int1 ; inc eax ; fyl2x ; call qword ptr [rax]
0x00000000000ed0a2 : xlatb ; ja 0xed0d4 ; ret
0x00000000000a1318 : xlatb ; jb 0xa1323 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000003393d : xlatb ; jmp rdi
0x00000000000f3ae6 : xlatb ; jne 0xf3adf ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000175003 : xlatb ; jo 0x17507f ; mov ebp, 0xfb67d10d ; ret
0x000000000004b262 : xlatb ; mov byte ptr [rsi], al ; jne 0x4b248 ; mov rax, rsi ; ret
0x00000000000c50b1 : xlatb ; mov eax, esi ; syscall
0x00000000000c50c0 : xlatb ; mov eax, r8d ; syscall
0x00000000000023bc : xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x00000000000c1f95 : xlatb ; movsxd rbp, dword ptr [rdi] ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000008daad : xlatb ; movzx r8d, byte ptr [rbp - 0x50] ; mov rdx, rax ; jmp 0x8da41
0x0000000000174410 : xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000ee718 : xlatb ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000004df3d : xlatb ; ret
0x00000000001764a6 : xlatb ; ret 0x4e27
0x00000000000033cc : xlatb ; ret 0x5a51
0x0000000000097337 : xlatb ; ret 0x94c
0x000000000009187f : xlatb ; ret 0xc085
0x000000000008fd40 : xlatb ; ret 0xc148
0x0000000000150c84 : xlatb ; ret 0xe883
0x000000000009206b : xlatb ; ret 0xf188
0x00000000000974b4 : xlatb ; ret 0xf66
0x0000000000150e48 : xlatb ; ret 0xff2d
0x0000000000096f1d : xlatb ; retf
0x00000000000b3052 : xlatb ; retf 0x8548
0x0000000000174464 : xlatb ; retf 0xa1eb
0x0000000000097414 : xlatb ; retf 0xc148
0x000000000014fc8c : xlatb ; retf 0xc985
0x0000000000175392 : xlatb ; retf 0xdf7f
0x000000000008e9c0 : xlatb ; retf 0xead3
0x00000000000b2efc : xlatb ; retf 0xf66
0x00000000001544b5 : xlatb ; retf 0xfdc5
0x000000000005d4f5 : xlatb ; retf 0xffff
0x0000000000091c61 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000154515 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000091a43 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000091ee6 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x0000000000091f15 : xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x0000000000150792 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000154262 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000009ca0e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001554b7 : xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000015caf6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000091e84 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008fc26 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008fae6 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008f9a6 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008f866 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008f726 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008f5e6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008f4a6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008f366 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008f226 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008f0e6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008efa6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008ee66 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008ed26 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008ebe6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000008eaa6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000015caf2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000972d5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000972e6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000f5936 : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000bf824 : xlatb ; syscall
0x000000000012d0d8 : xlatb ; xor eax, eax ; ret
0x000000000009c048 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009bfde : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000001868d4 : xor ah, bh ; cli ; call qword ptr [rax]
0x000000000017bdec : xor ah, bl ; stc ; jmp qword ptr [rax]
0x000000000004b7fa : xor ah, byte ptr [rdx + 0xf660013] ; outsd dx, dword ptr [rsi] ; ret 0x19e8
0x0000000000002680 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2618 ; loop 0x2664 ; ret 0x943d
0x000000000019f20d : xor ah, dh ; jmp qword ptr [rax]
0x00000000001866f4 : xor ah, dl ; cli ; call qword ptr [rax]
0x00000000001ae3bc : xor al, 0 ; add byte ptr [rax], al ; retf
0x00000000000f6c21 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000661f5 : xor al, 0 ; call rax
0x000000000006d693 : xor al, 0 ; mov eax, 0xca ; syscall
0x0000000000173f8a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000018f6fc : xor al, 0x21 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x16], bl ; call qword ptr [rdx]
0x000000000010c562 : xor al, 0x24 ; mov rdi, r13 ; call r12
0x0000000000120faa : xor al, 0x24 ; mov rdi, rbp ; call rbx
0x00000000001635c1 : xor al, 0x25 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000116602 : xor al, 0x2a ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000cd6cc : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d0c98 : xor al, 0x38 ; mov rdi, rdx ; call 0xcd767
0x00000000000020a9 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000d1f60 : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd1f7f
0x00000000000d1f5f : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd1f80
0x00000000000d1f5e : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xd1f81
0x00000000000ec9f5 : xor al, 0x41 ; mov dword ptr [rax + 0x38], edx ; mov byte ptr [r8 + 0x23], cl ; ret
0x0000000000091f9b : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x0000000000191efc : xor al, 0x49 ; add byte ptr [rax], al ; adc dl, al ; jmp 0x191f08
0x000000000010b66b : xor al, 0x4c ; mov esp, dword ptr [rsp + 0x38] ; call 0xe8178
0x0000000000176026 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x0000000000030420 : xor al, 0x67 ; cmp byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000019640c : xor al, 0x7e ; out dx, al ; jmp qword ptr [rbx]
0x0000000000051bfb : xor al, 0x83 ; clc ; push qword ptr [rdi + rcx - 0xd] ; ret
0x000000000008d1d3 : xor al, 0x83 ; ret 0x4101
0x000000000002cf72 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000001a063c : xor al, 0x9e ; hlt ; jmp rsi
0x000000000006c6a3 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000017a56c : xor al, 0xc7 ; hlt ; inc eax ; hlt ; hlt ; jmp rdi
0x00000000001a15cc : xor al, 0xcc ; hlt ; jmp qword ptr [rcx]
0x00000000001aa2fc : xor al, 0xcd ; add dword ptr [rax], eax ; adc byte ptr [rbp - 9], al ; jmp rsi
0x000000000017516a : xor al, 0xd8 ; ret
0x000000000019ae4c : xor al, 0xdd ; sti ; jmp qword ptr [rbx]
0x00000000000e4901 : xor al, 0xe3 ; add r12, 1 ; call 0x213e8
0x00000000001a1f2c : xor al, 0xee ; hlt ; jmp qword ptr [rcx]
0x00000000001a586c : xor al, 0xf2 ; cmc ; call qword ptr [rbx]
0x000000000019f94c : xor al, 0xf5 ; clc ; call qword ptr [rax]
0x00000000001a2f8d : xor al, 0xf5 ; jmp qword ptr [rcx]
0x000000000019d0fc : xor al, 0xfb ; add byte ptr [rax], al ; push rax ; ret
0x0000000000186a75 : xor al, 0xfb ; call qword ptr [rax]
0x0000000000186b35 : xor al, 0xfb ; jmp rdx
0x00000000000b2ae8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f6931 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001ad9fc : xor al, 4 ; add al, byte ptr [rax] ; and byte ptr [rbx - 5], dl ; call qword ptr [rdx]
0x00000000001adfb4 : xor al, 9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000186880 : xor al, al ; cli ; inc dword ptr [rax - 0x2f00053f] ; ret 0xfffa
0x00000000000f593b : xor al, al ; or eax, edx ; ret
0x000000000000075d : xor al, byte ptr [rax + rcx*4 + 0x2000008a] ; add byte ptr [rdx], dl ; retf
0x00000000000f6cb1 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000007b2b1 : xor al, byte ptr [rax] ; add cl, ch ; ret 0xfffe
0x000000000008689e : xor al, byte ptr [rax] ; call qword ptr [rax]
0x00000000000e7345 : xor al, byte ptr [rbp + 0x5b0675c0] ; pop rbp ; pop r12 ; ret
0x00000000000edea1 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000018c795 : xor al, byte ptr [rdx] ; add ah, bh ; mov ecx, edi ; jmp rsp
0x00000000001070a7 : xor al, ch ; retf
0x0000000000074ad0 : xor al, ch ; retf 0xd
0x0000000000199295 : xor al, dh ; jmp qword ptr [rbx]
0x00000000000eba88 : xor ax, ax ; ret
0x00000000001a53f0 : xor bh, ah ; cmc ; call rcx
0x0000000000187441 : xor bh, bl ; call rax
0x0000000000186b45 : xor bh, bl ; jmp qword ptr [rdx]
0x0000000000186a89 : xor bh, bl ; jmp rax
0x000000000017d2a5 : xor bh, dl ; dec esp ; xor edx, edi ; jmp rsp
0x00000000000052e8 : xor bl, ah ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000199770 : xor bl, ah ; sti ; call qword ptr [rbx]
0x0000000000091acc : xor bl, al ; nop ; xor eax, eax ; ret
0x00000000000023bf : xor bl, al ; retf 0x23c4
0x0000000000186add : xor bl, bh ; call qword ptr [rsi + 0x26fffb2f]
0x00000000001873fd : xor bl, bh ; call rax
0x0000000000186c19 : xor bl, bh ; call rsp
0x0000000000186c15 : xor bl, bh ; inc dword ptr [rax + rsi - 5] ; call rsp
0x0000000000186a99 : xor bl, bh ; jmp qword ptr [rax]
0x000000000007599f : xor bl, byte ptr [rbx + 0x44] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000007ef36 : xor bl, dh ; ret
0x0000000000186c18 : xor bl, r15b ; call rsp
0x0000000000115c98 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000b2bdc : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000009199d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000000e5f93 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000074852 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000000a17d4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000d6163 : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000000f6237 : xor byte ptr [rax + 0x149], bh ; syscall
0x000000000003574b : xor byte ptr [rax + 0x21], cl ; retf 0x948
0x00000000000b3de8 : xor byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000085bb6 : xor byte ptr [rax + 0x31], cl ; ret 0x3949
0x00000000000fec55 : xor byte ptr [rax + 0x39], cl ; ret 0xf375
0x0000000000178ddc : xor byte ptr [rax + 0x3ee0fff1], bl ; cld ; jmp rax
0x00000000000d6393 : xor byte ptr [rax + 0x63], cl ; adc al, 0x93 ; add rdx, rbx ; jmp rdx
0x00000000000b9669 : xor byte ptr [rax + 0x63], cl ; retf 0x6b48
0x00000000000b7be4 : xor byte ptr [rax + 0x63], cl ; retf 0x8d48
0x0000000000096d91 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000001540f2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000120cf4 : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000000000091f76 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000b5cad : xor byte ptr [rax + 1], cl ; ret 0x820f
0x0000000000074853 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000000eaf20 : xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000006f699 : xor byte ptr [rax + rax], 0xb8 ; retf 0
0x000000000006f73d : xor byte ptr [rax + rax], 1 ; ret
0x000000000009f0f7 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000034173 : xor byte ptr [rax - 0x75], cl ; jg 0x341a7 ; call 0xf0ba7
0x000000000009c24f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000125d6a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x000000000011df16 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x28 ; call rcx
0x0000000000115600 : xor byte ptr [rax - 0x77], cl ; ret
0x0000000000162d68 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000000fdb0e : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000046345 : xor byte ptr [rax - 0x77], cl ; retf
0x0000000000115c99 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000024adf : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000008ca3f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a17d5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000186424 : xor byte ptr [rax - 4], dh ; call rax
0x0000000000073500 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x00000000000d6164 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x0000000000022089 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000087aab : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021de4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000038403 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000024a68 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000038d64 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000003849f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000002f9df : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x00000000000a1973 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f7151 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000190681 : xor byte ptr [rax], al ; add byte ptr [rsp + rcx*4 - 0x16], bh ; jmp rsp
0x00000000000b53ca : xor byte ptr [rax], al ; call 0x2167c
0x0000000000072b7a : xor byte ptr [rax], al ; je 0x72b85 ; ret
0x0000000000078812 : xor byte ptr [rax], al ; je 0x7882a ; add rsp, 0x38 ; ret
0x00000000000ae58f : xor byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000b5127 : xor byte ptr [rax], dh ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a0b37 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000007ca28 : xor byte ptr [rbp + 0x25], 0x5b ; ret
0x00000000000b2be0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000b2bdf : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000a1585 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x000000000011bbea : xor byte ptr [rbp + 9], cl ; enter 0xf44, -0x49 ; retf 0xc148
0x00000000000782e7 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e1d1 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011f31f : xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x0000000000198c20 : xor byte ptr [rbx - 0x11], bl ; call qword ptr [rbx]
0x000000000019ca37 : xor byte ptr [rbx - 0x1ff1b5fa], al ; add dword ptr [rdx], eax ; retf
0x0000000000059c8c : xor byte ptr [rbx - 0x2e89f607], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000117eac : xor byte ptr [rbx - 0x3d], bl ; nop ; ret
0x0000000000187480 : xor byte ptr [rbx - 0x5b7f0004], ah ; cld ; call rax
0x0000000000178d8c : xor byte ptr [rbx - 0x735f0005], cl ; sti ; call qword ptr [rax]
0x00000000000a73c3 : xor byte ptr [rbx - 0x78f0f607], al ; retf 5
0x00000000000a9ccd : xor byte ptr [rbx - 0x78f0fa08], al ; retf
0x0000000000186404 : xor byte ptr [rbx - 4], ah ; call rax
0x00000000000b2bdd : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000084e62 : xor byte ptr [rbx], dh ; add byte ptr [rbx + 0x19], dh ; lea rax, [rdx - 8] ; ret
0x00000000001948f8 : xor byte ptr [rbx], dh ; add byte ptr [rcx], ah ; out dx, al ; call rsp
0x0000000000040754 : xor byte ptr [rbx], dl ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x0000000000198748 : xor byte ptr [rcx + 0x1be40000], 0xef ; call rdi
0x00000000001628b5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000064002 : xor byte ptr [rcx + 0x29], cl ; ret 0x8949
0x0000000000001b28 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000873ac : xor byte ptr [rcx + 0xf48000a], al ; ret 0xc3f3
0x00000000000550b3 : xor byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000874d1 : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x0000000000161131 : xor byte ptr [rcx + 9], cl ; retf 0x2149
0x00000000000313d5 : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000062140 : xor byte ptr [rcx - 0x77], cl ; ret 0x2949
0x000000000003bff7 : xor byte ptr [rcx - 0x7d], al ; sti ; or dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret
0x0000000000186c8c : xor byte ptr [rcx], 0xfb ; call qword ptr [rax]
0x000000000017446e : xor byte ptr [rcx], ah ; retf
0x00000000000f611d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001a0691 : xor byte ptr [rcx], al ; add byte ptr [rdi + rbx*4], bh ; hlt ; call rcx
0x00000000001a0639 : xor byte ptr [rcx], al ; add byte ptr [rsi + rbx*4], dh ; hlt ; jmp rsi
0x00000000000ce46f : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000005a955 : xor byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000f8fda : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000cd092 : xor byte ptr [rcx], dl ; je 0xcd0a6 ; xor eax, eax ; ret
0x00000000001964f8 : xor byte ptr [rdi + 0x7e640000], cl ; out dx, al ; jmp qword ptr [rbx]
0x00000000001a94f8 : xor byte ptr [rdi + 0xdc40001], bh ; idiv edi ; retf
0x000000000018dc20 : xor byte ptr [rdi - 3], dl ; jmp qword ptr [rdx]
0x00000000000e5f94 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x00000000000f0ffb : xor byte ptr [rdi], cl ; lahf ; ret 0x8545
0x0000000000072710 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000119cc9 : xor byte ptr [rdi], cl ; retf 0x5089
0x000000000018f700 : xor byte ptr [rdx - 0x16], bl ; call qword ptr [rdx]
0x0000000000042ecc : xor byte ptr [rsi + 0x37], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000015956f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009729c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000009199e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000017617e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000017445f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x17440f
0x00000000001863b8 : xor byte ptr [rsp + rdi*8 - 1], cl ; and byte ptr [rbp - 4], cl ; call qword ptr [rax]
0x0000000000086a1c : xor ch, ah ; xor al, byte ptr [rax] ; call qword ptr [rax]
0x0000000000186978 : xor ch, bh ; cli ; call qword ptr [rax]
0x00000000000c352c : xor ch, byte ptr [rdi] ; add byte ptr [rax], al ; jne 0xc34f9 ; jmp 0xc34f0
0x00000000000a08c8 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a08de : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a0900 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a091e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a093e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a0964 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a0980 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a09a0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a09c0 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a09e6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a0a08 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a0a26 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a0a46 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a0a62 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a0a82 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a0aa2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a0ac2 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a0ae8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a0b38 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a080e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a082c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a084c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a086e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a088e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a08ae : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0744 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a0756 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a076c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a0784 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a079a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a07ac : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a07ca : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a07d6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a07ec : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a0730 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001a2d0d : xor ch, dh ; jmp qword ptr [rcx]
0x0000000000194e71 : xor ch, dh ; jmp rdi
0x000000000018f1c9 : xor ch, dl ; call qword ptr [rdx]
0x0000000000087d4c : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000000bbe9d : xor cl, byte ptr [rax - 0x75] ; je 0xbbece ; or byte ptr [rax + 0x63], cl ; ret 0x8944
0x000000000003a1c4 : xor cl, byte ptr [rax - 0x77] ; ret 0x23e8
0x0000000000047dbe : xor cl, byte ptr [rax - 0x77] ; ret 0x29e8
0x0000000000039f87 : xor cl, byte ptr [rax - 0x77] ; ret 0x60e8
0x0000000000039d5b : xor cl, byte ptr [rax - 0x77] ; ret 0x8ce8
0x00000000000c2da1 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x0000000000088d2a : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000011c94c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000cd0a7 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000187264 : xor cl, byte ptr [rbx - 5] ; jmp qword ptr [rdx + 0x12fffb4a]
0x0000000000087d75 : xor cl, byte ptr [rcx + 0x29] ; retf 0x3948
0x0000000000087f73 : xor cl, ch ; retf
0x00000000000d20e2 : xor cl, ch ; retf 0xfff9
0x000000000009bec0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001869dc : xor dh, bh ; cli ; jmp qword ptr [rax]
0x0000000000189d99 : xor dh, bl ; call qword ptr [rax]
0x000000000002d2ed : xor dh, dh ; ret 0x4002
0x000000000011b504 : xor dh, dh ; ret 0xc707
0x0000000000197990 : xor dl, 0xee ; jmp qword ptr [rcx]
0x000000000019eca0 : xor dl, 0xf3 ; call qword ptr [rsi]
0x00000000001997f8 : xor dl, al ; add byte ptr [rax], al ; add al, 0x31 ; cld ; call qword ptr [rbx]
0x0000000000186910 : xor dl, bh ; cli ; push rax ; sti ; cli ; call rax
0x000000000002e6df : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000f3076 : xor dword ptr [rax + 0x88], edi ; syscall
0x00000000000e4a06 : xor dword ptr [rax - 0x77], ecx ; and al, 0x20 ; call 0x21458
0x000000000004de5d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x87e9
0x000000000008deae : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000175416 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000010c6e6 : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000190759 : xor dword ptr [rax], eax ; add byte ptr [rax + rdx*4 - 0x16], al ; jmp qword ptr [rax]
0x00000000001907a1 : xor dword ptr [rax], eax ; add byte ptr [rax + rdx*4 - 0x16], ch ; jmp qword ptr [rdx]
0x0000000000190771 : xor dword ptr [rax], eax ; add byte ptr [rax + rdx*4 - 0x16], cl ; jmp qword ptr [rdx]
0x00000000001267a3 : xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000dd50 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4c
0x00000000000f6b51 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000c062e : xor dword ptr [rbx + 0x5b01046b], eax ; pop rbp ; pop r12 ; ret
0x0000000000026b1b : xor dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret 0x5841
0x0000000000105dee : xor dword ptr [rbx], ebp ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000f63f1 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000189aed : xor dword ptr [rcx], eax ; add byte ptr [rdx + rbp*2 - 0xe], cl ; jmp rax
0x000000000008e076 : xor dword ptr [rcx], edi ; ret 0x2d74
0x000000000018c775 : xor dword ptr [rdx], eax ; add byte ptr [rsp + rax*4], cl ; stc ; call rax
0x000000000006a2b9 : xor eax, 0x11a ; add rax, rsi ; jmp rax
0x0000000000042d4a : xor eax, 0x1f1 ; call rax
0x00000000000ec3c7 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000006f4c8 : xor eax, 0x243 ; call rax
0x000000000012d3f3 : xor eax, 0x28aa98 ; xor eax, eax ; ret
0x000000000006a0d4 : xor eax, 0x2ff ; add rax, rsi ; jmp rax
0x000000000006bfcd : xor eax, 0x348f96 ; call rax
0x0000000000069114 : xor eax, 0x34be4f ; call rax
0x00000000000661f2 : xor eax, 0x34ed71 ; call rax
0x0000000000063432 : xor eax, 0x351b31 ; call rax
0x0000000000059e34 : xor eax, 0x35b12f ; call rax
0x000000000005281d : xor eax, 0x362746 ; call rax
0x00000000000fda5a : xor eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015c3f3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000faedc : xor eax, 0x85382 ; xor edx, edx ; call 0x117999
0x00000000000d20dc : xor eax, 0x892c438b ; xor r9b, bpl ; retf 0xfff9
0x00000000000cea27 : xor eax, 0x89ffffed ; ret 0xc031
0x000000000018c825 : xor eax, 0x96fc0002 ; stc ; call rax
0x0000000000069a54 : xor eax, 0x97f ; add rax, rsi ; jmp rax
0x000000000018c82d : xor eax, 0x985c0002 ; stc ; jmp rsp
0x000000000018c835 : xor eax, 0x98ac0002 ; stc ; call qword ptr [rax]
0x00000000000e73a2 : xor eax, 0xb8c7894c ; test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000002505 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x00000000000b5984 : xor eax, 0xe8000c94 ; ret
0x000000000007d279 : xor eax, 0xffffe2f2 ; call rax
0x000000000007cef6 : xor eax, 0xffffe675 ; call rax
0x000000000007cbf0 : xor eax, 0xffffe97b ; call rax
0x000000000006b1f7 : xor eax, 0xfffff1dc ; add rax, rsi ; jmp rax
0x000000000007b9c2 : xor eax, 0xfffffba9 ; call rax
0x000000000006a6d8 : xor eax, 0xfffffcfb ; add rax, rsi ; jmp rax
0x000000000006a685 : xor eax, 0xfffffd4e ; add rax, rsi ; jmp rax
0x000000000006a624 : xor eax, 0xfffffdaf ; add rax, rsi ; jmp rax
0x000000000006a5c7 : xor eax, 0xfffffe0c ; add rax, rsi ; jmp rax
0x000000000006f888 : xor eax, 0xfffffe83 ; call rax
0x000000000007b684 : xor eax, 0xfffffee7 ; call rax
0x0000000000021de1 : xor eax, dword ptr [0x30] ; call rax
0x0000000000024a65 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000080f45 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x80f1f
0x000000000007d940 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f6c51 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000086605 : xor eax, dword ptr [rax] ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x000000000008562d : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000007e6b2 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007ed66 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000841d4 : xor eax, dword ptr [rax] ; add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000008383c : xor eax, dword ptr [rax] ; add dword ptr [rbx + 0x5d], ebx ; ret
0x00000000000802cd : xor eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000087a62 : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000084e63 : xor eax, dword ptr [rax] ; jae 0x84e88 ; lea rax, [rdx - 8] ; ret
0x000000000007f5a5 : xor eax, dword ptr [rax] ; jbe 0x7f554 ; add rsp, 8 ; ret
0x000000000007b5dd : xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x0000000000083999 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000803df : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000087a75 : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x3304ca], rax ; ret
0x00000000000819ef : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rcx ; xor edi, edi ; call qword ptr [rax]
0x0000000000081983 : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rsi ; xor edi, edi ; call qword ptr [rax]
0x0000000000085e23 : xor eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000007d835 : xor eax, dword ptr [rax] ; ret
0x000000000007f8e4 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x7f8f7 ; ret
0x000000000007fa51 : xor eax, dword ptr [rbx + rsi + 0xcab800] ; add byte ptr [rax], al ; syscall
0x00000000000f7550 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000018c7dd : xor eax, dword ptr [rdx] ; add byte ptr [rsi + rcx*4 - 7], cl ; call qword ptr [rax]
0x000000000007eda1 : xor eax, dword ptr fs:[rax] ; ret
0x000000000007ed65 : xor eax, dword ptr gs:[rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007ed80 : xor eax, dword ptr gs:[rax] ; ret
0x00000000000bfcf8 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000045199 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121e6b : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010b2b0 : xor eax, eax ; add rsp, 0x28 ; ret
0x000000000003997d : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ec1d : xor eax, eax ; add rsp, 8 ; ret
0x000000000002ece0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000075918 : xor eax, eax ; call r12
0x0000000000125d70 : xor eax, eax ; call rdx
0x0000000000038e26 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x38e38 ; pop rbx ; ret
0x00000000000d18a4 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd1847 ; ret
0x0000000000114983 : xor eax, eax ; cmp dx, word ptr [rsi] ; je 0x114998 ; ret
0x00000000000f8fdb : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c9213 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000000cee3d : xor eax, eax ; cmp edx, dword ptr [r8 + rcx*4] ; je 0xcee69 ; ret
0x00000000000cedb3 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xcedc8 ; ret
0x00000000000f1989 : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xf19a1 ; ret
0x00000000000cd304 : xor eax, eax ; cmp r10d, r8d ; je 0xcd328 ; ret
0x0000000000114a05 : xor eax, eax ; cmp r11, rdx ; je 0x114a18 ; ret
0x00000000000ed09e : xor eax, eax ; cmp rdi, rdx ; ja 0xed0d8 ; ret
0x000000000007ebb0 : xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x000000000007e147 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000007aa90 : xor eax, eax ; jmp 0x7aa5a
0x000000000011a140 : xor eax, eax ; jmp rcx
0x000000000010280d : xor eax, eax ; leave ; ret
0x000000000010f8c8 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000ec7a0 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000ed320 : xor eax, eax ; mov eax, 0x127 ; syscall
0x00000000000ed3d0 : xor eax, eax ; mov eax, 0x128 ; syscall
0x00000000000ed4a0 : xor eax, eax ; mov eax, 0x147 ; syscall
0x00000000000ed600 : xor eax, eax ; mov eax, 0x148 ; syscall
0x00000000000f6f13 : xor eax, eax ; mov eax, 0x2c ; syscall
0x00000000000f6cf3 : xor eax, eax ; mov eax, 0x2d ; syscall
0x00000000000c4cb0 : xor eax, eax ; mov eax, 0xf7 ; syscall
0x0000000000157d10 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x157d04 ; ret
0x0000000000039447 : xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000010f884 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000103c41 : xor eax, eax ; mov rax, r8 ; ret
0x0000000000102671 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000120fa6 : xor eax, eax ; mov rsi, qword ptr [rsp] ; mov rdi, rbp ; call rbx
0x000000000011e777 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000039b00 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000cfc10 : xor eax, eax ; movaps xmmword ptr [rdi], xmm0 ; ret
0x00000000000cfaf4 : xor eax, eax ; movups xmmword ptr [rdi], xmm0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001026d7 : xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000089f42 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000331bf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000083ae1 : xor eax, eax ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000037cfc : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000118262 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000011982f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000023d33 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b39d5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000002b6fa : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024217 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000034166 : xor eax, eax ; pop rbx ; ret
0x0000000000082c08 : xor eax, eax ; pop rdx ; pop rbx ; pop rbp ; ret
0x000000000011030d : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000366c0 : xor eax, eax ; ret
0x000000000008ff4e : xor eax, eax ; sub eax, ecx ; ret
0x00000000000e7a10 : xor eax, eax ; syscall
0x00000000001015b1 : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x1015c9 ; pop rbx ; ret
0x0000000000077c80 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077c90 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a282c : xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000001503b0 : xor eax, eax ; vzeroupper ; ret
0x0000000000039768 : xor eax, ecx ; ret
0x0000000000038da7 : xor eax, edx ; sub eax, edx ; ret
0x0000000000038dbb : xor eax, edx ; sub rax, rdx ; ret
0x0000000000131f24 : xor ebp, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000105bb2 : xor ebp, dword ptr [rbx] ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000fa499 : xor ebp, eax ; sub eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x000000000002f560 : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5b79 : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000125ff3 : xor ebp, ebp ; sub rsp, 8 ; call 0x122ae8
0x0000000000188ca1 : xor ebp, edi ; call rax
0x000000000000294f : xor ebp, edi ; out dx, al ; retf 0x182c
0x000000000006e253 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000865d1 : xor ebx, dword ptr [rcx] ; xor eax, dword ptr [rax] ; mov eax, 0xca ; syscall
0x00000000000c633b : xor ebx, ebp ; add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x0000000000085d04 : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000e0cb2 : xor ebx, ebx ; cmp eax, 4 ; sete bl ; jmp 0xe0c90
0x000000000002be16 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051540 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000186a95 : xor ebx, edi ; call qword ptr [rax + 0x20fffb30]
0x0000000000186c8d : xor ebx, edi ; call qword ptr [rax]
0x0000000000186b51 : xor ebx, edi ; call rdx
0x0000000000186b4d : xor ebx, edi ; inc dword ptr [rdx + 0x31] ; sti ; call rdx
0x0000000000186ad1 : xor ebx, edi ; jmp rsi
0x00000000000378a4 : xor ecx, dword ptr [rax + 0x39] ; ret
0x0000000000025c91 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007e8c4 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000115668 : xor ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0xf5e9
0x0000000000086942 : xor ecx, dword ptr [rcx + rcx*4 - 0x31] ; call rcx
0x000000000002b241 : xor ecx, ecx ; call r15
0x000000000011f225 : xor ecx, ecx ; mov edx, 8 ; call 0x11b509
0x00000000000a2b09 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000e4c41 : xor ecx, edx ; dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x21681
0x0000000000115e34 : xor edi, dword ptr [0x30] ; call rax
0x00000000000ef344 : xor edi, dword ptr [rax + 0x105] ; syscall
0x00000000000b4624 : xor edi, dword ptr [rax + 0x60] ; syscall
0x0000000000186b41 : xor edi, ebx ; call qword ptr [rdx + 0x22fffb32]
0x0000000000186abd : xor edi, ebx ; call qword ptr [rsi]
0x0000000000186c7d : xor edi, ebx ; call rax
0x0000000000186c79 : xor edi, ebx ; inc dword ptr [rax + 0x33] ; sti ; call rax
0x0000000000186bfd : xor edi, ebx ; jmp rsp
0x000000000008198a : xor edi, edi ; call qword ptr [rax]
0x00000000000fdcfb : xor edi, edi ; call rax
0x0000000000021e10 : xor edi, edi ; mov eax, edx ; syscall
0x00000000000a2282 : xor edi, edi ; mov rax, rdi ; ret
0x00000000000f0b5d : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000000b47a8 : xor edi, edi ; syscall
0x0000000000038400 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0x5a ; ret 0x2a63
0x000000000017d2a9 : xor edx, edi ; jmp rsp
0x0000000000022c63 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000faee1 : xor edx, edx ; call 0x117994
0x00000000000e6ebf : xor edx, edx ; call rax
0x0000000000064863 : xor edx, edx ; jmp rax
0x00000000000a2b0b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000f7991 : xor edx, edx ; mov eax, 0x1d ; syscall
0x000000000008e010 : xor edx, edx ; mov qword ptr [rdi], rdx ; pop rbx ; ret
0x000000000008df7d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000065285 : xor edx, edx ; mov r9d, 1 ; jmp rax
0x000000000012b0aa : xor edx, edx ; mov rsi, rbp ; call 0xe7b17
0x00000000000a11c3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000700c6 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ef2ed : xor edx, edx ; xor esi, esi ; mov eax, 0x118 ; syscall
0x00000000000e6e2d : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000001a2f3d : xor esi, ebp ; jmp qword ptr [rcx]
0x00000000000ec604 : xor esi, ebx ; ret
0x00000000000e5490 : xor esi, esi ; call 0xe1eb4
0x00000000000ef2ef : xor esi, esi ; mov eax, 0x118 ; syscall
0x00000000000bf821 : xor esi, esi ; mov edi, edx ; syscall
0x0000000000064be9 : xor esi, esi ; mov r11d, 1 ; jmp rax
0x00000000000da4ba : xor esi, esi ; mov rcx, rax ; lea rdx, [r10 + rax*8] ; jmp 0xda4e5
0x0000000000038a86 : xor esi, esi ; mov rdi, r9 ; call r8
0x00000000000e6e2f : xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000ebf62 : xor esi, esi ; syscall
0x00000000001997fd : xor esp, edi ; call qword ptr [rbx]
0x00000000000e6da9 : xor esp, esp ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089dd1 : xor esp, esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6e2c : xor r10, rdx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000f7990 : xor r10d, r10d ; mov eax, 0x1d ; syscall
0x0000000000064be8 : xor r14d, r14d ; mov r11d, 1 ; jmp rax
0x00000000000fdcfa : xor r15d, r15d ; call rax
0x0000000000083939 : xor r8d, dword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000083896 : xor r8d, dword ptr [r8] ; mov eax, 0xca ; syscall
0x000000000008383b : xor r8d, dword ptr [rax] ; add dword ptr [rbx + 0x5d], ebx ; ret
0x000000000010f922 : xor r8d, r8d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075917 : xor r8d, r8d ; call r12
0x00000000000ed31f : xor r8d, r8d ; mov eax, 0x127 ; syscall
0x00000000000ed3cf : xor r8d, r8d ; mov eax, 0x128 ; syscall
0x00000000000ed49f : xor r8d, r8d ; mov eax, 0x147 ; syscall
0x00000000000ed5ff : xor r8d, r8d ; mov eax, 0x148 ; syscall
0x00000000000f6f12 : xor r8d, r8d ; mov eax, 0x2c ; syscall
0x00000000000f6cf2 : xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000000c4caf : xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x0000000000103c40 : xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000d20e1 : xor r9b, bpl ; retf 0xfff9
0x00000000000cd0a6 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x000000000002b240 : xor r9d, r9d ; call r15
0x00000000000ec3c6 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000021de0 : xor rax, qword ptr [0x30] ; call rax
0x0000000000024a64 : xor rax, qword ptr [0x30] ; jmp rax
0x00000000000803de : xor rax, qword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000021ddf : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000024a63 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000097605 : xor rax, rax ; ret
0x0000000000038dba : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000115e33 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000115e32 : xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000383ff : xor rdx, qword ptr [0x30] ; call rdx
0x00000000000383fe : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 25940
